(function() {

    var App = function(canvasId) {
        return this.init(canvasId); 
    };
    
    
    var Utils = {
        PI_HALF: Math.PI / 2,
        PI_180: Math.PI / 180,
        isWebGLSupported: function(canvas) {
            var glContextNames = ['webgl', 'experimental-webgl'];
            for (var i = 0; i < glContextNames.length; i++) {
                try {
                    if (canvas.getContext(glContextNames[i]) !== null && !!window.WebGLRenderingContext) {
                        return true;
                    }
                } catch(e) {}
            }
            return false;
        },
    };
    
    //initiate main parametrs for app
    App.prototype = {
    
        updatedURLString : null,

        showFps: true,
        showWorldAxis: true,
        antialias: true,
        fov: 14,
        sceneSize: 10000,
    
        tempWidth: 0,
        
        cameraInitialPosition: [-50, 250, -100],
        
        assetsPath: 'assets/',
    
        distanceBetweenShelvesMin: 1,
    
        roomSizeMin: 50000,
        roomSizeStep: 100,
        roomHeightMax: 5000,
        roomWidthMax: 10000,
        roomLengthMax: 20000,
    
        sectionsNumMax: 3,
        shelvesNumMax: 20,
        
        distanceFromFloorMin: 0,
        distanceFromFloorMax: 0,
        distanceFromFloorStep: 1,
        distanceFromTopMin: 0,      
        distanceFromTopMax: 0,
        distanceFromTopStep: 1,
    
        pillarThicknessMin: 3,
        pillarThicknessMax: 5,
        pillarThicknessStep: 1,
    
        pillarHeightMin: 59,
        pillarHeightMax: 111,
        pillarHeightStep: 1,
    
        shelfThicknessMin: 5,
        shelfThicknessMax: 100,
        shelfThicknessStep: 1,
    
        shelfWidthMin: 1,
        shelfWidthMax: 1000,
        shelfWidthStep: 1,
    
        shelfLengthMin: 1,
        shelfLengthMax: 2000,
        shelfLengthStep: 1,
    
        roomSizeTextureStep: 100,
        floorTextureRepeatXPerStep: 0.8,
        floorTextureRepeatYPerStep: 0.8,
    
        wallTextureRepeatXPerStep: 0.9,
        wallTextureRepeatYPerStep: 0.45,
        
        boardTextureStep: 50,
        boardTextureRepeatXPerStep: 1,
        boardTextureRepeatYPerStep: 1,
    
    
        currency: 'Â£',
        output: {
            quantity: '',
            pillarsQuantity: '',
            shelvingQuantity: '',
            price: '',
            pillarsPrice: '',
            shelvingPrice: '',
        },
    
        textures: [
            {
                name: 'AntraciteGrey',
                src: 'AntraciteGrey.jpg',
                price: 295,
                map: null
            },
            {
                name: 'Cashmere',
                src: 'Cashmere.jpg',
                price: 184,
                map: null
            },
            {
                name: 'RoyalWhite',
                src: 'ChalkWhite.jpg',
                price: 221,
                map: null
            },
            {
                name: 'CubaLibre',
                src: 'CubaLibre.jpg',
                price: 221,
                map: null
            },
            {
                name: 'Sage',
                src: 'Sage.jpg',
                price: 221,
                map: null
            },
            {
                name: 'ZincYellow',
                src: 'ZincYellow.jpg',
                price: 221,
                map: null
            },
            {
                name: 'RoyalBlue',
                src: 'RoyalBlue.jpg',
                price: 221,
                map: null
            },
            {
                name: 'VulcanoBlack',
                src: 'VulcanoBlack.jpg',
                price: 221,
                map: null
            },
            {
                name: 'Mimosa',
                src: 'Mimosa.jpg',
                price: 221,
                map: null
            },
            {
                name: 'LightGrey',
                src: 'LightGrey.jpg',
                price: 221,
                map: null
            },
            {
                name: 'Lagoon',
                src: 'Lagoon.jpg',
                price: 221,
                map: null
            },
            {
                name: 'Fjord',
                src: 'Fjord.jpg',
                price: 221,
                map: null
            },
            {
                name: 'Labrador',
                src: 'Labrador.jpg',
                price: 221,
                map: null
            },

            {
                name: 'FirenzeOvatta',
                src: 'FirenzeOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'FirenzeOvatta',
                src: 'FirenzeOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'FirenzeOvatta',
                src: 'FirenzeOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'BiancoVanguard',
                src: 'BiancoVanguard.jpg',
                price: 221,
                map: null
            },
            {
                name: 'BiancoVanguard',
                src: 'BiancoVanguard.jpg',
                price: 221,
                map: null
            },
            {
                name: 'BiancoVanguard',
                src: 'BiancoVanguard.jpg',
                price: 221,
                map: null
            },

            {
                name: 'CementoArtstone',
                src: 'CementoArtstone.jpg',
                price: 221,
                map: null
            },
            {
                name: 'CementoArtstone',
                src: 'CementoArtstone.jpg',
                price: 221,
                map: null
            },
            {
                name: 'CementoArtstone',
                src: 'CementoArtstone.jpg',
                price: 221,
                map: null
            },
            {
                name: 'MattoneArtstone',
                src: 'MattoneArtstone.jpg',
                price: 221,
                map: null
            },
            {
                name: 'MattoneArtstone',
                src: 'MattoneArtstone.jpg',
                price: 221,
                map: null
            },
            {
                name: 'MattoneArtstone',
                src: 'MattoneArtstone.jpg',
                price: 221,
                map: null
            },
    
            {
                name: 'RedOvatta',
                src: 'RedOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'RedOvatta',
                src: 'RedOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'RedOvatta',
                src: 'RedOvatta.jpg',
                price: 221,
                map: null
            },
    
            {
                name: 'RomeOvatta',
                src: 'RomeOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'RomeOvatta',
                src: 'RomeOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'RomeOvatta',
                src: 'RomeOvatta.jpg',
                price: 221,
                map: null
            },
    
            {
                name: 'LipariOvatta',
                src: 'LipariOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'LipariOvatta',
                src: 'LipariOvatta.jpg',
                price: 221,
                map: null
            },
            {
                name: 'LipariOvatta',
                src: 'LipariOvatta.jpg',
                price: 221,
                map: null
            },
    
            {
                name: 'CortinaOvatta',
                src: 'CortinaOvatta.png',
                price: 221,
                map: null
            },
            {
                name: 'CortinaOvatta',
                src: 'CortinaOvatta.png',
                price: 221,
                map: null
            },
            {
                name: 'CortinaOvatta',
                src: 'CortinaOvatta.png',
                price: 221,
                map: null
            },
    
            {
                name: 'MilanoOak',
                src: 'MilanoOak.jpg',
                price: 221,
                map: null
            },
            {
                name: 'MilanoOak',
                src: 'MilanoOak.jpg',
                price: 221,
                map: null
            },
            {
                name: 'MilanoOak',
                src: 'MilanoOak.jpg',
                price: 221,
                map: null
            },
            
            {
                name: 'AmbassadorNoce',
                src: 'AmbassadorNoce.jpg',
                price: 221,
                map: null
            },
            {
                name: 'AmbassadorNoce',
                src: 'AmbassadorNoce.jpg',
                price: 221,
                map: null
            },
            {
                name: 'AmbassadorNoce',
                src: 'AmbassadorNoce.jpg',
                price: 221,
                map: null
            },
                    
                            
            {
                name: 'ChiaroVanguard',
                src: 'ChiaroVanguard.jpg',
                price: 221,
                map: null
            },
            {
                name: 'ChiaroVanguard',
                src: 'ChiaroVanguard.jpg',
                price: 221,
                map: null
            },
            {
                name: 'ChiaroVanguard',
                src: 'ChiaroVanguard.jpg',
                price: 221,
                map: null
            },
                                    
            {
                name: 'UvaVanguard',
                src: 'UvaVanguard.jpg',
                price: 221,
                map: null
            },
            {
                name: 'UvaVanguard',
                src: 'UvaVanguard.jpg',
                price: 221,
                map: null
            },
            {
                name: 'UvaVanguard',
                src: 'UvaVanguard.jpg',
                price: 221,
                map: null
            },
                                    
            {
                name: 'SailsburyElm',
                src: 'SailsburyElm.jpg',
                price: 221,
                map: null
            },
            {
                name: 'SailsburyElm',
                src: 'SailsburyElm.jpg',
                price: 221,
                map: null
            },
            {
                name: 'SailsburyElm',
                src: 'SailsburyElm.jpg',
                price: 221,
                map: null
            },
                                
            {
                name: 'NeroSherwood',
                src: 'NeroSherwood.jpg',
                price: 221,
                map: null
            },
            {
                name: 'NeroSherwood',
                src: 'NeroSherwood.jpg',
                price: 221,
                map: null
            },
            {
                name: 'NeroSherwood',
                src: 'NeroSherwood.jpg',
                price: 221,
                map: null
            },
                                    
            {
                name: 'BiancoSherwood',
                src: 'BiancoSherwood.jpg',
                price: 221,
                map: null
            },
            {
                name: 'BiancoSherwood',
                src: 'BiancoSherwood.jpg',
                price: 221,
                map: null
            },
            {
                name: 'BiancoSherwood',
                src: 'BiancoSherwood.jpg',
                price: 221,
                map: null
            },
            {
                name: 'Glass',
                src: 'gl3.png',
                price: 221,
                map: null
            },
        ],
    
        options: {
            room: {
                height: 2340,
                length: 1100,
                width: 2000
            },
            floor: {
                //color: '#fff',
                color: '#fafefe',
                texture: 'floorCarpeting.png'
            },   
            shadow: {
                texture: 'shadow2.png'
            }, 
            shadowWall: {
                texture: 'shadow3.png'
            },   
            wall: {
                color: '#e8ebeb',
                texture: 'wall.png'
            },
            human: {
                texture: 'human.png'
            }, 
            
            shelvesNum: 2,
            sectionsNum: 1,
            distanceFromFloor: 0,
            distanceFromTop: 0,
            distanceBetweenShelves: 10,
    
            pillar: {
                thickness: 2,
                height: 70,
                color: '#fdfdfd',
                texture: 1 // an index in this.textures array
            },
    
            shelf: {
                
                length: 60,
                width: 45,
                thickness: 2,
                color: '#fdfdfd',
                texture: 1 // an index in this.textures array
            },
    
    
            doors: {
                color: '#fdfdfd',
                texture: 2
            },
    
            distanceBetweenShelvesOnDemand: 10,
            distanceBetweenShelvesOnDemand_section2: 10,
    
            sectionHeight_1_1: 70,    
            sectionHeight_1_2: 32.5,
            sectionHeight_1_3: 0,
            sectionHeight_1_4: 0,
            sectionHeight_1_5: 0,
            sectionHeight_1_6: 0,
            sectionHeight_1_7: 0,
            sectionHeight_1_8: 0,
            sectionHeight_1_9: 0,

    
            sectionHeight_2_1: 70,
            sectionHeight_2_2: 32.5,
            sectionHeight_2_3: 0,
            sectionHeight_2_4: 0,
            sectionHeight_2_5: 0,
            sectionHeight_2_6: 0,
            sectionHeight_2_7: 0,
            sectionHeight_2_8: 0,
            sectionHeight_2_9: 0,
    
    
            sectionHeight_3_1: 70,
            sectionHeight_3_2: 32.5,
            sectionHeight_3_3: 0,
            sectionHeight_3_4: 0,
            sectionHeight_3_5: 0,
            sectionHeight_3_6: 0,
            sectionHeight_3_7: 0,
            sectionHeight_3_8: 0,
            sectionHeight_3_9: 0,
    
            sectionHeight_4_1: 70,
            sectionHeight_4_2: 32.5,
            sectionHeight_4_3: 0,
            sectionHeight_4_4: 0,
            sectionHeight_4_5: 0,
    
    
            //slots/caches to maintain pillars positions
            pillar1Position: 0,
            pillar2Position: 0,
            pillar3Position: 0,
    
            pillar1ChangedOrNot: false,
            pillar2ChangedOrNot: false,
            pillar3ChangedOrNot: false,
    
            wasChangedSectionsLengthOrNot: 0,
    
            amountOfSections: 2,
    
            section1Length: 30,
            section2Length: 30,
            section3Length: 0,
            section4Length: 0,
    

            intersectsChooseStatus: 0,
    
            URLParamsUsed: false,    
    
    
            shelvesCounterSection1_1: 0,
                posShelf1_sect1_1: 12,
                posShelf2_sect1_1: 12,
                posShelf3_sect1_1: 12,
                posShelf4_sect1_1: 12,
    
            shelvesCounterSection1_2: 0,
                posShelf1_sect1_2: 12,
                Glassmat_Shelf1_sect1_2: false,
                posShelf2_sect1_2: 22,
                Glassmat_Shelf2_sect1_2: false,
                posShelf3_sect1_2: 32,
                Glassmat_Shelf3_sect1_2: false,

            shelvesCounterSection1_3: 0,
                posShelf1_sect1_3: 12,
                Glassmat_Shelf1_sect1_3: false,
                posShelf2_sect1_3: 22,
                Glassmat_Shelf2_sect1_3: false,

            shelvesCounterSection1_4: 0,
                posShelf1_sect1_4: 12,
                Glassmat_Shelf1_sect1_4: false,

            shelvesCounterSection1_5: 0,
                posShelf1_sect1_5: 12,
                Glassmat_Shelf1_sect1_5: false,

            shelvesCounterSection1_6: 0,
                posShelf1_sect1_6: 12,
                Glassmat_Shelf1_sect1_6: false,

            shelvesCounterSection1_7: 0,
                posShelf1_sect1_7: 12,
                Glassmat_Shelf1_sect1_7: false,

            shelvesCounterSection1_8: 0,
                posShelf1_sect1_8: 12,
                Glassmat_Shelf1_sect1_8: false,

    
    
    
            shelvesCounterSection2_1: 0,
                posShelf1_sect2_1: 12,
                Glassmat_Shelf1_sect2_1: false,
                posShelf2_sect2_1: 12,
                Glassmat_Shelf2_sect2_1: false,
                posShelf3_sect2_1: 12,
                Glassmat_Shelf3_sect2_1: false,
                posShelf4_sect2_1: 12,
                Glassmat_Shelf4_sect2_1: false,
    
            shelvesCounterSection2_2: 0,
                posShelf1_sect2_2: 12,
                Glassmat_Shelf1_sect2_2: false,
                posShelf2_sect2_2: 22,
                Glassmat_Shelf2_sect2_2: false,
                posShelf3_sect2_2: 32,
                Glassmat_Shelf3_sect2_2: false,

            shelvesCounterSection2_3: 0,
                posShelf1_sect2_3: 12,
                Glassmat_Shelf1_sect2_3: false,
                posShelf2_sect2_3: 22,
                Glassmat_Shelf2_sect2_3: false,

            shelvesCounterSection2_4: 0,
                posShelf1_sect2_4: 12,
                Glassmat_Shelf1_sect2_4: false,

            shelvesCounterSection2_5: 0,
                posShelf1_sect2_5: 12,
                Glassmat_Shelf1_sect2_5: false,

            shelvesCounterSection2_6: 0,
                posShelf1_sect2_6: 12,
                Glassmat_Shelf1_sect2_6: false,

            shelvesCounterSection2_7: 0,
                posShelf1_sect2_7: 12,
                Glassmat_Shelf1_sect2_7: false,

            shelvesCounterSection2_8: 0,
                posShelf1_sect2_8: 12,
                Glassmat_Shelf1_sect2_8: false,


            shelvesCounterSection3_1: 0,
                posShelf1_sect3_1: 12,
                Glassmat_Shelf1_sect3_1: false,
                posShelf2_sect3_1: 12,
                Glassmat_Shelf2_sect3_1: false,
                posShelf3_sect3_1: 12,
                Glassmat_Shelf3_sect3_1: false,
                posShelf4_sect3_1: 12,
                Glassmat_Shelf4_sect3_1: false,
    
            shelvesCounterSection3_2: 0,
                posShelf1_sect3_2: 12,
                Glassmat_Shelf1_sect3_2: false,
                posShelf2_sect3_2: 22,
                Glassmat_Shelf2_sect3_2: false,
                posShelf3_sect3_2: 32,
                Glassmat_Shelf3_sect3_2: false,

            shelvesCounterSection3_3: 0,
                posShelf1_sect3_3: 12,
                Glassmat_Shelf1_sect3_3: false,
                posShelf2_sect3_3: 22,
                Glassmat_Shelf2_sect3_3: false,

            shelvesCounterSection3_4: 0,
                posShelf1_sect3_4: 12,
                Glassmat_Shelf1_sect3_4: false,

            shelvesCounterSection3_5: 0,
                posShelf1_sect3_5: 12,
                Glassmat_Shelf1_sect3_5: false,

            shelvesCounterSection3_6: 0,
                posShelf1_sect3_6: 12,
                Glassmat_Shelf1_sect3_6: false,

            shelvesCounterSection3_7: 0,
                posShelf1_sect3_7: 12,
                Glassmat_Shelf1_sect3_7: false,    
    
            shelvesCounterSection3_8: 0,
                posShelf1_sect3_8: 12,
                Glassmat_Shelf1_sect3_8: false,  

            shelvesCounterSection4_1: 0,
                posShelf1_sect4_1: 12,
                Glassmat_Shelf1_sect4_1: false,
                posShelf2_sect4_1: 12,
                Glassmat_Shelf2_sect4_1: false,
                posShelf3_sect4_1: 12,
                Glassmat_Shelf3_sect4_1: false,
                posShelf4_sect4_1: 12,
                Glassmat_Shelf4_sect4_1: false,
    
            shelvesCounterSection4_2: 0,
                posShelf1_sect4_2: 12,
                Glassmat_Shelf1_sect4_2: false,
                posShelf2_sect4_2: 22,
                Glassmat_Shelf2_sect4_2: false,
                posShelf3_sect4_2: 32,
                Glassmat_Shelf3_sect4_2: false,

            shelvesCounterSection4_3: 0,
                posShelf1_sect4_3: 12,
                Glassmat_Shelf1_sect4_3: false,
                posShelf2_sect4_3: 22,
                Glassmat_Shelf2_sect4_3: false,

            shelvesCounterSection4_4: 0,
                posShelf1_sect4_4: 12,
                Glassmat_Shelf1_sect4_4: false,
    
    
    
    
            //status holders for restoring app
            s1_doorStatus: 0,
            s1_2_doorStatus: 0,
            s1_3_doorStatus: 0,
            s1_4_doorStatus: 0,
            s1_5_doorStatus: 0,
            Drawer_S1_status :true,
            Drawer_S1_2_status :true,
            Drawer_S1_3_status :true,
            Drawer_S1_4_status :true,
            Drawer_S1_5_status :true,
            Drawer_S1_6_status :true,
            Drawer_S1_7_status :true,
            Drawer_S1_8_status :true,
            Drawer_S1_9_status :true,

    
            s2_doorStatus: 0,
            s2_2_doorStatus: 0,
            s2_3_doorStatus: 0,
            s2_4_doorStatus: 0,
            s2_5_doorStatus: 0,
            Drawer_S2_status :true,
            Drawer_S2_2_status :true,
            Drawer_S2_3_status :true,
            Drawer_S2_4_status :true,
            Drawer_S2_5_status :true,
            Drawer_S2_6_status :true,
            Drawer_S2_7_status :true,
            Drawer_S2_8_status :true,
            Drawer_S2_9_status :true,
    
            s3_doorStatus: 0,
            s3_2_doorStatus: 0,
            s3_3_doorStatus: 0,
            s3_4_doorStatus: 0,
            s3_5_doorStatus: 0,
            Drawer_S3_status :true,
            Drawer_S3_2_status :true,
            Drawer_S3_3_status :true,
            Drawer_S3_4_status :true,
            Drawer_S3_5_status :true,
            Drawer_S3_6_status :true,
            Drawer_S3_7_status :true,
            Drawer_S3_8_status :true,
            Drawer_S3_9_status :true,
    
            s4_doorStatus: 0,
            s4_2_doorStatus: 0,
            s4_3_doorStatus: 0,
            s4_4_doorStatus: 0,
            s4_5_doorStatus: 0,
            Drawer_S4_status :true,
            Drawer_S4_2_status :true,
            Drawer_S4_3_status :true,
            Drawer_S4_4_status :true,
            Drawer_S4_5_status :true,
            Drawer_S4_6_status :true,
            Drawer_S4_7_status :true,
            Drawer_S4_8_status :true,
            Drawer_S4_9_status :true,
    
    
            //horizontal dividers
            s1_AmountOfHorDividers: 0,
            s1_horizDividStatus: 0,
            s1_2_horizDividStatus: 0,
            s1_3_horizDividStatus: 0,
            s1_4_horizDividStatus: 0,
            s1_5_horizDividStatus: 0,
            s1_6_horizDividStatus: 0,
            s1_7_horizDividStatus: 0,
            s1_8_horizDividStatus: 0,
    
            s2_AmountOfHorDividers: 0,
            s2_horizDividStatus: 0,
            s2_2_horizDividStatus: 0,
            s2_3_horizDividStatus: 0,
            s2_4_horizDividStatus: 0,
            s2_5_horizDividStatus: 0,
            s2_6_horizDividStatus: 0,
            s2_7_horizDividStatus: 0,
            s2_8_horizDividStatus: 0,
    
            s3_AmountOfHorDividers: 0,
            s3_horizDividStatus: 0,
            s3_2_horizDividStatus: 0,
            s3_3_horizDividStatus: 0,
            s3_4_horizDividStatus: 0,
            s3_5_horizDividStatus: 0,
            s3_6_horizDividStatus: 0,
            s3_7_horizDividStatus: 0,
            s3_8_horizDividStatus: 0,
    
            s4_AmountOfHorDividers: 0,
            s4_horizDividStatus: 0,
            s4_2_horizDividStatus: 0,
            s4_3_horizDividStatus: 0,
            s4_4_horizDividStatus: 0,
    
    
            //internal shelving, status & amount to restore    
            s1_internlShelvinStatus: 0,
            s1_ShelvingStatus: 'none',
            heigh0Shelf1_1: 19.5,
            heigh1Shelf1_1: 19.5,
            heigh2Shelf1_1: 12.4,
            heigh3Shelf1_1: 10,
            heigh4Shelf1_1: 10,
            heigh5Shelf1_1: 10,
            heigh6Shelf1_1: 10,

            s1_2_internlShelvinStatus: 0,
            s1_2_ShelvingStatus: 'none',
            heigh0Shelf1_2: 12.4,
            heigh1Shelf1_2: 12.4,
            heigh2Shelf1_2: 12.4,
            heigh3Shelf1_2: 12.4,
            heigh4Shelf1_2: 12.4,
            heigh5Shelf1_2: 12.4,

            s1_3_internlShelvinStatus: 0,
            s1_3_ShelvingStatus: 'none',
            heigh0Shelf1_3: 12.4,
            heigh1Shelf1_3: 12.4,
            heigh2Shelf1_3: 12.4,
            heigh3Shelf1_3: 12.4,
            heigh4Shelf1_3: 12.4,

            s1_4_internlShelvinStatus: 0,
            s1_4_ShelvingStatus: 'none',
            heigh0Shelf1_4: 12.4,
            heigh1Shelf1_4: 12.4,
            heigh2Shelf1_4: 12.4,
            heigh3Shelf1_4: 12.4,

            s1_5_internlShelvinStatus: 0,
            s1_5_ShelvingStatus: 'none',
            heigh0Shelf1_5: 12.4,
            heigh1Shelf1_5: 12.4,
            heigh2Shelf1_5: 12.4,

            s1_6_internlShelvinStatus: 0,
            s1_6_ShelvingStatus: 'none',
            heigh0Shelf1_6: 12.4,
            heigh1Shelf1_6: 12.4,
    
            s2_internlShelvinStatus: 0,
            s2_ShelvingStatus: 'none',
            heigh0Shelf2_1: 19.5,
            heigh1Shelf2_1: 19.5,
            heigh2Shelf2_1: 12.4,
            heigh3Shelf2_1: 10,
            heigh4Shelf2_1: 10,
            heigh5Shelf2_1: 10,
            heigh6Shelf2_1: 10,

            s2_2_internlShelvinStatus: 0,
            s2_2_ShelvingStatus: 'none',
            heigh0Shelf2_2: 12.4,
            heigh1Shelf2_2: 12.4,
            heigh2Shelf2_2: 12.4,
            heigh3Shelf2_2: 12.4,
            heigh4Shelf2_2: 12.4,
            heigh5Shelf2_2: 12.4,

            s2_3_internlShelvinStatus: 0,
            s2_3_ShelvingStatus: 'none',
            heigh0Shelf2_3: 12.4,
            heigh1Shelf2_3: 12.4,
            heigh2Shelf2_3: 12.4,
            heigh3Shelf2_3: 12.4,
            heigh4Shelf2_3: 12.4,

            s2_4_internlShelvinStatus: 0,
            s2_4_ShelvingStatus: 'none',
            heigh0Shelf2_4: 12.4,
            heigh1Shelf2_4: 12.4,
            heigh2Shelf2_4: 12.4,
            heigh3Shelf2_4: 12.4,

            s2_5_internlShelvinStatus: 0,
            s2_5_ShelvingStatus: 'none',
            heigh0Shelf2_5: 12.4,
            heigh1Shelf2_5: 12.4,
            heigh2Shelf2_5: 12.4,

            s2_6_internlShelvinStatus: 0,
            s2_6_ShelvingStatus: 'none',
            heigh0Shelf2_6: 12.4,
            heigh1Shelf2_6: 12.4,
    
    
            s3_internlShelvinStatus: 0,
            s3_ShelvingStatus: 'none',
            heigh0Shelf3_1: 19.5,
            heigh1Shelf3_1: 19.5,
            heigh2Shelf3_1: 12.4,
            heigh3Shelf3_1: 10,
            heigh4Shelf3_1: 10,
            heigh5Shelf3_1: 10,
            heigh6Shelf3_1: 10,

            s3_2_internlShelvinStatus: 0,
            s3_2_ShelvingStatus: 'none',
            heigh0Shelf3_2: 12.4,
            heigh1Shelf3_2: 12.4,
            heigh2Shelf3_2: 12.4,
            heigh3Shelf3_2: 12.4,
            heigh4Shelf3_2: 12.4,
            heigh5Shelf3_2: 12.4,

            s3_3_internlShelvinStatus: 0,
            s3_3_ShelvingStatus: 'none',
            heigh0Shelf3_3: 12.4,
            heigh1Shelf3_3: 12.4,
            heigh2Shelf3_3: 12.4,
            heigh3Shelf3_3: 12.4,
            heigh4Shelf3_3: 12.4,

            s3_4_internlShelvinStatus: 0,
            s3_4_ShelvingStatus: 'none',
            heigh0Shelf3_4: 12.4,
            heigh1Shelf3_4: 12.4,
            heigh2Shelf3_4: 12.4,
            heigh3Shelf3_4: 12.4,

            s3_5_internlShelvinStatus: 0,
            s3_5_ShelvingStatus: 'none',
            heigh0Shelf3_5: 12.4,
            heigh1Shelf3_5: 12.4,
            heigh2Shelf3_5: 12.4,

            s3_6_internlShelvinStatus: 0,
            s3_6_ShelvingStatus: 'none',
            heigh0Shelf3_6: 12.4,
            heigh1Shelf3_6: 12.4,
    
    
            s4_internlShelvinStatus: 0,
            s4_ShelvingStatus: 'none',
            heigh0Shelf4_1: 19.5,
            heigh1Shelf4_1: 19.5,
            heigh2Shelf4_1: 12.4,
            heigh3Shelf4_1: 10,
            heigh4Shelf4_1: 10,
            heigh5Shelf4_1: 10,
            heigh6Shelf4_1: 10,

            s4_2_internlShelvinStatus: 0,
            s4_2_ShelvingStatus: 'none',
            heigh0Shelf4_2: 12.4,
            heigh1Shelf4_2: 12.4,
            heigh2Shelf4_2: 12.4,
            heigh3Shelf4_2: 12.4,
            heigh4Shelf4_2: 12.4,
            heigh5Shelf4_2: 12.4,

            s4_3_internlShelvinStatus: 0,
            s4_3_ShelvingStatus: 'none',
            heigh0Shelf4_3: 12.4,
            heigh1Shelf4_3: 12.4,
            heigh2Shelf4_3: 12.4,
            heigh3Shelf4_3: 12.4,
            heigh4Shelf4_3: 12.4,

            s4_4_internlShelvinStatus: 0,
            s4_4_ShelvingStatus: 'none',
            heigh0Shelf4_4: 12.4,
            heigh1Shelf4_4: 12.4,
            heigh2Shelf4_4: 12.4,
            heigh3Shelf4_4: 12.4,

            s4_5_internlShelvinStatus: 0,
            s4_5_ShelvingStatus: 'none',
            heigh0Shelf4_5: 12.4,
            heigh1Shelf4_5: 12.4,
            heigh2Shelf4_5: 12.4,

            s4_6_internlShelvinStatus: 0,
            s4_6_ShelvingStatus: 'none',
            heigh0Shelf4_6: 12.4,
            heigh1Shelf4_6: 12.4,
    

            statusHideDoor: 0,
            statusHideHandle: false,
            statusHideRoom: 0,
            statusHideHint: 1,
            statusLegs: 0,
            statusShowDimensions: 0,
    
    
        },
    
    
        //path designation for OBJ objects
        //Legs
        objectsOptions: {
            
            'metalleg': {path: 'metalleg/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, 45, 0], visible: false,},
            'metalleg2': {path: 'metalleg2/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, 15, 0], visible: false,}, 
            'metalleg3': {path: 'metalleg3/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, -45, 0], visible: false,}, 
            'metalleg4': {path: 'metalleg4/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, -15, 0], visible: false,}, 
    
            'sliders1': {path: 'sliders1/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, -15, 0]}, 
            'sliders2': {path: 'sliders2/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, -15, 0]}, 
            'sliders3': {path: 'sliders3/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, -15, 0]}, 
            'sliders4': {path: 'sliders4/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, -15, 0]}, 
    
        },
    
        //Handles
        handles: {
            'handle': {path: 'handle/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, 0, 0]}, 
        },

        //Grommet
        grommets: {
            'grommet': {path: 'grommet/', scale: [1, 1, 1], offset: [1, 1, 1], rotation: [0, 0, 0]}, 
        },
    
        
        //Start App
        init: function(canvasId) {
            
            //initiate scene
            var self = this;
            this.canvas = document.getElementById(canvasId);
            
            if (!Utils.isWebGLSupported(this.canvas)) {
                this.showError('Unfortunately your browser is not supported');
                return this;
            }
            this.params = new URLSearchParams(window.location.search);
            this.scene = new THREE.Scene();
            this.engine = new THREE.WebGLRenderer({
                antialias: true,
                canvas: this.canvas,
            }); 
            this.scene.background = 0x000000

            //camera and camera rotate settings
            this.camera = new THREE.PerspectiveCamera(this.fov, window.innerWidth / window.innerHeight, 1, this.sceneSize);
            this.camera.near = 10; 
            this.camera.updateProjectionMatrix();
    
            var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            if (isMobile) {
                this.camera.position.set(
                    -20, 300, 1000
                );
                this.camera.lookAt(new THREE.Vector3(-200, 0, -100));


                document.getElementById("buttonCarcassColour").innerHTML = "Carcass Colour";
                document.getElementById("buttonFrontFacadesColour").innerHTML = "Fronts Colour";

            } else {
                this.camera.position.set(
                    this.cameraInitialPosition[0], this.cameraInitialPosition[1], -this.cameraInitialPosition[2]
                );
                this.camera.lookAt(new THREE.Vector3(20, 0, -100));
                document.getElementById("buttonCarcassColour").innerHTML = "Carcass Colour :";
                document.getElementById("buttonFrontFacadesColour").innerHTML = "Fronts Colour :";
            }
            
            this.camera2 = new THREE.PerspectiveCamera(10,  512 / 512, 1, 1000);
            this.camera2.position.set(0, 50, 0);


            this.controls = new THREE.OrbitControls(this.camera, this.canvas);
            this.controls.enablePan = false;
            this.controls.minPolarAngle = 48 * Utils.PI_180;
            if (isMobile) {
                this.controls.target.set(2, -36, -999);
                this.controls.minDistance = 1000;
                this.controls.maxDistance = 1600; //1350
                this.controls.maxPolarAngle = 86 * Utils.PI_180;
            } else {
                this.controls.target.set(19, 60, -999);
                this.controls.minDistance = 1000;
                this.controls.maxDistance = 1300; //1350
                this.controls.maxPolarAngle = 88 * Utils.PI_180;
            }

            this.controls.enableDamping = true; 
            this.controls.dampingFactor = 0.03
            this.controls.rotateSpeed = 0.09;
            this.controls.zoomSpeed = 0.99;
            this.controls.maxAzimuthAngle = 1.48; 
            this.controls.minAzimuthAngle = -1.48; 
        
            this.scene.background = null; 

            let isMouseOverCanvas = false;
            this.canvas.addEventListener('mouseenter', () => {
                isMouseOverCanvas = true;
            });
            this.canvas.addEventListener('mouseleave', () => {
                isMouseOverCanvas = false;
            });

            document.addEventListener('wheel', (event) => {
                if (isMouseOverCanvas) {
 

                    const isCtrlPressed = event.ctrlKey || event.metaKey; 
                    if (isCtrlPressed) {
                        this.controls.enableZoom = true;
                        this.camera.position.z += event.deltaY * this.controls.zoomSpeed;
                    } else {
                        this.controls.enableZoom = false;
                    }
                  
                } else {
                }
            });
    
            if (isMobile) {
                // If on mobile, set canvas to 100% width and 70% height of the viewport
                this.engine.setSize(window.innerWidth, window.innerHeight, true);
                this.fov = 18
            } else {
                // If on desktop, use the current behavior
                this.engine.setSize(window.innerWidth, window.innerHeight, true);
                this.fov = 14
            }
            //this.scene.background = new THREE.Color('#fff');
            this.engine.setClearColor (0x000000, 0);
            //if you feel slow work of the app, try this option... (/2)
            this.engine.setPixelRatio(window.devicePixelRatio);
            
            this.engine.shadowMap.enabled = true
            this.engine.shadowMapSoft = true;
            this.engine.shadowMap.type = THREE.VSMShadowMap //PCFSoftShadowMap//THREE.VSMShadowMap;
    
            this.engine.shadowMap.autoUpdate = true;
            this.engine.shadowMap.needsUpdate= true;
            
    
            this.engine.physicallyCorrectLights = true
    
        
            this.textureCube = new THREE.CubeTextureLoader()
            .load([
                'assets/texturecube/px.png',
                'assets/texturecube/nx.png',
                'assets/texturecube/py.png',
                'assets/texturecube/ny.png',
                'assets/texturecube/pz.png',
                'assets/texturecube/nz.png',
            ]);
            
            //initiate Light
            this.scene.add( new THREE.AmbientLight( 0xffffff, 2.7) );//2.150
           
            this.light = new THREE.SpotLight(0xffffff, 10)//F9DDE2);
            this.light.position.set(194.810, 200, -891.970);
            this.light.target.position.set(-738, -328, -1298);
            this.scene.add(this.light.target);
            this.light.target.updateMatrixWorld()
            this.light.castShadow = true
            this.light.angle = 0.580
            this.light.decay = 0.850
            this.light.distance = 1110
            this.light.penumbra = 0.2
            this.light.shadow.bias = 0.002
            this.light.shadow.mapSize.width = 512
            this.light.shadow.mapSize.height = 512
            this.light.shadow.camera.near = 0.01//8;
            this.light.shadow.camera.far = 1000; 
            this.light.shadow.radius = 1;
            this.light.shadow.blurSamples = 1;
            this.scene.add(this.light);

            
    
    
            this.light2 = new THREE.SpotLight(0xffffff, 13);
            this.light2.position.set(300, 300, -400);
            this.light2.target.position.set(-0, 0, -920);
            this.light2.target.updateMatrixWorld()
            this.light2.castShadow = true
            this.light2.angle = 0.210
            this.light2.decay = 0.310
            this.light2.distance = 1000
            this.light2.penumbra = 0.9
            this.light2.shadow.bias = 0.002;
            this.light2.shadow.mapSize.width = 512
            this.light2.shadow.mapSize.height = 512
            this.light2.shadow.camera.near = 0.1;
            this.light2.shadow.camera.far = 500; 
            this.light2.shadow.blurSamples = 1;
            this.light2.shadow.radius = 1;
            this.light2.shadow.focus = 1;
            this.scene.add(this.light2);
            this.scene.add(this.light2.target);
    
    
            this.light3 = new THREE.SpotLight(0xffffff, 10);
            this.light3.position.set(-330, 100.900, -980);
            this.light3.target.position.set(0, 100, -900);
            this.light3.target.updateMatrixWorld()
            this.light3.castShadow = true
            this.light3.angle = 0.6
            this.light3.decay = 0.420
            this.light3.distance = 879
            this.light3.penumbra = 0.99
            this.light3.shadow.bias = 0.01
            this.light3.shadow.mapSize.width = 512
            this.light3.shadow.mapSize.height = 512
            this.light3.shadow.camera.near = 0.1;
            this.light3.shadow.camera.far = 200; 
            this.light3.shadow.blurSamples = 1;
            this.light3.shadow.radius = 1;
            this.scene.add(this.light3);
            this.scene.add(this.light3.target);

    
            this.clock = new THREE.Clock();
            this.w = window.innerWidth || 1
            this.h = window.innerHeight || 1

    
    
    
    
    
    
    
    
    
            //raycasting related (catch click on 3d objects)
            this.raycaster = new THREE.Raycaster();
            this.pointer = new THREE.Vector2();
            this.intersects = 0 
    
    
            function onPointerDown( event ) {
                // calculate pointer position in normalized device coordinates
                // (-1 to +1) for both components
                self.pointer.x = ( event.clientX / window.innerWidth ) * 2 - 1;
                self.pointer.y = - ( event.clientY / window.innerHeight ) * 2 + 1;
                self.raycaster.setFromCamera( self.pointer, self.camera );
                self.intersects = self.raycaster.intersectObjects(self.scene.children);
    
                if (self.intersects.length > 0) { 
    
                    for ( let i = 0; i < self.intersects.length; i ++ ) {
    
                        if ( self.RayCastRecieverSection1_1 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection1_1' || self.intersects[ i ].object.name === 'section1_WireframeMesh1_1') {

                                self.RayCastRecieverSection1_1.material.opacity = 0.2
                                self.section1_WireframeMesh1_1.material.opacity = 0.2
                                
                                MenuForMobileVersion1.style.display = 'flex';
                                VerticalSection1_1.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection1_1.style.transform = "translateX(-0%)"; 
                                
                                
                                self.updateDoorButtons();
                                
                                switch(self.options.intersectsChooseStatus){
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }
    
                                self.options.intersectsChooseStatus = 11
                            
                            } 
    
                            document.getElementById("closeVerticalSection1_1").addEventListener('click', function() {
    
                                VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection1_1.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection1_1.material.opacity = 0
                                self.section1_WireframeMesh1_1.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }

                        if ( self.RayCastRecieverSection1_2 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection1_2' || self.intersects[ i ].object.name === 'section1_WireframeMesh1_2') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection1_2.material.opacity = 0.2
                                self.section1_WireframeMesh1_2.material.opacity = 0.2
    
                                VerticalSection1_2.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection1_2.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();
    
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }

                                self.options.intersectsChooseStatus = 12    
                            } 
    
                            document.getElementById("closeVerticalSection1_2").addEventListener('click', function() {
    
                                VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection1_2.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection1_2.material.opacity = 0
                                self.RayCastRecieverSection1_2.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
    
                        if ( self.RayCastRecieverSection1_3 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection1_3' || self.intersects[ i ].object.name === 'section1_WireframeMesh1_3') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection1_3.material.opacity = 0.2
                                self.section1_WireframeMesh1_3.material.opacity = 0.2
    
                                VerticalSection1_3.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection1_3.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }                    

                                self.options.intersectsChooseStatus = 13    
                            } 
    
                            document.getElementById("closeVerticalSection1_3").addEventListener('click', function() {
    
                                VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection1_3.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection1_3.material.opacity = 0
                                self.RayCastRecieverSection1_3.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
    
                        if ( self.RayCastRecieverSection1_4 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection1_4' || self.intersects[ i ].object.name === 'section1_WireframeMesh1_4') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection1_4.material.opacity = 0.2
                                self.section1_WireframeMesh1_4.material.opacity = 0.2
    
                                VerticalSection1_4.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection1_4.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }                       

                                self.options.intersectsChooseStatus = 14    
                            } 
    
                            document.getElementById("closeVerticalSection1_4").addEventListener('click', function() {
    
                                VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection1_4.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection1_4.material.opacity = 0
                                self.RayCastRecieverSection1_4.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }

                        if ( self.RayCastRecieverSection1_5 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection1_5' || self.intersects[ i ].object.name === 'section1_WireframeMesh1_5') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection1_5.material.opacity = 0.2
                                self.section1_WireframeMesh1_5.material.opacity = 0.2

                                VerticalSection1_5.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection1_5.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }       

                                self.options.intersectsChooseStatus = 15    
                            } 

                            document.getElementById("closeVerticalSection1_5").addEventListener('click', function() {
    
                                VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection1_5.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection1_5.material.opacity = 0
                                self.RayCastRecieverSection1_5.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
    
                        }

                        if ( self.RayCastRecieverSection1_6 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection1_6' || self.intersects[ i ].object.name === 'section1_WireframeMesh1_6') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection1_6.material.opacity = 0.2
                                self.section1_WireframeMesh1_6.material.opacity = 0.2

                                VerticalSection1_6.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection1_6.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }       

                                self.options.intersectsChooseStatus = 16    
                            } 
    
                            document.getElementById("closeVerticalSection1_6").addEventListener('click', function() {
    
                                VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection1_6.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection1_6.material.opacity = 0
                                self.RayCastRecieverSection1_6.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
                            
    
                        }

                        if ( self.RayCastRecieverSection1_7 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection1_7' || self.intersects[ i ].object.name === 'section1_WireframeMesh1_7') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection1_7.material.opacity = 0.2
                                self.section1_WireframeMesh1_7.material.opacity = 0.2

                                VerticalSection1_7.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection1_7.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                }       

                                self.options.intersectsChooseStatus = 17    
                            } 
    
                            document.getElementById("closeVerticalSection1_7").addEventListener('click', function() {
    
                                VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection1_7.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection1_7.material.opacity = 0
                                self.RayCastRecieverSection1_7.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });

                        }


                        if ( self.RayCastRecieverSection2_1 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection2_1' || self.intersects[ i ].object.name === 'section2_WireframeMesh2_1') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection2_1.material.opacity = 0.2
                                self.section2_WireframeMesh2_1.material.opacity = 0.2
    
                                VerticalSection2_1.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection2_1.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }      
                                self.options.intersectsChooseStatus = 21
                            } 
    
                            document.getElementById("closeVerticalSection2_1").addEventListener('click', function() {
    
                                VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection2_1.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection2_1.material.opacity = 0
                                self.section2_WireframeMesh2_1.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
                        }
    
                        if ( self.RayCastRecieverSection2_2 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection2_2' || self.intersects[ i ].object.name === 'section2_WireframeMesh2_2') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection2_2.material.opacity = 0.2
                                self.section2_WireframeMesh2_2.material.opacity = 0.2
    
                                VerticalSection2_2.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection2_2.style.transform = "translateX(-0%)";
    
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }      
                                self.options.intersectsChooseStatus = 22    
                            } 
    
                            document.getElementById("closeVerticalSection2_2").addEventListener('click', function() {
    
                                VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection2_2.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection2_2.material.opacity = 0
                                self.RayCastRecieverSection2_2.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
    
                        if ( self.RayCastRecieverSection2_3 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection2_3' || self.intersects[ i ].object.name === 'section2_WireframeMesh2_3') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection2_3.material.opacity = 0.2
                                self.section2_WireframeMesh2_3.material.opacity = 0.2
    
                                VerticalSection2_3.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection2_3.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }    

                                self.options.intersectsChooseStatus = 23    
                            } 
    
                            document.getElementById("closeVerticalSection2_3").addEventListener('click', function() {
    
                                VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection2_3.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection2_3.material.opacity = 0
                                self.RayCastRecieverSection2_3.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
       
                        if ( self.RayCastRecieverSection2_4 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection2_4' || self.intersects[ i ].object.name === 'section2_WireframeMesh2_4') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection2_4.material.opacity = 0.2
                                self.section2_WireframeMesh2_4.material.opacity = 0.2
    
                                VerticalSection2_4.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection2_4.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }    

                                self.options.intersectsChooseStatus = 24    
                            } 
    
                            document.getElementById("closeVerticalSection2_4").addEventListener('click', function() {
    
                                VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection2_4.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection2_4.material.opacity = 0
                                self.RayCastRecieverSection2_4.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }

                        if ( self.RayCastRecieverSection2_5 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection2_5' || self.intersects[ i ].object.name === 'section2_WireframeMesh2_5') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection2_5.material.opacity = 0.2
                                self.section2_WireframeMesh2_5.material.opacity = 0.2

                                VerticalSection2_5.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection2_5.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }       

                                self.options.intersectsChooseStatus = 25    
                            } 

                            document.getElementById("closeVerticalSection2_5").addEventListener('click', function() {
    
                                VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection2_5.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection2_5.material.opacity = 0
                                self.RayCastRecieverSection2_5.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
    
                        }
   
                        if ( self.RayCastRecieverSection2_6 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection2_6' || self.intersects[ i ].object.name === 'section2_WireframeMesh2_6') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection2_6.material.opacity = 0.2
                                self.section2_WireframeMesh2_6.material.opacity = 0.2

                                VerticalSection2_6.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection2_6.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }       

                                self.options.intersectsChooseStatus = 26    
                            } 
    
                            document.getElementById("closeVerticalSection2_6").addEventListener('click', function() {
    
                                VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection2_6.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection2_6.material.opacity = 0
                                self.RayCastRecieverSection2_6.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }

                        if ( self.RayCastRecieverSection2_7 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection2_7' || self.intersects[ i ].object.name === 'section2_WireframeMesh2_7') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection2_7.material.opacity = 0.2
                                self.section2_WireframeMesh2_7.material.opacity = 0.2

                                VerticalSection2_7.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection2_7.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }       

                                self.options.intersectsChooseStatus = 27    
                            } 

                            document.getElementById("closeVerticalSection2_7").addEventListener('click', function() {
    
                                VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection2_7.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection2_7.material.opacity = 0
                                self.RayCastRecieverSection2_7.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
    
                        }
                        


                        if ( self.RayCastRecieverSection3_1 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection3_1' || self.intersects[ i ].object.name === 'section3_WireframeMesh3_1') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection3_1.material.opacity = 0.2
                                self.section3_WireframeMesh3_1.material.opacity = 0.2
    
                                VerticalSection3_1.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection3_1.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }      
                                self.options.intersectsChooseStatus = 31
                            } 
    
                            document.getElementById("closeVerticalSection3_1").addEventListener('click', function() {
    
                                VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection3_1.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection3_1.material.opacity = 0
                                self.section3_WireframeMesh3_1.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
                        }
    
                        if ( self.RayCastRecieverSection3_2 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection3_2' || self.intersects[ i ].object.name === 'section3_WireframeMesh3_2') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection3_2.material.opacity = 0.2
                                self.section3_WireframeMesh3_2.material.opacity = 0.2
    
                                VerticalSection3_2.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection3_2.style.transform = "translateX(-0%)";
    
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }      
                                self.options.intersectsChooseStatus = 32    
                            } 
    
                            document.getElementById("closeVerticalSection3_2").addEventListener('click', function() {
    
                                VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection3_2.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection3_2.material.opacity = 0
                                self.RayCastRecieverSection3_2.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
    
                        if ( self.RayCastRecieverSection3_3 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection3_3' || self.intersects[ i ].object.name === 'section3_WireframeMesh3_3') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection3_3.material.opacity = 0.2
                                self.section3_WireframeMesh3_3.material.opacity = 0.2
    
                                VerticalSection3_3.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection3_3.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                   

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }    

                                self.options.intersectsChooseStatus = 33    
                            } 
    
                            document.getElementById("closeVerticalSection3_3").addEventListener('click', function() {
    
                                VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection3_3.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection3_3.material.opacity = 0
                                self.RayCastRecieverSection3_3.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
       
                        if ( self.RayCastRecieverSection3_4 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection3_4' || self.intersects[ i ].object.name === 'section3_WireframeMesh3_4') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection3_4.material.opacity = 0.2
                                self.section3_WireframeMesh3_4.material.opacity = 0.2
    
                                VerticalSection3_4.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection3_4.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }    

                                self.options.intersectsChooseStatus = 34    
                            } 
    
                            document.getElementById("closeVerticalSection3_4").addEventListener('click', function() {
    
                                VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection3_4.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection3_4.material.opacity = 0
                                self.RayCastRecieverSection3_4.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }

                        if ( self.RayCastRecieverSection3_5 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection3_5' || self.intersects[ i ].object.name === 'section3_WireframeMesh3_5') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection3_5.material.opacity = 0.2
                                self.section3_WireframeMesh3_5.material.opacity = 0.2

                                VerticalSection3_5.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection3_5.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                }       

                                self.options.intersectsChooseStatus = 35    
                            } 
    
                            document.getElementById("closeVerticalSection3_5").addEventListener('click', function() {
    
                                VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection3_5.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection3_5.material.opacity = 0
                                self.RayCastRecieverSection3_5.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
                        
                        if ( self.RayCastRecieverSection3_6 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection3_6' || self.intersects[ i ].object.name === 'section3_WireframeMesh3_6') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection3_6.material.opacity = 0.2
                                self.section3_WireframeMesh3_6.material.opacity = 0.2

                                VerticalSection3_6.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection3_6.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                }       

                                self.options.intersectsChooseStatus = 36    
                            } 
    
                            document.getElementById("closeVerticalSection3_6").addEventListener('click', function() {
    
                                VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection3_6.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection3_6.material.opacity = 0
                                self.RayCastRecieverSection3_6.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
                        
                        if ( self.RayCastRecieverSection3_7 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection3_7' || self.intersects[ i ].object.name === 'section3_WireframeMesh3_7') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection3_7.material.opacity = 0.2
                                self.section3_WireframeMesh3_7.material.opacity = 0.2

                                VerticalSection3_7.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection3_7.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                }       

                                self.options.intersectsChooseStatus = 37    
                            } 
    
                            document.getElementById("closeVerticalSection3_7").addEventListener('click', function() {
    
                                VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection3_7.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection3_7.material.opacity = 0
                                self.RayCastRecieverSection3_7.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }


                        if ( self.RayCastRecieverSection4_1 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection4_1' || self.intersects[ i ].object.name === 'section4_WireframeMesh4_1') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection4_1.material.opacity = 0.2
                                self.section4_WireframeMesh4_1.material.opacity = 0.2
    
                                VerticalSection4_1.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection4_1.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                }      
                                self.options.intersectsChooseStatus = 41
                            } 
    
                            document.getElementById("closeVerticalSection4_1").addEventListener('click', function() {
    
                                VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection4_1.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection4_1.material.opacity = 0
                                self.section4_WireframeMesh4_1.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
                        }
    
                        if ( self.RayCastRecieverSection4_2 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection4_2' || self.intersects[ i ].object.name === 'section4_WireframeMesh4_2') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection4_2.material.opacity = 0.2
                                self.section4_WireframeMesh4_2.material.opacity = 0.2
    
                                VerticalSection4_2.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection4_2.style.transform = "translateX(-0%)";
    
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                }      
                                self.options.intersectsChooseStatus = 42    
                            } 
    
                            document.getElementById("closeVerticalSection4_2").addEventListener('click', function() {
    
                                VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection4_2.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection4_2.material.opacity = 0
                                self.RayCastRecieverSection4_2.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
    
                        if ( self.RayCastRecieverSection4_3 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection4_3' || self.intersects[ i ].object.name === 'section4_WireframeMesh4_3') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection4_3.material.opacity = 0.2
                                self.section4_WireframeMesh4_3.material.opacity = 0.2
    
                                VerticalSection4_3.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection4_3.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();
                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                }    

                                self.options.intersectsChooseStatus = 43    
                            } 
    
                            document.getElementById("closeVerticalSection4_3").addEventListener('click', function() {
    
                                VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection4_3.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection4_3.material.opacity = 0
                                self.RayCastRecieverSection4_3.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
       
                        if ( self.RayCastRecieverSection4_4 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection4_4' || self.intersects[ i ].object.name === 'section4_WireframeMesh4_4') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection4_4.material.opacity = 0.2
                                self.section4_WireframeMesh4_4.material.opacity = 0.2
    
                                VerticalSection4_4.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection4_4.style.transform = "translateX(-0%)";
    
                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                }    

                                self.options.intersectsChooseStatus = 44    
                            } 
    
                            document.getElementById("closeVerticalSection4_4").addEventListener('click', function() {
    
                                VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection4_4.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection4_4.material.opacity = 0
                                self.RayCastRecieverSection4_4.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }

                        if ( self.RayCastRecieverSection4_5 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection4_5' || self.intersects[ i ].object.name === 'section4_WireframeMesh4_5') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection4_5.material.opacity = 0.2
                                self.section4_WireframeMesh4_5.material.opacity = 0.2

                                VerticalSection4_5.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection4_5.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                }       

                                self.options.intersectsChooseStatus = 45    
                            } 
    
                            document.getElementById("closeVerticalSection4_5").addEventListener('click', function() {
    
                                VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection4_5.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection4_5.material.opacity = 0
                                self.RayCastRecieverSection4_5.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
    
                        if ( self.RayCastRecieverSection4_6 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection4_6' || self.intersects[ i ].object.name === 'section4_WireframeMesh4_6') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection4_6.material.opacity = 0.2
                                self.section4_WireframeMesh4_6.material.opacity = 0.2

                                VerticalSection4_6.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection4_6.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 47:
                                        self.RayCastRecieverSection4_7.material.opacity = 0
                                        self.section4_WireframeMesh4_7.material.opacity = 0
                                        VerticalSection4_7.style.transform = "translateX(-150%)";
                                        VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                }       

                                self.options.intersectsChooseStatus = 46    
                            } 
    
                            document.getElementById("closeVerticalSection4_6").addEventListener('click', function() {
    
                                VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection4_6.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection4_6.material.opacity = 0
                                self.RayCastRecieverSection4_6.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
    

                        if ( self.RayCastRecieverSection4_7 != undefined) {
                                
                            if ( self.intersects[ i ].object.name === 'RayCastRecieverSection4_7' || self.intersects[ i ].object.name === 'section4_WireframeMesh4_7') {

                                MenuForMobileVersion1.style.display = 'flex';
                                self.RayCastRecieverSection4_7.material.opacity = 0.2
                                self.section4_WireframeMesh4_7.material.opacity = 0.2

                                VerticalSection4_7.style.animation = 'animShowFromLeft 0.4s';
                                VerticalSection4_7.style.transform = "translateX(-0%)";

                                self.updateDoorButtons();

                                switch(self.options.intersectsChooseStatus){
                                    case 11:
                                        self.RayCastRecieverSection1_1.material.opacity = 0
                                        self.section1_WireframeMesh1_1.material.opacity = 0
                                        VerticalSection1_1.style.transform = "translateX(-150%)";
                                        VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 12:
                                        self.RayCastRecieverSection1_2.material.opacity = 0
                                        self.section1_WireframeMesh1_2.material.opacity = 0
                                        VerticalSection1_2.style.transform = "translateX(-150%)";
                                        VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 13:
                                        self.RayCastRecieverSection1_3.material.opacity = 0
                                        self.section1_WireframeMesh1_3.material.opacity = 0
                                        VerticalSection1_3.style.transform = "translateX(-150%)";
                                        VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 14:
                                        self.RayCastRecieverSection1_4.material.opacity = 0
                                        self.section1_WireframeMesh1_4.material.opacity = 0
                                        VerticalSection1_4.style.transform = "translateX(-150%)";
                                        VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 15:
                                        self.RayCastRecieverSection1_5.material.opacity = 0
                                        self.section1_WireframeMesh1_5.material.opacity = 0
                                        VerticalSection1_5.style.transform = "translateX(-150%)";
                                        VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 16:
                                        self.RayCastRecieverSection1_6.material.opacity = 0
                                        self.section1_WireframeMesh1_6.material.opacity = 0
                                        VerticalSection1_6.style.transform = "translateX(-150%)";
                                        VerticalSection1_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 17:
                                        self.RayCastRecieverSection1_7.material.opacity = 0
                                        self.section1_WireframeMesh1_7.material.opacity = 0
                                        VerticalSection1_7.style.transform = "translateX(-150%)";
                                        VerticalSection1_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;


                                    case 21:
                                        self.RayCastRecieverSection2_1.material.opacity = 0
                                        self.section2_WireframeMesh2_1.material.opacity = 0
                                        VerticalSection2_1.style.transform = "translateX(-150%)";
                                        VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 22:
                                        self.RayCastRecieverSection2_2.material.opacity = 0
                                        self.section2_WireframeMesh2_2.material.opacity = 0
                                        VerticalSection2_2.style.transform = "translateX(-150%)";
                                        VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 23:
                                        self.RayCastRecieverSection2_3.material.opacity = 0
                                        self.section2_WireframeMesh2_3.material.opacity = 0
                                        VerticalSection2_3.style.transform = "translateX(-150%)";
                                        VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 24:
                                        self.RayCastRecieverSection2_4.material.opacity = 0
                                        self.section2_WireframeMesh2_4.material.opacity = 0
                                        VerticalSection2_4.style.transform = "translateX(-150%)";
                                        VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 25:
                                        self.RayCastRecieverSection2_5.material.opacity = 0
                                        self.section2_WireframeMesh2_5.material.opacity = 0
                                        VerticalSection2_5.style.transform = "translateX(-150%)";
                                        VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 26:
                                        self.RayCastRecieverSection2_6.material.opacity = 0
                                        self.section2_WireframeMesh2_6.material.opacity = 0
                                        VerticalSection2_6.style.transform = "translateX(-150%)";
                                        VerticalSection2_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 27:
                                        self.RayCastRecieverSection2_7.material.opacity = 0
                                        self.section2_WireframeMesh2_7.material.opacity = 0
                                        VerticalSection2_7.style.transform = "translateX(-150%)";
                                        VerticalSection2_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 31:
                                        self.RayCastRecieverSection3_1.material.opacity = 0
                                        self.section3_WireframeMesh3_1.material.opacity = 0
                                        VerticalSection3_1.style.transform = "translateX(-150%)";
                                        VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 32:
                                        self.RayCastRecieverSection3_2.material.opacity = 0
                                        self.section3_WireframeMesh3_2.material.opacity = 0
                                        VerticalSection3_2.style.transform = "translateX(-150%)";
                                        VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 33:
                                        self.RayCastRecieverSection3_3.material.opacity = 0
                                        self.section3_WireframeMesh3_3.material.opacity = 0
                                        VerticalSection3_3.style.transform = "translateX(-150%)";
                                        VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 34:
                                        self.RayCastRecieverSection3_4.material.opacity = 0
                                        self.section3_WireframeMesh3_4.material.opacity = 0
                                        VerticalSection3_4.style.transform = "translateX(-150%)";
                                        VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 35:
                                        self.RayCastRecieverSection3_5.material.opacity = 0
                                        self.section3_WireframeMesh3_5.material.opacity = 0
                                        VerticalSection3_5.style.transform = "translateX(-150%)";
                                        VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 36:
                                        self.RayCastRecieverSection3_6.material.opacity = 0
                                        self.section3_WireframeMesh3_6.material.opacity = 0
                                        VerticalSection3_6.style.transform = "translateX(-150%)";
                                        VerticalSection3_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 37:
                                        self.RayCastRecieverSection3_7.material.opacity = 0
                                        self.section3_WireframeMesh3_7.material.opacity = 0
                                        VerticalSection3_7.style.transform = "translateX(-150%)";
                                        VerticalSection3_7.style.animation = 'animHideFromLeft 0.4s';
                                    break;

                                    case 41:
                                        self.RayCastRecieverSection4_1.material.opacity = 0
                                        self.section4_WireframeMesh4_1.material.opacity = 0
                                        VerticalSection4_1.style.transform = "translateX(-150%)";
                                        VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 42:
                                        self.RayCastRecieverSection4_2.material.opacity = 0
                                        self.section4_WireframeMesh4_2.material.opacity = 0
                                        VerticalSection4_2.style.transform = "translateX(-150%)";
                                        VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 43:
                                        self.RayCastRecieverSection4_3.material.opacity = 0
                                        self.section4_WireframeMesh4_3.material.opacity = 0
                                        VerticalSection4_3.style.transform = "translateX(-150%)";
                                        VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 44:
                                        self.RayCastRecieverSection4_4.material.opacity = 0
                                        self.section4_WireframeMesh4_4.material.opacity = 0
                                        VerticalSection4_4.style.transform = "translateX(-150%)";
                                        VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 45:
                                        self.RayCastRecieverSection4_5.material.opacity = 0
                                        self.section4_WireframeMesh4_5.material.opacity = 0
                                        VerticalSection4_5.style.transform = "translateX(-150%)";
                                        VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    case 46:
                                        self.RayCastRecieverSection4_6.material.opacity = 0
                                        self.section4_WireframeMesh4_6.material.opacity = 0
                                        VerticalSection4_6.style.transform = "translateX(-150%)";
                                        VerticalSection4_6.style.animation = 'animHideFromLeft 0.4s';
                                    break;
                                    
                                }       

                                self.options.intersectsChooseStatus = 47    
                            } 
    
                            document.getElementById("closeVerticalSection4_7").addEventListener('click', function() {
    
                                VerticalSection4_7.style.animation = 'animHideFromLeft 0.4s';
                                VerticalSection4_7.style.transform = "translateX(-150%)";
                    
                                self.RayCastRecieverSection4_7.material.opacity = 0
                                self.RayCastRecieverSection4_7.material.opacity = 0
                                self.options.intersectsChooseStatus = 0
                                
                            });
    
                        }
    
                        
    
                    }  
                } 
            }

            
            window.addEventListener( 'pointerdown', onPointerDown );
    
    
    
            //Check Conditions All Components
            function checkConditions() {
                for (let i = 1; i <= 7; i++) {
                    if (
                        self.scene.getObjectByName(`doorSection3_${i}Group`, true) != undefined ||
                        self.scene.getObjectByName(`drawerSection3_${i}Group`, true) != undefined ||
                        self.scene.getObjectByName(`horizontalDividerSection3_${i}`, true) != undefined ||
                        self.scene.getObjectByName(`doorSection2_${i}Group`, true) != undefined ||
                        self.scene.getObjectByName(`drawerSection2_${i}Group`, true) != undefined ||
                        self.scene.getObjectByName(`horizontalDividerSection2_${i}`, true) != undefined ||
                        self.scene.getObjectByName(`doorSection1_${i}Group`, true) != undefined ||
                        self.scene.getObjectByName(`drawerSection1_${i}Group`, true) != undefined ||
                        self.scene.getObjectByName(`horizontalDividerSection1_${i}`, true) != undefined) {
                        return true;
                    }
                }
                return false;
            }        
            
    
    
    
    
    
    
    
    
            //Change Legs
            var TypeFeet_js_eventReactor_var = document.getElementById("typeFeet");
            var previousValuesFeet = document.getElementById("typeFeet").value;

            document.getElementById("typeFeet").addEventListener('change', function() { 

                var currentValueFeet = document.getElementById(this.id).value;

                if (checkConditions()) {
                    if (confirm('Are you sure you want to change type of feet? Such change might impact progress within the compartment and some of the product elements might be lost')) {
                        previousValuesFeet = currentValueFeet;
                        changeLegs() 
                    }else {
                        
                        document.getElementById(this.id).value = previousValuesFeet;
                        return;
                    }
                }else {
                    previousValuesFeet = currentValueFeet;
                    changeLegs() 
                    
                }
    
            });
            
            function changeLegs() {
                
              switch (document.getElementById("typeFeet").value) {
                case "Slider":
    
                    self.placeSliders();
                    self.floor.position.y = -1;
                    self.human.position.y = 79;

                    if (isMobile) {
                        self.controls.target.set(2, -36, -999);
                    } else {
                        self.controls.target.set(19, 60, -999);
                    }
    
                    self.models['metalleg'].visible = false;
                    self.models['metalleg2'].visible = false;
                    self.models['metalleg3'].visible = false;
                    self.models['metalleg4'].visible = false;
    
                    self.models['sliders1'].visible = true;
                    self.models['sliders2'].visible = true;
                    self.models['sliders3'].visible = true;
                    self.models['sliders4'].visible = true;
    
                    self.scene.remove(self.plinthLegsGroup);
    
                    if (self.options.statusLegs === 2) {
                        self.options.pillar.height +=14;
    
                        self.options.sectionHeight_1_1 +=14;
                        self.options.sectionHeight_2_1 +=14;
                        self.options.sectionHeight_3_1 +=14;
                        self.options.sectionHeight_4_1 +=14;
    
                    } else if ( self.options.statusLegs === 1)  {
                        self.options.pillar.height +=7;
    
                        self.options.sectionHeight_1_1 +=7;
                        self.options.sectionHeight_2_1 +=7;
                        self.options.sectionHeight_3_1 +=7;
                        self.options.sectionHeight_4_1 +=7;
                    }
    
    
                    self.scene.remove(self.shelving);
                    self.createShelving();
    
                  
                    switch (self.options.amountOfSections) {
                        case 1:
                            self.scene.remove(self.pillar1,self.pillar2,self.pillar3);
    
                            self.scene.remove(self.section2_WireframeMesh2_1,self.section3_WireframeMesh3_1,self.section4_WireframeMesh4_1);
    
                            self.scene.remove(self.RayCastRecieverSection2_1, self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
    
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
                        break;
                        case 2:
                            self.scene.remove(self.pillar2,self.pillar3);
                            self.scene.remove(self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
    
                            self.createPillar1();
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
                            self.createRayCastRecieverSection2_1();
                            self.createWireframeBack_section2_1();
    
                        break;
                        case 3:
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section3_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection3_1();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
                        break;
                        case 4:
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createPillar3();
    
                            self.createWireframeBack_section1_1();
        
                            self.createWireframeBack_section3_1();
                            self.createWireframeBack_section4_1();
    
                            self.createRayCastRecieverSection1_1();
                            
                            self.createRayCastRecieverSection3_1();
                            self.createRayCastRecieverSection4_1();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
                        break;
                    }
    
                    self.options.statusLegs = 0
    
        
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }
    
    

    
                break;
                case "MetalLegs":
    
                
                    self.scene.remove(self.plinthLegsGroup);
    
                    self.placeMetallegs();
                    self.floor.position.y = -14.8;
                    
                    self.human.position.y =  66;

                    if (isMobile) {
                        self.controls.target.set(2, -50, -999);
                    } else {
                        self.controls.target.set(19, 47, -999);
                    }
    
                    self.models['metalleg'].visible = true;
                    self.models['metalleg2'].visible = true;
                    self.models['metalleg3'].visible = true;
                    self.models['metalleg4'].visible = true;
    
                    self.models['sliders1'].visible = false;
                    self.models['sliders2'].visible = false;
                    self.models['sliders3'].visible = false;
                    self.models['sliders4'].visible = false;
    
    
    
                    if (self.options.statusLegs == 0) {
                        self.options.pillar.height -=14;
    
                        self.options.sectionHeight_1_1 -=14;
                        self.options.sectionHeight_2_1 -=14;
                        self.options.sectionHeight_3_1 -=14;
                        self.options.sectionHeight_4_1 -=14;
    
    
    
                    } else if ( self.options.statusLegs == 1)  {
                        self.options.pillar.height -=7;
                        self.options.sectionHeight_1_1 -=7;
                        self.options.sectionHeight_2_1 -=7;
                        self.options.sectionHeight_3_1 -=7;
                        self.options.sectionHeight_4_1 -=7;
    
                       
                    }
    
    
    
                  
    
                    self.scene.remove(self.shelving);
                    self.createShelving();
    
    
                    switch (self.options.amountOfSections) {
                        case 1:
    
                            self.scene.remove(self.pillar1,self.pillar2,self.pillar3);
    
                            self.scene.remove(self.section2_WireframeMesh2_1,self.section3_WireframeMesh3_1,self.section4_WireframeMesh4_1);
    
                            self.scene.remove(self.RayCastRecieverSection2_1, self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
    
                           self.createWireframeBack_section1_1();
                           self.createRayCastRecieverSection1_1();
    
                        break;
                        case 2:
                            self.scene.remove(self.pillar2,self.pillar3);
                            
                            self.scene.remove(self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
    
                            self.createPillar1();
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
                            self.createRayCastRecieverSection2_1();
                            self.createWireframeBack_section2_1();
    
                        break;
                        case 3:
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section3_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection3_1();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
                        case 4:
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createPillar3();
                            self.createWireframeBack_section1_1();
        
                            self.createWireframeBack_section3_1();
                            self.createWireframeBack_section4_1();
    
                            self.createRayCastRecieverSection1_1();
                            
                            self.createRayCastRecieverSection3_1();
                            self.createRayCastRecieverSection4_1();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
                    }
                    
                    self.options.statusLegs = 2
    
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }
        
    
    
                break;
                case "Plinth":
    
                    self.createPlinthLegs();
                    var nextTexture = self.options.shelf.texture + 1;
                    if ( self.options.shelf.texture > 13 ) {
                        self.scene.traverse(function(child) {
                            if (child instanceof THREE.Mesh) {
                                    if (child.name.includes('plinthLeg1') || child.name.includes('plinthLeg2') ) {
                                        child.material.map = self.textures[nextTexture].map;
                                        child.material.map.repeat.y = 0.09;
                                        child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                        child.material.map.center.y = 1;
                                    }
                                }
                            }
                        );
                    }

                    if (isMobile) {
                        self.controls.target.set(2, -43, -999);
                    } else {
                        self.controls.target.set(19, 55, -999);
                    }

                    self.floor.position.y = -6;

                    self.human.position.y = 74;
    
                    self.models['metalleg'].visible = false;
                    self.models['metalleg2'].visible = false;
                    self.models['metalleg3'].visible = false;
                    self.models['metalleg4'].visible = false;
    
                    self.models['sliders1'].visible = false;
                    self.models['sliders2'].visible = false;
                    self.models['sliders3'].visible = false;
                    self.models['sliders4'].visible = false;
    
                    if (self.options.statusLegs === 0) {
                        self.options.pillar.height -=7;
    
                        self.options.sectionHeight_1_1 -=7;
                        self.options.sectionHeight_2_1 -=7;
                        self.options.sectionHeight_3_1 -=7;
                        self.options.sectionHeight_4_1 -=7;
    
                    } else if ( self.options.statusLegs === 2)  {
                        self.options.pillar.height +=7;
    
                        self.options.sectionHeight_1_1 +=7;
                        self.options.sectionHeight_2_1 +=7;
                        self.options.sectionHeight_3_1 +=7;
                        self.options.sectionHeight_4_1 +=7;
                    }
    
                  
                    self.scene.remove(self.shelving);
                    self.createShelving();
                    
    
    
                    switch (self.options.amountOfSections) {
                        case 1:
                            self.scene.remove(self.pillar1,self.pillar2,self.pillar3);
    
                            self.scene.remove(self.section2_WireframeMesh2_1,self.section3_WireframeMesh3_1,self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection2_1, self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
    
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
                        break;
                        case 2:
                            self.scene.remove(self.pillar2,self.pillar3);
                            self.scene.remove(self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
    
                            self.createPillar1();
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
                            self.createRayCastRecieverSection2_1();
                            self.createWireframeBack_section2_1();
    
                        break;
                        case 3:
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section3_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection3_1();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
                        case 4:
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createPillar3();
                            self.createWireframeBack_section1_1();
        
                            self.createWireframeBack_section3_1();
                            self.createWireframeBack_section4_1();
    
                            self.createRayCastRecieverSection1_1();
                            
                            self.createRayCastRecieverSection3_1();
                            self.createRayCastRecieverSection4_1();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
                    }
    
                    self.options.statusLegs = 1
    
    
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }

    
                    
                break;
              }
    
                document.getElementById("Height_HorizontalPartition_S1_1").innerHTML = Math.floor(self.options.sectionHeight_1_1 - 0.6 - (1.8*2)) +"cm";
    
                document.getElementById("Height_HorizontalPartition_S2_1").innerHTML = Math.floor(self.options.sectionHeight_2_1 - 0.6 - (1.8*2)) +"cm";
    
                document.getElementById("Height_HorizontalPartition_S3_1").innerHTML = Math.floor(self.options.sectionHeight_3_1 - 0.6 - (1.8*2)) +"cm";
    
                document.getElementById("Height_HorizontalPartition_S4_1").innerHTML = Math.floor(self.options.sectionHeight_4_1 - 0.6 - (1.8*2)) +"cm";

    
                self.calculateOutput();
                self.createTopPlane();
                self.createBackPlate();
                self.createShadow();
                self.createShadowWall();

    
            };
    
    
    
    
    
        
    
    
    

    
            //Add Horizontal Partitions
            document.getElementById("subButtonMinus_VP").addEventListener('click', function() {
                setTimeout(ChangeVerticalPartition('minus'), 0); 
            }); 
            document.getElementById("subButtonPlus_VP").addEventListener('click', function() {
                setTimeout(ChangeVerticalPartition('plus'), 0); 
            });
            document.getElementById("subdomainNumberElementCorpus_Cabinet_Dimensionsz").addEventListener('change', ChangeVerticalPartition);
            
            let previousValueVP = parseInt(document.getElementById("subdomainNumberElementCorpus_Cabinet_Dimensionsz").value, 10);

            function ChangeVerticalPartition(action = null) {
                
                var inputElement = document.getElementById("subdomainNumberElementCorpus_Cabinet_Dimensionsz");
                var currentValue = parseInt(inputElement.value, 10);
                var max = parseInt(inputElement.max, 10);
                var min = parseInt(inputElement.min, 10);
                var dimensionsValue = parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10);

                if (isNaN(currentValue)) {
                    currentValue = previousValueVP;  
                };

                if (currentValue > max ) {
                    currentValue = max; 
                }
        
                if (currentValue < min ) {
                    currentValue = min; 
                } 
            
                
                if (checkConditions()) {
                    if (dimensionsValue >= 46 && previousValueVP === 1 || 
                        dimensionsValue >= 68 && previousValueVP === 2 || 
                        dimensionsValue >= 90 && previousValueVP === 3 ) {
                        if (confirm('Are you sure you want to change amount of vertical partition? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                            self.startVerticals();

                        }else {
                            inputElement.value = self.options.amountOfSections - 1;
                            return;
                        }
                    } else {
                        self.startVerticals();
                        inputElement.value = self.options.amountOfSections - 1;
                    }
                }else {
                    self.startVerticals();
                }

                // Check if the value is being set beyond max or below min
                if (action === 'minus') {
                    if (currentValue <= min && previousValueVP === min) {
                        showHintPanel("At this width, you cannot reduce the number of vertical partitions.");
                        return;
                    }
                } else if (action === 'plus') {
                    if (currentValue >= max && previousValueVP === max) {
                        showHintPanel("Every compartment has a minimum width dimension. Another vertical partition cannot be inserted at this width.");
                        return;
                    }
                }
            
                previousValueVP = currentValue;
                
            }
     
    
        
        
        
    
            
    
    
            //Change Width    
            this.debounceTimerWidth;
            this.debounceTimerDimensions;
            var previousValuesWidth = {
                "subdomainWidthCabinet_Dimensions": document.getElementById('subdomainWidthCabinet_Dimensions').value,
                "sliderWidth": document.getElementById('sliderWidth').value
            };
    
            document.getElementById("subButtonMinus_Width").addEventListener('click', requestChangeWidth); 
            document.getElementById("subButtonPlus_Width").addEventListener('click', requestChangeWidth); 
            document.getElementById("subdomainWidthCabinet_Dimensions").addEventListener('change', requestChangeWidth); 
            document.getElementById("sliderWidth").addEventListener('change', requestChangeWidth); 
    
            function requestChangeWidth(event) {
    
                clearTimeout(this.debounceTimerWidth);
    
                var currentValueWidth = document.getElementById(this.id).value;
                var sliderValueWidth = document.getElementById('sliderWidth').value;
                var dimensionsValueWidth = document.getElementById('subdomainWidthCabinet_Dimensions').value;
    
                var element = event.target.id.includes("subButton") ? 
                  document.getElementById('subdomainWidthCabinet_Dimensions') : 
                  event.target;
                
                var max = parseInt(element.max);
                var min = parseInt(element.min);
                var currentValue = parseInt(element.value);

                // Handle max value
                if (currentValue >= max) {
                    showHintPanel("The maximum possible dimension has been reached.");
                    element.value = max;
                }

                // Handle min value
                if (currentValue <= min) {
                    showHintPanel("The minimum possible dimension has been reached.");
                    element.value = min;
                }

                if (isNaN(currentValue)) {
                    element.value =  previousValuesWidth['subdomainWidthCabinet_Dimensions']; 
                    document.getElementById('sliderWidth').value = previousValuesWidth['sliderWidth'];
 
                };


                if (previousValuesWidth['subdomainWidthCabinet_Dimensions'] == max && currentValue >= max || previousValuesWidth['subdomainWidthCabinet_Dimensions'] == min && currentValue <= min) {
                } else {
                    if (checkConditions()) {
                        if (confirm('Are you sure you want to change width? Such change might impact progress within the compartment and some of the product elements might be lost')) {
                            previousValuesWidth[this.id] = currentValueWidth;
                            previousValuesWidth['sliderWidth'] = sliderValueWidth;
                            previousValuesWidth['subdomainWidthCabinet_Dimensions'] = dimensionsValueWidth;
                            this.debounceTimerWidth = setTimeout(changeWidth(), 500); 
                        }else {
                            
                            document.getElementById(this.id).value = previousValuesWidth[this.id];
                            document.getElementById('sliderWidth').value = previousValuesWidth['sliderWidth'];
                            document.getElementById('subdomainWidthCabinet_Dimensions').value = previousValuesWidth['subdomainWidthCabinet_Dimensions'];
                            
                            return;
                        }
                    }else {
                        previousValuesWidth[this.id] = currentValueWidth;
                        previousValuesWidth['sliderWidth'] = sliderValueWidth;
                        previousValuesWidth['subdomainWidthCabinet_Dimensions'] = dimensionsValueWidth;                    
                        this.debounceTimerWidth = setTimeout(changeWidth(), 500); 
                    }
                }
            };
    
            function changeWidth() {
    
                clearTimeout(this.debounceTimerWidth);
    
                self.options.shelf.length = parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10);
    

                
                if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) > 39 &&  parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) <= 45 ) {
    
                    self.options.wasChangedSectionsLengthOrNot = 1;
    
                    self.options.shelf.length = parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10);
    
                    self.options.section1Length = self.options.shelf.length;
    
                    self.options.section1Length = self.options.shelf.length + 1
    
                    self.scene.remove(self.shelving);
                    self.updatePillarProtoMaterial();
                    self.updateShelfProtoMaterial();
                    self.createShelving();
                    self.calculateOutput();
                    self.updateDoorButtons();
                    
    
                    self.options.amountOfSections = 1
    
                    document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 0;
                    
                    var setDisplay = (section, display) => {
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                        }
                    };
                    setDisplay(1, 'none');
                    setDisplay(2, 'none');
                    setDisplay(3, 'none');
                    setDisplay(4, 'none');
                    


                    var pillarPositionS1 = Math.floor(self.options.section1Length - 1.8 * 2 - 1 ) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                    }

    
    
                    //remove other pillars
                    self.options.pillar1ChangedOrNot = false
                    self.options.pillar1Position = 0;
                    self.scene.remove(self.pillar1);
                    self.options.pillar2ChangedOrNot = false
                    self.options.pillar2Position = 0;
                    self.scene.remove(self.pillar2);
                    self.options.pillar3ChangedOrNot = false
                    self.options.pillar3Position = 0;
                    self.scene.remove(self.pillar3);
    
                    //as well as skeletons of sections
                    self.scene.remove(self.section2_WireframeMesh2_1, self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                    
                    self.scene.remove(self.RayCastRecieverSection2_1, self.RayCastRecieverSection3_1,self.RayCastRecieverSection4_1);
    
                    self.removeHorizontalDividers();
                    self.removeHorizontalDividersS2();
                    self.removeHorizontalDividersS3();
                    self.removeHorizontalDividersS4();
    
                    self.closeLeftMenu();
    
                    self.createWireframeBack_section1_1();
                    self.createRayCastRecieverSection1_1();
    
                }
                else if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) >= 46 && parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) <= 67 ) 
                {
    
    
                    self.options.wasChangedSectionsLengthOrNot = 1;
                    self.options.shelf.length = parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10);
    
                    document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = self.options.amountOfSections-1;
    
                    self.scene.remove(self.shelving);
                    self.updatePillarProtoMaterial();
                    self.updateShelfProtoMaterial();
                    self.createShelving();
                    self.calculateOutput();
                    
                    switch (self.options.amountOfSections) {
                        
                        case 1:
                            self.options.section1Length = self.options.shelf.length 
    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 0;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'none');
                            setDisplay(2, 'none');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');

                            var pillarPositionS1 = Math.floor(self.options.section1Length - 1.8 * 2 - 1 ) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }
    
    
                            self.options.pillar1Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
                            self.options.pillar1ChangedOrNot = false
                            self.options.pillar2ChangedOrNot = false
                            self.options.pillar3ChangedOrNot = false
    
                            self.scene.remove( self.section2_WireframeMesh2_1, self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1 );
    
                            self.scene.remove( self.RayCastRecieverSection2_1, self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
    
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
    
    
                        break;
    
                        case 2:
                            self.options.section1Length = self.options.shelf.length / 2;
                            self.options.section2Length = self.options.shelf.length / 2;
    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 1;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
                            
    
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }
        
    
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove( self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove( self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
    
                            self.options.pillar1Position = 0;
                            self.scene.remove(self.pillar1);
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;

                        case 3:
                            self.options.section1Length = self.options.shelf.length / 2;
                            self.options.section2Length = self.options.shelf.length / 2;

    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 1;
                            self.options.amountOfSections = 2;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
                            
    
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }
        
    
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove( self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove( self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
    
                            self.options.pillar1Position = 0;
                            self.scene.remove(self.pillar1);
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();

                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;

                        case 4:
                            self.options.section1Length = self.options.shelf.length / 2;
                            self.options.section2Length = self.options.shelf.length / 2;

    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 1;
                            self.options.amountOfSections = 2;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
                            
    
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }
        
    
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove( self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove( self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
    
                            self.options.pillar1Position = 0;
                            self.scene.remove(self.pillar1);
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();

                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
                    }

                }
                else if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) >= 68 && parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) <= 79 ) 
                {
    
    
                    self.options.wasChangedSectionsLengthOrNot = 1;
                    self.options.shelf.length = parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10);
    
                    document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = self.options.amountOfSections-1;
    
                    self.scene.remove(self.shelving);
                    self.updatePillarProtoMaterial();
                    self.updateShelfProtoMaterial();
                    self.createShelving();
                    self.calculateOutput();
                    
                    switch (self.options.amountOfSections) {
                        
                        case 1:
                            self.options.section1Length = self.options.shelf.length 
    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 0;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'none');
                            setDisplay(2, 'none');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - 1.8 * 2 - 1 ) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }
    
                            self.options.pillar1Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
                            self.options.pillar1ChangedOrNot = false
                            self.options.pillar2ChangedOrNot = false
                            self.options.pillar3ChangedOrNot = false
    
                            self.scene.remove( self.section2_WireframeMesh2_1, self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1 );
    
                            self.scene.remove( self.RayCastRecieverSection2_1, self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
    
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
    
    
                        break;
    
                        case 2:
                            self.options.section1Length = self.options.shelf.length / 2;
                            self.options.section2Length = self.options.shelf.length / 2;
    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 1;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
    
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }
                    
        
    
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove( self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove( self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.closeLeftMenu();
    
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
    
                        case 3:
    
                            self.options.section1Length = self.options.shelf.length / 3;
                            self.options.section2Length = self.options.shelf.length / 3;
                            self.options.section3Length = self.options.shelf.length / 3;
        
                            
                            //update ui html dimensions too...
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 2;
        
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'flex');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
        
        
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }

                            var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                            }
                        

        
                            self.options.pillar3Position = 0;
                            self.options.pillar3ChangedOrNot = false
                            self.scene.remove(self.pillar3);
        
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
        
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
        
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
                            self.options.pillar2Position = 0;
                            self.options.pillar2ChangedOrNot = false
                            self.createPillar2();
        
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
        
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
        
        
                        break;
    
                        case 4:
    
                            self.options.section1Length = self.options.shelf.length / 3;
                            self.options.section2Length = self.options.shelf.length / 3;
                            self.options.section3Length = self.options.shelf.length / 3;
        
                            
                            //update ui html dimensions too...
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 2;
                            self.options.amountOfSections = 3
        
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'flex');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
        
        
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }

                            var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                            }
                        

        
                            self.options.pillar3Position = 0;
                            self.options.pillar3ChangedOrNot = false
                            self.scene.remove(self.pillar3);
        
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
        
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
        
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
                            self.options.pillar2Position = 0;
                            self.options.pillar2ChangedOrNot = false
                            self.createPillar2();
        
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
        
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
        
        
                        break;
    
                    }
                }
                else if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) >= 80 && parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) <= 89 ) 
                {
    
                    self.options.wasChangedSectionsLengthOrNot = 1;
                    self.options.shelf.length = parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10);
    
                    document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = self.options.amountOfSections-1;
    
                    self.scene.remove(self.shelving);
                    self.updatePillarProtoMaterial();
                    self.updateShelfProtoMaterial();
                    self.createShelving();
                    self.calculateOutput();
                    
                    switch (self.options.amountOfSections) {
                        
                        case 1:
                            self.options.section1Length = self.options.shelf.length / 2;
                            self.options.section2Length = self.options.shelf.length / 2;
    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 1;
                            self.options.amountOfSections = 2
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
    
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }
                    
        
    
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove( self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove( self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.closeLeftMenu();
    
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;

                        case 2:
                            self.options.section1Length = self.options.shelf.length / 2;
                            self.options.section2Length = self.options.shelf.length / 2;
    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 1;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
    
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }
                    
        
    
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove( self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove( self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.closeLeftMenu();
    
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
    
                        case 3:
    
                            self.options.section1Length = self.options.shelf.length / 3;
                            self.options.section2Length = self.options.shelf.length / 3;
                            self.options.section3Length = self.options.shelf.length / 3;
        
                            
                            //update ui html dimensions too...
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 2;
        
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'flex');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
        
        
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }

                            var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                            }
                        

        
                            self.options.pillar3Position = 0;
                            self.options.pillar3ChangedOrNot = false
                            self.scene.remove(self.pillar3);
        
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
        
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
        
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
                            self.options.pillar2Position = 0;
                            self.options.pillar2ChangedOrNot = false
                            self.createPillar2();
        
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
        
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
        
                        break;

                        case 4:
        
                            self.options.section1Length = self.options.shelf.length / 3;
                            self.options.section2Length = self.options.shelf.length / 3;
                            self.options.section3Length = self.options.shelf.length / 3;
        
                            
                            //update ui html dimensions too...
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 2;
                            self.options.amountOfSections = 3;
        
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'flex');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
        
        
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }

                            var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                            }
                        

        
                            self.options.pillar3Position = 0;
                            self.options.pillar3ChangedOrNot = false
                            self.scene.remove(self.pillar3);
        
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
        
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
        
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
                            self.options.pillar2Position = 0;
                            self.options.pillar2ChangedOrNot = false
                            self.createPillar2();
        
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
        
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
        
                        break;
    
                    }
                }
                else if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) >= 90 && parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) <= 100 ) 
                {
    
                    self.options.wasChangedSectionsLengthOrNot = 1;
                    self.options.shelf.length = parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10);
    
                    document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = self.options.amountOfSections-1;
    
                    self.scene.remove(self.shelving);
                    self.updatePillarProtoMaterial();
                    self.updateShelfProtoMaterial();
                    self.createShelving();
                    self.calculateOutput();
                    
                    switch (self.options.amountOfSections) {

                        case 1:
                            self.options.section1Length = self.options.shelf.length / 2;
                            self.options.section2Length = self.options.shelf.length / 2;
    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 1;
                            self.options.amountOfSections = 2;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
    
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }
                    
        
    
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove( self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove( self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.closeLeftMenu();
    
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
                        
                        case 2:
                            self.options.section1Length = self.options.shelf.length / 2;
                            self.options.section2Length = self.options.shelf.length / 2;
    
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 1;
                            
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
    
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }
                    
        
    
                            self.options.pillar2Position = 0;
                            self.scene.remove(self.pillar2);
                            self.options.pillar3Position = 0;
                            self.scene.remove(self.pillar3);
    
                            self.scene.remove( self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove( self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1 );
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.closeLeftMenu();
    
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
          
                        case 3:
    
                            self.options.section1Length = self.options.shelf.length / 3;
                            self.options.section2Length = self.options.shelf.length / 3;
                            self.options.section3Length = self.options.shelf.length / 3;
        
                            
                            //update ui html dimensions too...
                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = 2;
        
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'flex');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');
        
        
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }

                            var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                            }
                        

        
                            self.options.pillar3Position = 0;
                            self.options.pillar3ChangedOrNot = false
                            self.scene.remove(self.pillar3);
        
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
        
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
        
                            self.options.pillar1Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.createPillar1();
                            self.options.pillar2Position = 0;
                            self.options.pillar2ChangedOrNot = false
                            self.createPillar2();
        
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
        
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
        
                        break;
    
                        case 4:
                           
                            self.options.amountOfSections = 4;
    
                            self.options.wasChangedSectionsLengthOrNot = 1;
    
                            self.options.section1Length = self.options.shelf.length / 4
                            self.options.section2Length = self.options.shelf.length / 4
                            self.options.section3Length = self.options.shelf.length / 4
                            self.options.section4Length = self.options.shelf.length / 4
    
                            //update ui html dimensions 
                            //get rounded numbers for ui (parseInt...)
    
                            var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }

                            var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                            }

                            var pillarPositionS4 = Math.floor(self.options.section4Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`pillar4PositionField_S4_${i}`).innerHTML = pillarPositionS4;
                            }

    
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'flex');
                            setDisplay(4, 'flex');

                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`2Partition_S2_${i}`).style.display = 'flex';
                            }
    
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`3Partition_S3_${i}`).style.display = 'flex';
                            }
        
    
                            self.options.pillar1Position = 0;
                            self.options.pillar2Position = 0;
                            self.options.pillar3Position = 0;
                            self.options.pillar1ChangedOrNot = false
                            self.options.pillar2ChangedOrNot = false
                            self.options.pillar3ChangedOrNot = false
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createPillar3();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
                            self.createWireframeBack_section4_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
                            self.createRayCastRecieverSection4_1();
    
    
                        break;
    
                    }
                }
    

                if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) >= 120  ) {
                    self.human.position.x = -95;
                } else {
                    self.human.position.x = -80;
                }
    
                //updateLegs & shadow too
                switch (document.getElementById("typeFeet").value) {
                case "Slider":
                    self.placeSliders();
                break;
                case "MetalLegs":
                    self.placeMetallegs();
                break;
                case "Plinth":
                    self.createPlinthLegs();
                break;
                }        
    
    
                self.createShadow();
                self.createShadowWall();
                self.createTopPlane();
                self.createBackPlate();
                    
    
                try{
                    self.scene.traverse(function(child) {
                        if (child.name.includes('door')) {
                            self.scene.remove(child.parent)
                        }
                    });
                }catch(e){       
                    console.clear();
                };
               
                try{
                    self.scene.traverse(function(child) {
                        if (child.name.includes('internalShelf')) {
                            self.scene.remove(child.parent)
                        }
                    });
                }catch(e){       
                    console.clear();
                };
    
                clearTimeout(self.debounceTimerDimensions);
                if (self.options.statusShowDimensions == 1) {
                    self.debounceTimerDimensions = setTimeout(self.createDimensions(), 6000); 
                }
    
    

    
            }
    
    
    
    
            //Change Height
            this.debounceTimerHeight;
            var previousValues = {
                "subdomainHeightCabinet_Dimensions": document.getElementById('subdomainHeightCabinet_Dimensions').value,
                "sliderHeight": document.getElementById('sliderHeight').value
            };

            document.getElementById("subButtonMinus_Height").addEventListener('click', requestChangeHeight); 
            document.getElementById("subButtonPlus_Height").addEventListener('click', requestChangeHeight); 
            document.getElementById("subdomainHeightCabinet_Dimensions").addEventListener('change', requestChangeHeight); 
            document.getElementById("sliderHeight").addEventListener('change', requestChangeHeight); 
    
            function requestChangeHeight (event) {
                
                clearTimeout(this.debounceTimerHeight);

                var sliderValue = document.getElementById('sliderHeight').value;
                var dimensionsValue = document.getElementById('subdomainHeightCabinet_Dimensions').value;
    
                var element = event.target.id.includes("subButton") ? 
                  document.getElementById('subdomainHeightCabinet_Dimensions') : 
                  event.target;
                
                var max = parseInt(element.max);
                var min = parseInt(element.min);
                var currentValue = parseInt(element.value);

                // Handle max value
                if (currentValue >= max) {
                    showHintPanel("The maximum possible dimension has been reached.");
                    element.value = max;
                }

                // Handle min value
                if (currentValue <= min) {
                    showHintPanel("The minimum possible dimension has been reached.");
                    element.value = min;
                }
    
                if (isNaN(currentValue)) {
                    element.value = previousValues['subdomainHeightCabinet_Dimensions'];  
                    document.getElementById('sliderHeight').value = previousValues['sliderHeight'];
                };

                if (previousValues['subdomainHeightCabinet_Dimensions'] == max && currentValue >= max || previousValues['subdomainHeightCabinet_Dimensions'] == min && currentValue <= min) {
                } else {
                    if (checkConditions()) {

                        if (confirm('Are you sure you want to change width? Such change might impact progress within the compartment and some of the product elements might be lost')) {
                            previousValues[this.id] = currentValue;
                            previousValues['sliderHeight'] = sliderValue;
                            previousValues['subdomainHeightCabinet_Dimensions'] = dimensionsValue;
                            this.debounceTimerHeight = setTimeout(changeHeight(), 500);
                        }else {
                            

                            document.getElementById(this.id).value = previousValues[this.id];
                            document.getElementById('sliderHeight').value = previousValues['sliderHeight'];
                            document.getElementById('subdomainHeightCabinet_Dimensions').value = previousValues['subdomainHeightCabinet_Dimensions'];
                            
                            return;

                        }

                    }else {
                        previousValues[this.id] = currentValue;
                        previousValues['sliderHeight'] = sliderValue;
                        previousValues['subdomainHeightCabinet_Dimensions'] = dimensionsValue;
                        this.debounceTimerHeight = setTimeout(changeHeight(), 500);
                    };
                }
                
    
            };
            
            function changeHeight() {
            
                var selectedHeight = parseInt(document.getElementById("subdomainHeightCabinet_Dimensions").value, 10);
    
                self.options.sectionHeight_1_1 = parseInt(document.getElementById("subdomainHeightCabinet_Dimensions").value, 10);
    
                if (selectedHeight < 45 ) {} else if (selectedHeight > 44 && selectedHeight < 91 ) {
    
                    self.options.wasChangedSectionsLengthOrNot = 0;
    
                    if (document.getElementById("typeFeet").value === "Slider") {
                        self.options.pillar.height = selectedHeight ;
                    }
                    else if (TypeFeet_js_eventReactor_var.value === "MetalLegs")  {
                        self.options.pillar.height = selectedHeight -14;
                    }
                    else if (TypeFeet_js_eventReactor_var.value === "Plinth")  {
                        self.options.pillar.height = selectedHeight -7;
                    }
    
                    self.options.sectionHeight_1_1 = selectedHeight;
                    self.options.sectionHeight_2_1 = selectedHeight;
                    self.options.sectionHeight_3_1 = selectedHeight;
                    self.options.sectionHeight_4_1 = selectedHeight;
    
                    self.scene.remove(self.shelving);
                    self.updatePillarProtoMaterial();
                    self.updateShelfProtoMaterial();
                    self.createShelving();
                    
                    switch (self.options.amountOfSections) {
                        case 1:
                            self.scene.remove(self.pillar1,self.pillar2,self.pillar3);
                            self.scene.remove(self.section2_WireframeMesh2_1,self.section3_WireframeMesh3_1,self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection2_1, self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.closeLeftMenu();
    
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
                            
                        break;
    
                        case 2:
                            self.scene.remove(self.pillar2,self.pillar3);
                            self.scene.remove(self.section3_WireframeMesh3_1, self.section4_WireframeMesh3_1);
                            self.scene.remove(self.RayCastRecieverSection4_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.closeLeftMenu();
    
                            self.createPillar1();
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createWireframeBack_section2_1();
                        break;
                        case 3:
                            self.scene.remove(self.pillar2);
    
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.closeLeftMenu();
    
                            self.createPillar1();
                            self.createPillar2();
    
                            self.createRayCastRecieverSection1_1();
                            self.createWireframeBack_section1_1();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
    
                            self.createWireframeBack_section3_1();
                            self.createRayCastRecieverSection3_1();

                        break;
                        case 4:
                            
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createPillar3();
                            self.createRayCastRecieverSection1_1();
                            self.createWireframeBack_section1_1();
        
                            self.createWireframeBack_section3_1();
                            self.createRayCastRecieverSection3_1();
                            
                            self.createWireframeBack_section4_1();
                            self.createRayCastRecieverSection4_1();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
    
                        break;
                    }
                }
    
    
     
    
    
                document.getElementById("Height_HorizontalPartition_S1_1").innerHTML = Math.floor(self.options.sectionHeight_1_1 - 0.6 - (1.8*2)) +"cm";
    
                document.getElementById("Height_HorizontalPartition_S2_1").innerHTML = Math.floor(self.options.sectionHeight_2_1 - 0.6 - (1.8*2)) +"cm";
    
                document.getElementById("Height_HorizontalPartition_S3_1").innerHTML = Math.floor(self.options.sectionHeight_3_1 - 0.6 - (1.8*2)) +"cm";
    
                document.getElementById("Height_HorizontalPartition_S4_1").innerHTML = Math.floor(self.options.sectionHeight_4_1 - 0.6 - (1.8*2)) +"cm";


                self.createTopPlane();
                self.createShadowWall();
                self.createBackPlate();
                
    
                self.calculateOutput();
                self.updateDoorButtons();
                clearTimeout(self.debounceTimerDimensions);
                if (self.options.statusShowDimensions == 1) {
                    self.debounceTimerDimensions = setTimeout(self.createDimensions(), 6000); 
                }
    
            };
    


    
            //Change Depth
            this.debounceTimerDepth;
            var previousValuesDepth = {
                "subdomainDepth_Cabinet_Dimensionsz": document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value,
                "sliderDepth": document.getElementById('sliderDepth').value
            };

            document.getElementById("subButtonMinus_Depth").addEventListener('click', requestChangeDepth); 
            document.getElementById("subButtonPlus_Depth").addEventListener('click', requestChangeDepth); 
            document.getElementById("subdomainDepth_Cabinet_Dimensionsz").addEventListener('change', requestChangeDepth); 
            document.getElementById("sliderDepth").addEventListener('change', requestChangeDepth); 
    
            function requestChangeDepth (event) {
                
                clearTimeout(this.debounceTimerDepth);

                var currentValueDepth = document.getElementById(this.id).value;
                var sliderValueDepth = document.getElementById('sliderDepth').value;
                var dimensionsValueDepth = document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value;
    
                var element = event.target.id.includes("subButton") ? 
                  document.getElementById('subdomainDepth_Cabinet_Dimensionsz') : 
                  event.target;
                
                var max = parseInt(element.max);
                var min = parseInt(element.min);
                var currentValue = parseInt(element.value);

                // Handle max value
                if (currentValue >= max) {
                    showHintPanel("The maximum possible dimension has been reached.");
                    element.value = max;
                }

                // Handle min value
                if (currentValue <= min) {
                    showHintPanel("The minimum possible dimension has been reached.");
                    element.value = min;
                }
    
                if (isNaN(currentValue)) {
                    element.value = previousValuesDepth['subdomainDepth_Cabinet_Dimensionsz'] ;  
                    document.getElementById('sliderDepth').value = previousValuesDepth['sliderDepth'];
                };
    
                if (previousValuesDepth['subdomainDepth_Cabinet_Dimensionsz'] == max && currentValue >= max || previousValuesDepth['subdomainDepth_Cabinet_Dimensionsz']  == min && currentValue <= min) {
                } else {
                    if (checkConditions()) {
                        if (confirm('Are you sure you want to change width? Such change might impact progress within the compartment and some of the product elements might be lost')) {
                            previousValuesDepth[this.id] = currentValueDepth;
                            previousValuesDepth['sliderDepth'] = sliderValueDepth;
                            previousValuesDepth['subdomainDepth_Cabinet_Dimensionsz'] = dimensionsValueDepth;
                            this.debounceTimerDepth = setTimeout(changeDepth(), 500);
                        }else {
                            
                            document.getElementById(this.id).value = previousValuesDepth[this.id];
                            document.getElementById('sliderDepth').value = previousValuesDepth['sliderDepth'];
                            document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value = previousValuesDepth['subdomainDepth_Cabinet_Dimensionsz'];

                            return;
                        }
                    }else {
                        previousValuesDepth[this.id] = currentValueDepth;
                        previousValuesDepth['sliderDepth'] = sliderValueDepth;
                        previousValuesDepth['subdomainDepth_Cabinet_Dimensionsz'] = dimensionsValueDepth;
                        this.debounceTimerDepth = setTimeout(changeDepth(), 500);
                    };
                }
            };
    
    
            function changeDepth() {
            
                var selectedDepth = parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10);
    
    
    
                if (selectedDepth < 25 ) {
                    showHintPanel("The minimum possible dimension has been reached.");
                } 
                else if (selectedDepth > 24 && selectedDepth < 46 ) {
    
                    self.options.shelf.width = selectedDepth;
                    self.scene.remove(self.shelving);
                    self.updatePillarProtoMaterial();
                    self.updateShelfProtoMaterial();
                    self.createShelving();
    
                    switch (self.options.amountOfSections) {

                        case 1:
                            self.scene.remove(self.pillar1,self.pillar2,self.pillar3);
                            self.scene.remove(self.section2_WireframeMesh2_1, self.section3_WireframeMesh3_1, self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection2_1, self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.closeLeftMenu();
    
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
                        break;
    
                        case 2:
                            self.scene.remove(self.pillar2,self.pillar3);
    
                            self.scene.remove(self.section3_WireframeMesh3_1,self.section4_WireframeMesh4_1);
    
                            self.scene.remove(self.RayCastRecieverSection3_1, self.RayCastRecieverSection4_1);
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.closeLeftMenu();
            
                            self.createPillar1();
                            self.createWireframeBack_section1_1();
    
                            self.createRayCastRecieverSection1_1();
    
                            self.createRayCastRecieverSection2_1();
                            self.createWireframeBack_section2_1();
    
                        break;
    
                        case 3:
         
                            self.scene.remove(self.pillar3);
                            self.scene.remove(self.section4_WireframeMesh4_1);
                            self.scene.remove(self.RayCastRecieverSection4_1);
                            
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.closeLeftMenu();
    
                            self.createPillar1();
                            self.createPillar2();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
    
                        break;
    
                        case 4:
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
                            self.closeLeftMenu();
    
                            self.createPillar1();
                            self.createPillar2();
                            self.createPillar3();
    
                            self.createWireframeBack_section1_1();
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
                            self.createWireframeBack_section4_1();
    
                            self.createRayCastRecieverSection1_1();
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
                            self.createRayCastRecieverSection4_1();
    
                        break;
                    }
    
                }

               

    
                //update legs, shadow
                switch (document.getElementById("typeFeet").value) {
                    case "Slider":
                        self.placeSliders();
                    break;
                    case "MetalLegs":
                        self.placeMetallegs();
                    break;
                    case "Plinth":
                        self.createPlinthLegs();
                    break;
                }        
    
                self.createShadow();
                self.createShadowWall();
                self.createTopPlane();
                self.createBackPlate();
    
                self.calculateOutput();
                self.updateDoorButtons();
    
    
                clearTimeout(self.debounceTimerDimensions);
                if (self.options.statusShowDimensions == 1) {
                    self.debounceTimerDimensions = setTimeout(self.createDimensions(), 6000); 
                }
                        
                self.options.statusHideBackPlate = 1;
    
            };
    
    
    
            //Change Recessed Back
            document.getElementById("typeBack").addEventListener('click', function() { 
                self.createBackPlate(); 
            });
    
    
            //Hide Handles
            document.getElementById("hideHandles").addEventListener('click',  function() { hideHandles() });
            
            function hideHandles() { 
                self.options.statusHideHandle = !document.getElementById("hideHandles").checked

                self.scene.traverse(function(child) {
                    if (child.name.includes('doorSection') || child.name.includes('drawerSection')) {

                        for (i = 0; i < child.children.length; i++) {
                            if (child.children[i].name.includes('handle_door')) {
                                child.children[i].visible = !self.options.statusHideHandle;
                            
                            }
                        } 
                    }
                });

            }
      
            function showHintPanel(message, duration = 10000) {
                const hintPanel = document.getElementById("HintPanel");
                hintPanel.style.opacity = 1;
                hintPanel.innerHTML = message;
                setTimeout(function() {
                    hintPanel.style.opacity = 0;
                }, duration);
            }


            //Add horizontal partitions
    
            //S1 section 
            const sectionIds = ["HorPartition1_9", "HorPartition1_8", "HorPartition1_7", "HorPartition1_6","HorPartition1_5", "HorPartition1_4", "HorPartition1_3", "HorPartition1_2", "HorPartition2_9", "HorPartition2_8", "HorPartition2_7", "HorPartition2_6","HorPartition2_5", "HorPartition2_4", "HorPartition2_3", "HorPartition2_2", "HorPartition3_9", "HorPartition3_8", "HorPartition3_7", "HorPartition3_6","HorPartition3_5", "HorPartition3_4", "HorPartition3_3", "HorPartition3_2"];

            sectionIds.forEach(sectionId => {
                const buttonId = `subButtonMinus_${sectionId}`;
                const sectionElement = document.getElementById(`VerticalSection${sectionId}`);
                const buttonElement = document.getElementById(buttonId);
            
                if (buttonElement && sectionElement) {
                    buttonElement.addEventListener('click', function() {
                        sectionElement.style.transform = "translateX(-150%)";
                        sectionElement.style.animation = 'animHideFromLeft 0.4s';
                    });
                }
            });

            const inputsS1 = document.querySelectorAll('input[id^="amount_HorPartition1_"]');
            const buttonsS1 = document.querySelectorAll('[id^="subButtonMinus_HorPartition1_"], [id^="subButtonPlus_HorPartition1_"]');
            
            // Add click event listeners to the buttonsS1
            buttonsS1.forEach(button => {
              button.addEventListener('click', (event) => {
                const targetInputS1 = event.target.parentNode.querySelector('input[type="number"]');
                if (targetInputS1) {
                  if (button.id.startsWith('subButtonMinus')) {
                    targetInputS1.stepDown();
                  } else if (button.id.startsWith('subButtonPlus')) {
                    targetInputS1.stepUp();
                  }
                  updateAllInputsS1(targetInputS1);
                }
              });
            });
            
            // Add change event listeners to all input fields
            inputsS1.forEach(input => {
              input.addEventListener('change', (event) => {
                updateAllInputsS1(event.target);
              });
            });
            


            // Function to update all input fields with the same value
            function updateAllInputsS1(sourceInput) {
                const value = parseInt(sourceInput.value) || 0;
            
                inputsS1.forEach(input => {
                    if (input !== sourceInput) {
                    input.value = value;
                    }
                });
              
                switch (value) {
                  case 0:
                    self.removeHorizontalDividers();
                    self.createWireframeBack_section1_1();
                    self.createRayCastRecieverSection1_1();
                  break;
                  case 1:
                    self.removeHorizontalDividers();  
                    document.getElementById("HorizontalPartition_S1_1").checked = true;
                  
                    createHorizontalPartition_S1_1();

                    if (self.scene.getObjectByName( "horizontalDividerSection1_2", true ) != undefined) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_2", true ));
                        self.scene.remove(self.section1_WireframeMesh1_3);
                        self.scene.remove(self.RayCastRecieverSection1_3);
                    }
            
                    if (self.scene.getObjectByName( "horizontalDividerSection1_3", true ) != undefined) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_3", true ));
                        self.scene.remove(self.section1_WireframeMesh1_4);
                        self.scene.remove(self.RayCastRecieverSection1_4);
                    }
        
                    if (self.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_4", true ));
                        self.scene.remove(self.section1_WireframeMesh1_5);
                        self.scene.remove(self.RayCastRecieverSection1_5);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection1_5", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_5", true ));
                        self.scene.remove(self.section1_WireframeMesh1_6);
                        self.scene.remove(self.RayCastRecieverSection1_6);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_6", true ));
                        self.scene.remove(self.section1_WireframeMesh1_7);
                        self.scene.remove(self.RayCastRecieverSection1_7);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection1_7", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_7", true ));
                        self.scene.remove(self.section1_WireframeMesh1_8);
                        self.scene.remove(self.RayCastRecieverSection1_8);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection1_8", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_8", true ));
                        self.scene.remove(self.section1_WireframeMesh1_9);
                        self.scene.remove(self.RayCastRecieverSection1_9);
                    }

                  break;
                  case 2:
                    if ( self.options.pillar.height - 4.2 - 10 - 1.8 >= 22 && self.options.s1_AmountOfHorDividers == 1) {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();

                    }else if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) < 22 && self.options.s1_AmountOfHorDividers === 1) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition1_${i}`).value = 1;
                        }
                    } else {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();

                        if (self.scene.getObjectByName( "horizontalDividerSection1_3", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_3", true ));
                            self.scene.remove(self.section1_WireframeMesh1_4);
                            self.scene.remove(self.RayCastRecieverSection1_4);
                        }
            
                        if (self.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_4", true ));
                            self.scene.remove(self.section1_WireframeMesh1_5);
                            self.scene.remove(self.RayCastRecieverSection1_5);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection1_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_5", true ));
                            self.scene.remove(self.section1_WireframeMesh1_6);
                            self.scene.remove(self.RayCastRecieverSection1_6);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_6", true ));
                            self.scene.remove(self.section1_WireframeMesh1_7);
                            self.scene.remove(self.RayCastRecieverSection1_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_7", true ));
                            self.scene.remove(self.section1_WireframeMesh1_8);
                            self.scene.remove(self.RayCastRecieverSection1_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_8", true ));
                            self.scene.remove(self.section1_WireframeMesh1_9);
                            self.scene.remove(self.RayCastRecieverSection1_9);
                        }
                    }

                  break;
                  case 3:
                    if ( self.options.pillar.height - 4.2 - 20 - 1.8*2 >= 22 && self.options.s1_AmountOfHorDividers === 2) {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                    }else if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) < 22 && self.options.s1_AmountOfHorDividers === 2) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition1_${i}`).value = 2;
                        }

                    }else {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
            
                        if (self.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_4", true ));
                            self.scene.remove(self.section1_WireframeMesh1_5);
                            self.scene.remove(self.RayCastRecieverSection1_5);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection1_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_5", true ));
                            self.scene.remove(self.section1_WireframeMesh1_6);
                            self.scene.remove(self.RayCastRecieverSection1_6);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_6", true ));
                            self.scene.remove(self.section1_WireframeMesh1_7);
                            self.scene.remove(self.RayCastRecieverSection1_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_7", true ));
                            self.scene.remove(self.section1_WireframeMesh1_8);
                            self.scene.remove(self.RayCastRecieverSection1_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_8", true ));
                            self.scene.remove(self.section1_WireframeMesh1_9);
                            self.scene.remove(self.RayCastRecieverSection1_9);
                        }
                    }
                  break;
                  case 4:
                    if ( self.options.pillar.height - 4.2 - 30 - 1.8*3 >= 22 && self.options.s1_AmountOfHorDividers === 3) {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();
                    } else if ( self.options.pillar.height - 4.2 - 30 - 1.8*3 < 22 && self.options.s1_AmountOfHorDividers === 3) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition1_${i}`).value = 3;
                        }
                    }
                    else {

                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();

                        if (self.scene.getObjectByName( "horizontalDividerSection1_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_5", true ));
                            self.scene.remove(self.section1_WireframeMesh1_6);
                            self.scene.remove(self.RayCastRecieverSection1_6);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_6", true ));
                            self.scene.remove(self.section1_WireframeMesh1_7);
                            self.scene.remove(self.RayCastRecieverSection1_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_7", true ));
                            self.scene.remove(self.section1_WireframeMesh1_8);
                            self.scene.remove(self.RayCastRecieverSection1_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_8", true ));
                            self.scene.remove(self.section1_WireframeMesh1_9);
                            self.scene.remove(self.RayCastRecieverSection1_9);
                        }
                    }
                  break;
                  case 5:
                    if ( self.options.pillar.height - 4.2 - 40 - 1.8*4 >= 22 && self.options.s1_AmountOfHorDividers === 4) {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();
                        createHorizontalPartition_S1_5();

                    } else if ( self.options.pillar.height - 4.2 - 40 - 1.8*4 < 22 && self.options.s1_AmountOfHorDividers === 4) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition1_${i}`).value = 4;
                        }
                    }
                    else {
                        
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();
                        createHorizontalPartition_S1_5();

                        if (self.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_6", true ));
                            self.scene.remove(self.section1_WireframeMesh1_7);
                            self.scene.remove(self.RayCastRecieverSection1_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_7", true ));
                            self.scene.remove(self.section1_WireframeMesh1_8);
                            self.scene.remove(self.RayCastRecieverSection1_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_8", true ));
                            self.scene.remove(self.section1_WireframeMesh1_9);
                            self.scene.remove(self.RayCastRecieverSection1_9);
                        }
                    }
                  break;
                  case 6:
                    if ( self.options.pillar.height - 4.2 - 50 - 1.8*5 >= 22 && self.options.s1_AmountOfHorDividers === 5) {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();
                        createHorizontalPartition_S1_5();
                        createHorizontalPartition_S1_6();

                    } else if ( self.options.pillar.height - 4.2 - 50 - 1.8*5 < 22 && self.options.s1_AmountOfHorDividers === 5) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition1_${i}`).value = 5;
                        }
                    }
                    else {

                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();
                        createHorizontalPartition_S1_5();
                        createHorizontalPartition_S1_6();
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_7", true ));
                            self.scene.remove(self.section1_WireframeMesh1_8);
                            self.scene.remove(self.RayCastRecieverSection1_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection1_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_8", true ));
                            self.scene.remove(self.section1_WireframeMesh1_9);
                            self.scene.remove(self.RayCastRecieverSection1_9);
                        }
                    }
                  break;
                  case 7:
                    if ( self.options.pillar.height - 4.2 - 60 - 1.8*6 >= 22 && self.options.s1_AmountOfHorDividers === 6) {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();
                        createHorizontalPartition_S1_5();
                        createHorizontalPartition_S1_6();
                        createHorizontalPartition_S1_7();

                    } else if ( self.options.pillar.height - 4.2 - 60 - 1.8*6 < 22 && self.options.s1_AmountOfHorDividers === 6) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition1_${i}`).value = 6;
                        }
                    }
                    else {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();
                        createHorizontalPartition_S1_5();
                        createHorizontalPartition_S1_6();
                        createHorizontalPartition_S1_7();


                        if (self.scene.getObjectByName( "horizontalDividerSection1_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_8", true ));
                            self.scene.remove(self.section1_WireframeMesh1_9);
                            self.scene.remove(self.RayCastRecieverSection1_9);
                        }
                    }
                  break;
                  case 8:
                    if ( self.options.pillar.height - 4.2 - 70 - 1.8*7 >= 22 && self.options.s1_AmountOfHorDividers === 7) {
                        self.removeHorizontalDividers();
                        document.getElementById("HorizontalPartition_S1_1").checked = true;

                        createHorizontalPartition_S1_1();
                        createHorizontalPartition_S1_2();
                        createHorizontalPartition_S1_3();
                        createHorizontalPartition_S1_4();
                        createHorizontalPartition_S1_5();
                        createHorizontalPartition_S1_6();
                        createHorizontalPartition_S1_7();
                        createHorizontalPartition_S1_8();

                    } else if ( self.options.pillar.height - 4.2 - 70 - 1.8*6 < 22 && self.options.s1_AmountOfHorDividers === 7) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition1_${i}`).value = 7;
                        }
                    }
                    else {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition1_${i}`).value = 8;
                        }
                    }
                  break;
                  
                }

                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                self.updateDoorButtons();
            }
    

            //1_1 section    
            document.getElementById("HorizontalPartition_S1_1").addEventListener('click', function() { 
                if (document.getElementById("HorizontalPartition_S1_1").checked == true) {
                    self.removeHorizontalDividers();
                    document.getElementById("HorizontalPartition_S1_1").checked = true;

                    createHorizontalPartition_S1_1(); 
                    document.getElementById('amount_HorPartition1_1').value = 1;
                    document.getElementById('amount_HorPartition1_2').value = 1;
                } 
                else { 

                    self.removeHorizontalDividers();
                    self.createWireframeBack_section1_1();
                    self.createRayCastRecieverSection1_1();
                }

                    
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                self.updateDoorButtons();
    
            });

            function handleRemoveHorizontalPartitionS1(partitionId) {
                const checkbox = document.getElementById(`RemoveHorizontalPartition_S1_${partitionId}`);
                if (!checkbox) {
                    return;
                }
            
                checkbox.addEventListener('click', function() {
                    if (checkbox.checked) {
                        return;
                    }
            
                    self.removeHorizontalDividers();
                    self.createWireframeBack_section1_1();
                    self.createRayCastRecieverSection1_1();
            
                    const verticalSection = document.getElementById(`VerticalSection1_${partitionId}`);
                    if (verticalSection) {
                        verticalSection.style.transform = "translateX(-150%)";
                        verticalSection.style.animation = 'animHideFromLeft 0.4s';
                    }
            
                    if (self.options.statusShowDimensions === 1) {
                        self.createDimensions();
                    }
                    self.updateDoorButtons();
                });
            }
            
            for (let i = 2; i <= 7; i++) {
                handleRemoveHorizontalPartitionS1(i);
            }



            function createHorizontalPartition_S1_1(savedCorrection) {            
        
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_1", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createHorizontalDividerSection1_1('savedURL');
                } else {
                    self.createHorizontalDividerSection1_1();
                }

                self.scene.getObjectByName('horizontalDividerSection1_1').material.map = self.textures[self.options.shelf.texture].map;

                self.options.s1_AmountOfHorDividers = 1;



                amountHorizontalPartition_S1_1.style.display = "flex";
                moveHorizontalPartition1_1_UpButton.style.display = "block";
                moveHorizontalPartition1_1_DownButton.style.display = "inline-block";



                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S1_1').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S1_1')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S1_2').innerHTML = Math.floor(self.params.get('ovHHP_S1_2')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S1_1").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S1_2").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s1_AmountOfHorDividers ) ) +"cm";
                }
                
                

                self.updateDoorButtons();
                self.calculateOutput();

                    
                self.options.s1_horizDividStatus = 1;
            };
    
            // section 1_2               
            function createHorizontalPartition_S1_2(savedCorrection) {    

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_2", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createHorizontalDividerSection1_2('savedURL');
                } else {
                    self.createHorizontalDividerSection1_2();
                }

                self.scene.getObjectByName('horizontalDividerSection1_2').material.map = self.textures[self.options.shelf.texture].map;
                self.options.s1_AmountOfHorDividers = 2;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S1_2').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S1_2')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S1_3').innerHTML = Math.floor(self.params.get('ovHHP_S1_3')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S1_2").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S1_3").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s1_AmountOfHorDividers ) ) +"cm";
                }


                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s1_2_horizDividStatus = 1;
            };        
    
            // section 1_3                    
            function createHorizontalPartition_S1_3(savedCorrection) {
        
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_3", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection1_3('savedURL');
                } else {
                    self.createhorizontalDividerSection1_3();
                }

                self.scene.getObjectByName('horizontalDividerSection1_3').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s1_AmountOfHorDividers = 3;

                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S1_4').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S1_4')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S1_3').innerHTML = Math.floor(self.params.get('ovHHP_S1_3')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S1_3").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S1_4").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s1_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();



                self.options.s1_3_horizDividStatus = 1;
    
            }; 
             
            // section 1_4                    
            function createHorizontalPartition_S1_4(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_4", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection1_4('savedURL');
                } else {
                    self.createhorizontalDividerSection1_4();
                }

                self.scene.getObjectByName('horizontalDividerSection1_4').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s1_AmountOfHorDividers = 4;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S1_5').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S1_5')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S1_4').innerHTML = Math.floor(self.params.get('ovHHP_S1_4')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S1_4").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S1_5").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s1_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s1_4_horizDividStatus = 1;
    
            };   
            
            // section 1_5                   
            function createHorizontalPartition_S1_5(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_5", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection1_5('savedURL');
                } else {
                    self.createhorizontalDividerSection1_5();
                }

                self.scene.getObjectByName('horizontalDividerSection1_5').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s1_AmountOfHorDividers = 5;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S1_5').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S1_5')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S1_5').innerHTML = Math.floor(self.params.get('ovHHP_S1_5')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S1_5").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S1_6").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s1_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s1_5_horizDividStatus = 1;
    
            };   

            // section 1_6                   
            function createHorizontalPartition_S1_6(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_6", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection1_6('savedURL');
                } else {
                    self.createhorizontalDividerSection1_6();
                }

                self.scene.getObjectByName('horizontalDividerSection1_6').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s1_AmountOfHorDividers = 6;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S1_6').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S1_6')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S1_6').innerHTML = Math.floor(self.params.get('ovHHP_S1_6')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S1_6").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S1_7").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s1_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s1_6_horizDividStatus = 1;
    
            }; 
            
          
    









            ////2 section    
            const inputsS2 = document.querySelectorAll('input[id^="amount_HorPartition2_"]');
            const buttonsS2 = document.querySelectorAll('[id^="subButtonMinus_HorPartition2_"], [id^="subButtonPlus_HorPartition2_"]');
            
            // Add click event listeners to the buttonsS1
            buttonsS2.forEach(button => {
              button.addEventListener('click', (event) => {
                const targetInputS2 = event.target.parentNode.querySelector('input[type="number"]');
                if (targetInputS2) {
                  if (button.id.startsWith('subButtonMinus')) {
                    targetInputS2.stepDown();
                  } else if (button.id.startsWith('subButtonPlus')) {
                    targetInputS2.stepUp();
                  }
                  updateAllInputsS2(targetInputS2);
                }
              });
            });
            
            // Add change event listeners to all input fields
            inputsS2.forEach(input => {
              input.addEventListener('change', (event) => {
                updateAllInputsS2(event.target);
              });
            });
            

            // Function to update all input fields with the same value
            function updateAllInputsS2(sourceInput) {
                const value = parseInt(sourceInput.value) || 0;
            
                inputsS2.forEach(input => {
                    if (input !== sourceInput) {
                    input.value = value;
                    }
                });

              
                switch (value) {
                  case 0:
                    self.removeHorizontalDividersS2();
                    self.createWireframeBack_section2_1();
                    self.createRayCastRecieverSection2_1();
                  break;
                  case 1:
                    self.removeHorizontalDividersS2();
                    document.getElementById("HorizontalPartition_S2_1").checked = true;

                    createHorizontalPartition_S2_1();

                    if (self.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_2", true ));
                        self.scene.remove(self.section2_WireframeMesh2_3);
                        self.scene.remove(self.RayCastRecieverSection2_3);
                    }
            
                    if (self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_3", true ));
                        self.scene.remove(self.section2_WireframeMesh2_4);
                        self.scene.remove(self.RayCastRecieverSection2_4);
                    }
        
                    if (self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_4", true ));
                        self.scene.remove(self.section2_WireframeMesh2_5);
                        self.scene.remove(self.RayCastRecieverSection2_5);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection2_5", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_5", true ));
                        self.scene.remove(self.section2_WireframeMesh2_6);
                        self.scene.remove(self.RayCastRecieverSection2_6);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_6", true ));
                        self.scene.remove(self.section2_WireframeMesh2_7);
                        self.scene.remove(self.RayCastRecieverSection2_7);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection2_7", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_7", true ));
                        self.scene.remove(self.section2_WireframeMesh2_8);
                        self.scene.remove(self.RayCastRecieverSection2_8);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection2_8", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_8", true ));
                        self.scene.remove(self.section2_WireframeMesh2_9);
                        self.scene.remove(self.RayCastRecieverSection2_9);
                    }

                  break;
                  case 2:
                    if (self.options.pillar.height - 4.2 - 10 - 1.8 >= 22 && self.options.s2_AmountOfHorDividers == 1) {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();

                    }else if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) < 22 && self.options.s2_AmountOfHorDividers == 1) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition2_${i}`).value = 1;
                        }
                    } else {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();

                        if (self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_3", true ));
                            self.scene.remove(self.section2_WireframeMesh2_4);
                            self.scene.remove(self.RayCastRecieverSection2_4);
                        }
            
                        if (self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_4", true ));
                            self.scene.remove(self.section2_WireframeMesh2_5);
                            self.scene.remove(self.RayCastRecieverSection2_5);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection2_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_5", true ));
                            self.scene.remove(self.section2_WireframeMesh2_6);
                            self.scene.remove(self.RayCastRecieverSection2_6);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_6", true ));
                            self.scene.remove(self.section2_WireframeMesh2_7);
                            self.scene.remove(self.RayCastRecieverSection2_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_7", true ));
                            self.scene.remove(self.section2_WireframeMesh2_8);
                            self.scene.remove(self.RayCastRecieverSection2_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_8", true ));
                            self.scene.remove(self.section2_WireframeMesh2_9);
                            self.scene.remove(self.RayCastRecieverSection2_9);
                        }
                    }

                  break;
                  case 3:
                    if (self.options.pillar.height - 4.2 - 20 - 1.8*2  >= 22 && self.options.s2_AmountOfHorDividers == 2) {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                    }else if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) < 22 && self.options.s2_AmountOfHorDividers == 2) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition2_${i}`).value = 2;
                        }

                    }else {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
            
                        if (self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_4", true ));
                            self.scene.remove(self.section2_WireframeMesh2_5);
                            self.scene.remove(self.RayCastRecieverSection2_5);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection2_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_5", true ));
                            self.scene.remove(self.section2_WireframeMesh2_6);
                            self.scene.remove(self.RayCastRecieverSection2_6);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_6", true ));
                            self.scene.remove(self.section2_WireframeMesh2_7);
                            self.scene.remove(self.RayCastRecieverSection2_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_7", true ));
                            self.scene.remove(self.section2_WireframeMesh2_8);
                            self.scene.remove(self.RayCastRecieverSection2_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_8", true ));
                            self.scene.remove(self.section2_WireframeMesh2_9);
                            self.scene.remove(self.RayCastRecieverSection2_9);
                        }
                    }
                  break;
                  case 4:
                    if ( self.options.pillar.height - 4.2 - 30 - 1.8*3 >= 22 && self.options.s2_AmountOfHorDividers === 3) {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();

                    } else if ( self.options.pillar.height - 4.2 - 30 - 1.8*3 < 22 && self.options.s2_AmountOfHorDividers === 3) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition2_${i}`).value = 3;
                        }
                    } else {
                        
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();

                        if (self.scene.getObjectByName( "horizontalDividerSection2_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_5", true ));
                            self.scene.remove(self.section2_WireframeMesh2_6);
                            self.scene.remove(self.RayCastRecieverSection2_6);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_6", true ));
                            self.scene.remove(self.section2_WireframeMesh2_7);
                            self.scene.remove(self.RayCastRecieverSection2_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_7", true ));
                            self.scene.remove(self.section2_WireframeMesh2_8);
                            self.scene.remove(self.RayCastRecieverSection2_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_8", true ));
                            self.scene.remove(self.section2_WireframeMesh2_9);
                            self.scene.remove(self.RayCastRecieverSection2_9);
                        }
                    }
                  break;
                  case 5:
                    if ( self.options.pillar.height - 4.2 - 40 - 1.8*4 >= 22 && self.options.s2_AmountOfHorDividers === 4) {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();
                        createHorizontalPartition_S2_5();

                    } else if ( self.options.pillar.height - 4.2 - 40 - 1.8*4 < 22 && self.options.s2_AmountOfHorDividers === 4) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition2_${i}`).value = 4;
                        }
                    }
                    else {
                        
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();
                        createHorizontalPartition_S2_5();

                        if (self.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_6", true ));
                            self.scene.remove(self.section2_WireframeMesh2_7);
                            self.scene.remove(self.RayCastRecieverSection2_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_7", true ));
                            self.scene.remove(self.section2_WireframeMesh2_8);
                            self.scene.remove(self.RayCastRecieverSection2_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_8", true ));
                            self.scene.remove(self.section2_WireframeMesh2_9);
                            self.scene.remove(self.RayCastRecieverSection2_9);
                        }
                    }
                  break;
                  case 6:
                    if ( self.options.pillar.height - 4.2 - 50 - 1.8*5 >= 22 && self.options.s2_AmountOfHorDividers === 5) {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();
                        createHorizontalPartition_S2_5();
                        createHorizontalPartition_S2_6();

                    } else if ( self.options.pillar.height - 4.2 - 50 - 1.8*5 < 22 && self.options.s2_AmountOfHorDividers === 5) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition2_${i}`).value = 5;
                        }
                    }
                    else {

                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();
                        createHorizontalPartition_S2_5();
                        createHorizontalPartition_S2_6();
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_7", true ));
                            self.scene.remove(self.section2_WireframeMesh2_8);
                            self.scene.remove(self.RayCastRecieverSection2_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection2_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_8", true ));
                            self.scene.remove(self.section2_WireframeMesh2_9);
                            self.scene.remove(self.RayCastRecieverSection2_9);
                        }
                    }
                  break;
                  case 7:
                    if ( self.options.pillar.height - 4.2 - 60 - 1.8*6 >= 22 && self.options.s2_AmountOfHorDividers === 6) {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();
                        createHorizontalPartition_S2_5();
                        createHorizontalPartition_S2_6();
                        createHorizontalPartition_S2_7();

                    } else if ( self.options.pillar.height - 4.2 - 60 - 1.8*6 < 22 && self.options.s2_AmountOfHorDividers === 6) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition2_${i}`).value = 6;
                        }
                    }
                    else {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();
                        createHorizontalPartition_S2_5();
                        createHorizontalPartition_S2_6();
                        createHorizontalPartition_S2_7();

                        if (self.scene.getObjectByName( "horizontalDividerSection2_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_8", true ));
                            self.scene.remove(self.section2_WireframeMesh2_9);
                            self.scene.remove(self.RayCastRecieverSection2_9);
                        }
                    }
                  break;
                  case 8:
                    if ( self.options.pillar.height - 4.2 - 70 - 1.8*7 >= 22 && self.options.s2_AmountOfHorDividers === 7) {
                        self.removeHorizontalDividersS2();
                        document.getElementById("HorizontalPartition_S2_1").checked = true;

                        createHorizontalPartition_S2_1();
                        createHorizontalPartition_S2_2();
                        createHorizontalPartition_S2_3();
                        createHorizontalPartition_S2_4();
                        createHorizontalPartition_S2_5();
                        createHorizontalPartition_S2_6();
                        createHorizontalPartition_S2_7();
                        createHorizontalPartition_S2_8();


                    } else if ( self.options.pillar.height - 4.2 - 70 - 1.8*6 < 22 && self.options.s2_AmountOfHorDividers === 7) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition2_${i}`).value = 7;
                        }
                    }
                    else {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition2_${i}`).value = 8;
                        }
                    }
                  break;

                }

                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                self.updateDoorButtons();
            }
    

            ////2_1 section    
            document.getElementById("HorizontalPartition_S2_1").addEventListener('click', function() { 
                if (document.getElementById("HorizontalPartition_S2_1").checked == true) {
                    self.removeHorizontalDividersS2();
                    document.getElementById("HorizontalPartition_S2_1").checked = true;

                    createHorizontalPartition_S2_1(); 
                    document.getElementById('amount_HorPartition2_1').value = 1;
                    document.getElementById('amount_HorPartition2_2').value = 1;
                } 
                else { 

                    self.removeHorizontalDividersS2();
                    self.createWireframeBack_section2_1();
                    self.createRayCastRecieverSection2_1();
                }

                    
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                self.updateDoorButtons();
    
            });

            function handleRemoveHorizontalPartitionS2(partitionId) {
                const checkbox = document.getElementById(`RemoveHorizontalPartition_S2_${partitionId}`);
                if (!checkbox) {
                    return;
                }
            
                checkbox.addEventListener('click', function() {
                    if (checkbox.checked) {
                        return;
                    }
            
                    self.removeHorizontalDividersS2();
                    self.createWireframeBack_section2_1();
                    self.createRayCastRecieverSection2_1();
            
                    const verticalSection = document.getElementById(`VerticalSection2_${partitionId}`);
                    if (verticalSection) {
                        verticalSection.style.transform = "translateX(-150%)";
                        verticalSection.style.animation = 'animHideFromLeft 0.4s';
                    }
            
                    if (self.options.statusShowDimensions === 1) {
                        self.createDimensions();
                    }
                    self.updateDoorButtons();
                });
            }
            
            for (let i = 2; i <= 7; i++) {
                handleRemoveHorizontalPartitionS2(i);
            }
            
            
            function createHorizontalPartition_S2_1(savedCorrection) {            
        
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_1", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createHorizontalDividerSection2_1('savedURL');
                } else {
                    self.createHorizontalDividerSection2_1();
                }

                self.scene.getObjectByName('horizontalDividerSection2_1').material.map = self.textures[self.options.shelf.texture].map;

                self.options.s2_AmountOfHorDividers = 1;



                amountHorizontalPartition_S2_1.style.display = "flex";
                moveHorizontalPartition2_1_UpButton.style.display = "block";
                moveHorizontalPartition2_1_DownButton.style.display = "inline-block";


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S2_1').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S2_1')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S2_2').innerHTML = Math.floor(self.params.get('ovHHP_S2_2')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S2_1").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S2_2").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s2_AmountOfHorDividers ) ) +"cm";
                }
                
                

                self.updateDoorButtons();
                self.calculateOutput();

                    
                self.options.s2_horizDividStatus = 1;
            };
    
            // section 2_2               
            function createHorizontalPartition_S2_2(savedCorrection) {    

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_2", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createHorizontalDividerSection2_2('savedURL');
                } else {
                    self.createHorizontalDividerSection2_2();
                }

                self.scene.getObjectByName('horizontalDividerSection2_2').material.map = self.textures[self.options.shelf.texture].map;
                self.options.s2_AmountOfHorDividers = 2;

                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S2_2').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S2_2')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S2_3').innerHTML = Math.floor(self.params.get('ovHHP_S2_3')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S2_2").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S2_3").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s2_AmountOfHorDividers ) ) +"cm";
                }


                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s2_2_horizDividStatus = 1;
            };        
    
            // section 2_3                    
            function createHorizontalPartition_S2_3(savedCorrection) {
        
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_3", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection2_3('savedURL');
                } else {
                    self.createhorizontalDividerSection2_3();
                }

                self.scene.getObjectByName('horizontalDividerSection2_3').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s2_AmountOfHorDividers = 3;

                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S2_4').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S2_4')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S2_3').innerHTML = Math.floor(self.params.get('ovHHP_S2_3')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S2_3").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S2_4").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s2_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();



                self.options.s2_3_horizDividStatus = 1;
    
            }; 
             
            // section 2_4                    
            function createHorizontalPartition_S2_4(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_4", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection2_4('savedURL');
                } else {
                    self.createhorizontalDividerSection2_4();
                }

                self.scene.getObjectByName('horizontalDividerSection2_4').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s2_AmountOfHorDividers = 4;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S2_5').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S2_5')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S2_4').innerHTML = Math.floor(self.params.get('ovHHP_S2_4')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S2_4").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S2_5").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s2_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s2_4_horizDividStatus = 1;
    
            };    
            
            // section 2_5                   
            function createHorizontalPartition_S2_5(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_5", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection2_5('savedURL');
                } else {
                    self.createhorizontalDividerSection2_5();
                }

                self.scene.getObjectByName('horizontalDividerSection2_5').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s2_AmountOfHorDividers = 5;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S2_5').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S2_5')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S2_5').innerHTML = Math.floor(self.params.get('ovHHP_S2_5')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S2_5").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S2_6").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s2_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s2_5_horizDividStatus = 1;
    
            };   

            // section 2_6                   
            function createHorizontalPartition_S2_6(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_6", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection2_6('savedURL');
                } else {
                    self.createhorizontalDividerSection2_6();
                }

                self.scene.getObjectByName('horizontalDividerSection2_6').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s2_AmountOfHorDividers = 6;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S2_6').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S2_6')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S2_6').innerHTML = Math.floor(self.params.get('ovHHP_S2_6')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S2_6").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S2_7").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s2_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s2_6_horizDividStatus = 1;
    
            }; 
            
            // section 2_7                   
            function createHorizontalPartition_S2_7(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_7", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection2_7('savedURL');
                } else {
                    self.createhorizontalDividerSection2_7();
                }

                self.scene.getObjectByName('horizontalDividerSection2_7').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s2_AmountOfHorDividers = 7;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S2_7').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S2_7')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S2_7').innerHTML = Math.floor(self.params.get('ovHHP_S2_7')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S2_7").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S2_8").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s2_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s2_7_horizDividStatus = 1;
    
            }; 

            // section 2_8                   
            function createHorizontalPartition_S2_8(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_8", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection2_8('savedURL');
                } else {
                    self.createhorizontalDividerSection2_8();
                }

                self.scene.getObjectByName('horizontalDividerSection2_8').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s2_AmountOfHorDividers = 8;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S2_8').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S2_8')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S2_8').innerHTML = Math.floor(self.params.get('ovHHP_S2_8')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S2_8").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S2_9").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0])  - parseFloat(document.getElementById('Height_HorizontalPartition_S2_8').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s2_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s2_8_horizDividStatus = 1;
    
            }; 
    
    
    
            ////3 section    
            const inputsS3 = document.querySelectorAll('input[id^="amount_HorPartition3_"]');
            const buttonsS3 = document.querySelectorAll('[id^="subButtonMinus_HorPartition3_"], [id^="subButtonPlus_HorPartition3_"]');
            
            // Add click event listeners to the buttonsS3
            buttonsS3.forEach(button => {
              button.addEventListener('click', (event) => {
                const targetInputS3 = event.target.parentNode.querySelector('input[type="number"]');
                if (targetInputS3) {
                  if (button.id.startsWith('subButtonMinus')) {
                    targetInputS3.stepDown();
                  } else if (button.id.startsWith('subButtonPlus')) {
                    targetInputS3.stepUp();
                  }
                  updateAllInputsS3(targetInputS3);
                }
              });
            });
            
            // Add change event listeners to all input fields
            inputsS3.forEach(input => {
              input.addEventListener('change', (event) => {
                updateAllInputsS3(event.target);
              });
            });
            

            // Function to update all input fields with the same value
            function updateAllInputsS3(sourceInput) {
                const value = parseInt(sourceInput.value) || 0;
            
                inputsS3.forEach(input => {
                    if (input !== sourceInput) {
                    input.value = value;
                    }
                });

              
                switch (value) {
                  case 0:
                    self.removeHorizontalDividersS3();
                    self.createWireframeBack_section3_1();
                    self.createRayCastRecieverSection3_1();
                  break;
                  case 1:
                    self.removeHorizontalDividersS3();
                    document.getElementById("HorizontalPartition_S3_1").checked = true;

                    createHorizontalPartition_S3_1();

                    if (self.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_2", true ));
                        self.scene.remove(self.section3_WireframeMesh3_3);
                        self.scene.remove(self.RayCastRecieverSection3_3);
                    }
            
                    if (self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_3", true ));
                        self.scene.remove(self.section3_WireframeMesh3_4);
                        self.scene.remove(self.RayCastRecieverSection3_4);
                    }
        
                    if (self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_4", true ));
                        self.scene.remove(self.section3_WireframeMesh3_5);
                        self.scene.remove(self.RayCastRecieverSection3_5);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection3_5", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_5", true ));
                        self.scene.remove(self.section3_WireframeMesh3_6);
                        self.scene.remove(self.RayCastRecieverSection3_6);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_6", true ));
                        self.scene.remove(self.section3_WireframeMesh3_7);
                        self.scene.remove(self.RayCastRecieverSection3_7);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection3_7", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_7", true ));
                        self.scene.remove(self.section3_WireframeMesh3_8);
                        self.scene.remove(self.RayCastRecieverSection3_8);
                    }

                    if (self.scene.getObjectByName( "horizontalDividerSection3_8", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_8", true ));
                        self.scene.remove(self.section3_WireframeMesh3_9);
                        self.scene.remove(self.RayCastRecieverSection3_9);
                    }

                  break;
                  case 2:
                    if (self.options.pillar.height - 4.2 - 10 - 1.8 >= 22 && self.options.s3_AmountOfHorDividers == 1) {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();

                    }else if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) < 22 && self.options.s3_AmountOfHorDividers == 1) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition3_${i}`).value = 1;
                        }
                    } else {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();

                        if (self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_3", true ));
                            self.scene.remove(self.section3_WireframeMesh3_4);
                            self.scene.remove(self.RayCastRecieverSection3_4);
                        }
            
                        if (self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_4", true ));
                            self.scene.remove(self.section3_WireframeMesh3_5);
                            self.scene.remove(self.RayCastRecieverSection3_5);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection3_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_5", true ));
                            self.scene.remove(self.section3_WireframeMesh3_6);
                            self.scene.remove(self.RayCastRecieverSection3_6);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_6", true ));
                            self.scene.remove(self.section3_WireframeMesh3_7);
                            self.scene.remove(self.RayCastRecieverSection3_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection3_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_7", true ));
                            self.scene.remove(self.section3_WireframeMesh3_8);
                            self.scene.remove(self.RayCastRecieverSection3_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection3_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_8", true ));
                            self.scene.remove(self.section3_WireframeMesh3_9);
                            self.scene.remove(self.RayCastRecieverSection3_9);
                        }
                    }

                  break;
                  case 3:
                    if (self.options.pillar.height - 4.2 - 20 - 1.8*2  >= 22 && self.options.s3_AmountOfHorDividers == 2) {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                    }else if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) < 22 && self.options.s3_AmountOfHorDividers == 2) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition3_${i}`).value = 2;
                        }

                    }else {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
            
                        if (self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_4", true ));
                            self.scene.remove(self.section3_WireframeMesh3_5);
                            self.scene.remove(self.RayCastRecieverSection3_5);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection3_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_5", true ));
                            self.scene.remove(self.section3_WireframeMesh3_6);
                            self.scene.remove(self.RayCastRecieverSection3_6);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_6", true ));
                            self.scene.remove(self.section3_WireframeMesh3_7);
                            self.scene.remove(self.RayCastRecieverSection3_7);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection3_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_7", true ));
                            self.scene.remove(self.section3_WireframeMesh3_8);
                            self.scene.remove(self.RayCastRecieverSection3_8);
                        }
    
                        if (self.scene.getObjectByName( "horizontalDividerSection3_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_8", true ));
                            self.scene.remove(self.section3_WireframeMesh3_9);
                            self.scene.remove(self.RayCastRecieverSection3_9);
                        }
                    }
                  break;
                  case 4:
                    if ( self.options.pillar.height - 4.2 - 30 - 1.8*3 >= 22 && self.options.s3_AmountOfHorDividers === 3) {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();
                    }else if ( self.options.pillar.height - 4.2 - 30 - 1.8*3 < 22 && self.options.s3_AmountOfHorDividers === 4 ) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition3_${i}`).value = 3;
                        }
                    }else {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();

                        if (self.scene.getObjectByName( "horizontalDividerSection3_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_5", true ));
                            self.scene.remove(self.section2_WireframeMesh3_6);
                            self.scene.remove(self.RayCastRecieverSection3_6);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_6", true ));
                            self.scene.remove(self.section2_WireframeMesh3_7);
                            self.scene.remove(self.RayCastRecieverSection3_7);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection3_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_7", true ));
                            self.scene.remove(self.section2_WireframeMesh3_8);
                            self.scene.remove(self.RayCastRecieverSection3_8);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection3_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_8", true ));
                            self.scene.remove(self.section2_WireframeMesh3_9);
                            self.scene.remove(self.RayCastRecieverSection3_9);
                        }
                    }
                  break;
                  case 5:
                    if ( self.options.pillar.height - 4.2 - 40 - 1.8*4 >= 22 && self.options.s3_AmountOfHorDividers === 4) {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();
                        createHorizontalPartition_S3_5();

                    } else if ( self.options.pillar.height - 4.2 - 40 - 1.8*4 < 22 && self.options.s3_AmountOfHorDividers === 4) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition3_${i}`).value = 4;
                        }
                    }
                    else {
                        
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();
                        createHorizontalPartition_S3_5();

                        if (self.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_6", true ));
                            self.scene.remove(self.section2_WireframeMesh3_7);
                            self.scene.remove(self.RayCastRecieverSection3_7);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection3_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_7", true ));
                            self.scene.remove(self.section3_WireframeMesh3_8);
                            self.scene.remove(self.RayCastRecieverSection3_8);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection3_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_8", true ));
                            self.scene.remove(self.section3_WireframeMesh3_9);
                            self.scene.remove(self.RayCastRecieverSection3_9);
                        }
                    }
                  break;
                  case 6:
                    if ( self.options.pillar.height - 4.2 - 50 - 1.8*5 >= 22 && self.options.s3_AmountOfHorDividers === 5) {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();
                        createHorizontalPartition_S3_5();
                        createHorizontalPartition_S3_6();

                    } else if ( self.options.pillar.height - 4.2 - 50 - 1.8*5 < 22 && self.options.s3_AmountOfHorDividers === 5) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition3_${i}`).value = 5;
                        }
                    }
                    else {

                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();
                        createHorizontalPartition_S3_5();
                        createHorizontalPartition_S3_6();

                        if (self.scene.getObjectByName( "horizontalDividerSection3_7", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_7", true ));
                            self.scene.remove(self.section3_WireframeMesh3_8);
                            self.scene.remove(self.RayCastRecieverSection3_8);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection3_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_8", true ));
                            self.scene.remove(self.section3_WireframeMesh3_9);
                            self.scene.remove(self.RayCastRecieverSection3_9);
                        }
                    }
                  break;
                  case 7:
                    if ( self.options.pillar.height - 4.2 - 60 - 1.8*6 >= 22 && self.options.s3_AmountOfHorDividers === 6) {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();
                        createHorizontalPartition_S3_5();
                        createHorizontalPartition_S3_6();
                        createHorizontalPartition_S3_7();

                    } else if ( self.options.pillar.height - 4.2 - 60 - 1.8*6 < 22 && self.options.s3_AmountOfHorDividers === 6) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition3_${i}`).value = 6;
                        }
                    }
                    else {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();
                        createHorizontalPartition_S3_5();
                        createHorizontalPartition_S3_6();
                        createHorizontalPartition_S3_7();

                        if (self.scene.getObjectByName( "horizontalDividerSection3_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_8", true ));
                            self.scene.remove(self.section3_WireframeMesh3_9);
                            self.scene.remove(self.RayCastRecieverSection3_9);
                        }
                    }
                  break;
                  case 8:
                    if ( self.options.pillar.height - 4.2 - 70 - 1.8*7 >= 22 && self.options.s3_AmountOfHorDividers === 7) {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S3_1").checked = true;

                        createHorizontalPartition_S3_1();
                        createHorizontalPartition_S3_2();
                        createHorizontalPartition_S3_3();
                        createHorizontalPartition_S3_4();
                        createHorizontalPartition_S3_5();
                        createHorizontalPartition_S3_6();
                        createHorizontalPartition_S3_7();
                        createHorizontalPartition_S3_8();


                    } else if ( self.options.pillar.height - 4.2 - 70 - 1.8*6 < 22 && self.options.s3_AmountOfHorDividers === 7) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition3_${i}`).value = 7;
                        }
                    }
                    else {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition3_${i}`).value = 8;
                        }
                    }
                  break;
                }

                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                self.updateDoorButtons();
            }
    

            ////3_1 section    
            document.getElementById("HorizontalPartition_S3_1").addEventListener('click', function() { 
                if (document.getElementById("HorizontalPartition_S3_1").checked == true) {
                    self.removeHorizontalDividersS3();
                    document.getElementById("HorizontalPartition_S3_1").checked = true;

                    createHorizontalPartition_S3_1(); 
                    document.getElementById('amount_HorPartition3_1').value = 1;
                    document.getElementById('amount_HorPartition3_2').value = 1;
                } 
                else {
                    self.removeHorizontalDividersS3();
                    self.createWireframeBack_section3_1();
                    self.createRayCastRecieverSection3_1(); 
                }
  
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                self.updateDoorButtons();
    
            });

            function handleRemoveHorizontalPartitionS3(partitionId) {
                const checkbox = document.getElementById(`RemoveHorizontalPartition_S3_${partitionId}`);
                if (!checkbox) {
                    return;
                }
            
                checkbox.addEventListener('click', function() {
                    if (checkbox.checked) {
                        return;
                    }
            
                    self.removeHorizontalDividersS3();
                    self.createWireframeBack_section3_1();
                    self.createRayCastRecieverSection3_1();
            
                    const verticalSection = document.getElementById(`VerticalSection3_${partitionId}`);
                    if (verticalSection) {
                        verticalSection.style.transform = "translateX(-150%)";
                        verticalSection.style.animation = 'animHideFromLeft 0.4s';
                    }
            
                    if (self.options.statusShowDimensions === 1) {
                        self.createDimensions();
                    }
                    self.updateDoorButtons();
                });
            }
            
            for (let i = 2; i <= 7; i++) {
                handleRemoveHorizontalPartitionS3(i);
            }
            

            function createHorizontalPartition_S3_1(savedCorrection) {            
        
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_1", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createHorizontalDividerSection3_1('savedURL');
                } else {
                    self.createHorizontalDividerSection3_1();
                }

                self.scene.getObjectByName('horizontalDividerSection3_1').material.map = self.textures[self.options.shelf.texture].map;

                self.options.s3_AmountOfHorDividers = 1;



                amountHorizontalPartition_S3_1.style.display = "flex";
                moveHorizontalPartition3_1_UpButton.style.display = "block";
                moveHorizontalPartition3_1_DownButton.style.display = "inline-block";

                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S3_1').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S3_1')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S3_2').innerHTML = Math.floor(self.params.get('ovHHP_S3_2')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S3_1").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S3_2").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s3_AmountOfHorDividers ) ) +"cm";
                }
                
                

                self.updateDoorButtons();
                self.calculateOutput();

                    
                self.options.s3_horizDividStatus = 1;
            };
    
            // section 3_2               
            function createHorizontalPartition_S3_2(savedCorrection) {    

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_2", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createHorizontalDividerSection3_2('savedURL');
                } else {
                    self.createHorizontalDividerSection3_2();
                }

                self.scene.getObjectByName('horizontalDividerSection3_2').material.map = self.textures[self.options.shelf.texture].map;
                self.options.s3_AmountOfHorDividers = 2;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S3_2').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S3_2')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S3_3').innerHTML = Math.floor(self.params.get('ovHHP_S3_3')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S3_2").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S3_3").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s3_AmountOfHorDividers ) ) +"cm";
                }


                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s3_2_horizDividStatus = 1;
            };        
    
            // section 3_3                    
            function createHorizontalPartition_S3_3(savedCorrection) {
        
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_3", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection3_3('savedURL');
                } else {
                    self.createhorizontalDividerSection3_3();
                }

                self.scene.getObjectByName('horizontalDividerSection3_3').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s3_AmountOfHorDividers = 3;

                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S3_4').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S3_4')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S3_3').innerHTML = Math.floor(self.params.get('ovHHP_S3_3')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S3_3").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S3_4").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s3_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();

                self.options.s3_3_horizDividStatus = 1;
    
            }; 
             
            // section 3_4                    
            function createHorizontalPartition_S3_4(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_4", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection3_4('savedURL');
                } else {
                    self.createhorizontalDividerSection3_4();
                }

                self.scene.getObjectByName('horizontalDividerSection3_4').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s3_AmountOfHorDividers = 4;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S3_5').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S3_5')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S3_4').innerHTML = Math.floor(self.params.get('ovHHP_S3_4')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S3_4").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S3_5").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s3_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s3_4_horizDividStatus = 1;
    
            };  
               
            // section 3_5                   
            function createHorizontalPartition_S3_5(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_5", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection3_5('savedURL');
                } else {
                    self.createhorizontalDividerSection3_5();
                }

                self.scene.getObjectByName('horizontalDividerSection3_5').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s3_AmountOfHorDividers = 5;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S3_5').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S3_5')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S3_5').innerHTML = Math.floor(self.params.get('ovHHP_S3_5')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S3_5").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S3_6").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s3_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s3_5_horizDividStatus = 1;
    
            };   

            // section 3_6                   
            function createHorizontalPartition_S3_6(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_6", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection3_6('savedURL');
                } else {
                    self.createhorizontalDividerSection3_6();
                }

                self.scene.getObjectByName('horizontalDividerSection3_6').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s3_AmountOfHorDividers = 6;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S3_6').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S3_6')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S3_6').innerHTML = Math.floor(self.params.get('ovHHP_S3_6')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S3_6").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S3_7").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s3_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s3_6_horizDividStatus = 1;
    
            }; 
            
    
    
    
            ////4 section    
            const inputsS4 = document.querySelectorAll('input[id^="amount_HorPartition4_"]');
            const buttonsS4 = document.querySelectorAll('[id^="subButtonMinus_HorPartition4_"], [id^="subButtonPlus_HorPartition4_"]');
            
            // Add click event listeners to the buttonsS4
            buttonsS4.forEach(button => {
              button.addEventListener('click', (event) => {
                const targetInputS4 = event.target.parentNode.querySelector('input[type="number"]');
                if (targetInputS4) {
                  if (button.id.startsWith('subButtonMinus')) {
                    targetInputS4.stepDown();
                  } else if (button.id.startsWith('subButtonPlus')) {
                    targetInputS4.stepUp();
                  }
                  updateAllInputsS4(targetInputS4);
                }
              });
            });
            
            // Add change event listeners to all input fields
            inputsS4.forEach(input => {
              input.addEventListener('change', (event) => {
                updateAllInputsS4(event.target);
              });
            });
            

            // Function to update all input fields with the same value
            function updateAllInputsS4(sourceInput) {
                const value = parseInt(sourceInput.value) || 0;
            
                inputsS4.forEach(input => {
                    if (input !== sourceInput) {
                    input.value = value;
                    }
                });

              
                switch (value) {
                  case 0:
                    self.removeHorizontalDividersS4();
                    self.createWireframeBack_section4_1();
                    self.createRayCastRecieverSection4_1();
                  break;
                  case 1:
                    self.removeHorizontalDividersS4();
                    document.getElementById("HorizontalPartition_S4_1").checked = true;

                    createHorizontalPartition_S4_1();

                    if (self.scene.getObjectByName( "horizontalDividerSection4_2", true ) != undefined) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_2", true ));
                        self.scene.remove(self.section4_WireframeMesh4_3);
                        self.scene.remove(self.RayCastRecieverSection4_3);
                    }
            
                    if (self.scene.getObjectByName( "horizontalDividerSection4_3", true ) != undefined) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_3", true ));
                        self.scene.remove(self.section4_WireframeMesh4_4);
                        self.scene.remove(self.RayCastRecieverSection4_4);
                    }
        
                    if (self.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined ) {
                        self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_4", true ));
                        self.scene.remove(self.section4_WireframeMesh4_5);
                        self.scene.remove(self.RayCastRecieverSection4_5);
                    }

                  break;
                  case 2:
                    if (self.options.pillar.height - 4.2 - 10 - 1.8 >= 22 && self.options.s4_AmountOfHorDividers == 1) {
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();

                    }else if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) < 22 && self.options.s4_AmountOfHorDividers == 1) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        document.getElementById('amount_HorPartition4_1').value = 1;
                        document.getElementById('amount_HorPartition4_2').value = 1;
                        document.getElementById('amount_HorPartition4_3').value = 1;
                        document.getElementById('amount_HorPartition4_4').value = 1;
                        document.getElementById('amount_HorPartition4_5').value = 1;
                    } else {
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();

                        if (self.scene.getObjectByName( "horizontalDividerSection4_3", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_3", true ));
                            self.scene.remove(self.section4_WireframeMesh4_4);
                            self.scene.remove(self.RayCastRecieverSection4_4);
                        }
            
                        if (self.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_4", true ));
                            self.scene.remove(self.section4_WireframeMesh4_5);
                            self.scene.remove(self.RayCastRecieverSection4_5);
                        }
                    }

                  break;
                  case 3:
                    if (self.options.pillar.height - 4.2 - 20 - 1.8*2  >= 22 && self.options.s4_AmountOfHorDividers == 2) {
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                    }else if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) < 22 && self.options.s4_AmountOfHorDividers == 2) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        document.getElementById('amount_HorPartition4_1').value = 2;
                        document.getElementById('amount_HorPartition4_2').value = 2;
                        document.getElementById('amount_HorPartition4_3').value = 2;
                        document.getElementById('amount_HorPartition4_4').value = 2;
                        document.getElementById('amount_HorPartition4_5').value = 2;

                    }else {
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
            
                        if (self.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_4", true ));
                            self.scene.remove(self.section4_WireframeMesh4_5);
                            self.scene.remove(self.RayCastRecieverSection4_5);
                        }
                    }
                  break;
                  case 4:
                    if ( self.options.pillar.height - 4.2 - 30 - 1.8*3 >= 22 && self.options.s4_AmountOfHorDividers === 3) {
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                        createHorizontalPartition_S4_4();
                    }else if ( self.options.pillar.height - 4.2 - 30 - 1.8*3 < 22 && self.options.s4_AmountOfHorDividers === 4 ) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition4_${i}`).value = 3;
                        }
                    }else {
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                        createHorizontalPartition_S4_4();

                        if (self.scene.getObjectByName( "horizontalDividerSection4_5", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_5", true ));
                            self.scene.remove(self.section2_WireframeMesh4_6);
                            self.scene.remove(self.RayCastRecieverSection4_6);
                        }

                        if (self.scene.getObjectByName( "horizontalDividerSection4_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_6", true ));
                            self.scene.remove(self.section2_WireframeMesh4_7);
                            self.scene.remove(self.RayCastRecieverSection4_7);
                        }

                    }
                  break;
                  case 5:
                    if ( self.options.pillar.height - 4.2 - 40 - 1.8*4 >= 22 && self.options.s4_AmountOfHorDividers === 4) {
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                        createHorizontalPartition_S4_4();
                        createHorizontalPartition_S4_5();

                    } else if ( self.options.pillar.height - 4.2 - 40 - 1.8*4 < 22 && self.options.s4_AmountOfHorDividers === 4) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition4_${i}`).value = 4;
                        }
                    }
                    else {
                        
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                        createHorizontalPartition_S4_4();
                        createHorizontalPartition_S4_5();

                        if (self.scene.getObjectByName( "horizontalDividerSection4_6", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_6", true ));
                            self.scene.remove(self.section2_WireframeMesh4_7);
                            self.scene.remove(self.RayCastRecieverSection4_7);
                        }

                    }
                  break;
                  case 6:
                    if ( self.options.pillar.height - 4.2 - 50 - 1.8*5 >= 22 && self.options.s4_AmountOfHorDividers === 5) {
                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                        createHorizontalPartition_S4_4();
                        createHorizontalPartition_S4_5();
                        createHorizontalPartition_S4_6();

                    } else if ( self.options.pillar.height - 4.2 - 50 - 1.8*5 < 22 && self.options.s4_AmountOfHorDividers === 5) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition4_${i}`).value = 5;
                        }
                    }
                    else {

                        self.removeHorizontalDividersS4();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                        createHorizontalPartition_S4_4();
                        createHorizontalPartition_S4_5();
                        createHorizontalPartition_S4_6();

                    }
                  break;
                  case 7:
                    if ( self.options.pillar.height - 4.2 - 60 - 1.8*6 >= 22 && self.options.s4_AmountOfHorDividers === 6) {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                        createHorizontalPartition_S4_4();
                        createHorizontalPartition_S4_5();
                        createHorizontalPartition_S4_6();
                        createHorizontalPartition_S4_7();

                    } else if ( self.options.pillar.height - 4.2 - 60 - 1.8*6 < 22 && self.options.s4_AmountOfHorDividers === 6) {
                        showHintPanel("The maximum number of partitions within this height has been reached.");
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`amount_HorPartition4_${i}`).value = 6;
                        }
                    }
                    else {
                        self.removeHorizontalDividersS3();
                        document.getElementById("HorizontalPartition_S4_1").checked = true;

                        createHorizontalPartition_S4_1();
                        createHorizontalPartition_S4_2();
                        createHorizontalPartition_S4_3();
                        createHorizontalPartition_S4_4();
                        createHorizontalPartition_S4_5();
                        createHorizontalPartition_S4_6();
                        createHorizontalPartition_S4_7();

                        if (self.scene.getObjectByName( "horizontalDividerSection4_8", true ) != undefined ) {
                            self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_8", true ));
                            self.scene.remove(self.section4_WireframeMesh4_9);
                            self.scene.remove(self.RayCastRecieverSection4_9);
                        }
                    }
                  break;
                }

                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                self.updateDoorButtons();
            }
    

            ////4_1 section    
            document.getElementById("HorizontalPartition_S4_1").addEventListener('click', function() { 
                if (document.getElementById("HorizontalPartition_S4_1").checked == true) {
                    self.removeHorizontalDividersS4();
                    document.getElementById("HorizontalPartition_S4_1").checked = true;

                    createHorizontalPartition_S4_1(); 
                    document.getElementById('amount_HorPartition4_1').value = 1;
                    document.getElementById('amount_HorPartition4_2').value = 1;
                } 
                else {
                    self.removeHorizontalDividersS4();
                    self.createWireframeBack_section4_1();
                    self.createRayCastRecieverSection4_1();  
                }

                    
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                self.updateDoorButtons();
    
            });

            function handleRemoveHorizontalPartitionS4(partitionId) {
                const checkbox = document.getElementById(`RemoveHorizontalPartition_S4_${partitionId}`);
                if (!checkbox) {
                    return;
                }
            
                checkbox.addEventListener('click', function() {
                    if (checkbox.checked) {
                        return;
                    }
            
                    self.removeHorizontalDividersS4();
                    self.createWireframeBack_section4_1();
                    self.createRayCastRecieverSection4_1();
            
                    const verticalSection = document.getElementById(`VerticalSection4_${partitionId}`);
                    if (verticalSection) {
                        verticalSection.style.transform = "translateX(-150%)";
                        verticalSection.style.animation = 'animHideFromLeft 0.4s';
                    }
            
                    if (self.options.statusShowDimensions === 1) {
                        self.createDimensions();
                    }
                    self.updateDoorButtons();
                });
            }
            
            for (let i = 2; i <= 7; i++) {
                handleRemoveHorizontalPartitionS4(i);
            }
            
            function createHorizontalPartition_S4_1(savedCorrection) {            
        
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_1", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createHorizontalDividerSection4_1('savedURL');
                } else {
                    self.createHorizontalDividerSection4_1();
                }

                self.scene.getObjectByName('horizontalDividerSection4_1').material.map = self.textures[self.options.shelf.texture].map;

                self.options.s4_AmountOfHorDividers = 1;



                amountHorizontalPartition_S4_1.style.display = "flex";
                moveHorizontalPartition4_1_UpButton.style.display = "block";
                moveHorizontalPartition4_1_DownButton.style.display = "inline-block";


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S4_1').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S4_1')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S4_2').innerHTML = Math.floor(self.params.get('ovHHP_S4_2')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S4_1").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S4_2").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s4_AmountOfHorDividers ) ) +"cm";
                }
                
                

                self.updateDoorButtons();
                self.calculateOutput();

                    
                self.options.s4_horizDividStatus = 1;
            };
    
            // section 4_2               
            function createHorizontalPartition_S4_2(savedCorrection) {    

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_2", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createHorizontalDividerSection4_2('savedURL');
                } else {
                    self.createHorizontalDividerSection4_2();
                }

                self.scene.getObjectByName('horizontalDividerSection4_2').material.map = self.textures[self.options.shelf.texture].map;
                self.options.s4_AmountOfHorDividers = 2;

                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S4_2').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S4_2')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S4_3').innerHTML = Math.floor(self.params.get('ovHHP_S4_3')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S4_2").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S4_3").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s4_AmountOfHorDividers ) ) +"cm";
                }


                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s4_2_horizDividStatus = 1;
            };        
    
            // section 4_3                    
            function createHorizontalPartition_S4_3(savedCorrection) {
        
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_3", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection4_3('savedURL');
                } else {
                    self.createhorizontalDividerSection4_3();
                }

                self.scene.getObjectByName('horizontalDividerSection4_3').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s4_AmountOfHorDividers = 3;

                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S4_4').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S4_4')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S4_3').innerHTML = Math.floor(self.params.get('ovHHP_S4_3')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S4_3").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S4_4").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s4_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();



                self.options.s4_3_horizDividStatus = 1;
    
            }; 
             
            // section 4_4                    
            function createHorizontalPartition_S4_4(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_4", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection4_4('savedURL');
                } else {
                    self.createhorizontalDividerSection4_4();
                }

                self.scene.getObjectByName('horizontalDividerSection4_4').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s4_AmountOfHorDividers = 4;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S4_5').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S4_5')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S4_4').innerHTML = Math.floor(self.params.get('ovHHP_S4_4')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S4_4").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S4_5").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s4_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s4_4_horizDividStatus = 1;
    
            };   
    
            // section 4_5                   
            function createHorizontalPartition_S4_5(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_5", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection4_5('savedURL');
                } else {
                    self.createhorizontalDividerSection4_5();
                }

                self.scene.getObjectByName('horizontalDividerSection4_5').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s4_AmountOfHorDividers = 5;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S4_5').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S4_5')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S4_5').innerHTML = Math.floor(self.params.get('ovHHP_S4_5')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S4_5").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S4_6").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s4_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s4_5_horizDividStatus = 1;
    
            };   

            // section 4_6                   
            function createHorizontalPartition_S4_6(savedCorrection) {

                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_6", true ));
                if(savedCorrection === 'savedCorrectionURL'){
                    self.createhorizontalDividerSection4_6('savedURL');
                } else {
                    self.createhorizontalDividerSection4_6();
                }

                self.scene.getObjectByName('horizontalDividerSection4_6').material.map = self.textures[self.options.shelf.texture].map;  
                self.options.s4_AmountOfHorDividers = 6;


                if (savedCorrection === 'savedCorrectionURL'){
                    document.getElementById('Height_HorizontalPartition_S4_6').innerHTML = 
                    Math.floor(self.params.get('ovHHP_S4_6')) +"cm";                    
                    document.getElementById('Height_HorizontalPartition_S4_6').innerHTML = Math.floor(self.params.get('ovHHP_S4_6')) +"cm";
                } else {
                    document.getElementById("Height_HorizontalPartition_S4_6").innerHTML =  10 +"cm";
                    document.getElementById("Height_HorizontalPartition_S4_7").innerHTML =  Math.floor(self.options.pillar.height - parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) - 4.2 - (1.8 * self.options.s4_AmountOfHorDividers ) ) +"cm";
                }

                self.updateDoorButtons();
                self.calculateOutput();


                self.options.s4_6_horizDividStatus = 1;
    
            }; 
    
    
    
    
    
    
    
    
            //INTERNAL SHELVING 
    
            //section 1_1 shelf generating
            document.getElementById("InternalShelving_S1").addEventListener('click', function() {
                createInternalShelving_S1();
            });
    
            function createInternalShelving_S1() {
    
                var checkBox_InternalShelving_S1_1 = document.getElementById("InternalShelving_S1");
    
                if ( document.getElementById("InternalShelving_S1").checked == true || self.options.s1_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionMoveInternalShelving_S1_1").style.display = "flex";
                    document.getElementById("MainShoeShelving_S1_1").style.display = "none";

                    

                    document.getElementById("Drawer_S1").style.pointerEvents = "none";
                    document.getElementById("Drawer_Section1").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection1_1 = 1;

                    document.getElementById("internalShelving_sect1_1").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                            
                        self.scene.remove(self.shelvingGroup_section1_1);
                        
                        self.shelvingGroup_section1_1 = new THREE.Group();
                        self.options.posShelf1_sect1_1 = 12

                        self.shelvingGroup_section1_1.add(self.createShelfToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1").style.display = "flex";
                        for (var i = 2; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S1_1").style.display = "none";
                        document.getElementById("MainShoeShelving_S1_1").style.display = "flex";
                        document.getElementById("InternalShelving1_S1").style.display = "none";
                        document.getElementById('internalShelving_sect1_1').value = 0
                        self.options.shelvesCounterSection1_1 = 0;
                    }

                    if (self.options.shelvesCounterSection1_1 != 0) {
    
                        self.shelvingGroup_section1_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y
        
                        self.shelvingGroup_section1_1.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        //!!
                        self.shelvingGroup_section1_1.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3 ;
        
                        self.shelvingGroup_section1_1.name = 'shelvingGroup_section1_1';
        
                        self.scene.add(self.shelvingGroup_section1_1);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_1; i++) {
                            self.shelvingGroup_section1_1.getObjectByName('internalShelf_1_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S1").style.display = "flex";
                    for (var i = 2; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                    }

    
    
                    self.options.s1_internlShelvinStatus = 1
                    self.options.s1_ShelvingStatus = 'Wood'
                    
                } 
                else {
                    self.options.shelvesCounterSection1_1 = 0
                    self.scene.remove(self.shelvingGroup_section1_1);
    
                    for (var i = 1; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                    }

                    document.getElementById("internalShelving_sect1_1").value = '0'
                    document.getElementById("sectionMoveInternalShelving_S1_1").style.display = "none";
                    document.getElementById("MainShoeShelving_S1_1").style.display = "flex";

                    document.getElementById("Drawer_S1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_Section1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S1").src="icons/Drawer_Close.jpg";

                    self.options.s1_internlShelvinStatus = 0
                    self.options.s1_ShelvingStatus = 'none'
    
                }
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_1 = 10
    
            }
            document.getElementById("subButtonMinus_Shelves1_1").addEventListener('click', requestChangeShelving1_1); 
            document.getElementById("subButtonPlus_Shelves1_1").addEventListener('click', requestChangeShelving1_1); 
            document.getElementById("internalShelving_sect1_1").addEventListener('change', requestChangeShelving1_1);  
    
    
            function requestChangeShelving1_1 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect1_1();
            };
    
    
            function createInternalShelving_sect1_1() {
            
                self.options.s1_ShelvingStatus = 'Wood'
                
                switch (parseInt(document.getElementById("internalShelving_sect1_1").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection1_1 = 0
                        self.options.s1_ShelvingStatus = 'none'

                        self.scene.remove(self.shelvingGroup_section1_1);
    
                        document.getElementById("InternalShelving_S1").checked = false;
    
                        for (var i = 1; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                        }

                        document.getElementById("internalShelving_sect1_1").value = '0'
                        document.getElementById("sectionMoveInternalShelving_S1_1").style.display = "none";
                        document.getElementById("MainShoeShelving_S1_1").style.display = "flex";

                        document.getElementById("Drawer_S1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1").src="icons/Drawer_Close.jpg";
    
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection1_1 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                            
                            self.scene.remove(self.shelvingGroup_section1_1);
                            
                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf1_sect1_1 = 12
    
                            self.shelvingGroup_section1_1.add(self.createShelfToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length));
    
                            document.getElementById("InternalShelving1_S1").style.display = "flex";
                            for (var i = 2; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S1_1").style.display = "none";
                            document.getElementById("MainShoeShelving_S1_1").style.display = "flex";
                            document.getElementById("InternalShelving1_S1").style.display = "none";
                            document.getElementById('internalShelving_sect1_1').value = 0
                            self.options.shelvesCounterSection1_1 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection1_1 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section1_1);
                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf2_sect1_1 =  12
                            self.options.posShelf1_sect1_1 = self.options.posShelf2_sect1_1 + 12
    
                            self.shelvingGroup_section1_1.add(self.createShelfToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length)
                            );
                            
                            document.getElementById("InternalShelving1_S1").style.display = "flex";
                            document.getElementById("InternalShelving2_S1").style.display = "flex";
                            for (var i = 3; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 23 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = 10 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S1").style.display = "none";
                        document.getElementById('internalShelving_sect1_1').value = 1
                        self.options.shelvesCounterSection1_1 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection1_1 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section1_1);                        

                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf3_sect1_1 = 12
                            self.options.posShelf2_sect1_1 = self.options.posShelf3_sect1_1 + 12
                            self.options.posShelf1_sect1_1 = self.options.posShelf2_sect1_1 + 12

                        
                            self.shelvingGroup_section1_1.add(self.createShelfToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length), self.createShelfToGroup(self.options.posShelf3_sect1_1, 3, '1_1', self.options.section1Length)
                            );
                            document.getElementById("InternalShelving1_S1").style.display = "flex";
                            document.getElementById("InternalShelving2_S1").style.display = "flex";
                            document.getElementById("InternalShelving3_S1").style.display = "flex";
                            for (var i = 4; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 35 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S1").style.display = "none";
                            document.getElementById('internalShelving_sect1_1').value = 2
                            self.options.shelvesCounterSection1_1 = 2;
                        }

                    break;  

                    case 4:

                        self.options.shelvesCounterSection1_1 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section1_1);                        

                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf4_sect1_1 = 12
                            self.options.posShelf3_sect1_1 = self.options.posShelf4_sect1_1 + 12
                            self.options.posShelf2_sect1_1 = self.options.posShelf3_sect1_1 + 12
                            self.options.posShelf1_sect1_1 = self.options.posShelf2_sect1_1 + 12
                        
                            self.shelvingGroup_section1_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect1_1, 3, '1_1', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect1_1, 4, '1_1', self.options.section1Length)
                            );
                            document.getElementById("InternalShelving1_S1").style.display = "flex";
                            document.getElementById("InternalShelving2_S1").style.display = "flex";
                            document.getElementById("InternalShelving3_S1").style.display = "flex";
                            document.getElementById("InternalShelving4_S1").style.display = "flex";
                            for (var i = 5; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 47 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S1").style.display = "none";
                            document.getElementById('internalShelving_sect1_1').value = 3
                            self.options.shelvesCounterSection1_1 = 3;
                        }

                    break;  

                    case 5:

                        self.options.shelvesCounterSection1_1 = 5;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 69) {
                            
                            self.scene.remove(self.shelvingGroup_section1_1);                        

                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf5_sect1_1 = 12
                            self.options.posShelf4_sect1_1 = self.options.posShelf5_sect1_1 + 12
                            self.options.posShelf3_sect1_1 = self.options.posShelf4_sect1_1 + 12
                            self.options.posShelf2_sect1_1 = self.options.posShelf3_sect1_1 + 12
                            self.options.posShelf1_sect1_1 = self.options.posShelf2_sect1_1 + 12
                        
            
                            self.shelvingGroup_section1_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect1_1, 3, '1_1', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect1_1, 4, '1_1', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf5_sect1_1, 5, '1_1', self.options.section1Length)
                            );
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "flex";
                            }
                            document.getElementById("InternalShelving6_S1").style.display = "none";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 59 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving5_S1").style.display = "none";
                            document.getElementById('internalShelving_sect1_1').value = 4
                            self.options.shelvesCounterSection1_1 = 4;
                        }

                    break;  

                    case 6:

                        self.options.shelvesCounterSection1_1 = 6;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) > 82.8) {
                            self.scene.remove(self.shelvingGroup_section1_1);                        

                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf6_sect1_1 = 12
                            self.options.posShelf5_sect1_1 = self.options.posShelf6_sect1_1 + 12
                            self.options.posShelf4_sect1_1 = self.options.posShelf5_sect1_1 + 12
                            self.options.posShelf3_sect1_1 = self.options.posShelf4_sect1_1 + 12
                            self.options.posShelf2_sect1_1 = self.options.posShelf3_sect1_1 + 12
                            self.options.posShelf1_sect1_1 = self.options.posShelf2_sect1_1 + 12
                        
                            
                            self.shelvingGroup_section1_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect1_1, 3, '1_1', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect1_1, 4, '1_1', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf5_sect1_1, 5, '1_1', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf6_sect1_1, 6, '1_1', self.options.section1Length)
                            );
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "flex";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 71 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving6_S1_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving6_S1").style.display = "none";
                            document.getElementById('internalShelving_sect1_1').value = 5
                            self.options.shelvesCounterSection1_1 = 5;
                        }

                    break; 

                }

                self.options.heigh0Shelf1_1 = 10

    
                if (self.options.shelvesCounterSection1_1 != 0) {
    
                    self.shelvingGroup_section1_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y
    
                    self.shelvingGroup_section1_1.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_1.position.z = -self.options.room.width / 2 + self.options.shelf.width -3;

                    self.shelvingGroup_section1_1.name = 'shelvingGroup_section1_1';
    
                    self.scene.add(self.shelvingGroup_section1_1);
    
                    for (var i = 1; i <= self.options.shelvesCounterSection1_1; i++) {
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving3_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving4_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving5_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh6Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving6_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

             
    
            document.getElementById("ShoeShelving_S1").addEventListener('click', function() {
                createShoeShelving_S1();
            });
            function createShoeShelving_S1() {
    
                var checkBox_InternalShelving_S1_1 = document.getElementById("ShoeShelving_S1");
    
                if ( document.getElementById("ShoeShelving_S1").checked == true || self.options.s1_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S1_1").style.display = "flex";
                    document.getElementById("MainInternalShelving_S1_1").style.display = "none";
                    
                    document.getElementById("Drawer_S1").style.pointerEvents = "none";
                    document.getElementById("Drawer_Section1").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection1_1 = 1;

                    document.getElementById("ShoeShelving_sect1_1").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect1_1").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_1);
                        
                        self.shelvingGroup_section1_1 = new THREE.Group();
                        self.options.posShelf1_sect1_1 = 14;

                        self.shelvingGroup_section1_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length));
                        self.shelvingGroup_section1_1.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1").style.display = "flex";
                        for (var i = 2; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S1_1").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_1").style.display = "flex";
                        document.getElementById("InternalShelving1_S1").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_1').value = 0
                        self.options.shelvesCounterSection1_1 = 0;
                    }

                    if (self.options.shelvesCounterSection1_1 != 0) {
    
                        self.shelvingGroup_section1_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y
        
                        self.shelvingGroup_section1_1.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        //!!
                        //self.shelvingGroup_section1_1.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3 ;
                        self.shelvingGroup_section1_1.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;

        
                        self.shelvingGroup_section1_1.name = 'shelvingGroup_section1_1';
        
                        self.scene.add(self.shelvingGroup_section1_1);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_1; i++) {
                            self.shelvingGroup_section1_1.getObjectByName('internalShelf_1_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection1_1; i++) {
                            self.shelvingGroup_section1_1.getObjectByName('internalShelfShoe_1_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S1").style.display = "flex";
                    for (var i = 2; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                    }

    
    
                    self.options.s1_internlShelvinStatus = 1
                    self.options.s1_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection1_1 = 0
                    self.scene.remove(self.shelvingGroup_section1_1);
    
                    for (var i = 1; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect1_1").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S1_1").style.display = "none";
                    document.getElementById("MainInternalShelving_S1_1").style.display = "flex";

                    document.getElementById("Drawer_S1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_Section1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S1").src="icons/Drawer_Close.jpg";

                    self.options.s1_internlShelvinStatus = 0
                    self.options.s1_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_1 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves1_1").addEventListener('click', requestChangeShoeShelving1_1); 
            document.getElementById("subButtonPlus_ShoeShelves1_1").addEventListener('click', requestChangeShoeShelving1_1); 
            document.getElementById("ShoeShelving_sect1_1").addEventListener('change', requestChangeShoeShelving1_1); 

            function requestChangeShoeShelving1_1 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect1_1();
            };
    
            function createShoeShelving_sect1_1() {
        

                self.options.s1_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect1_1").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection1_1 = 0
                        self.options.s1_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section1_1);
    
                        document.getElementById("ShoeShelving_S1").checked = false;
        
                        for (var i = 1; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect1_1").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S1_1").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_1").style.display = "flex";
    
                        document.getElementById("Drawer_S1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection1_1 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect1_1").value = '1'
                            self.scene.remove(self.shelvingGroup_section1_1);
                            
                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf1_sect1_1 = 14;

                            self.shelvingGroup_section1_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length));
                            self.shelvingGroup_section1_1.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1").style.display = "flex";
                            for (var i = 2; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 7 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S1_1").style.display = "none";
                            document.getElementById("MainInternalShelving_S1_1").style.display = "flex";

                            document.getElementById("InternalShelving1_S1").style.display = "none";
                            document.getElementById('ShoeShelving_sect1_1').value = 0
                            self.options.shelvesCounterSection1_1 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection1_1 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section1_1);
                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf2_sect1_1 =  14;
                            self.options.posShelf1_sect1_1 = self.options.posShelf2_sect1_1 + 27.5;
    
                            self.shelvingGroup_section1_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length), self.createShelfShoeToGroup(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length));
                            
                            
                            document.getElementById("InternalShelving1_S1").style.display = "flex";
                            document.getElementById("InternalShelving2_S1").style.display = "flex";
                            for (var i = 3; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 34 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S1").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_1').value = 1
                        self.options.shelvesCounterSection1_1 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection1_1 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 74) {
                            self.scene.remove(self.shelvingGroup_section1_1);                        

                            self.shelvingGroup_section1_1 = new THREE.Group();
                            self.options.posShelf3_sect1_1 = 14
                            self.options.posShelf2_sect1_1 = self.options.posShelf3_sect1_1 + 27.5
                            self.options.posShelf1_sect1_1 = self.options.posShelf2_sect1_1 + 27.5

                        
                            self.shelvingGroup_section1_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect1_1, 1, '1_1', self.options.section1Length), self.createShelfShoeToGroup(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect1_1, 2, '1_1', self.options.section1Length), self.createShelfShoeToGroup(self.options.posShelf3_sect1_1, 3, '1_1', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf3_sect1_1, 3, '1_1', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1").style.display = "flex";
                            document.getElementById("InternalShelving2_S1").style.display = "flex";
                            document.getElementById("InternalShelving3_S1").style.display = "flex";
                            for (var i = 4; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }        

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 61 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = 25 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = 25 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S1").style.display = "none";
                            document.getElementById('ShoeShelving_sect1_1').value = 2
                            self.options.shelvesCounterSection1_1 = 2;
                        }

                    break;  

                  
                }

                self.options.heigh0Shelf1_1 = 5

        
                if (self.options.shelvesCounterSection1_1 != 0) {
    
                    self.shelvingGroup_section1_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y
    
                    self.shelvingGroup_section1_1.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_1.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;

                    self.shelvingGroup_section1_1.name = 'shelvingGroup_section1_1';
    
                    self.scene.add(self.shelvingGroup_section1_1);

                    for (var i = 1; i <= self.options.shelvesCounterSection1_1; i++) {
                        self.shelvingGroup_section1_1.getObjectByName('internalShelfShoe_1_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection1_1; i++) {
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving3_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving4_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving5_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh6Shelf1_1 = parseFloat(document.getElementById('PositionField_InternalShelving6_S1_1').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

    
            //section1_1_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S1_1_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_1_1 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s1_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+1).position.y += 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf1_1-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = Math.floor( self.options.heigh1Shelf1_1 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf1_1 += 1
                            document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = Math.floor( self.options.heigh2Shelf1_1 ) +"cm";
                        } else{
                            self.options.heigh0Shelf1_1+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S1_1_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf1_1 > 10 && self.options.s1_ShelvingStatus === 'Wood' || self.options.heigh2Shelf1_1 > 25 && self.options.s1_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_1 += 1
                        self.options.heigh2Shelf1_1 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = Math.floor( self.options.heigh1Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = Math.floor( self.options.heigh2Shelf1_1 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf1_1 > 10 && self.options.s1_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_1 > 5 && self.options.s1_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_1 += 1
                        self.options.heigh0Shelf1_1 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = Math.floor( self.options.heigh1Shelf1_1 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section1_1_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S1_1_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+2).position.y += 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf1_1 -= 1
                        self.options.heigh3Shelf1_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = Math.floor( self.options.heigh2Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = Math.floor( self.options.heigh3Shelf1_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s1_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+2).position.y += 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf1_1 -= 1
                        self.options.heigh0Shelf1_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = Math.floor( self.options.heigh2Shelf1_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S1_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf1_1 > 10 && self.options.s1_ShelvingStatus === 'Wood' || self.options.heigh3Shelf1_1 > 25 && self.options.s1_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf1_1 += 1
                        self.options.heigh3Shelf1_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = Math.floor( self.options.heigh2Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = Math.floor( self.options.heigh3Shelf1_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf1_1 > 10 && self.options.s1_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_1 > 5 && self.options.s1_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf1_1 += 1
                        self.options.heigh0Shelf1_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = Math.floor( self.options.heigh2Shelf1_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section1_1_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S1_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+3).position.y += 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf1_1 -= 1
                        self.options.heigh4Shelf1_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = Math.floor( self.options.heigh3Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = Math.floor( self.options.heigh4Shelf1_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s1_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+3).position.y += 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf1_1 -= 1
                        self.options.heigh0Shelf1_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = Math.floor( self.options.heigh3Shelf1_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S1_1_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf1_1 > 10 && self.options.s1_ShelvingStatus === 'Wood' || self.options.heigh4Shelf1_1 > 5 && self.options.s1_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf1_1 += 1
                        self.options.heigh4Shelf1_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = Math.floor( self.options.heigh3Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = Math.floor( self.options.heigh4Shelf1_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf1_1 > 10 && self.options.s1_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_1 > 5 && self.options.s1_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s1_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_1_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf1_1 += 1
                        self.options.heigh0Shelf1_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = Math.floor( self.options.heigh3Shelf1_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section1_1_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S1_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+5) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+4).position.y += 1.05
                        

                        self.options.heigh4Shelf1_1 -= 1
                        self.options.heigh5Shelf1_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = Math.floor( self.options.heigh4Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = Math.floor( self.options.heigh5Shelf1_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+4).position.y += 1.05
                        
    
                        self.options.heigh4Shelf1_1 -= 1
                        self.options.heigh0Shelf1_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = Math.floor( self.options.heigh4Shelf1_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S1_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+5) != undefined) {
                
                    if ( self.options.heigh5Shelf1_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+4).position.y -= 1.05
                       
        
                        self.options.heigh4Shelf1_1 += 1
                        self.options.heigh5Shelf1_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = Math.floor( self.options.heigh4Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = Math.floor( self.options.heigh5Shelf1_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf1_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+4).position.y -= 1.05
                        
        
                        self.options.heigh4Shelf1_1 += 1
                        self.options.heigh0Shelf1_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = Math.floor( self.options.heigh4Shelf1_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section1_1_shelf5 up&down
            document.getElementById("MoveInternalShelving5_S1_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+6) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving5_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+5).position.y += 1.05
                        

                        self.options.heigh5Shelf1_1 -= 1
                        self.options.heigh6Shelf1_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = Math.floor( self.options.heigh5Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving6_S1_1").innerHTML = Math.floor( self.options.heigh6Shelf1_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving5_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+5).position.y += 1.05
                        
    
                        self.options.heigh5Shelf1_1 -= 1
                        self.options.heigh0Shelf1_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = Math.floor( self.options.heigh5Shelf1_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving5_S1_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+6) != undefined) {
                
                    if ( self.options.heigh6Shelf1_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+5).position.y -= 1.05
                       
        
                        self.options.heigh5Shelf1_1 += 1
                        self.options.heigh6Shelf1_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = Math.floor( self.options.heigh5Shelf1_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving6_S1_1").innerHTML = Math.floor( self.options.heigh6Shelf1_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf1_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+5).position.y -= 1.05
                        
        
                        self.options.heigh5Shelf1_1 += 1
                        self.options.heigh0Shelf1_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = Math.floor( self.options.heigh5Shelf1_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section1_1_shelf6 up&down
            document.getElementById("MoveInternalShelving6_S1_1_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving6_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+6).position.y += 1.05

                    self.options.heigh6Shelf1_1 -= 1
                    self.options.heigh0Shelf1_1 += 1


                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving6_S1_1").innerHTML = ( self.options.heigh6Shelf1_1 ).toFixed(0) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving6_S1_1_DOWN").addEventListener('click', async function() {

                if ( self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+6).position.y - 2.4  >= 11 ) {

                    self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+6).position.y -= 1.05

                    self.options.heigh6Shelf1_1 += 1
                    self.options.heigh0Shelf1_1 -= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving6_S1_1").innerHTML = ( self.options.heigh6Shelf1_1 ).toFixed(0) +"cm";

                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });

            

    
    
            //section 1_2 shelf generating
            document.getElementById("InternalShelving_S1_2").addEventListener('click', function() {
                createInternalShelving_S1_2();
            });
            function createInternalShelving_S1_2() {
    
                
                var checkBox_InternalShelving_S1_2 = document.getElementById("InternalShelving_S1_2");
    
                if ( document.getElementById("InternalShelving_S1_2").checked == true || self.options.s1_2_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "flex";
                    document.getElementById("MainShoeShelving_S1_2").style.display = "none";

                    document.getElementById("Drawer_S1_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_2").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection1_2 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                        document.getElementById("internalShelving_sect1_2").value = '1'
    
                        self.scene.remove(self.shelvingGroup_section1_2);
                        
                        self.shelvingGroup_section1_2 = new THREE.Group();
                        self.options.posShelf1_sect1_2 = 13;
    
                        self.shelvingGroup_section1_2.add(self.createShelfToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length));
    
                        document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                        for (var i = 2; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                        }
    
                        self.scene.add(self.shelvingGroup_section1_2);
    
    
                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                        document.getElementById("InternalShelving1_S1_2").style.display = "none";
                        document.getElementById('internalShelving_sect1_2').value = 0
                        self.options.shelvesCounterSection1_2 = 0;
                    }
    
                    if (self.options.shelvesCounterSection1_2 != 0) {
    
                        self.shelvingGroup_section1_2.position.y = self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y - 1
        
                        self.shelvingGroup_section1_2.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
                        self.shelvingGroup_section1_2.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        self.shelvingGroup_section1_2.name = 'shelvingGroup_section1_2';
        
                        self.scene.add(self.shelvingGroup_section1_2);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_2; i++) {
                            self.shelvingGroup_section1_2.getObjectByName('internalShelf_1_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
    
                        }
        
                    } else {} 
                    
                    document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";

                    self.options.s1_2_internlShelvinStatus = 1
                    self.options.s1_2_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection1_2 = 0
                    self.scene.remove(self.shelvingGroup_section1_2);
    
                    for (var i = 1; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                    }

                    document.getElementById("internalShelving_sect1_2").value = '0'
                    document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                    document.getElementById("MainShoeShelving_S1_2").style.display = "flex";


                    document.getElementById("Drawer_S1_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS1_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S1_2").src="icons/Drawer_Close.jpg";

                    self.options.s1_2_internlShelvinStatus = 0
                    self.options.s1_2_ShelvingStatus = 'none'

    
                }
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                 
                self.options.heigh1Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_2 = 10
    
            };
            document.getElementById("subButtonMinus_Shelves1_2").addEventListener('click', requestChangeShelving1_2); 
            document.getElementById("subButtonPlus_Shelves1_2").addEventListener('click', requestChangeShelving1_2); 
            document.getElementById("internalShelving_sect1_2").addEventListener('change', requestChangeShelving1_2);  
    
            function requestChangeShelving1_2 () {
                
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect1_2();
            };
            
            function createInternalShelving_sect1_2() {
    
    
                switch ( parseInt(document.getElementById("internalShelving_sect1_2").value, 10) ) {
                    case 0:
    
                        self.options.shelvesCounterSection1_2 = 0
                        self.scene.remove(self.shelvingGroup_section1_2);
    
                        document.getElementById("InternalShelving_S1_2").checked = false;
    
                        for (var i = 1; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                        }

                        document.getElementById("internalShelving_sect1_2").value = '0'
                        document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                        document.getElementById("MainShoeShelving_S1_2").style.display = "flex";

        
                        document.getElementById("Drawer_S1_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section1_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_2").src="icons/Drawer_Close.jpg";
    
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection1_2 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                            self.scene.remove(self.shelvingGroup_section1_2);
                            
                            self.shelvingGroup_section1_2 = new THREE.Group();
                            self.options.posShelf1_sect1_2 = 13
    
                            self.shelvingGroup_section1_2.add(self.createShelfToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length));
    
                            document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_2").style.display = "none";
                            document.getElementById("InternalShelving3_S1_2").style.display = "none";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                        document.getElementById('internalShelving_sect1_2').value = 0
                        self.options.shelvesCounterSection1_2 = 0;}
                    break;
    
                    case 2:
                        self.options.shelvesCounterSection1_2 = 2;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
    
                            self.scene.remove(self.shelvingGroup_section1_2);
    
                            self.shelvingGroup_section1_2 = new THREE.Group();
                            self.options.posShelf2_sect1_2 = 13
                            self.options.posShelf1_sect1_2 = self.options.posShelf2_sect1_2 + 12
    
                            self.shelvingGroup_section1_2.add(self.createShelfToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_2, 2, '1_2', self.options.section1Length)
                            );
    
                            document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_2").style.display = "flex";
                            for (var i = 3; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML =  parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
                            document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML =  10 +"cm";
                            
    
                            
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S1_2").style.display = "none";
                            document.getElementById('internalShelving_sect1_2').value = 1
                            self.options.shelvesCounterSection1_2 = 1;
                        }
    
                    
                    break;
    
                    case 3:

                        self.options.shelvesCounterSection1_2 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section1_2);                        

                            self.shelvingGroup_section1_2 = new THREE.Group();
                            self.options.posShelf3_sect1_2 =13
                            self.options.posShelf2_sect1_2 = self.options.posShelf3_sect1_2 + 12
                            self.options.posShelf1_sect1_2 = self.options.posShelf2_sect1_2 + 12

                        
                            self.shelvingGroup_section1_2.add(self.createShelfToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_2, 2, '1_2', self.options.section1Length), self.createShelfToGroup(self.options.posShelf3_sect1_2, 3, '1_2', self.options.section1Length)
                            );
                            document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S1_2").style.display = "flex";
                            for (var i = 4; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S1_2").style.display = "none";
                            document.getElementById('internalShelving_sect1_2').value = 2
                            self.options.shelvesCounterSection1_2 = 2;
                        }

                    break;  
                    
                    case 4:

                        self.options.shelvesCounterSection1_2 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section1_2);                        

                            self.shelvingGroup_section1_2 = new THREE.Group();
                            self.options.posShelf4_sect1_2 = 13
                            self.options.posShelf3_sect1_2 = self.options.posShelf4_sect1_2 + 12
                            self.options.posShelf2_sect1_2 = self.options.posShelf3_sect1_2 + 12
                            self.options.posShelf1_sect1_2 = self.options.posShelf2_sect1_2 + 12
                        
                            self.shelvingGroup_section1_2.add(
                                self.createShelfToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf2_sect1_2, 2, '1_2', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect1_2, 3, '1_2', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect1_2, 4, '1_2', self.options.section1Length)
                            );
                            document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving4_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving5_S1_2").style.display = "none";



                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 48 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S1_2").style.display = "none";
                            document.getElementById('internalShelving_sect1_2').value = 3
                            self.options.shelvesCounterSection1_2 = 3;
                        }

                    break;  

                    case 5:

                        self.options.shelvesCounterSection1_2 = 5;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 69) {
                            
                            self.scene.remove(self.shelvingGroup_section1_2);                        

                            self.shelvingGroup_section1_2 = new THREE.Group();
                            self.options.posShelf5_sect1_2 = 13
                            self.options.posShelf4_sect1_2 = self.options.posShelf5_sect1_2 + 12
                            self.options.posShelf3_sect1_2 = self.options.posShelf4_sect1_2 + 12
                            self.options.posShelf2_sect1_2 = self.options.posShelf3_sect1_2 + 12
                            self.options.posShelf1_sect1_2 = self.options.posShelf2_sect1_2 + 12
                        
            
                            self.shelvingGroup_section1_2.add(
                                self.createShelfToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf2_sect1_2, 2, '1_2', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect1_2, 3, '1_2', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect1_2, 4, '1_2', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf5_sect1_2, 5, '1_2', self.options.section1Length)
                            );
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "flex";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 60 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S1_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving5_S1_2").style.display = "none";
                            document.getElementById('internalShelving_sect1_2').value = 4
                            self.options.shelvesCounterSection1_2 = 4;
                        }

                    break;  
                }
                
    
                if (self.options.shelvesCounterSection1_2 != 0) {
    
                    self.shelvingGroup_section1_2.position.y = self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y - 1
    
                    self.shelvingGroup_section1_2.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
    
    
                    self.shelvingGroup_section1_2.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_2.name = 'shelvingGroup_section1_2';
    
                    self.scene.add(self.shelvingGroup_section1_2);

    
                    for (var i = 1; i <= self.options.shelvesCounterSection1_2; i++) {
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                       
                    }
      
    
                } else {}
    
    
                self.options.heigh1Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_2').textContent.match(/\d+(\.\d+)?/)[0]); 
                self.options.heigh2Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving3_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving4_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving5_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);

                self.options.heigh0Shelf1_2 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };


            document.getElementById("ShoeShelving_S1_2").addEventListener('click', function() {
                createShoeShelving_S1_2();
            });
            function createShoeShelving_S1_2() {
    
                var checkBox_InternalShelving_S1_2 = document.getElementById("ShoeShelving_S1_2");
    
                if ( document.getElementById("ShoeShelving_S1_2").checked == true || self.options.s1_2_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "flex";
                    document.getElementById("MainInternalShelving_S1_2").style.display = "none";
                    
                    document.getElementById("Drawer_S1_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_2").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection1_2 = 1;

                    document.getElementById("ShoeShelving_sect1_2").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect1_2").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_2);
                        
                        self.shelvingGroup_section1_2 = new THREE.Group();
                        self.options.posShelf1_sect1_2 = 14;

                        self.shelvingGroup_section1_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length));
                        self.shelvingGroup_section1_2.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                        for (var i = 2; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_2").style.display = "flex";
                        document.getElementById("InternalShelving1_S1_2").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_2').value = 0
                        self.options.shelvesCounterSection1_2 = 0;
                    }

                    if (self.options.shelvesCounterSection1_2 != 0) {
    
                        self.shelvingGroup_section1_2.position.y = self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y - 1
        
                        self.shelvingGroup_section1_2.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        //!!
                        self.shelvingGroup_section1_2.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2 ;
        

                        self.shelvingGroup_section1_2.name = 'shelvingGroup_section1_2';
        
                        self.scene.add(self.shelvingGroup_section1_2);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_2; i++) {
                            self.shelvingGroup_section1_2.getObjectByName('internalShelf_1_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection1_2; i++) {
                            self.shelvingGroup_section1_2.getObjectByName('internalShelfShoe_1_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                    for (var i = 2; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                    }

    
    
                    self.options.s1_2_internlShelvinStatus = 1
                    self.options.s1_2_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection1_2 = 0
                    self.scene.remove(self.shelvingGroup_section1_2);
    
                    for (var i = 1; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect1_2").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                    document.getElementById("MainInternalShelving_S1_2").style.display = "flex";

                    document.getElementById("Drawer_S1_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS1_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S1_2").src="icons/Drawer_Close.jpg";

                    self.options.s1_2_internlShelvinStatus = 0
                    self.options.s1_2_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_2 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves1_2").addEventListener('click', requestChangeShoeShelving1_2); 
            document.getElementById("subButtonPlus_ShoeShelves1_2").addEventListener('click', requestChangeShoeShelving1_2); 
            document.getElementById("ShoeShelving_sect1_2").addEventListener('change', requestChangeShoeShelving1_2); 

            function requestChangeShoeShelving1_2 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect1_2();
            };
    
            function createShoeShelving_sect1_2() {
        

                self.options.s1_2_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect1_2").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection1_2 = 0
                        self.options.s1_2_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section1_2);
    
                        document.getElementById("ShoeShelving_S1_2").checked = false;
        
                        for (var i = 1; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect1_2").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_2").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S1_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_2").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection1_2 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect1_2").value = '1'
                            self.scene.remove(self.shelvingGroup_section1_2);
                            
                            self.shelvingGroup_section1_2 = new THREE.Group();
                            self.options.posShelf1_sect1_2 = 14;

                            self.shelvingGroup_section1_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length));
                            self.shelvingGroup_section1_2.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                            for (var i = 2; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                            document.getElementById("MainInternalShelving_S1_2").style.display = "flex";

                            document.getElementById("InternalShelving1_S1_2").style.display = "none";
                            document.getElementById('ShoeShelving_sect1_2').value = 0
                            self.options.shelvesCounterSection1_2 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection1_2 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section1_2);
                            self.shelvingGroup_section1_2 = new THREE.Group();
                            self.options.posShelf2_sect1_2 =  14;
                            self.options.posShelf1_sect1_2 = self.options.posShelf2_sect1_2 + 27.5;
    
                            self.shelvingGroup_section1_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length), self.createShelfShoeToGroup(self.options.posShelf2_sect1_2, 2, '1_2', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect1_2, 2, '1_2', self.options.section1Length));
                            
                            
                            document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_2").style.display = "flex";
                            for (var i = 3; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S1_2").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_2').value = 1
                        self.options.shelvesCounterSection1_2 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection1_2 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 74) {
                            self.scene.remove(self.shelvingGroup_section1_2);                        

                            self.shelvingGroup_section1_2 = new THREE.Group();
                            self.options.posShelf3_sect1_2 = 14
                            self.options.posShelf2_sect1_2 = self.options.posShelf3_sect1_2 + 27.5
                            self.options.posShelf1_sect1_2 = self.options.posShelf2_sect1_2 + 27.5

                        
                            self.shelvingGroup_section1_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect1_2, 1, '1_2', self.options.section1Length), self.createShelfShoeToGroup(self.options.posShelf2_sect1_2, 2, '1_2', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect1_2, 2, '1_2', self.options.section1Length), self.createShelfShoeToGroup(self.options.posShelf3_sect1_2, 3, '1_2', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf3_sect1_2, 3, '1_2', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S1_2").style.display = "flex";
                            for (var i = 4; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }        

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 69 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = 25 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = 25 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S1_2").style.display = "none";
                            document.getElementById('ShoeShelving_sect1_2').value = 2
                            self.options.shelvesCounterSection1_2 = 2;
                        }

                    break;  

                  
                }

                self.options.heigh0Shelf1_2 = 5

        
                if (self.options.shelvesCounterSection1_2 != 0) {
    
                    self.shelvingGroup_section1_2.position.y = self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y - 1
    
                    self.shelvingGroup_section1_2.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_2.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section1_2.name = 'shelvingGroup_section1_2';
    
                    self.scene.add(self.shelvingGroup_section1_2);

                    for (var i = 1; i <= self.options.shelvesCounterSection1_2; i++) {
                        self.shelvingGroup_section1_2.getObjectByName('internalShelfShoe_1_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection1_2; i++) {
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving3_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving4_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf1_2 = parseFloat(document.getElementById('PositionField_InternalShelving5_S1_2').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
    
    

            //section1_2_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S1_2_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_1_2 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+1).position.y += 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf1_2-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = Math.floor( self.options.heigh1Shelf1_2 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf1_2 += 1
                            document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = Math.floor( self.options.heigh2Shelf1_2 ) +"cm";
                        } else{
                            self.options.heigh0Shelf1_2+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S1_2_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf1_2 > 10 && self.options.s1_2_ShelvingStatus === 'Wood' || self.options.heigh2Shelf1_2 > 25 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_2 += 1
                        self.options.heigh2Shelf1_2 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = Math.floor( self.options.heigh1Shelf1_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = Math.floor( self.options.heigh2Shelf1_2 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf1_2 > 10 && self.options.s1_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_2 > 13 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_2 += 1
                        self.options.heigh0Shelf1_2 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = Math.floor( self.options.heigh1Shelf1_2 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section1_2_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S1_2_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+2).position.y += 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf1_2 -= 1
                        self.options.heigh3Shelf1_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = Math.floor( self.options.heigh2Shelf1_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = Math.floor( self.options.heigh3Shelf1_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+2).position.y += 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf1_2 -= 1
                        self.options.heigh0Shelf1_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = Math.floor( self.options.heigh2Shelf1_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S1_2_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf1_2 > 10 && self.options.s1_2_ShelvingStatus === 'Wood' || self.options.heigh3Shelf1_2 > 25 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf1_2 += 1
                        self.options.heigh3Shelf1_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = Math.floor( self.options.heigh2Shelf1_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = Math.floor( self.options.heigh3Shelf1_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf1_2 > 10 && self.options.s1_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_2 > 13 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf1_2 += 1
                        self.options.heigh0Shelf1_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = Math.floor( self.options.heigh2Shelf1_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section1_2_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S1_2_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+3).position.y += 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf1_2 -= 1
                        self.options.heigh4Shelf1_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = Math.floor( self.options.heigh3Shelf1_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = Math.floor( self.options.heigh4Shelf1_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+3).position.y += 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf1_2 -= 1
                        self.options.heigh0Shelf1_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = Math.floor( self.options.heigh3Shelf1_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S1_2_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf1_2 > 10 && self.options.s1_2_ShelvingStatus === 'Wood' || self.options.heigh4Shelf1_2 > 13 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf1_2 += 1
                        self.options.heigh4Shelf1_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = Math.floor( self.options.heigh3Shelf1_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = Math.floor( self.options.heigh4Shelf1_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf1_2 > 10 && self.options.s1_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_2 > 13 && self.options.s1_2_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s1_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_2_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf1_2 += 1
                        self.options.heigh0Shelf1_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = Math.floor( self.options.heigh3Shelf1_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section1_2_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S1_2_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+5) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+4).position.y += 1.05
                        

                        self.options.heigh4Shelf1_2 -= 1
                        self.options.heigh5Shelf1_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = Math.floor( self.options.heigh4Shelf1_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S1_2").innerHTML = Math.floor( self.options.heigh5Shelf1_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+4).position.y += 1.05
                        
    
                        self.options.heigh4Shelf1_2 -= 1
                        self.options.heigh0Shelf1_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = Math.floor( self.options.heigh4Shelf1_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S1_2_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+5) != undefined) {
                
                    if ( self.options.heigh5Shelf1_2 >= 11 ) {
        
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+4).position.y -= 1.05
                       
        
                        self.options.heigh4Shelf1_2 += 1
                        self.options.heigh5Shelf1_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = Math.floor( self.options.heigh4Shelf1_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S1_2").innerHTML = Math.floor( self.options.heigh5Shelf1_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf1_2 >= 11 ) {
        
                        self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+4).position.y -= 1.05
                        
        
                        self.options.heigh4Shelf1_2 += 1
                        self.options.heigh0Shelf1_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = Math.floor( self.options.heigh4Shelf1_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section1_2_shelf5 up&down
            document.getElementById("MoveInternalShelving5_S1_2_UP").addEventListener('click', async function() {

                if (parseFloat(document.getElementById('PositionField_InternalShelving5_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+5).position.y += 1.05
                    

                    self.options.heigh5Shelf1_2 -= 1
                    self.options.heigh0Shelf1_2 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving5_S1_2").innerHTML = Math.floor( self.options.heigh5Shelf1_2 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving5_S1_2_DOWN").addEventListener('click', async function() {

                if ( self.options.heigh0Shelf1_2 >= 11 ) {
    
                    self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+5).position.y -= 1.05
                    
    
                    self.options.heigh5Shelf1_2 += 1
                    self.options.heigh0Shelf1_2 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving5_S1_2").innerHTML = Math.floor( self.options.heigh5Shelf1_2 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });
            
            


            //section 1_3 shelf generating
            document.getElementById("InternalShelving_S1_3").addEventListener('click', function() {
                createInternalShelving_S1_3();
            });
    
            function createInternalShelving_S1_3() {
    
                var checkBox_InternalShelving_S1_3 = document.getElementById("InternalShelving_S1_3");
    
                if ( document.getElementById("InternalShelving_S1_3").checked == true || self.options.s1_3_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "flex";
                    document.getElementById("MainShoeShelving_S1_3").style.display = "none";

                    document.getElementById("Drawer_S1_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_3").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection1_3 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                        document.getElementById("internalShelving_sect1_3").value = '1'
    
                        self.scene.remove(self.shelvingGroup_section1_3);
                        
                        self.shelvingGroup_section1_3 = new THREE.Group();
                        self.options.posShelf1_sect1_3 = 13;
    
                        self.shelvingGroup_section1_3.add(self.createShelfToGroup(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length));
    
                        document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                        for (var i = 2; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";

    
                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                        document.getElementById("InternalShelving1_S1_3").style.display = "none";
                        document.getElementById('internalShelving_sect1_3').value = 0
                        self.options.shelvesCounterSection1_3 = 0;
                    }
    
                    if (self.options.shelvesCounterSection1_3 != 0) {
    
                        self.shelvingGroup_section1_3.position.y = self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y - 1
        
                        self.shelvingGroup_section1_3.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section1_3.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        self.shelvingGroup_section1_3.name = 'shelvingGroup_section1_3';
        
                        self.scene.add(self.shelvingGroup_section1_3);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_3; i++) {
                            self.shelvingGroup_section1_3.getObjectByName('internalShelf_1_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        
    
                    } else {}     
    
                    self.options.s1_3_internlShelvinStatus = 1
                    self.options.s1_3_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection1_3 = 0
                    self.scene.remove(self.shelvingGroup_section1_3);
    
                    for (var i = 1; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                    }
                    document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                    document.getElementById("MainShoeShelving_S1_3").style.display = "flex";

                    document.getElementById("internalShelving_sect1_3").value = '0'

                    self.options.s1_3_internlShelvinStatus = 0
                    self.options.s1_3_ShelvingStatus = 'none'

    
                }
    
               
                self.options.heigh1Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_3 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
    
            document.getElementById("subButtonMinus_Shelves1_3").addEventListener('click', requestChangeShelving1_3); 
            document.getElementById("subButtonPlus_Shelves1_3").addEventListener('click', requestChangeShelving1_3); 
            document.getElementById("internalShelving_sect1_3").addEventListener('change', requestChangeShelving1_3);  
    
            function requestChangeShelving1_3 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect1_3();
            };
    
            function createInternalShelving_sect1_3() {
    
    
                switch (parseInt(document.getElementById("internalShelving_sect1_3").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection1_3 = 0
                        self.scene.remove(self.shelvingGroup_section1_3);
    
                        document.getElementById("InternalShelving_S1_3").checked = false;
                        for (var i = 1; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                        }
                        document.getElementById("InternalShelving2_S1_3").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                        document.getElementById("MainShoeShelving_S1_3").style.display = "flex";

                        document.getElementById("internalShelving_sect1_3").value = '0'
                        

                        document.getElementById("Drawer_S1_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_3").src="icons/Drawer_Close.jpg";
    
                    break;
                    case 1:
                        self.options.shelvesCounterSection1_3 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section1_3);
                            
                            self.shelvingGroup_section1_3 = new THREE.Group();
                            self.options.posShelf1_sect1_3 = 13;
    
                            self.shelvingGroup_section1_3.add(self.createShelfToGroup(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length));
    
                            document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_3").style.display = "none";
                            document.getElementById("InternalShelving3_S1_3").style.display = "none";
                            document.getElementById("InternalShelving4_S1_3").style.display = "none";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                            document.getElementById("InternalShelving1_S1_3").style.display = "none";
                            document.getElementById('internalShelving_sect1_3').value = 0
                            self.options.shelvesCounterSection1_3 = 0;  
                        }
                    break;
                    case 2:
                        self.options.shelvesCounterSection1_3 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section1_3);
                            self.shelvingGroup_section1_3 = new THREE.Group();
                            self.options.posShelf2_sect1_3 =  13
                            self.options.posShelf1_sect1_3 = self.options.posShelf2_sect1_3 + 12
    
                            self.shelvingGroup_section1_3.add(self.createShelfToGroup(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_3, 2, '1_3', self.options.section1Length)
                            );
                            
                            document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S1_3").style.display = "none";
                            document.getElementById("InternalShelving4_S1_3").style.display = "none";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S1_3").style.display = "none";
                            document.getElementById('internalShelving_sect1_3').value = 1
                            self.options.shelvesCounterSection1_3 = 1;
                        }
    
                    break;    
                    case 3:

                        self.options.shelvesCounterSection1_3 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section1_3);                        

                            self.shelvingGroup_section1_3 = new THREE.Group();
                            self.options.posShelf3_sect1_3 =13
                            self.options.posShelf2_sect1_3 = self.options.posShelf3_sect1_3 + 12
                            self.options.posShelf1_sect1_3 = self.options.posShelf2_sect1_3 + 12

                        
                            self.shelvingGroup_section1_3.add(self.createShelfToGroup(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_3, 2, '1_3', self.options.section1Length), self.createShelfToGroup(self.options.posShelf3_sect1_3, 3, '1_3', self.options.section1Length)
                            );
                            document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S1_3").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S1_3").style.display = "none";
                            document.getElementById('internalShelving_sect1_3').value = 2
                            self.options.shelvesCounterSection1_3 = 2;
                        }

                    break;  
                    case 4:

                        self.options.shelvesCounterSection1_3 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section1_3);                        

                            self.shelvingGroup_section1_3 = new THREE.Group();
                            self.options.posShelf4_sect1_3 = 13
                            self.options.posShelf3_sect1_3 = self.options.posShelf4_sect1_3 + 12
                            self.options.posShelf2_sect1_3 = self.options.posShelf3_sect1_3 + 12
                            self.options.posShelf1_sect1_3 = self.options.posShelf2_sect1_3 + 12
                        
                            self.shelvingGroup_section1_3.add(
                                self.createShelfToGroup(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length),
                                self.createShelfToGroup(self.options.posShelf2_sect1_3, 2, '1_3', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect1_3, 3, '1_3', self.options.section1Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect1_3, 4, '1_3', self.options.section1Length)
                            );
                            document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving4_S1_3").style.display = "flex";
                            


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 48 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S1_3").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S1_3").style.display = "none";
                            document.getElementById('internalShelving_sect1_3').value = 3
                            self.options.shelvesCounterSection1_3 = 3;
                        }

                    break;  
                }

    
                if (self.options.shelvesCounterSection1_3 != 0) {
    
                    self.shelvingGroup_section1_3.position.y = self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y - 1
    
                    self.shelvingGroup_section1_3.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
    
                    self.shelvingGroup_section1_3.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_3.name = 'shelvingGroup_section1_3';
    
                    self.scene.add(self.shelvingGroup_section1_3);
    
                    for (var i = 1; i <= self.options.shelvesCounterSection1_3; i++) {
                        self.shelvingGroup_section1_3.getObjectByName('internalShelf_1_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    

                self.options.heigh1Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving3_S1_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving4_S1_3').textContent.match(/\d+(\.\d+)?/)[0]);

                self.options.heigh0Shelf1_3 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };
    

            document.getElementById("ShoeShelving_S1_3").addEventListener('click', function() {
                createShoeShelving_S1_3();
            });
            function createShoeShelving_S1_3() {
    
                var checkBox_InternalShelving_S1_3 = document.getElementById("ShoeShelving_S1_3");
    
                if ( document.getElementById("ShoeShelving_S1_3").checked == true || self.options.s1_3_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "flex";
                    document.getElementById("MainInternalShelving_S1_3").style.display = "none";
                    
                    document.getElementById("Drawer_S1_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_3").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection1_3 = 1;

                    document.getElementById("ShoeShelving_sect1_3").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect1_3").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_3);
                        
                        self.shelvingGroup_section1_3 = new THREE.Group();
                        self.options.posShelf1_sect1_3 = 14;

                        self.shelvingGroup_section1_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length));
                        self.shelvingGroup_section1_3.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                        for (var i = 2; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_3").style.display = "flex";
                        document.getElementById("InternalShelving1_S1_3").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_3').value = 0
                        self.options.shelvesCounterSection1_3 = 0;
                    }

                    if (self.options.shelvesCounterSection1_3 != 0) {
    
                        self.shelvingGroup_section1_3.position.y = self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y - 1
        
                        self.shelvingGroup_section1_3.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        //!!
                        self.shelvingGroup_section1_3.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section1_3.name = 'shelvingGroup_section1_3';
        
                        self.scene.add(self.shelvingGroup_section1_3);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_3; i++) {
                            self.shelvingGroup_section1_3.getObjectByName('internalShelf_1_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection1_3; i++) {
                            self.shelvingGroup_section1_3.getObjectByName('internalShelfShoe_1_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                    for (var i = 2; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                    }

    
    
                    self.options.s1_3_internlShelvinStatus = 1
                    self.options.s1_3_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection1_3 = 0
                    self.scene.remove(self.shelvingGroup_section1_3);
    
                    for (var i = 1; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect1_3").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                    document.getElementById("MainInternalShelving_S1_3").style.display = "flex";

                    document.getElementById("Drawer_S1_3").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS1_3").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S1_3").src="icons/Drawer_Close.jpg";

                    self.options.s1_3_internlShelvinStatus = 0
                    self.options.s1_3_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_3 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves1_3").addEventListener('click', requestChangeShoeShelving1_3); 
            document.getElementById("subButtonPlus_ShoeShelves1_3").addEventListener('click', requestChangeShoeShelving1_3); 
            document.getElementById("ShoeShelving_sect1_3").addEventListener('change', requestChangeShoeShelving1_3); 

            function requestChangeShoeShelving1_3 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect1_3();
            };
    
            function createShoeShelving_sect1_3() {
        

                self.options.s1_3_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect1_3").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection1_3 = 0
                        self.options.s1_3_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section1_3);
    
                        document.getElementById("ShoeShelving_S1_3").checked = false;
        
                        for (var i = 1; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect1_3").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_3").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S1_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_3").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection1_3 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect1_3").value = '1'
                            self.scene.remove(self.shelvingGroup_section1_3);
                            
                            self.shelvingGroup_section1_3 = new THREE.Group();
                            self.options.posShelf1_sect1_3 = 14;

                            self.shelvingGroup_section1_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length));
                            self.shelvingGroup_section1_3.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                            for (var i = 2; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                            document.getElementById("MainInternalShelving_S1_3").style.display = "flex";

                            document.getElementById("InternalShelving1_S1_3").style.display = "none";
                            document.getElementById('ShoeShelving_sect1_3').value = 0
                            self.options.shelvesCounterSection1_3 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection1_3 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section1_3);
                            self.shelvingGroup_section1_3 = new THREE.Group();
                            self.options.posShelf2_sect1_3 =  14;
                            self.options.posShelf1_sect1_3 = self.options.posShelf2_sect1_3 + 27.5;
    
                            self.shelvingGroup_section1_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect1_3, 1, '1_3', self.options.section1Length), self.createShelfShoeToGroup(self.options.posShelf2_sect1_3, 2, '1_3', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect1_3, 2, '1_3', self.options.section1Length));
                            
                            
                            document.getElementById("InternalShelving1_S1_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_3").style.display = "flex";
                            for (var i = 3; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S1_3").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_3').value = 1
                        self.options.shelvesCounterSection1_3 = 1;}
    
                    break;
                }

                self.options.heigh0Shelf1_3 = 5

        
                if (self.options.shelvesCounterSection1_3 != 0) {
    
                    self.shelvingGroup_section1_3.position.y = self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y - 1
    
                    self.shelvingGroup_section1_3.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_3.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section1_3.name = 'shelvingGroup_section1_3';
    
                    self.scene.add(self.shelvingGroup_section1_3);

                    for (var i = 1; i <= self.options.shelvesCounterSection1_3; i++) {
                        self.shelvingGroup_section1_3.getObjectByName('internalShelfShoe_1_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection1_3; i++) {
                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving3_S1_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf1_3 = parseFloat(document.getElementById('PositionField_InternalShelving4_S1_3').textContent.match(/\d+(\.\d+)?/)[0]);
                

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            

    
            //section1_3_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S1_3_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_1_3 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+1).position.y += 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf1_3-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = Math.floor( self.options.heigh1Shelf1_3 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf1_3 += 1
                            document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = Math.floor( self.options.heigh2Shelf1_3 ) +"cm";
                        } else{
                            self.options.heigh0Shelf1_3+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S1_3_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf1_3 > 10 && self.options.s1_3_ShelvingStatus === 'Wood' || self.options.heigh2Shelf1_3 > 25 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_3 += 1
                        self.options.heigh2Shelf1_3 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = Math.floor( self.options.heigh1Shelf1_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = Math.floor( self.options.heigh2Shelf1_3 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf1_3 > 10 && self.options.s1_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_3 > 13 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_3 += 1
                        self.options.heigh0Shelf1_3 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = Math.floor( self.options.heigh1Shelf1_3 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section1_3_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S1_3_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+2).position.y += 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf1_3 -= 1
                        self.options.heigh3Shelf1_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = Math.floor( self.options.heigh2Shelf1_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = Math.floor( self.options.heigh3Shelf1_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+2).position.y += 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf1_3 -= 1
                        self.options.heigh0Shelf1_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = Math.floor( self.options.heigh2Shelf1_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S1_3_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf1_3 > 10 && self.options.s1_3_ShelvingStatus === 'Wood' || self.options.heigh3Shelf1_3 > 25 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf1_3 += 1
                        self.options.heigh3Shelf1_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = Math.floor( self.options.heigh2Shelf1_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = Math.floor( self.options.heigh3Shelf1_3 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf1_3 > 10 && self.options.s1_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_3 > 13 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf1_3 += 1
                        self.options.heigh0Shelf1_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = Math.floor( self.options.heigh2Shelf1_3 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section1_3_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S1_3_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+3).position.y += 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf1_3 -= 1
                        self.options.heigh4Shelf1_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = Math.floor( self.options.heigh3Shelf1_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S1_3").innerHTML = Math.floor( self.options.heigh4Shelf1_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+3).position.y += 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf1_3 -= 1
                        self.options.heigh0Shelf1_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = Math.floor( self.options.heigh3Shelf1_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S1_3_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf1_3 > 10 && self.options.s1_3_ShelvingStatus === 'Wood' || self.options.heigh4Shelf1_3 > 25 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf1_3 += 1
                        self.options.heigh4Shelf1_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = Math.floor( self.options.heigh3Shelf1_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S1_3").innerHTML = Math.floor( self.options.heigh4Shelf1_3 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf1_3 > 10 && self.options.s1_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_3 > 13 && self.options.s1_3_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s1_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_3_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf1_3 += 1
                        self.options.heigh0Shelf1_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = Math.floor( self.options.heigh3Shelf1_3 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section1_3_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S1_3_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving4_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+4).position.y += 1.05
                    

                    self.options.heigh4Shelf1_3 -= 1
                    self.options.heigh0Shelf1_3 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving4_S1_3").innerHTML = Math.floor( self.options.heigh4Shelf1_3 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S1_3_DOWN").addEventListener('click', async function() {

                if ( self.options.heigh0Shelf1_3 > 10 ) {
    
                    self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+4).position.y -= 1.05
                    
    
                    self.options.heigh4Shelf1_3 += 1
                    self.options.heigh0Shelf1_3 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving4_S1_3").innerHTML = Math.floor( self.options.heigh4Shelf1_3 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });
    

            //section 1_4 shelf generating
            document.getElementById("InternalShelving_S1_4").addEventListener('click', function() {
                createInternalShelving_S1_4();
            });
            function createInternalShelving_S1_4() {

                var checkBox_InternalShelving_S1_4 = document.getElementById("InternalShelving_S1_4");

                if ( document.getElementById("InternalShelving_S1_4").checked == true || self.options.s1_4_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "flex";
                    document.getElementById("MainShoeShelving_S1_4").style.display = "none";

                    document.getElementById("Drawer_S1_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_4").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection1_4 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect1_4").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_4);
                        
                        self.shelvingGroup_section1_4 = new THREE.Group();
                        self.options.posShelf1_sect1_4 = 13;

                        self.shelvingGroup_section1_4.add(self.createShelfToGroup(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1_4").style.display = "flex";

                        document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                        document.getElementById("InternalShelving1_S1_4").style.display = "none";
                        document.getElementById('internalShelving_sect1_4').value = 0
                        self.options.shelvesCounterSection1_4 = 0;
                    }

                    if (self.options.shelvesCounterSection1_4 != 0) {

                        self.shelvingGroup_section1_4.position.y = self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y - 1
        
                        self.shelvingGroup_section1_4.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section1_4.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        self.shelvingGroup_section1_4.name = 'shelvingGroup_section1_4';
        
                        self.scene.add(self.shelvingGroup_section1_4);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_4; i++) {
                            self.shelvingGroup_section1_4.getObjectByName('internalShelf_1_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s1_4_internlShelvinStatus = 1
                    self.options.s1_4_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection1_4 = 0
                    self.scene.remove(self.shelvingGroup_section1_4);

                    for (var i = 1; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                    }
                    document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                    document.getElementById("MainShoeShelving_S1_4").style.display = "flex";

                    document.getElementById("internalShelving_sect1_4").value = '0'

                    self.options.s1_4_internlShelvinStatus = 0
                    self.options.s1_4_ShelvingStatus = 'none'


                }

            
                self.options.heigh1Shelf1_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_4 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves1_4").addEventListener('click', requestChangeShelving1_4); 
            document.getElementById("subButtonPlus_Shelves1_4").addEventListener('click', requestChangeShelving1_4); 
            document.getElementById("internalShelving_sect1_4").addEventListener('change', requestChangeShelving1_4);  

            function requestChangeShelving1_4 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect1_4();
            };

            function createInternalShelving_sect1_4() {


                switch (parseInt(document.getElementById("internalShelving_sect1_4").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection1_4 = 0
                        self.scene.remove(self.shelvingGroup_section1_4);

                        document.getElementById("InternalShelving_S1_4").checked = false;

                        for (var i = 1; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                        }

                        document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                        document.getElementById("MainShoeShelving_S1_4").style.display = "flex";

                        document.getElementById("internalShelving_sect1_4").value = '0'

                        document.getElementById("Drawer_S1_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_4").src="icons/Drawer_Close.jpg";

                    break;
                    case 1:
                        self.options.shelvesCounterSection1_4 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section1_4);
                            
                            self.shelvingGroup_section1_4 = new THREE.Group();
                            self.options.posShelf1_sect1_4 = 13;

                            self.shelvingGroup_section1_4.add(self.createShelfToGroup(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_4").style.display = "flex";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                            document.getElementById("InternalShelving1_S1_4").style.display = "none";
                            document.getElementById('internalShelving_sect1_4').value = 0
                            self.options.shelvesCounterSection1_4 = 0;  
                        }
                    break;  
                    case 2:
                        self.options.shelvesCounterSection1_4 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section1_4);
                            self.shelvingGroup_section1_4 = new THREE.Group();
                            self.options.posShelf2_sect1_4 =  13
                            self.options.posShelf1_sect1_4 = self.options.posShelf2_sect1_4 + 12
    
                            self.shelvingGroup_section1_4.add(self.createShelfToGroup(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_4, 2, '1_4', self.options.section1Length)
                            );
                            
                            document.getElementById("InternalShelving1_S1_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_4").style.display = "flex";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S1_4").style.display = "none";
                            document.getElementById('internalShelving_sect1_4').value = 1
                            self.options.shelvesCounterSection1_4 = 1;
                        }
    
                    break;    
                    case 3:

                        self.options.shelvesCounterSection1_4 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section1_4);                        

                            self.shelvingGroup_section1_4 = new THREE.Group();
                            self.options.posShelf3_sect1_4 =13
                            self.options.posShelf2_sect1_4 = self.options.posShelf3_sect1_4 + 12
                            self.options.posShelf1_sect1_4 = self.options.posShelf2_sect1_4 + 12

                        
                            self.shelvingGroup_section1_4.add(self.createShelfToGroup(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_4, 2, '1_4', self.options.section1Length), self.createShelfToGroup(self.options.posShelf3_sect1_4, 3, '1_4', self.options.section1Length)
                            );
                            document.getElementById("InternalShelving1_S1_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_4").style.display = "flex";
                            document.getElementById("InternalShelving3_S1_4").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S1_4").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S1_4").style.display = "none";
                            document.getElementById('internalShelving_sect1_4').value = 2
                            self.options.shelvesCounterSection1_4 = 2;
                        }

                    break; 
                }
                

                if (self.options.shelvesCounterSection1_4 != 0) {

                    self.shelvingGroup_section1_4.position.y = self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y - 1

                    self.shelvingGroup_section1_4.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section1_4.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;

                    self.shelvingGroup_section1_4.name = 'shelvingGroup_section1_4';

                    self.scene.add(self.shelvingGroup_section1_4);


                    for (var i = 1; i <= self.options.shelvesCounterSection1_4; i++) {
                        self.shelvingGroup_section1_4.getObjectByName('internalShelf_1_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                } else {}

                self.options.heigh1Shelf1_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_4 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf1_4 = parseFloat(document.getElementById('PositionField_InternalShelving3_S1_4').textContent.match(/\d+(\.\d+)?/)[0]);
                
                self.options.heigh0Shelf1_4 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S1_4").addEventListener('click', function() {
                createShoeShelving_S1_4();
            });
            function createShoeShelving_S1_4() {
    
                var checkBox_InternalShelving_S1_4 = document.getElementById("ShoeShelving_S1_4");
    
                if ( document.getElementById("ShoeShelving_S1_4").checked == true || self.options.s1_4_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "flex";
                    document.getElementById("MainInternalShelving_S1_4").style.display = "none";
                    
                    document.getElementById("Drawer_S1_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_4").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection1_4 = 1;

                    document.getElementById("ShoeShelving_sect1_4").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect1_4").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_4);
                        
                        self.shelvingGroup_section1_4 = new THREE.Group();
                        self.options.posShelf1_sect1_4 = 14;

                        self.shelvingGroup_section1_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length));
                        self.shelvingGroup_section1_4.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1_4").style.display = "flex";
                        for (var i = 2; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_4").style.display = "flex";
                        document.getElementById("InternalShelving1_S1_4").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_4').value = 0
                        self.options.shelvesCounterSection1_4 = 0;
                    }

                    if (self.options.shelvesCounterSection1_4 != 0) {
    
                        self.shelvingGroup_section1_4.position.y = self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y - 1
        
                        self.shelvingGroup_section1_4.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        //!!
                        self.shelvingGroup_section1_4.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section1_4.name = 'shelvingGroup_section1_4';
        
                        self.scene.add(self.shelvingGroup_section1_4);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_4; i++) {
                            self.shelvingGroup_section1_4.getObjectByName('internalShelf_1_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection1_4; i++) {
                            self.shelvingGroup_section1_4.getObjectByName('internalShelfShoe_1_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S1_4").style.display = "flex";
                    for (var i = 2; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                    }

    
    
                    self.options.s1_4_internlShelvinStatus = 1
                    self.options.s1_4_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection1_4 = 0
                    self.scene.remove(self.shelvingGroup_section1_4);
    
                    for (var i = 1; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect1_4").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                    document.getElementById("MainInternalShelving_S1_4").style.display = "flex";

                    document.getElementById("Drawer_S1_4").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS1_4").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S1_4").src="icons/Drawer_Close.jpg";

                    self.options.s1_4_internlShelvinStatus = 0
                    self.options.s1_4_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf1_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_4 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves1_4").addEventListener('click', requestChangeShoeShelving1_4); 
            document.getElementById("subButtonPlus_ShoeShelves1_4").addEventListener('click', requestChangeShoeShelving1_4); 
            document.getElementById("ShoeShelving_sect1_4").addEventListener('change', requestChangeShoeShelving1_4); 

            function requestChangeShoeShelving1_4 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect1_4();
            };
    
            function createShoeShelving_sect1_4() {
        
                self.options.s1_4_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect1_4").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection1_4 = 0
                        self.options.s1_4_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section1_4);
    
                        document.getElementById("ShoeShelving_S1_4").checked = false;
        
                        for (var i = 1; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect1_4").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_4").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S1_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_4").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection1_4 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect1_4").value = '1'
                            self.scene.remove(self.shelvingGroup_section1_4);
                            
                            self.shelvingGroup_section1_4 = new THREE.Group();
                            self.options.posShelf1_sect1_4 = 14;

                            self.shelvingGroup_section1_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length));
                            self.shelvingGroup_section1_4.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_4").style.display = "flex";
                            for (var i = 2; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                            document.getElementById("MainInternalShelving_S1_4").style.display = "flex";

                            document.getElementById("InternalShelving1_S1_4").style.display = "none";
                            document.getElementById('ShoeShelving_sect1_4').value = 0
                            self.options.shelvesCounterSection1_4 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection1_4 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section1_4);
                            self.shelvingGroup_section1_4 = new THREE.Group();
                            self.options.posShelf2_sect1_4 =  14;
                            self.options.posShelf1_sect1_4 = self.options.posShelf2_sect1_4 + 27.5;
    
                            self.shelvingGroup_section1_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect1_4, 1, '1_4', self.options.section1Length), self.createShelfShoeToGroup(self.options.posShelf2_sect1_4, 2, '1_4', self.options.section1Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect1_4, 2, '1_4', self.options.section1Length));
                            
                            
                            document.getElementById("InternalShelving1_S1_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_4").style.display = "flex";
                            document.getElementById("InternalShelving3_S1_4").style.display = "none";

    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S1_4").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_4').value = 1
                        self.options.shelvesCounterSection1_4 = 1;}
    
                    break;
                  
                }

                self.options.heigh0Shelf1_4 = 5

        
                if (self.options.shelvesCounterSection1_4 != 0) {
    
                    self.shelvingGroup_section1_4.position.y = self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y - 1
    
                    self.shelvingGroup_section1_4.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_4.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section1_4.name = 'shelvingGroup_section1_4';
    
                    self.scene.add(self.shelvingGroup_section1_4);

                    for (var i = 1; i <= self.options.shelvesCounterSection1_4; i++) {
                        self.shelvingGroup_section1_4.getObjectByName('internalShelfShoe_1_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection1_4; i++) {
                        self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf1_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_4 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf1_4 = parseFloat(document.getElementById('PositionField_InternalShelving3_S1_4').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section1_4_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S1_4_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_1_4 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+1).position.y += 1.05
                        if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf1_4-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = Math.floor( self.options.heigh1Shelf1_4 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf1_4 += 1
                            document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = Math.floor( self.options.heigh2Shelf1_4 ) +"cm";
                        } else{
                            self.options.heigh0Shelf1_4+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S1_4_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf1_4 > 10 && self.options.s1_4_ShelvingStatus === 'Wood' || self.options.heigh2Shelf1_4 > 25 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_4 += 1
                        self.options.heigh2Shelf1_4 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = Math.floor( self.options.heigh1Shelf1_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = Math.floor( self.options.heigh2Shelf1_4 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf1_4 > 10 && self.options.s1_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_4 > 13 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_4 += 1
                        self.options.heigh0Shelf1_4 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = Math.floor( self.options.heigh1Shelf1_4 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section1_4_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S1_4_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+2).position.y += 1.05
                        if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf1_4 -= 1
                        self.options.heigh3Shelf1_4 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = Math.floor( self.options.heigh2Shelf1_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S1_4").innerHTML = Math.floor( self.options.heigh3Shelf1_4 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+2).position.y += 1.05
                        if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf1_4 -= 1
                        self.options.heigh0Shelf1_4 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = Math.floor( self.options.heigh2Shelf1_4 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S1_4_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf1_4 > 10 && self.options.s1_4_ShelvingStatus === 'Wood' || self.options.heigh3Shelf1_4 > 25 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf1_4 += 1
                        self.options.heigh3Shelf1_4 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = Math.floor( self.options.heigh2Shelf1_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S1_4").innerHTML = Math.floor( self.options.heigh3Shelf1_4 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf1_4 > 10 && self.options.s1_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_4 > 13 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf1_4 += 1
                        self.options.heigh0Shelf1_4 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = Math.floor( self.options.heigh2Shelf1_4 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });

            //section1_4_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S1_4_UP").addEventListener('click', async function() {
            
                if (parseFloat(document.getElementById('PositionField_InternalShelving3_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+3).position.y += 1.05
                    if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+3).position.y += 1.05
                    }

                    self.options.heigh3Shelf1_4 -= 1
                    self.options.heigh0Shelf1_4 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving3_S1_4").innerHTML = Math.floor( self.options.heigh3Shelf1_4 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S1_4_DOWN").addEventListener('click', async function() {

                if (self.options.heigh0Shelf1_4 > 10 && self.options.s1_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_4 > 13 && self.options.s1_4_ShelvingStatus === 'Shoe' ) {        
                    self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+3).position.y -= 1.05
                    if (self.options.s1_4_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_1_4_'+'shelf'+3).position.y -= 1.05
                    }
    
                    self.options.heigh3Shelf1_4 += 1
                    self.options.heigh0Shelf1_4 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving3_S1_4").innerHTML = Math.floor( self.options.heigh3Shelf1_4 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });



            //section 1_5 shelf generating
            document.getElementById("InternalShelving_S1_5").addEventListener('click', function() {
                createInternalShelving_S1_5();
            });
            function createInternalShelving_S1_5() {

                var checkBox_InternalShelving_S1_5 = document.getElementById("InternalShelving_S1_5");

                if ( document.getElementById("InternalShelving_S1_5").checked == true || self.options.s1_5_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "flex";
                    document.getElementById("MainShoeShelving_S1_5").style.display = "none";

                    document.getElementById("Drawer_S1_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_5").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection1_5 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect1_5").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_5);
                        
                        self.shelvingGroup_section1_5 = new THREE.Group();
                        self.options.posShelf1_sect1_5 = 13;

                        self.shelvingGroup_section1_5.add(self.createShelfToGroup(self.options.posShelf1_sect1_5, 1, '1_5', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1_5").style.display = "flex";
                        document.getElementById("InternalShelving2_S1_5").style.display = "none";

                        document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                        document.getElementById("InternalShelving1_S1_5").style.display = "none";
                        document.getElementById('internalShelving_sect1_5').value = 0
                        self.options.shelvesCounterSection1_5 = 0;
                    }

                    if (self.options.shelvesCounterSection1_5 != 0) {

                        self.shelvingGroup_section1_5.position.y = self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y - 1
        
                        self.shelvingGroup_section1_5.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section1_5.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        self.shelvingGroup_section1_5.name = 'shelvingGroup_section1_5';
        
                        self.scene.add(self.shelvingGroup_section1_5);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_5; i++) {
                            self.shelvingGroup_section1_5.getObjectByName('internalShelf_1_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s1_5_internlShelvinStatus = 1
                    self.options.s1_5_ShelvingStatus = 'Wood'


                } 
                else {
                    self.options.shelvesCounterSection1_5 = 0
                    self.scene.remove(self.shelvingGroup_section1_5);

                    for (var i = 1; i <= 2; i++) {
                        document.getElementById(`InternalShelving${i}_S1_5`).style.display = "none";
                    };
                    document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                    document.getElementById("MainShoeShelving_S1_5").style.display = "flex";

                    document.getElementById("internalShelving_sect1_5").value = '0'

                    self.options.s1_5_internlShelvinStatus = 0
                    self.options.s1_5_ShelvingStatus = 'none'

                }

            
                self.options.heigh1Shelf1_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_5 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves1_5").addEventListener('click', requestChangeShelving1_5); 
            document.getElementById("subButtonPlus_Shelves1_5").addEventListener('click', requestChangeShelving1_5); 
            document.getElementById("internalShelving_sect1_5").addEventListener('change', requestChangeShelving1_5);  

            function requestChangeShelving1_5 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect1_5();
            };

            function createInternalShelving_sect1_5() {


                switch (parseInt(document.getElementById("internalShelving_sect1_5").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection1_5 = 0
                        self.scene.remove(self.shelvingGroup_section1_5);

                        document.getElementById("InternalShelving_S1_5").checked = false;

                        document.getElementById("InternalShelving1_S1_5").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                        document.getElementById("MainShoeShelving_S1_5").style.display = "flex";


                        document.getElementById("internalShelving_sect1_5").value = '0'

                        document.getElementById("Drawer_S1_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_5").src="icons/Drawer_Close.jpg";

                    break;

                    case 1:
                        self.options.shelvesCounterSection1_5 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section1_5);
                            
                            self.shelvingGroup_section1_5 = new THREE.Group();
                            self.options.posShelf1_sect1_5 = 13;

                            self.shelvingGroup_section1_5.add(self.createShelfToGroup(self.options.posShelf1_sect1_5, 1, '1_5', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_5").style.display = "none";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                            document.getElementById("InternalShelving1_S1_5").style.display = "none";
                            document.getElementById('internalShelving_sect1_5').value = 0
                            self.options.shelvesCounterSection1_5 = 0;  
                        }
                    break;  
                    case 2:
                        self.options.shelvesCounterSection1_5 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section1_5);
                            self.shelvingGroup_section1_5 = new THREE.Group();
                            self.options.posShelf2_sect1_5 =  13
                            self.options.posShelf1_sect1_5 = self.options.posShelf2_sect1_5 + 12
    
                            self.shelvingGroup_section1_5.add(self.createShelfToGroup(self.options.posShelf1_sect1_5, 1, '1_5', self.options.section1Length),
                            self.createShelfToGroup(self.options.posShelf2_sect1_5, 2, '1_5', self.options.section1Length)
                            );
                            
                            document.getElementById("InternalShelving1_S1_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_5").style.display = "flex";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S1_5").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S1_5").style.display = "none";
                            document.getElementById('internalShelving_sect1_5').value = 1
                            self.options.shelvesCounterSection1_5 = 1;
                        }
    
                    break;
                }
                

                if (self.options.shelvesCounterSection1_5 != 0) {

                    self.shelvingGroup_section1_5.position.y = self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y - 1

                    self.shelvingGroup_section1_5.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section1_5.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;

                    self.shelvingGroup_section1_5.name = 'shelvingGroup_section1_5';

                    self.scene.add(self.shelvingGroup_section1_5);


                    for (var i = 1; i <= self.options.shelvesCounterSection1_5; i++) {
                        self.shelvingGroup_section1_5.getObjectByName('internalShelf_1_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }

                } else {}

                self.options.heigh1Shelf1_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_5').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_5 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_5').textContent.match(/\d+(\.\d+)?/)[0]);
                
                self.options.heigh0Shelf1_5 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S1_5").addEventListener('click', function() {
                createShoeShelving_S1_5();
            });
            function createShoeShelving_S1_5() {
    
                var checkBox_InternalShelving_S1_5 = document.getElementById("ShoeShelving_S1_5");
    
                if ( document.getElementById("ShoeShelving_S1_5").checked == true || self.options.s1_5_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "flex";
                    document.getElementById("MainInternalShelving_S1_5").style.display = "none";
                    
                    document.getElementById("Drawer_S1_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_5").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection1_5 = 1;

                    document.getElementById("ShoeShelving_sect1_5").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect1_5").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_5);
                        
                        self.shelvingGroup_section1_5 = new THREE.Group();
                        self.options.posShelf1_sect1_5 = 14;

                        self.shelvingGroup_section1_5.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_5, 1, '1_5', self.options.section1Length));
                        self.shelvingGroup_section1_5.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_5, 1, '1_5', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1_5").style.display = "flex";
                        document.getElementById("InternalShelving2_S1_5").style.display = "none";

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_5").style.display = "flex";
                        document.getElementById("InternalShelving1_S1_5").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_5').value = 0
                        self.options.shelvesCounterSection1_5 = 0;
                    }

                    if (self.options.shelvesCounterSection1_5 != 0) {
    
                        self.shelvingGroup_section1_5.position.y = self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y - 1
        
                        self.shelvingGroup_section1_5.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        //!!
                        self.shelvingGroup_section1_5.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section1_5.name = 'shelvingGroup_section1_5';
        
                        self.scene.add(self.shelvingGroup_section1_5);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_5; i++) {
                            self.shelvingGroup_section1_5.getObjectByName('internalShelf_1_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection1_5; i++) {
                            self.shelvingGroup_section1_5.getObjectByName('internalShelfShoe_1_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S1_5").style.display = "flex";
                    document.getElementById("InternalShelving2_S1_5").style.display = "none";

    
    
                    self.options.s1_5_internlShelvinStatus = 1
                    self.options.s1_5_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection1_5 = 0
                    self.scene.remove(self.shelvingGroup_section1_5);
    
                    for (var i = 1; i <= 2; i++) {
                        document.getElementById(`InternalShelving${i}_S1_5`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect1_5").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                    document.getElementById("MainInternalShelving_S1_5").style.display = "flex";

                    document.getElementById("Drawer_S1_5").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS1_5").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S1_5").src="icons/Drawer_Close.jpg";

                    self.options.s1_5_internlShelvinStatus = 0
                    self.options.s1_5_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf1_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_5 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves1_5").addEventListener('click', requestChangeShoeShelving1_5); 
            document.getElementById("subButtonPlus_ShoeShelves1_5").addEventListener('click', requestChangeShoeShelving1_5); 
            document.getElementById("ShoeShelving_sect1_5").addEventListener('change', requestChangeShoeShelving1_5); 

            function requestChangeShoeShelving1_5 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect1_5();
            };
    
            function createShoeShelving_sect1_5() {
        
                self.options.s1_5_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect1_5").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection1_5 = 0
                        self.options.s1_5_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section1_5);
    
                        document.getElementById("ShoeShelving_S1_5").checked = false;
        
                        for (var i = 1; i <= 2; i++) {
                            document.getElementById(`InternalShelving${i}_S1_5`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect1_5").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_5").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S1_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_5").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection1_5 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect1_5").value = '1'
                            self.scene.remove(self.shelvingGroup_section1_5);
                            
                            self.shelvingGroup_section1_5 = new THREE.Group();
                            self.options.posShelf1_sect1_5 = 14;

                            self.shelvingGroup_section1_5.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_5, 1, '1_5', self.options.section1Length));
                            self.shelvingGroup_section1_5.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_5, 1, '1_5', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S1_5").style.display = "none";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                            document.getElementById("MainInternalShelving_S1_5").style.display = "flex";

                            document.getElementById("InternalShelving1_S1_5").style.display = "none";
                            document.getElementById('ShoeShelving_sect1_5').value = 0
                            self.options.shelvesCounterSection1_5 = 0;
                        }
    
                    break;
                  
                }

                self.options.heigh0Shelf1_5 = 5

        
                if (self.options.shelvesCounterSection1_5 != 0) {
    
                    self.shelvingGroup_section1_5.position.y = self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y - 1
    
                    self.shelvingGroup_section1_5.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_5.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section1_5.name = 'shelvingGroup_section1_5';
    
                    self.scene.add(self.shelvingGroup_section1_5);

                    for (var i = 1; i <= self.options.shelvesCounterSection1_5; i++) {
                        self.shelvingGroup_section1_5.getObjectByName('internalShelfShoe_1_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection1_5; i++) {
                        self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf1_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_5').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf1_5 = parseFloat(document.getElementById('PositionField_InternalShelving2_S1_5').textContent.match(/\d+(\.\d+)?/)[0]);                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section1_5_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S1_5_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_1_5 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_5_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s1_5_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+1).position.y += 1.05
                        if (self.options.s1_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_5_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf1_5-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = Math.floor( self.options.heigh1Shelf1_5 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf1_5 += 1
                            document.getElementById("PositionField_InternalShelving2_S1_5").innerHTML = Math.floor( self.options.heigh2Shelf1_5 ) +"cm";
                        } else{
                            self.options.heigh0Shelf1_5+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S1_5_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf1_5 > 10 && self.options.s1_5_ShelvingStatus === 'Wood' || self.options.heigh2Shelf1_5 > 25 && self.options.s1_5_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_5_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_5 += 1
                        self.options.heigh2Shelf1_5 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = Math.floor( self.options.heigh1Shelf1_5 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S1_5").innerHTML = Math.floor( self.options.heigh2Shelf1_5 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf1_5 > 10 && self.options.s1_5_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_5 > 13 && self.options.s1_5_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s1_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_1_5_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf1_5 += 1
                        self.options.heigh0Shelf1_5 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = Math.floor( self.options.heigh1Shelf1_5 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section1_5_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S1_5_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving2_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_5_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s1_5_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+2).position.y += 1.05
                    if (self.options.s1_5_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_1_5_'+'shelf'+2).position.y += 1.05
                    }

                    self.options.heigh2Shelf1_5 -= 1
                    self.options.heigh0Shelf1_5 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving2_S1_5").innerHTML = Math.floor( self.options.heigh2Shelf1_5 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S1_5_DOWN").addEventListener('click', async function() {

                if (self.options.heigh0Shelf1_5 > 10 && self.options.s1_5_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_5 > 13 && self.options.s1_5_ShelvingStatus === 'Shoe' ) {
    
                    self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+2).position.y -= 1.05
                    if (self.options.s1_5_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_1_5_'+'shelf'+2).position.y -= 1.05
                    }

                    self.options.heigh2Shelf1_5 += 1
                    self.options.heigh0Shelf1_5 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving2_S1_5").innerHTML = Math.floor( self.options.heigh2Shelf1_5 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });



            //section 1_6 shelf generating
            document.getElementById("InternalShelving_S1_6").addEventListener('click', function() {
                createInternalShelving_S1_6();
            });
            function createInternalShelving_S1_6() {

                var checkBox_InternalShelving_S1_6 = document.getElementById("InternalShelving_S1_6");

                if ( document.getElementById("InternalShelving_S1_6").checked == true || self.options.s1_6_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "flex";
                    document.getElementById("MainShoeShelving_S1_6").style.display = "none";

                    document.getElementById("Drawer_S1_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_6").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection1_6 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect1_6").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_6);
                        
                        self.shelvingGroup_section1_6 = new THREE.Group();
                        self.options.posShelf1_sect1_6 = 13;

                        self.shelvingGroup_section1_6.add(self.createShelfToGroup(self.options.posShelf1_sect1_6, 1, '1_6', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1_6").style.display = "flex";

                        document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                        document.getElementById("InternalShelving1_S1_6").style.display = "none";
                        document.getElementById('internalShelving_sect1_6').value = 0
                        self.options.shelvesCounterSection1_6 = 0;
                    }

                    if (self.options.shelvesCounterSection1_6 != 0) {

                        self.shelvingGroup_section1_6.position.y = self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y - 1
        
                        self.shelvingGroup_section1_6.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section1_6.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        self.shelvingGroup_section1_6.name = 'shelvingGroup_section1_6';
        
                        self.scene.add(self.shelvingGroup_section1_6);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_6; i++) {
                            self.shelvingGroup_section1_6.getObjectByName('internalShelf_1_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s1_6_internlShelvinStatus = 1
                    self.options.s1_6_ShelvingStatus = 'Wood'


                } 
                else {
                    self.options.shelvesCounterSection1_6 = 0
                    self.scene.remove(self.shelvingGroup_section1_6);

                    document.getElementById("InternalShelving1_S1_6").style.display = "none";
                    document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                    document.getElementById("MainShoeShelving_S1_6").style.display = "flex";

                    document.getElementById("internalShelving_sect1_6").value = '0'

                    self.options.s1_6_internlShelvinStatus = 0
                    self.options.s1_6_ShelvingStatus = 'none'

                }

            
                self.options.heigh1Shelf1_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_6 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves1_6").addEventListener('click', requestChangeShelving1_6); 
            document.getElementById("subButtonPlus_Shelves1_6").addEventListener('click', requestChangeShelving1_6); 
            document.getElementById("internalShelving_sect1_6").addEventListener('change', requestChangeShelving1_6);  

            function requestChangeShelving1_6 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect1_6();
            };

            function createInternalShelving_sect1_6() {


                switch (parseInt(document.getElementById("internalShelving_sect1_6").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection1_6 = 0
                        self.scene.remove(self.shelvingGroup_section1_6);

                        document.getElementById("InternalShelving_S1_6").checked = false;

                        document.getElementById("InternalShelving1_S1_6").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                        document.getElementById("MainShoeShelving_S1_6").style.display = "flex";

                        document.getElementById("internalShelving_sect1_6").value = '0'

                        document.getElementById("Drawer_S1_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_6").src="icons/Drawer_Close.jpg";

                    break;

                    case 1:
                        self.options.shelvesCounterSection1_6 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section1_6);
                            
                            self.shelvingGroup_section1_6 = new THREE.Group();
                            self.options.posShelf1_sect1_6 = 13;

                            self.shelvingGroup_section1_6.add(self.createShelfToGroup(self.options.posShelf1_sect1_6, 1, '1_6', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_6").style.display = "flex";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                            document.getElementById("InternalShelving1_S1_6").style.display = "none";
                            document.getElementById('internalShelving_sect1_6').value = 0
                            self.options.shelvesCounterSection1_6 = 0;  
                        }
                    break;  
                    
                }
                

                if (self.options.shelvesCounterSection1_6 != 0) {

                    self.shelvingGroup_section1_6.position.y = self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y - 1

                    self.shelvingGroup_section1_6.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section1_6.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;

                    self.shelvingGroup_section1_6.name = 'shelvingGroup_section1_6';

                    self.scene.add(self.shelvingGroup_section1_6);


                    for (var i = 1; i <= self.options.shelvesCounterSection1_6; i++) {
                        self.shelvingGroup_section1_6.getObjectByName('internalShelf_1_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }

                } else {}

                self.options.heigh1Shelf1_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_6').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh0Shelf1_6 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S1_6").addEventListener('click', function() {
                createShoeShelving_S1_6();
            });
            function createShoeShelving_S1_6() {
    
                var checkBox_InternalShelving_S1_6 = document.getElementById("ShoeShelving_S1_6");
    
                if ( document.getElementById("ShoeShelving_S1_6").checked == true || self.options.s1_6_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "flex";
                    document.getElementById("MainInternalShelving_S1_6").style.display = "none";
                    
                    document.getElementById("Drawer_S1_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS1_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_S1_6").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection1_6 = 1;

                    document.getElementById("ShoeShelving_sect1_6").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect1_6").value = '1'

                        self.scene.remove(self.shelvingGroup_section1_6);
                        
                        self.shelvingGroup_section1_6 = new THREE.Group();
                        self.options.posShelf1_sect1_6 = 14;

                        self.shelvingGroup_section1_6.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_6, 1, '1_6', self.options.section1Length));
                        self.shelvingGroup_section1_6.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_6, 1, '1_6', self.options.section1Length));

                        document.getElementById("InternalShelving1_S1_6").style.display = "flex";

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_6").style.display = "flex";
                        document.getElementById("InternalShelving1_S1_6").style.display = "none";
                        document.getElementById('ShoeShelving_sect1_6').value = 0
                        self.options.shelvesCounterSection1_6 = 0;
                    }

                    if (self.options.shelvesCounterSection1_6 != 0) {
    
                        self.shelvingGroup_section1_6.position.y = self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y - 1
        
                        self.shelvingGroup_section1_6.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
        
                        //!!
                        self.shelvingGroup_section1_6.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section1_6.name = 'shelvingGroup_section1_6';
        
                        self.scene.add(self.shelvingGroup_section1_6);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection1_6; i++) {
                            self.shelvingGroup_section1_6.getObjectByName('internalShelf_1_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection1_6; i++) {
                            self.shelvingGroup_section1_6.getObjectByName('internalShelfShoe_1_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S1_6").style.display = "flex";
                    

    
    
                    self.options.s1_6_internlShelvinStatus = 1
                    self.options.s1_6_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection1_6 = 0
                    self.scene.remove(self.shelvingGroup_section1_6);
    
                    document.getElementById("InternalShelving1_S1_6").style.display = "none";

                    
                    document.getElementById("ShoeShelving_sect1_6").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                    document.getElementById("MainInternalShelving_S1_6").style.display = "flex";

                    document.getElementById("Drawer_S1_6").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS1_6").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S1_6").src="icons/Drawer_Close.jpg";

                    self.options.s1_6_internlShelvinStatus = 0
                    self.options.s1_6_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf1_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf1_6 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves1_6").addEventListener('click', requestChangeShoeShelving1_6); 
            document.getElementById("subButtonPlus_ShoeShelves1_6").addEventListener('click', requestChangeShoeShelving1_6); 
            document.getElementById("ShoeShelving_sect1_6").addEventListener('change', requestChangeShoeShelving1_6); 

            function requestChangeShoeShelving1_6 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect1_6();
            };
    
            function createShoeShelving_sect1_6() {
        
                self.options.s1_6_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect1_6").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection1_6 = 0
                        self.options.s1_6_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section1_6);
    
                        document.getElementById("ShoeShelving_S1_6").checked = false;
        
                        document.getElementById("InternalShelving1_S1_6").style.display = "none";

                        document.getElementById("ShoeShelving_sect1_6").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                        document.getElementById("MainInternalShelving_S1_6").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S1_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS1_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S1_6").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection1_6 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect1_6").value = '1'
                            self.scene.remove(self.shelvingGroup_section1_6);
                            
                            self.shelvingGroup_section1_6 = new THREE.Group();
                            self.options.posShelf1_sect1_6 = 14;

                            self.shelvingGroup_section1_6.add(self.createShelfShoeToGroup(self.options.posShelf1_sect1_6, 1, '1_6', self.options.section1Length));
                            self.shelvingGroup_section1_6.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect1_6, 1, '1_6', self.options.section1Length));

                            document.getElementById("InternalShelving1_S1_6").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                            document.getElementById("MainInternalShelving_S1_6").style.display = "flex";

                            document.getElementById("InternalShelving1_S1_6").style.display = "none";
                            document.getElementById('ShoeShelving_sect1_6').value = 0
                            self.options.shelvesCounterSection1_6 = 0;
                        }
    
                    break;
                  
                }

                self.options.heigh0Shelf1_6 = 5

        
                if (self.options.shelvesCounterSection1_6 != 0) {
    
                    self.shelvingGroup_section1_6.position.y = self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y - 1
    
                    self.shelvingGroup_section1_6.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5;
    
                    self.shelvingGroup_section1_6.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section1_6.name = 'shelvingGroup_section1_6';
    
                    self.scene.add(self.shelvingGroup_section1_6);

                    for (var i = 1; i <= self.options.shelvesCounterSection1_6; i++) {
                        self.shelvingGroup_section1_6.getObjectByName('internalShelfShoe_1_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection1_6; i++) {
                        self.scene.getObjectByName('internalShelf_1_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf1_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S1_6').textContent.match(/\d+(\.\d+)?/)[0]);
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section1_6_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S1_6_UP").addEventListener('click', async function( ) {
                
                console.log(parseFloat(document.getElementById('PositionField_InternalShelving1_S1_6').textContent.match(/\d+(\.\d+)?/)[0]));
                console.log(self.options.s1_6_ShelvingStatus);

                if (parseFloat(document.getElementById('PositionField_InternalShelving1_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s1_6_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s1_6_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_1_6_'+'shelf'+1).position.y += 1.05
                    if (self.options.s1_6_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_1_6_'+'shelf'+1).position.y += 1.05
                    }

                    self.options.heigh1Shelf1_6-= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML = Math.floor( self.options.heigh1Shelf1_6 ) +"cm";

                    
                    self.options.heigh0Shelf1_6+= 1
                    


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving1_S1_6_DOWN").addEventListener('click', async function() {
                        
            

                if (self.options.heigh0Shelf1_6 > 10 && self.options.s1_6_ShelvingStatus === 'Wood' || self.options.heigh0Shelf1_6 > 13 && self.options.s1_6_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_1_6_'+'shelf'+1).position.y -= 1.05
                    if (self.options.s1_6_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_1_6_'+'shelf'+1).position.y -= 1.05
                    }

                    self.options.heigh1Shelf1_6 += 1
                    self.options.heigh0Shelf1_6 -= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML = Math.floor( self.options.heigh1Shelf1_6 ) +"cm";

                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });




            //section 2_1 shelf generating
            document.getElementById("InternalShelving_S2_1").addEventListener('click', function() {
                createInternalShelving_S2_1();
            });
    
            function createInternalShelving_S2_1() {
    
                var checkBox_InternalShelving_S2_1 = document.getElementById("InternalShelving_S2_1");
    
                if ( document.getElementById("InternalShelving_S2_1").checked == true || self.options.s2_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionMoveInternalShelving_S2_1").style.display = "flex";
                    document.getElementById("MainShoeShelving_S2_1").style.display = "none";

                    

                    document.getElementById("Drawer_S2").style.pointerEvents = "none";
                    document.getElementById("Drawer_Section2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection2_1 = 1;

                    document.getElementById("internalShelving_sect2_1").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                            
                        self.scene.remove(self.shelvingGroup_section2_1);
                        
                        self.shelvingGroup_section2_1 = new THREE.Group();
                        self.options.posShelf1_sect2_1 = 12

                        self.shelvingGroup_section2_1.add(self.createShelfToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                        for (var i = 2; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S2_1").style.display = "none";
                        document.getElementById("MainShoeShelving_S2_1").style.display = "flex";
                        document.getElementById("InternalShelving1_S2_1").style.display = "none";
                        document.getElementById('internalShelving_sect2_1').value = 0
                        self.options.shelvesCounterSection2_1 = 0;
                    }

                    if (self.options.shelvesCounterSection2_1 != 0) {
    
                        self.shelvingGroup_section2_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y
        
                        self.shelvingGroup_section2_1.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section2_1.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3 ;
        
                        self.shelvingGroup_section2_1.name = 'shelvingGroup_section2_1';
        
                        self.scene.add(self.shelvingGroup_section2_1);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_1; i++) {
                            self.shelvingGroup_section2_1.getObjectByName('internalShelf_2_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                    for (var i = 2; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                    }

    
    
                    self.options.s2_internlShelvinStatus = 1
                    self.options.s2_ShelvingStatus = 'Wood'
                    
                } 
                else {
                    self.options.shelvesCounterSection2_1 = 0
                    self.scene.remove(self.shelvingGroup_section2_1);
    
                    for (var i = 1; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                    }

                    document.getElementById("internalShelving_sect2_1").value = '0'
                    document.getElementById("sectionMoveInternalShelving_S2_1").style.display = "none";
                    document.getElementById("MainShoeShelving_S2_1").style.display = "flex";

                    document.getElementById("Drawer_S2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_Section2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S2").src="icons/Drawer_Close.jpg";

                    self.options.s2_internlShelvinStatus = 0
                    self.options.s2_ShelvingStatus = 'none'
    
                }
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_1 = 10
    
            }
            document.getElementById("subButtonMinus_Shelves2_1").addEventListener('click', requestChangeShelving2_1); 
            document.getElementById("subButtonPlus_Shelves2_1").addEventListener('click', requestChangeShelving2_1); 
            document.getElementById("internalShelving_sect2_1").addEventListener('change', requestChangeShelving2_1);  
    
    
            function requestChangeShelving2_1 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect2_1();
            };
    
    
            function createInternalShelving_sect2_1() {
            
                self.options.s2_ShelvingStatus = 'Wood'
                
                switch (parseInt(document.getElementById("internalShelving_sect2_1").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection2_1 = 0
                        self.options.s2_ShelvingStatus = 'none'

                        self.scene.remove(self.shelvingGroup_section2_1);
    
                        document.getElementById("InternalShelving_S2_1").checked = false;
    
                        for (var i = 1; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                        }

                        document.getElementById("internalShelving_sect2_1").value = '0'
                        document.getElementById("sectionMoveInternalShelving_S2_1").style.display = "none";
                        document.getElementById("MainShoeShelving_S2_1").style.display = "flex";

                        document.getElementById("Drawer_S2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2").src="icons/Drawer_Close.jpg";
    
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection2_1 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                            
                            self.scene.remove(self.shelvingGroup_section2_1);
                            
                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf1_sect2_1 = 12
    
                            self.shelvingGroup_section2_1.add(self.createShelfToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length));
    
                            document.getElementById("InternalShelving_S2_1").style.display = "flex";
                            for (var i = 2; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S2_1").style.display = "none";
                            document.getElementById("MainShoeShelving_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving_S2_1").style.display = "none";
                            document.getElementById('internalShelving_sect2_1').value = 0
                            self.options.shelvesCounterSection2_1 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection2_1 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section2_1);
                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf2_sect2_1 =  12
                            self.options.posShelf1_sect2_1 = self.options.posShelf2_sect2_1 + 12
    
                            self.shelvingGroup_section2_1.add(self.createShelfToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length)
                            );
                            
                            document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_1").style.display = "flex";
                            for (var i = 3; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 23 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = 10 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S2_1").style.display = "none";
                        document.getElementById('internalShelving_sect2_1').value = 1
                        self.options.shelvesCounterSection2_1 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection2_1 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section2_1);                        

                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf3_sect2_1 = 12
                            self.options.posShelf2_sect2_1 = self.options.posShelf3_sect2_1 + 12
                            self.options.posShelf1_sect2_1 = self.options.posShelf2_sect2_1 + 12

                        
                            self.shelvingGroup_section2_1.add(self.createShelfToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length), self.createShelfToGroup(self.options.posShelf3_sect2_1, 3, '2_1', self.options.section2Length)
                            );
                            document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_1").style.display = "flex";
                            for (var i = 4; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 35 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S2_1").style.display = "none";
                            document.getElementById('internalShelving_sect2_1').value = 2
                            self.options.shelvesCounterSection2_1 = 2;
                        }

                    break;  

                    case 4:

                        self.options.shelvesCounterSection2_1 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section2_1);                        

                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf4_sect2_1 = 12
                            self.options.posShelf3_sect2_1 = self.options.posShelf4_sect2_1 + 12
                            self.options.posShelf2_sect2_1 = self.options.posShelf3_sect2_1 + 12
                            self.options.posShelf1_sect2_1 = self.options.posShelf2_sect2_1 + 12
                        
                            self.shelvingGroup_section2_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect2_1, 3, '2_1', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect2_1, 4, '2_1', self.options.section2Length)
                            );
                            document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving4_S2_1").style.display = "flex";
                            for (var i = 5; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 47 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S2_1").style.display = "none";
                            document.getElementById('internalShelving_sect2_1').value = 3
                            self.options.shelvesCounterSection2_1 = 3;
                        }

                    break;  

                    case 5:

                        self.options.shelvesCounterSection2_1 = 5;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 69) {
                            
                            self.scene.remove(self.shelvingGroup_section2_1);                        

                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf5_sect2_1 = 12
                            self.options.posShelf4_sect2_1 = self.options.posShelf5_sect2_1 + 12
                            self.options.posShelf3_sect2_1 = self.options.posShelf4_sect2_1 + 12
                            self.options.posShelf2_sect2_1 = self.options.posShelf3_sect2_1 + 12
                            self.options.posShelf1_sect2_1 = self.options.posShelf2_sect2_1 + 12
                        
            
                            self.shelvingGroup_section2_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect2_1, 3, '2_1', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect2_1, 4, '2_1', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf5_sect2_1, 5, '2_1', self.options.section2Length)
                            );
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "flex";
                            }
                            document.getElementById("InternalShelving6_S2_1").style.display = "none";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 59 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving5_S2_1").style.display = "none";
                            document.getElementById('internalShelving_sect2_1').value = 4
                            self.options.shelvesCounterSection2_1 = 4;
                        }

                    break;  

                    case 6:

                        self.options.shelvesCounterSection2_1 = 6;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) > 82.8) {
                            self.scene.remove(self.shelvingGroup_section2_1);                        

                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf6_sect2_1 = 12
                            self.options.posShelf5_sect2_1 = self.options.posShelf6_sect2_1 + 12
                            self.options.posShelf4_sect2_1 = self.options.posShelf5_sect2_1 + 12
                            self.options.posShelf3_sect2_1 = self.options.posShelf4_sect2_1 + 12
                            self.options.posShelf2_sect2_1 = self.options.posShelf3_sect2_1 + 12
                            self.options.posShelf1_sect2_1 = self.options.posShelf2_sect2_1 + 12
                        
                            
                            self.shelvingGroup_section2_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect2_1, 3, '2_1', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect2_1, 4, '2_1', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf5_sect2_1, 5, '2_1', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf6_sect2_1, 6, '2_1', self.options.section2Length)
                            );
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "flex";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 71 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving6_S2_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving6_S2_1").style.display = "none";
                            document.getElementById('internalShelving_sect2_1').value = 5
                            self.options.shelvesCounterSection2_1 = 5;
                        }

                    break; 

                }

                self.options.heigh0Shelf2_1 = 10

    
                if (self.options.shelvesCounterSection2_1 != 0) {
    
                    self.shelvingGroup_section2_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y
    
                    self.shelvingGroup_section2_1.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;

                    self.shelvingGroup_section2_1.position.z = -self.options.room.width / 2 + self.options.shelf.width -3;

                    self.shelvingGroup_section2_1.name = 'shelvingGroup_section2_1';
    
                    self.scene.add(self.shelvingGroup_section2_1);
    
                    for (var i = 1; i <= self.options.shelvesCounterSection2_1; i++) {
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving3_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving4_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving5_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh6Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving6_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

         
            document.getElementById("ShoeShelving_S2_1").addEventListener('click', function() {
                createShoeShelving_S2_1();
            });
            function createShoeShelving_S2_1() {
    
                var checkBox_InternalShelving_S2_1 = document.getElementById("ShoeShelving_S2_1");
    
                if ( document.getElementById("ShoeShelving_S2_1").checked == true || self.options.s2_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S2_1").style.display = "flex";
                    document.getElementById("MainInternalShelving_S2_1").style.display = "none";
                    
                    document.getElementById("Drawer_S2").style.pointerEvents = "none";
                    document.getElementById("Drawer_Section2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection2_1 = 1;

                    document.getElementById("ShoeShelving_sect2_1").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect2_1").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_1);
                        
                        self.shelvingGroup_section2_1 = new THREE.Group();
                        self.options.posShelf1_sect2_1 = 14;

                        self.shelvingGroup_section2_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length));
                        self.shelvingGroup_section2_1.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                        for (var i = 2; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S2_1").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_1").style.display = "flex";
                        document.getElementById("InternalShelving1_S2_1").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_1').value = 0
                        self.options.shelvesCounterSection2_1 = 0;
                    }

                    if (self.options.shelvesCounterSection2_1 != 0) {
    
                        self.shelvingGroup_section2_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y
        
                        self.shelvingGroup_section2_1.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;

                        //!!
                        self.shelvingGroup_section2_1.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section2_1.name = 'shelvingGroup_section2_1';
        
                        self.scene.add(self.shelvingGroup_section2_1);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_1; i++) {
                            self.shelvingGroup_section2_1.getObjectByName('internalShelf_2_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection2_1; i++) {
                            self.shelvingGroup_section2_1.getObjectByName('internalShelfShoe_2_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                    for (var i = 2; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                    }

    
    
                    self.options.s2_internlShelvinStatus = 1
                    self.options.s2_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection2_1 = 0
                    self.scene.remove(self.shelvingGroup_section2_1);
    
                    for (var i = 1; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect2_1").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S2_1").style.display = "none";
                    document.getElementById("MainInternalShelving_S2_1").style.display = "flex";

                    document.getElementById("Drawer_S2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_Section2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S2").src="icons/Drawer_Close.jpg";

                    self.options.s2_internlShelvinStatus = 0
                    self.options.s2_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_1 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves2_1").addEventListener('click', requestChangeShoeShelving2_1); 
            document.getElementById("subButtonPlus_ShoeShelves2_1").addEventListener('click', requestChangeShoeShelving2_1); 
            document.getElementById("ShoeShelving_sect2_1").addEventListener('change', requestChangeShoeShelving2_1); 

            function requestChangeShoeShelving2_1 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect2_1();
            };
    
            function createShoeShelving_sect2_1() {
        

                self.options.s2_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect2_1").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection2_1 = 0
                        self.options.s2_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section2_1);
    
                        document.getElementById("ShoeShelving_S2_1").checked = false;
        
                        for (var i = 1; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect2_1").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S2_1").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_1").style.display = "flex";
    
                        document.getElementById("Drawer_S2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection2_1 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect2_1").value = '1'
                            self.scene.remove(self.shelvingGroup_section2_1);
                            
                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf1_sect2_1 = 14;

                            self.shelvingGroup_section2_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length));
                            self.shelvingGroup_section2_1.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                            for (var i = 2; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S2_1").style.display = "none";
                            document.getElementById("MainInternalShelving_S2_1").style.display = "flex";

                            document.getElementById("InternalShelving1_S2_1").style.display = "none";
                            document.getElementById('ShoeShelving_sect2_1').value = 0
                            self.options.shelvesCounterSection2_1 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection2_1 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section2_1);
                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf2_sect2_1 =  14;
                            self.options.posShelf1_sect2_1 = self.options.posShelf2_sect2_1 + 27.5;
    
                            self.shelvingGroup_section2_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length), self.createShelfShoeToGroup(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length));
                            
                            
                            document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_1").style.display = "flex";
                            for (var i = 3; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S2_1").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_1').value = 1
                        self.options.shelvesCounterSection2_1 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection2_1 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 74) {
                            self.scene.remove(self.shelvingGroup_section2_1);                        

                            self.shelvingGroup_section2_1 = new THREE.Group();
                            self.options.posShelf3_sect2_1 = 14
                            self.options.posShelf2_sect2_1 = self.options.posShelf3_sect2_1 + 27.5
                            self.options.posShelf1_sect2_1 = self.options.posShelf2_sect2_1 + 27.5

                        
                            self.shelvingGroup_section2_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect2_1, 1, '2_1', self.options.section2Length), self.createShelfShoeToGroup(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect2_1, 2, '2_1', self.options.section2Length), self.createShelfShoeToGroup(self.options.posShelf3_sect2_1, 3, '2_1', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf3_sect2_1, 3, '2_1', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_1").style.display = "flex";
                            for (var i = 4; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }        

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 69 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = 25 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = 25 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S2_1").style.display = "none";
                            document.getElementById('ShoeShelving_sect2_1').value = 2
                            self.options.shelvesCounterSection2_1 = 2;
                        }

                    break;  

                  
                }

                self.options.heigh0Shelf2_1 = 5

        
                if (self.options.shelvesCounterSection2_1 != 0) {
    
                    self.shelvingGroup_section2_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y
    
                    self.shelvingGroup_section2_1.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;

                    self.shelvingGroup_section2_1.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section2_1.name = 'shelvingGroup_section2_1';
    
                    self.scene.add(self.shelvingGroup_section2_1);

                    for (var i = 1; i <= self.options.shelvesCounterSection2_1; i++) {
                        self.shelvingGroup_section2_1.getObjectByName('internalShelfShoe_2_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection2_1; i++) {
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving3_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving4_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving5_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh6Shelf2_1 = parseFloat(document.getElementById('PositionField_InternalShelving6_S2_1').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

    
            //section2_1_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S2_1_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_2_1 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s2_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+1).position.y += 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf2_1-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = Math.floor( self.options.heigh1Shelf2_1 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf2_1 += 1
                            document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = Math.floor( self.options.heigh2Shelf2_1 ) +"cm";
                        } else{
                            self.options.heigh0Shelf2_1+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S2_1_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf2_1 > 10 && self.options.s2_ShelvingStatus === 'Wood' || self.options.heigh2Shelf2_1 > 25 && self.options.s2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_1 += 1
                        self.options.heigh2Shelf2_1 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = Math.floor( self.options.heigh1Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = Math.floor( self.options.heigh2Shelf2_1 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf2_1 > 10 && self.options.s2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_1 > 5 && self.options.s2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_1 += 1
                        self.options.heigh0Shelf2_1 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = Math.floor( self.options.heigh1Shelf2_1 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section2_1_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S2_1_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+2).position.y += 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf2_1 -= 1
                        self.options.heigh3Shelf2_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = Math.floor( self.options.heigh2Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = Math.floor( self.options.heigh3Shelf2_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+2).position.y += 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf2_1 -= 1
                        self.options.heigh0Shelf2_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = Math.floor( self.options.heigh2Shelf2_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S2_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf2_1 > 10 && self.options.s2_ShelvingStatus === 'Wood' || self.options.heigh3Shelf2_1 > 25 && self.options.s2_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf2_1 += 1
                        self.options.heigh3Shelf2_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = Math.floor( self.options.heigh2Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = Math.floor( self.options.heigh3Shelf2_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf2_1 > 10 && self.options.s2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_1 > 5 && self.options.s2_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf2_1 += 1
                        self.options.heigh0Shelf2_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = Math.floor( self.options.heigh2Shelf2_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section2_1_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S2_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+3).position.y += 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf2_1 -= 1
                        self.options.heigh4Shelf2_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = Math.floor( self.options.heigh3Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = Math.floor( self.options.heigh4Shelf2_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+3).position.y += 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf2_1 -= 1
                        self.options.heigh0Shelf2_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = Math.floor( self.options.heigh3Shelf2_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S2_1_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf2_1 > 10 && self.options.s2_ShelvingStatus === 'Wood' || self.options.heigh4Shelf2_1 > 5 && self.options.s2_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf2_1 += 1
                        self.options.heigh4Shelf2_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = Math.floor( self.options.heigh3Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = Math.floor( self.options.heigh4Shelf2_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf2_1 > 10 && self.options.s2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_1 > 5 && self.options.s2_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_1_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf2_1 += 1
                        self.options.heigh0Shelf2_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = Math.floor( self.options.heigh3Shelf2_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section2_1_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S2_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+5) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+4).position.y += 1.05
                        

                        self.options.heigh4Shelf2_1 -= 1
                        self.options.heigh5Shelf2_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = Math.floor( self.options.heigh4Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = Math.floor( self.options.heigh5Shelf2_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+4).position.y += 1.05
                        
    
                        self.options.heigh4Shelf2_1 -= 1
                        self.options.heigh0Shelf2_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = Math.floor( self.options.heigh4Shelf2_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S2_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+5) != undefined) {
                
                    if ( self.options.heigh5Shelf2_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+4).position.y -= 1.05
                       
        
                        self.options.heigh4Shelf2_1 += 1
                        self.options.heigh5Shelf2_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = Math.floor( self.options.heigh4Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = Math.floor( self.options.heigh5Shelf2_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf2_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+4).position.y -= 1.05
                        
        
                        self.options.heigh4Shelf2_1 += 1
                        self.options.heigh0Shelf2_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = Math.floor( self.options.heigh4Shelf2_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section2_1_shelf5 up&down
            document.getElementById("MoveInternalShelving5_S2_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+6) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving5_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+5).position.y += 1.05
                        

                        self.options.heigh5Shelf2_1 -= 1
                        self.options.heigh6Shelf2_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = Math.floor( self.options.heigh5Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving6_S2_1").innerHTML = Math.floor( self.options.heigh6Shelf2_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving5_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+5).position.y += 1.05
                        
    
                        self.options.heigh5Shelf2_1 -= 1
                        self.options.heigh0Shelf2_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = Math.floor( self.options.heigh5Shelf2_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving5_S2_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+6) != undefined) {
                
                    if ( self.options.heigh6Shelf2_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+5).position.y -= 1.05
                       
        
                        self.options.heigh5Shelf2_1 += 1
                        self.options.heigh6Shelf2_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = Math.floor( self.options.heigh5Shelf2_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving6_S2_1").innerHTML = Math.floor( self.options.heigh6Shelf2_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf2_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+5).position.y -= 1.05
                        
        
                        self.options.heigh5Shelf2_1 += 1
                        self.options.heigh0Shelf2_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = Math.floor( self.options.heigh5Shelf2_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section2_1_shelf6 up&down
            document.getElementById("MoveInternalShelving6_S2_1_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving6_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+6).position.y += 1.05

                    self.options.heigh6Shelf2_1 -= 1
                    self.options.heigh0Shelf2_1 += 1


                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving6_S2_1").innerHTML = ( self.options.heigh6Shelf2_1 ).toFixed(0) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving6_S2_1_DOWN").addEventListener('click', async function() {

                if ( self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+6).position.y - 2.4  >= 11 ) {

                    self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+6).position.y -= 1.05

                    self.options.heigh6Shelf2_1 += 1
                    self.options.heigh0Shelf2_1 -= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving6_S2_1").innerHTML = ( self.options.heigh6Shelf2_1 ).toFixed(0) +"cm";

                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });

            

    
    
            //section 2_2 shelf generating
            document.getElementById("InternalShelving_S2_2").addEventListener('click', function() {
                createInternalShelving_S2_2();
            });
            function createInternalShelving_S2_2() {
    
                
                var checkBox_InternalShelving_S2_2 = document.getElementById("InternalShelving_S2_2");
    
                if ( document.getElementById("InternalShelving_S2_2").checked == true || self.options.s2_2_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "flex";
                    document.getElementById("MainShoeShelving_S2_2").style.display = "none";

                    document.getElementById("Drawer_S2_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_2").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection2_2 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                        document.getElementById("internalShelving_sect2_2").value = '1'
    
                        self.scene.remove(self.shelvingGroup_section2_2);
                        
                        self.shelvingGroup_section2_2 = new THREE.Group();
                        self.options.posShelf1_sect2_2 = 13;
    
                        self.shelvingGroup_section2_2.add(self.createShelfToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length));
    
                        document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                        for (var i = 2; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                        }
    
                        self.scene.add(self.shelvingGroup_section2_2);
    
    
                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                        document.getElementById("InternalShelving1_S2_2").style.display = "none";
                        document.getElementById('internalShelving_sect2_2').value = 0
                        self.options.shelvesCounterSection2_2 = 0;
                    }
    
                    if (self.options.shelvesCounterSection2_2 != 0) {
    
                        self.shelvingGroup_section2_2.position.y = self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y - 1
        
                        self.shelvingGroup_section2_2.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
                        self.shelvingGroup_section2_2.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        self.shelvingGroup_section2_2.name = 'shelvingGroup_section2_2';
        
                        self.scene.add(self.shelvingGroup_section2_2);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_2; i++) {
                            self.shelvingGroup_section2_2.getObjectByName('internalShelf_2_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
    
                        }
        
                    } else {} 
                    
                    document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";

                    self.options.s2_2_internlShelvinStatus = 1
                    self.options.s2_2_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection2_2 = 0
                    self.scene.remove(self.shelvingGroup_section2_2);
    
                    for (var i = 1; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                    }

                    document.getElementById("internalShelving_sect2_2").value = '0'
                    document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                    document.getElementById("MainShoeShelving_S2_2").style.display = "flex";


                    document.getElementById("Drawer_S2_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS2_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S2_2").src="icons/Drawer_Close.jpg";

                    self.options.s2_2_internlShelvinStatus = 0
                    self.options.s2_2_ShelvingStatus = 'none'

    
                }
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                 
                self.options.heigh1Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_2 = 10
    
            };
            document.getElementById("subButtonMinus_Shelves2_2").addEventListener('click', requestChangeShelving2_2); 
            document.getElementById("subButtonPlus_Shelves2_2").addEventListener('click', requestChangeShelving2_2); 
            document.getElementById("internalShelving_sect2_2").addEventListener('change', requestChangeShelving2_2);  
    
            function requestChangeShelving2_2 () {
                
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect2_2();
            };
            
            function createInternalShelving_sect2_2() {
    
    
                switch ( parseInt(document.getElementById("internalShelving_sect2_2").value, 10) ) {
                    case 0:
    
                        self.options.shelvesCounterSection2_2 = 0
                        self.scene.remove(self.shelvingGroup_section2_2);
    
                        document.getElementById("InternalShelving_S2_2").checked = false;
    
                        for (var i = 1; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                        }

                        document.getElementById("internalShelving_sect2_2").value = '0'
                        document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                        document.getElementById("MainShoeShelving_S2_2").style.display = "flex";

        
                        document.getElementById("Drawer_S2_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section2_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_2").src="icons/Drawer_Close.jpg";
    
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection2_2 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                            self.scene.remove(self.shelvingGroup_section2_2);
                            
                            self.shelvingGroup_section2_2 = new THREE.Group();
                            self.options.posShelf1_sect2_2 = 13
    
                            self.shelvingGroup_section2_2.add(self.createShelfToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length));
    
                            document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_2").style.display = "none";
                            document.getElementById("InternalShelving3_S2_2").style.display = "none";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                        document.getElementById('internalShelving_sect2_2').value = 0
                        self.options.shelvesCounterSection2_2 = 0;}
                    break;
    
                    case 2:
                        self.options.shelvesCounterSection2_2 = 2;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
    
                            self.scene.remove(self.shelvingGroup_section2_2);
    
                            self.shelvingGroup_section2_2 = new THREE.Group();
                            self.options.posShelf2_sect2_2 = 13
                            self.options.posShelf1_sect2_2 = self.options.posShelf2_sect2_2 + 12
    
                            self.shelvingGroup_section2_2.add(self.createShelfToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_2, 2, '2_2', self.options.section2Length)
                            );
    
                            document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_2").style.display = "flex";
                            for (var i = 3; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML =  parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
                            document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML =  10 +"cm";
                            
    
                            
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S2_2").style.display = "none";
                            document.getElementById('internalShelving_sect2_2').value = 1
                            self.options.shelvesCounterSection2_2 = 1;
                        }
    
                    
                    break;
    
                    case 3:

                        self.options.shelvesCounterSection2_2 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section2_2);                        

                            self.shelvingGroup_section2_2 = new THREE.Group();
                            self.options.posShelf3_sect2_2 =13
                            self.options.posShelf2_sect2_2 = self.options.posShelf3_sect2_2 + 12
                            self.options.posShelf1_sect2_2 = self.options.posShelf2_sect2_2 + 12

                        
                            self.shelvingGroup_section2_2.add(self.createShelfToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_2, 2, '2_2', self.options.section2Length), self.createShelfToGroup(self.options.posShelf3_sect2_2, 3, '2_2', self.options.section2Length)
                            );
                            document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_2").style.display = "flex";
                            for (var i = 4; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S2_2").style.display = "none";
                            document.getElementById('internalShelving_sect2_2').value = 2
                            self.options.shelvesCounterSection2_2 = 2;
                        }

                    break;  
                    
                    case 4:

                        self.options.shelvesCounterSection2_2 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section2_2);                        

                            self.shelvingGroup_section2_2 = new THREE.Group();
                            self.options.posShelf4_sect2_2 = 13
                            self.options.posShelf3_sect2_2 = self.options.posShelf4_sect2_2 + 12
                            self.options.posShelf2_sect2_2 = self.options.posShelf3_sect2_2 + 12
                            self.options.posShelf1_sect2_2 = self.options.posShelf2_sect2_2 + 12
                        
                            self.shelvingGroup_section2_2.add(
                                self.createShelfToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf2_sect2_2, 2, '2_2', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect2_2, 3, '2_2', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect2_2, 4, '2_2', self.options.section2Length)
                            );
                            document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving4_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving5_S2_2").style.display = "none";



                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 48 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S2_2").style.display = "none";
                            document.getElementById('internalShelving_sect2_2').value = 3
                            self.options.shelvesCounterSection2_2 = 3;
                        }

                    break;  

                    case 5:

                        self.options.shelvesCounterSection2_2 = 5;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 69) {
                            
                            self.scene.remove(self.shelvingGroup_section2_2);                        

                            self.shelvingGroup_section2_2 = new THREE.Group();
                            self.options.posShelf5_sect2_2 = 13
                            self.options.posShelf4_sect2_2 = self.options.posShelf5_sect2_2 + 12
                            self.options.posShelf3_sect2_2 = self.options.posShelf4_sect2_2 + 12
                            self.options.posShelf2_sect2_2 = self.options.posShelf3_sect2_2 + 12
                            self.options.posShelf1_sect2_2 = self.options.posShelf2_sect2_2 + 12
                        
            
                            self.shelvingGroup_section2_2.add(
                                self.createShelfToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf2_sect2_2, 2, '2_2', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect2_2, 3, '2_2', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect2_2, 4, '2_2', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf5_sect2_2, 5, '2_2', self.options.section2Length)
                            );
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "flex";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 60 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S2_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving5_S2_2").style.display = "none";
                            document.getElementById('internalShelving_sect2_2').value = 4
                            self.options.shelvesCounterSection2_2 = 4;
                        }

                    break;  
                }
                
    
                if (self.options.shelvesCounterSection2_2 != 0) {
    
                    self.shelvingGroup_section2_2.position.y = self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y - 1
    
                    self.shelvingGroup_section2_2.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
    
    
                    self.shelvingGroup_section2_2.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
    
                    self.shelvingGroup_section2_2.name = 'shelvingGroup_section2_2';
    
                    self.scene.add(self.shelvingGroup_section2_2);

    
                    for (var i = 1; i <= self.options.shelvesCounterSection2_2; i++) {
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                       
                    }
      
    
                } else {}
    
    
                self.options.heigh1Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_2').textContent.match(/\d+(\.\d+)?/)[0]); 
                self.options.heigh2Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving3_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving4_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving5_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);

                self.options.heigh0Shelf2_2 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };


            document.getElementById("ShoeShelving_S2_2").addEventListener('click', function() {
                createShoeShelving_S2_2();
            });
            function createShoeShelving_S2_2() {
    
                var checkBox_InternalShelving_S2_2 = document.getElementById("ShoeShelving_S2_2");
    
                if ( document.getElementById("ShoeShelving_S2_2").checked == true || self.options.s2_2_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "flex";
                    document.getElementById("MainInternalShelving_S2_2").style.display = "none";
                    
                    document.getElementById("Drawer_S2_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_2").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection2_2 = 1;

                    document.getElementById("ShoeShelving_sect2_2").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect2_2").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_2);
                        
                        self.shelvingGroup_section2_2 = new THREE.Group();
                        self.options.posShelf1_sect2_2 = 14;

                        self.shelvingGroup_section2_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length));
                        self.shelvingGroup_section2_2.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                        for (var i = 2; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_2").style.display = "flex";
                        document.getElementById("InternalShelving1_S2_2").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_2').value = 0
                        self.options.shelvesCounterSection2_2 = 0;
                    }

                    if (self.options.shelvesCounterSection2_2 != 0) {
    
                        self.shelvingGroup_section2_2.position.y = self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y - 1
        
                        self.shelvingGroup_section2_2.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section2_2.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section2_2.name = 'shelvingGroup_section2_2';
        
                        self.scene.add(self.shelvingGroup_section2_2);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_2; i++) {
                            self.shelvingGroup_section2_2.getObjectByName('internalShelf_2_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection2_2; i++) {
                            self.shelvingGroup_section2_2.getObjectByName('internalShelfShoe_2_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                    for (var i = 2; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                    }

    
    
                    self.options.s2_2_internlShelvinStatus = 1
                    self.options.s2_2_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection2_2 = 0
                    self.scene.remove(self.shelvingGroup_section2_2);
    
                    for (var i = 1; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect2_2").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                    document.getElementById("MainInternalShelving_S2_2").style.display = "flex";

                    document.getElementById("Drawer_S2_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS2_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S2_2").src="icons/Drawer_Close.jpg";

                    self.options.s2_2_internlShelvinStatus = 0
                    self.options.s2_2_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_2 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves2_2").addEventListener('click', requestChangeShoeShelving2_2); 
            document.getElementById("subButtonPlus_ShoeShelves2_2").addEventListener('click', requestChangeShoeShelving2_2); 
            document.getElementById("ShoeShelving_sect2_2").addEventListener('change', requestChangeShoeShelving2_2); 

            function requestChangeShoeShelving2_2 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect2_2();
            };
    
            function createShoeShelving_sect2_2() {
        

                self.options.s2_2_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect2_2").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection2_2 = 0
                        self.options.s2_2_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section2_2);
    
                        document.getElementById("ShoeShelving_S2_2").checked = false;
        
                        for (var i = 1; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect2_2").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_2").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S2_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_2").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection2_2 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect2_2").value = '1'
                            self.scene.remove(self.shelvingGroup_section2_2);
                            
                            self.shelvingGroup_section2_2 = new THREE.Group();
                            self.options.posShelf1_sect2_2 = 14;

                            self.shelvingGroup_section2_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length));
                            self.shelvingGroup_section2_2.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                            for (var i = 2; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                            document.getElementById("MainInternalShelving_S2_2").style.display = "flex";

                            document.getElementById("InternalShelving1_S2_2").style.display = "none";
                            document.getElementById('ShoeShelving_sect2_2').value = 0
                            self.options.shelvesCounterSection2_2 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection2_2 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section2_2);
                            self.shelvingGroup_section2_2 = new THREE.Group();
                            self.options.posShelf2_sect2_2 =  14;
                            self.options.posShelf1_sect2_2 = self.options.posShelf2_sect2_2 + 27.5;
    
                            self.shelvingGroup_section2_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length), self.createShelfShoeToGroup(self.options.posShelf2_sect2_2, 2, '2_2', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect2_2, 2, '2_2', self.options.section2Length));
                            
                            
                            document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_2").style.display = "flex";
                            for (var i = 3; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S2_2").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_2').value = 1
                        self.options.shelvesCounterSection2_2 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection2_2 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 74) {
                            self.scene.remove(self.shelvingGroup_section2_2);                        

                            self.shelvingGroup_section2_2 = new THREE.Group();
                            self.options.posShelf3_sect2_2 = 14
                            self.options.posShelf2_sect2_2 = self.options.posShelf3_sect2_2 + 27.5
                            self.options.posShelf1_sect2_2 = self.options.posShelf2_sect2_2 + 27.5

                        
                            self.shelvingGroup_section2_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect2_2, 1, '2_2', self.options.section2Length), self.createShelfShoeToGroup(self.options.posShelf2_sect2_2, 2, '2_2', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect2_2, 2, '2_2', self.options.section2Length), self.createShelfShoeToGroup(self.options.posShelf3_sect2_2, 3, '2_2', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf3_sect2_2, 3, '2_2', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_2").style.display = "flex";
                            for (var i = 4; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }        

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 69 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = 25 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = 25 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S2_2").style.display = "none";
                            document.getElementById('ShoeShelving_sect2_2').value = 2
                            self.options.shelvesCounterSection2_2 = 2;
                        }

                    break;  

                  
                }

                self.options.heigh0Shelf2_2 = 5

        
                if (self.options.shelvesCounterSection2_2 != 0) {
    
                    self.shelvingGroup_section2_2.position.y = self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y - 1
    
                    self.shelvingGroup_section2_2.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
    
                    self.shelvingGroup_section2_2.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section2_2.name = 'shelvingGroup_section2_2';
    
                    self.scene.add(self.shelvingGroup_section2_2);

                    for (var i = 1; i <= self.options.shelvesCounterSection2_2; i++) {
                        self.shelvingGroup_section2_2.getObjectByName('internalShelfShoe_2_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection2_2; i++) {
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving3_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving4_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf2_2 = parseFloat(document.getElementById('PositionField_InternalShelving5_S2_2').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
    
    

            //section2_2_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S2_2_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_2_2 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+1).position.y += 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf2_2-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = Math.floor( self.options.heigh1Shelf2_2 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf2_2 += 1
                            document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = Math.floor( self.options.heigh2Shelf2_2 ) +"cm";
                        } else{
                            self.options.heigh0Shelf2_2+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S2_2_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf2_2 > 10 && self.options.s2_2_ShelvingStatus === 'Wood' || self.options.heigh2Shelf2_2 > 25 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_2 += 1
                        self.options.heigh2Shelf2_2 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = Math.floor( self.options.heigh1Shelf2_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = Math.floor( self.options.heigh2Shelf2_2 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf2_2 > 10 && self.options.s2_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_2 > 13 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_2 += 1
                        self.options.heigh0Shelf2_2 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = Math.floor( self.options.heigh1Shelf2_2 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section2_2_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S2_2_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+2).position.y += 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf2_2 -= 1
                        self.options.heigh3Shelf2_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = Math.floor( self.options.heigh2Shelf2_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = Math.floor( self.options.heigh3Shelf2_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+2).position.y += 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf2_2 -= 1
                        self.options.heigh0Shelf2_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = Math.floor( self.options.heigh2Shelf2_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S2_2_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf2_2 > 10 && self.options.s2_2_ShelvingStatus === 'Wood' || self.options.heigh3Shelf2_2 > 25 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf2_2 += 1
                        self.options.heigh3Shelf2_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = Math.floor( self.options.heigh2Shelf2_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = Math.floor( self.options.heigh3Shelf2_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf2_2 > 10 && self.options.s2_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_2 > 13 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf2_2 += 1
                        self.options.heigh0Shelf2_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = Math.floor( self.options.heigh2Shelf2_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section2_2_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S2_2_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+3).position.y += 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf2_2 -= 1
                        self.options.heigh4Shelf2_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = Math.floor( self.options.heigh3Shelf2_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = Math.floor( self.options.heigh4Shelf2_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+3).position.y += 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf2_2 -= 1
                        self.options.heigh0Shelf2_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = Math.floor( self.options.heigh3Shelf2_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S2_2_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf2_2 > 10 && self.options.s2_2_ShelvingStatus === 'Wood' || self.options.heigh4Shelf2_2 > 13 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf2_2 += 1
                        self.options.heigh4Shelf2_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = Math.floor( self.options.heigh3Shelf2_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = Math.floor( self.options.heigh4Shelf2_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf2_2 > 10 && self.options.s2_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_2 > 13 && self.options.s2_2_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s2_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_2_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf2_2 += 1
                        self.options.heigh0Shelf2_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = Math.floor( self.options.heigh3Shelf2_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section2_2_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S2_2_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+5) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+4).position.y += 1.05
                        

                        self.options.heigh4Shelf2_2 -= 1
                        self.options.heigh5Shelf2_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = Math.floor( self.options.heigh4Shelf2_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S2_2").innerHTML = Math.floor( self.options.heigh5Shelf2_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+4).position.y += 1.05
                        
    
                        self.options.heigh4Shelf2_2 -= 1
                        self.options.heigh0Shelf2_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = Math.floor( self.options.heigh4Shelf2_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S2_2_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+5) != undefined) {
                
                    if ( self.options.heigh5Shelf2_2 >= 11 ) {
        
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+4).position.y -= 1.05
                       
        
                        self.options.heigh4Shelf2_2 += 1
                        self.options.heigh5Shelf2_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = Math.floor( self.options.heigh4Shelf2_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S2_2").innerHTML = Math.floor( self.options.heigh5Shelf2_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf2_2 >= 11 ) {
        
                        self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+4).position.y -= 1.05
                        
        
                        self.options.heigh4Shelf2_2 += 1
                        self.options.heigh0Shelf2_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = Math.floor( self.options.heigh4Shelf2_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section2_2_shelf5 up&down
            document.getElementById("MoveInternalShelving5_S2_2_UP").addEventListener('click', async function() {

                if (parseFloat(document.getElementById('PositionField_InternalShelving5_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+5).position.y += 1.05
                    

                    self.options.heigh5Shelf2_2 -= 1
                    self.options.heigh0Shelf2_2 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving5_S2_2").innerHTML = Math.floor( self.options.heigh5Shelf2_2 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving5_S2_2_DOWN").addEventListener('click', async function() {

                if ( self.options.heigh0Shelf2_2 >= 11 ) {
    
                    self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+5).position.y -= 1.05
                    
    
                    self.options.heigh5Shelf2_2 += 1
                    self.options.heigh0Shelf2_2 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving5_S2_2").innerHTML = Math.floor( self.options.heigh5Shelf2_2 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });
            
            


            //section 2_3 shelf generating
            document.getElementById("InternalShelving_S2_3").addEventListener('click', function() {
                createInternalShelving_S2_3();
            });
    
            function createInternalShelving_S2_3() {
    
                var checkBox_InternalShelving_S2_3 = document.getElementById("InternalShelving_S2_3");
    
                if ( document.getElementById("InternalShelving_S2_3").checked == true || self.options.s2_3_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "flex";
                    document.getElementById("MainShoeShelving_S2_3").style.display = "none";

                    document.getElementById("Drawer_S2_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_3").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection2_3 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                        document.getElementById("internalShelving_sect2_3").value = '1'
    
                        self.scene.remove(self.shelvingGroup_section2_3);
                        
                        self.shelvingGroup_section2_3 = new THREE.Group();
                        self.options.posShelf1_sect2_3 = 13;
    
                        self.shelvingGroup_section2_3.add(self.createShelfToGroup(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length));
    
                        document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                        for (var i = 2; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";

    
                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                        document.getElementById("InternalShelving1_S2_3").style.display = "none";
                        document.getElementById('internalShelving_sect2_3').value = 0
                        self.options.shelvesCounterSection2_3 = 0;
                    }
    
                    if (self.options.shelvesCounterSection2_3 != 0) {
    
                        self.shelvingGroup_section2_3.position.y = self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y - 1
        
                        self.shelvingGroup_section2_3.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section2_3.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        self.shelvingGroup_section2_3.name = 'shelvingGroup_section2_3';
        
                        self.scene.add(self.shelvingGroup_section2_3);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_3; i++) {
                            self.shelvingGroup_section2_3.getObjectByName('internalShelf_2_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        
    
                    } else {}     
    
                    self.options.s2_3_internlShelvinStatus = 1
                    self.options.s2_3_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection2_3 = 0
                    self.scene.remove(self.shelvingGroup_section2_3);
    
                    for (var i = 1; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                    }
                    document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                    document.getElementById("MainShoeShelving_S2_3").style.display = "flex";

                    document.getElementById("internalShelving_sect2_3").value = '0'

                    self.options.s2_3_internlShelvinStatus = 0
                    self.options.s2_3_ShelvingStatus = 'none'

    
                }
    
               
                self.options.heigh1Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_3 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
    
            document.getElementById("subButtonMinus_Shelves2_3").addEventListener('click', requestChangeShelving2_3); 
            document.getElementById("subButtonPlus_Shelves2_3").addEventListener('click', requestChangeShelving2_3); 
            document.getElementById("internalShelving_sect2_3").addEventListener('change', requestChangeShelving2_3);  
    
            function requestChangeShelving2_3 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect2_3();
            };
    
            function createInternalShelving_sect2_3() {
    
    
                switch (parseInt(document.getElementById("internalShelving_sect2_3").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection2_3 = 0
                        self.scene.remove(self.shelvingGroup_section2_3);
    
                        document.getElementById("InternalShelving_S2_3").checked = false;
                        for (var i = 1; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                        }
                        document.getElementById("InternalShelving2_S2_3").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                        document.getElementById("MainShoeShelving_S2_3").style.display = "flex";

                        document.getElementById("internalShelving_sect2_3").value = '0'
                        

                        document.getElementById("Drawer_S2_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_3").src="icons/Drawer_Close.jpg";
    
                    break;
                    case 1:
                        self.options.shelvesCounterSection2_3 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section2_3);
                            
                            self.shelvingGroup_section2_3 = new THREE.Group();
                            self.options.posShelf1_sect2_3 = 13;
    
                            self.shelvingGroup_section2_3.add(self.createShelfToGroup(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length));
    
                            document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_3").style.display = "none";
                            document.getElementById("InternalShelving3_S2_3").style.display = "none";
                            document.getElementById("InternalShelving4_S2_3").style.display = "none";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                            document.getElementById("InternalShelving1_S2_3").style.display = "none";
                            document.getElementById('internalShelving_sect2_3').value = 0
                            self.options.shelvesCounterSection2_3 = 0;  
                        }
                    break;
                    case 2:
                        self.options.shelvesCounterSection2_3 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section2_3);
                            self.shelvingGroup_section2_3 = new THREE.Group();
                            self.options.posShelf2_sect2_3 =  13
                            self.options.posShelf1_sect2_3 = self.options.posShelf2_sect2_3 + 12
    
                            self.shelvingGroup_section2_3.add(self.createShelfToGroup(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_3, 2, '2_3', self.options.section2Length)
                            );
                            
                            document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_3").style.display = "none";
                            document.getElementById("InternalShelving4_S2_3").style.display = "none";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S2_3").style.display = "none";
                            document.getElementById('internalShelving_sect2_3').value = 1
                            self.options.shelvesCounterSection2_3 = 1;
                        }
    
                    break;    
                    case 3:

                        self.options.shelvesCounterSection2_3 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section2_3);                        

                            self.shelvingGroup_section2_3 = new THREE.Group();
                            self.options.posShelf3_sect2_3 =13
                            self.options.posShelf2_sect2_3 = self.options.posShelf3_sect2_3 + 12
                            self.options.posShelf1_sect2_3 = self.options.posShelf2_sect2_3 + 12

                        
                            self.shelvingGroup_section2_3.add(self.createShelfToGroup(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_3, 2, '2_3', self.options.section2Length), self.createShelfToGroup(self.options.posShelf3_sect2_3, 3, '2_3', self.options.section2Length)
                            );
                            document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_3").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S2_3").style.display = "none";
                            document.getElementById('internalShelving_sect2_3').value = 2
                            self.options.shelvesCounterSection2_3 = 2;
                        }

                    break;  
                    case 4:

                        self.options.shelvesCounterSection2_3 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section2_3);                        

                            self.shelvingGroup_section2_3 = new THREE.Group();
                            self.options.posShelf4_sect2_3 = 13
                            self.options.posShelf3_sect2_3 = self.options.posShelf4_sect2_3 + 12
                            self.options.posShelf2_sect2_3 = self.options.posShelf3_sect2_3 + 12
                            self.options.posShelf1_sect2_3 = self.options.posShelf2_sect2_3 + 12
                        
                            self.shelvingGroup_section2_3.add(
                                self.createShelfToGroup(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length),
                                self.createShelfToGroup(self.options.posShelf2_sect2_3, 2, '2_3', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect2_3, 3, '2_3', self.options.section2Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect2_3, 4, '2_3', self.options.section2Length)
                            );
                            document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving4_S2_3").style.display = "flex";
                            


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 48 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S2_3").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S2_3").style.display = "none";
                            document.getElementById('internalShelving_sect2_3').value = 3
                            self.options.shelvesCounterSection2_3 = 3;
                        }

                    break;  
                }

    
                if (self.options.shelvesCounterSection2_3 != 0) {
    
                    self.shelvingGroup_section2_3.position.y = self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y - 1
    
                    self.shelvingGroup_section2_3.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
    
                    self.shelvingGroup_section2_3.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
    
                    self.shelvingGroup_section2_3.name = 'shelvingGroup_section2_3';
    
                    self.scene.add(self.shelvingGroup_section2_3);
    
                    for (var i = 1; i <= self.options.shelvesCounterSection2_3; i++) {
                        self.shelvingGroup_section2_3.getObjectByName('internalShelf_2_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    

                self.options.heigh1Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving3_S2_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving4_S2_3').textContent.match(/\d+(\.\d+)?/)[0]);

                self.options.heigh0Shelf2_3 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };
    

            document.getElementById("ShoeShelving_S2_3").addEventListener('click', function() {
                createShoeShelving_S2_3();
            });
            function createShoeShelving_S2_3() {
    
                var checkBox_InternalShelving_S2_3 = document.getElementById("ShoeShelving_S2_3");
    
                if ( document.getElementById("ShoeShelving_S2_3").checked == true || self.options.s2_3_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "flex";
                    document.getElementById("MainInternalShelving_S2_3").style.display = "none";
                    
                    document.getElementById("Drawer_S2_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_3").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection2_3 = 1;

                    document.getElementById("ShoeShelving_sect2_3").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect2_3").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_3);
                        
                        self.shelvingGroup_section2_3 = new THREE.Group();
                        self.options.posShelf1_sect2_3 = 14;

                        self.shelvingGroup_section2_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length));
                        self.shelvingGroup_section2_3.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                        for (var i = 2; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_3").style.display = "flex";
                        document.getElementById("InternalShelving1_S2_3").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_3').value = 0
                        self.options.shelvesCounterSection2_3 = 0;
                    }

                    if (self.options.shelvesCounterSection2_3 != 0) {
    
                        self.shelvingGroup_section2_3.position.y = self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y - 1
        
                        self.shelvingGroup_section2_3.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section2_3.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section2_3.name = 'shelvingGroup_section2_3';
        
                        self.scene.add(self.shelvingGroup_section2_3);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_3; i++) {
                            self.shelvingGroup_section2_3.getObjectByName('internalShelf_2_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection2_3; i++) {
                            self.shelvingGroup_section2_3.getObjectByName('internalShelfShoe_2_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                    for (var i = 2; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                    }

    
    
                    self.options.s2_3_internlShelvinStatus = 1
                    self.options.s2_3_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection2_3 = 0
                    self.scene.remove(self.shelvingGroup_section2_3);
    
                    for (var i = 1; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect2_3").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                    document.getElementById("MainInternalShelving_S2_3").style.display = "flex";

                    document.getElementById("Drawer_S2_3").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS2_3").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S2_3").src="icons/Drawer_Close.jpg";

                    self.options.s2_3_internlShelvinStatus = 0
                    self.options.s2_3_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_3 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves2_3").addEventListener('click', requestChangeShoeShelving2_3); 
            document.getElementById("subButtonPlus_ShoeShelves2_3").addEventListener('click', requestChangeShoeShelving2_3); 
            document.getElementById("ShoeShelving_sect2_3").addEventListener('change', requestChangeShoeShelving2_3); 

            function requestChangeShoeShelving2_3 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect2_3();
            };
    
            function createShoeShelving_sect2_3() {
        

                self.options.s2_3_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect2_3").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection2_3 = 0
                        self.options.s2_3_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section2_3);
    
                        document.getElementById("ShoeShelving_S2_3").checked = false;
        
                        for (var i = 1; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect2_3").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_3").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S2_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_3").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection2_3 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect2_3").value = '1'
                            self.scene.remove(self.shelvingGroup_section2_3);
                            
                            self.shelvingGroup_section2_3 = new THREE.Group();
                            self.options.posShelf1_sect2_3 = 14;

                            self.shelvingGroup_section2_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length));
                            self.shelvingGroup_section2_3.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                            for (var i = 2; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                            document.getElementById("MainInternalShelving_S2_3").style.display = "flex";

                            document.getElementById("InternalShelving1_S2_3").style.display = "none";
                            document.getElementById('ShoeShelving_sect2_3').value = 0
                            self.options.shelvesCounterSection2_3 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection2_3 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section2_3);
                            self.shelvingGroup_section2_3 = new THREE.Group();
                            self.options.posShelf2_sect2_3 =  14;
                            self.options.posShelf1_sect2_3 = self.options.posShelf2_sect2_3 + 27.5;
    
                            self.shelvingGroup_section2_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect2_3, 1, '2_3', self.options.section2Length), self.createShelfShoeToGroup(self.options.posShelf2_sect2_3, 2, '2_3', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect2_3, 2, '2_3', self.options.section2Length));
                            
                            
                            document.getElementById("InternalShelving1_S2_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_3").style.display = "flex";
                            for (var i = 3; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S2_3").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_3').value = 1
                        self.options.shelvesCounterSection2_3 = 1;}
    
                    break;
                }

                self.options.heigh0Shelf2_3 = 5

        
                if (self.options.shelvesCounterSection2_3 != 0) {
    
                    self.shelvingGroup_section2_3.position.y = self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y - 1
    
                    self.shelvingGroup_section2_3.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
    
                    self.shelvingGroup_section2_3.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section2_3.name = 'shelvingGroup_section2_3';
    
                    self.scene.add(self.shelvingGroup_section2_3);

                    for (var i = 1; i <= self.options.shelvesCounterSection2_3; i++) {
                        self.shelvingGroup_section2_3.getObjectByName('internalShelfShoe_2_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection2_3; i++) {
                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving3_S2_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf2_3 = parseFloat(document.getElementById('PositionField_InternalShelving4_S2_3').textContent.match(/\d+(\.\d+)?/)[0]);
                

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            

    
            //section2_3_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S2_3_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_2_3 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+1).position.y += 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf2_3-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = Math.floor( self.options.heigh1Shelf2_3 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf2_3 += 1
                            document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = Math.floor( self.options.heigh2Shelf2_3 ) +"cm";
                        } else{
                            self.options.heigh0Shelf2_3+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S2_3_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf2_3 > 10 && self.options.s2_3_ShelvingStatus === 'Wood' || self.options.heigh2Shelf2_3 > 25 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_3 += 1
                        self.options.heigh2Shelf2_3 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = Math.floor( self.options.heigh1Shelf2_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = Math.floor( self.options.heigh2Shelf2_3 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf2_3 > 10 && self.options.s2_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_3 > 13 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_3 += 1
                        self.options.heigh0Shelf2_3 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = Math.floor( self.options.heigh1Shelf2_3 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section2_3_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S2_3_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+2).position.y += 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf2_3 -= 1
                        self.options.heigh3Shelf2_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = Math.floor( self.options.heigh2Shelf2_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = Math.floor( self.options.heigh3Shelf2_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+2).position.y += 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf2_3 -= 1
                        self.options.heigh0Shelf2_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = Math.floor( self.options.heigh2Shelf2_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S2_3_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf2_3 > 10 && self.options.s2_3_ShelvingStatus === 'Wood' || self.options.heigh3Shelf2_3 > 25 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf2_3 += 1
                        self.options.heigh3Shelf2_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = Math.floor( self.options.heigh2Shelf2_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = Math.floor( self.options.heigh3Shelf2_3 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf2_3 > 10 && self.options.s2_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_3 > 13 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf2_3 += 1
                        self.options.heigh0Shelf2_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = Math.floor( self.options.heigh2Shelf2_3 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section2_3_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S2_3_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+3).position.y += 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf2_3 -= 1
                        self.options.heigh4Shelf2_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = Math.floor( self.options.heigh3Shelf2_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S2_3").innerHTML = Math.floor( self.options.heigh4Shelf2_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+3).position.y += 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf2_3 -= 1
                        self.options.heigh0Shelf2_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = Math.floor( self.options.heigh3Shelf2_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S2_3_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf2_3 > 10 && self.options.s2_3_ShelvingStatus === 'Wood' || self.options.heigh4Shelf2_3 > 25 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf2_3 += 1
                        self.options.heigh4Shelf2_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = Math.floor( self.options.heigh3Shelf2_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S2_3").innerHTML = Math.floor( self.options.heigh4Shelf2_3 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf2_3 > 10 && self.options.s2_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_3 > 13 && self.options.s2_3_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s2_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_3_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf2_3 += 1
                        self.options.heigh0Shelf2_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = Math.floor( self.options.heigh3Shelf2_3 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section2_3_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S2_3_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving4_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+4).position.y += 1.05
                    

                    self.options.heigh4Shelf2_3 -= 1
                    self.options.heigh0Shelf2_3 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving4_S2_3").innerHTML = Math.floor( self.options.heigh4Shelf2_3 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S2_3_DOWN").addEventListener('click', async function() {

                if ( self.options.heigh0Shelf2_3 > 10 ) {
    
                    self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+4).position.y -= 1.05
                    
    
                    self.options.heigh4Shelf2_3 += 1
                    self.options.heigh0Shelf2_3 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving4_S2_3").innerHTML = Math.floor( self.options.heigh4Shelf2_3 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });
    

            //section 2_4 shelf generating
            document.getElementById("InternalShelving_S2_4").addEventListener('click', function() {
                createInternalShelving_S2_4();
            });
            function createInternalShelving_S2_4() {

                var checkBox_InternalShelving_S2_4 = document.getElementById("InternalShelving_S2_4");

                if ( document.getElementById("InternalShelving_S2_4").checked == true || self.options.s2_4_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "flex";
                    document.getElementById("MainShoeShelving_S2_4").style.display = "none";

                    document.getElementById("Drawer_S2_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_4").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection2_4 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect2_4").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_4);
                        
                        self.shelvingGroup_section2_4 = new THREE.Group();
                        self.options.posShelf1_sect2_4 = 13;

                        self.shelvingGroup_section2_4.add(self.createShelfToGroup(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_4").style.display = "flex";

                        document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                        document.getElementById("InternalShelving1_S2_4").style.display = "none";
                        document.getElementById('internalShelving_sect2_4').value = 0
                        self.options.shelvesCounterSection2_4 = 0;
                    }

                    if (self.options.shelvesCounterSection2_4 != 0) {

                        self.shelvingGroup_section2_4.position.y = self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y - 1
        
                        self.shelvingGroup_section2_4.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section2_4.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        self.shelvingGroup_section2_4.name = 'shelvingGroup_section2_4';
        
                        self.scene.add(self.shelvingGroup_section2_4);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_4; i++) {
                            self.shelvingGroup_section2_4.getObjectByName('internalShelf_2_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s2_4_internlShelvinStatus = 1
                    self.options.s2_4_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection2_4 = 0
                    self.scene.remove(self.shelvingGroup_section2_4);

                    for (var i = 1; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                    }

                    document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                    document.getElementById("MainShoeShelving_S2_4").style.display = "flex";

                    document.getElementById("internalShelving_sect2_4").value = '0'

                    self.options.s2_4_internlShelvinStatus = 0
                    self.options.s2_4_ShelvingStatus = 'none'


                }

            
                self.options.heigh1Shelf2_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_4 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves2_4").addEventListener('click', requestChangeShelving2_4); 
            document.getElementById("subButtonPlus_Shelves2_4").addEventListener('click', requestChangeShelving2_4); 
            document.getElementById("internalShelving_sect2_4").addEventListener('change', requestChangeShelving2_4);  

            function requestChangeShelving2_4 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect2_4();
            };

            function createInternalShelving_sect2_4() {


                switch (parseInt(document.getElementById("internalShelving_sect2_4").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection2_4 = 0
                        self.scene.remove(self.shelvingGroup_section2_4);

                        document.getElementById("InternalShelving_S2_4").checked = false;

                        for (var i = 1; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                        }

                        document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                        document.getElementById("MainShoeShelving_S2_4").style.display = "flex";

                        document.getElementById("internalShelving_sect2_4").value = '0'

                        document.getElementById("Drawer_S2_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_4").src="icons/Drawer_Close.jpg";

                    break;
                    case 1:
                        self.options.shelvesCounterSection2_4 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section2_4);
                            
                            self.shelvingGroup_section2_4 = new THREE.Group();
                            self.options.posShelf1_sect2_4 = 13;

                            self.shelvingGroup_section2_4.add(self.createShelfToGroup(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_4").style.display = "flex";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                            document.getElementById("InternalShelving1_S2_4").style.display = "none";
                            document.getElementById('internalShelving_sect2_4').value = 0
                            self.options.shelvesCounterSection2_4 = 0;  
                        }
                    break;  
                    case 2:
                        self.options.shelvesCounterSection2_4 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section2_4);
                            self.shelvingGroup_section2_4 = new THREE.Group();
                            self.options.posShelf2_sect2_4 =  13
                            self.options.posShelf1_sect2_4 = self.options.posShelf2_sect2_4 + 12
    
                            self.shelvingGroup_section2_4.add(self.createShelfToGroup(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_4, 2, '2_4', self.options.section2Length)
                            );
                            
                            document.getElementById("InternalShelving1_S2_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_4").style.display = "flex";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S2_4").style.display = "none";
                            document.getElementById('internalShelving_sect2_4').value = 1
                            self.options.shelvesCounterSection2_4 = 1;
                        }
    
                    break;    
                    case 3:

                        self.options.shelvesCounterSection2_4 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section2_4);                        

                            self.shelvingGroup_section2_4 = new THREE.Group();
                            self.options.posShelf3_sect2_4 =13
                            self.options.posShelf2_sect2_4 = self.options.posShelf3_sect2_4 + 12
                            self.options.posShelf1_sect2_4 = self.options.posShelf2_sect2_4 + 12

                        
                            self.shelvingGroup_section2_4.add(self.createShelfToGroup(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_4, 2, '2_4', self.options.section2Length), self.createShelfToGroup(self.options.posShelf3_sect2_4, 3, '2_4', self.options.section2Length)
                            );
                            document.getElementById("InternalShelving1_S2_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_4").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_4").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S2_4").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S2_4").style.display = "none";
                            document.getElementById('internalShelving_sect2_4').value = 2
                            self.options.shelvesCounterSection2_4 = 2;
                        }

                    break; 
                }
                

                if (self.options.shelvesCounterSection2_4 != 0) {

                    self.shelvingGroup_section2_4.position.y = self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y - 1

                    self.shelvingGroup_section2_4.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section2_4.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;

                    self.shelvingGroup_section2_4.name = 'shelvingGroup_section2_4';

                    self.scene.add(self.shelvingGroup_section2_4);


                    for (var i = 1; i <= self.options.shelvesCounterSection2_4; i++) {
                        self.shelvingGroup_section2_4.getObjectByName('internalShelf_2_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                } else {}

                self.options.heigh1Shelf2_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_4 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf2_4 = parseFloat(document.getElementById('PositionField_InternalShelving3_S2_4').textContent.match(/\d+(\.\d+)?/)[0]);
                
                self.options.heigh0Shelf2_4 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S2_4").addEventListener('click', function() {
                createShoeShelving_S2_4();
            });
            function createShoeShelving_S2_4() {
    
                var checkBox_InternalShelving_S2_4 = document.getElementById("ShoeShelving_S2_4");
    
                if ( document.getElementById("ShoeShelving_S2_4").checked == true || self.options.s2_4_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "flex";
                    document.getElementById("MainInternalShelving_S2_4").style.display = "none";
                    
                    document.getElementById("Drawer_S2_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_4").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection2_4 = 1;

                    document.getElementById("ShoeShelving_sect2_4").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect2_4").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_4);
                        
                        self.shelvingGroup_section2_4 = new THREE.Group();
                        self.options.posShelf1_sect2_4 = 14;

                        self.shelvingGroup_section2_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length));
                        self.shelvingGroup_section2_4.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_4").style.display = "flex";
                        for (var i = 2; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_4").style.display = "flex";
                        document.getElementById("InternalShelving1_S2_4").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_4').value = 0
                        self.options.shelvesCounterSection2_4 = 0;
                    }

                    if (self.options.shelvesCounterSection2_4 != 0) {
    
                        self.shelvingGroup_section2_4.position.y = self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y - 1
        
                        self.shelvingGroup_section2_4.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section2_4.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section2_4.name = 'shelvingGroup_section2_4';
        
                        self.scene.add(self.shelvingGroup_section2_4);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_4; i++) {
                            self.shelvingGroup_section2_4.getObjectByName('internalShelf_2_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection2_4; i++) {
                            self.shelvingGroup_section2_4.getObjectByName('internalShelfShoe_2_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S2_4").style.display = "flex";
                    for (var i = 2; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                    }

    
    
                    self.options.s2_4_internlShelvinStatus = 1
                    self.options.s2_4_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection2_4 = 0
                    self.scene.remove(self.shelvingGroup_section2_4);
    
                    for (var i = 1; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect2_4").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                    document.getElementById("MainInternalShelving_S2_4").style.display = "flex";

                    document.getElementById("Drawer_S2_4").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS2_4").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S2_4").src="icons/Drawer_Close.jpg";

                    self.options.s2_4_internlShelvinStatus = 0
                    self.options.s2_4_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf2_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_4 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves2_4").addEventListener('click', requestChangeShoeShelving2_4); 
            document.getElementById("subButtonPlus_ShoeShelves2_4").addEventListener('click', requestChangeShoeShelving2_4); 
            document.getElementById("ShoeShelving_sect2_4").addEventListener('change', requestChangeShoeShelving2_4); 

            function requestChangeShoeShelving2_4 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect2_4();
            };
    
            function createShoeShelving_sect2_4() {
        
                self.options.s2_4_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect2_4").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection2_4 = 0
                        self.options.s2_4_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section2_4);
    
                        document.getElementById("ShoeShelving_S2_4").checked = false;
        
                        for (var i = 1; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect2_4").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_4").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S2_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_4").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection2_4 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect2_4").value = '1'
                            self.scene.remove(self.shelvingGroup_section2_4);
                            
                            self.shelvingGroup_section2_4 = new THREE.Group();
                            self.options.posShelf1_sect2_4 = 14;

                            self.shelvingGroup_section2_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length));
                            self.shelvingGroup_section2_4.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_4").style.display = "flex";
                            for (var i = 2; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                            document.getElementById("MainInternalShelving_S2_4").style.display = "flex";

                            document.getElementById("InternalShelving1_S2_4").style.display = "none";
                            document.getElementById('ShoeShelving_sect2_4').value = 0
                            self.options.shelvesCounterSection2_4 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection2_4 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section2_4);
                            self.shelvingGroup_section2_4 = new THREE.Group();
                            self.options.posShelf2_sect2_4 =  14;
                            self.options.posShelf1_sect2_4 = self.options.posShelf2_sect2_4 + 27.5;
    
                            self.shelvingGroup_section2_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect2_4, 1, '2_4', self.options.section2Length), self.createShelfShoeToGroup(self.options.posShelf2_sect2_4, 2, '2_4', self.options.section2Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect2_4, 2, '2_4', self.options.section2Length));
                            
                            
                            document.getElementById("InternalShelving1_S2_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_4").style.display = "flex";
                            document.getElementById("InternalShelving3_S2_4").style.display = "none";

    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S2_4").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_4').value = 1
                        self.options.shelvesCounterSection2_4 = 1;}
    
                    break;
                  
                }

                self.options.heigh0Shelf2_4 = 5

        
                if (self.options.shelvesCounterSection2_4 != 0) {
    
                    self.shelvingGroup_section2_4.position.y = self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y - 1
    
                    self.shelvingGroup_section2_4.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
    
                    self.shelvingGroup_section2_4.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section2_4.name = 'shelvingGroup_section2_4';
    
                    self.scene.add(self.shelvingGroup_section2_4);

                    for (var i = 1; i <= self.options.shelvesCounterSection2_4; i++) {
                        self.shelvingGroup_section2_4.getObjectByName('internalShelfShoe_2_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection2_4; i++) {
                        self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf2_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_4 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf2_4 = parseFloat(document.getElementById('PositionField_InternalShelving3_S2_4').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section2_4_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S2_4_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_2_4 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+1).position.y += 1.05
                        if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf2_4-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = Math.floor( self.options.heigh1Shelf2_4 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf2_4 += 1
                            document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = Math.floor( self.options.heigh2Shelf2_4 ) +"cm";
                        } else{
                            self.options.heigh0Shelf2_4+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S2_4_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf2_4 > 10 && self.options.s2_4_ShelvingStatus === 'Wood' || self.options.heigh2Shelf2_4 > 25 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_4 += 1
                        self.options.heigh2Shelf2_4 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = Math.floor( self.options.heigh1Shelf2_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = Math.floor( self.options.heigh2Shelf2_4 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf2_4 > 10 && self.options.s2_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_4 > 13 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_4 += 1
                        self.options.heigh0Shelf2_4 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = Math.floor( self.options.heigh1Shelf2_4 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section2_4_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S2_4_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+2).position.y += 1.05
                        if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf2_4 -= 1
                        self.options.heigh3Shelf2_4 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = Math.floor( self.options.heigh2Shelf2_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S2_4").innerHTML = Math.floor( self.options.heigh3Shelf2_4 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+2).position.y += 1.05
                        if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf2_4 -= 1
                        self.options.heigh0Shelf2_4 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = Math.floor( self.options.heigh2Shelf2_4 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S2_4_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf2_4 > 10 && self.options.s2_4_ShelvingStatus === 'Wood' || self.options.heigh3Shelf2_4 > 25 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf2_4 += 1
                        self.options.heigh3Shelf2_4 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = Math.floor( self.options.heigh2Shelf2_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S2_4").innerHTML = Math.floor( self.options.heigh3Shelf2_4 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf2_4 > 10 && self.options.s2_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_4 > 13 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf2_4 += 1
                        self.options.heigh0Shelf2_4 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = Math.floor( self.options.heigh2Shelf2_4 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });

            //section2_4_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S2_4_UP").addEventListener('click', async function() {
            
                if (parseFloat(document.getElementById('PositionField_InternalShelving3_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+3).position.y += 1.05
                    if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+3).position.y += 1.05
                    }

                    self.options.heigh3Shelf2_4 -= 1
                    self.options.heigh0Shelf2_4 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving3_S2_4").innerHTML = Math.floor( self.options.heigh3Shelf2_4 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S2_4_DOWN").addEventListener('click', async function() {

                if (self.options.heigh0Shelf2_4 > 10 && self.options.s2_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_4 > 13 && self.options.s2_4_ShelvingStatus === 'Shoe' ) {        
                    self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+3).position.y -= 1.05
                    if (self.options.s2_4_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_2_4_'+'shelf'+3).position.y -= 1.05
                    }
    
                    self.options.heigh3Shelf2_4 += 1
                    self.options.heigh0Shelf2_4 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving3_S2_4").innerHTML = Math.floor( self.options.heigh3Shelf2_4 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });



            //section 2_5 shelf generating
            document.getElementById("InternalShelving_S2_5").addEventListener('click', function() {
                createInternalShelving_S2_5();
            });
            function createInternalShelving_S2_5() {

                var checkBox_InternalShelving_S2_5 = document.getElementById("InternalShelving_S2_5");

                if ( document.getElementById("InternalShelving_S2_5").checked == true || self.options.s2_5_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "flex";
                    document.getElementById("MainShoeShelving_S2_5").style.display = "none";

                    document.getElementById("Drawer_S2_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_5").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection2_5 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect2_5").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_5);
                        
                        self.shelvingGroup_section2_5 = new THREE.Group();
                        self.options.posShelf1_sect2_5 = 13;

                        self.shelvingGroup_section2_5.add(self.createShelfToGroup(self.options.posShelf1_sect2_5, 1, '2_5', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_5").style.display = "flex";
                        document.getElementById("InternalShelving2_S2_5").style.display = "none";

                        document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                        document.getElementById("InternalShelving1_S2_5").style.display = "none";
                        document.getElementById('internalShelving_sect2_5').value = 0
                        self.options.shelvesCounterSection2_5 = 0;
                    }

                    if (self.options.shelvesCounterSection2_5 != 0) {

                        self.shelvingGroup_section2_5.position.y = self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y - 1
        
                        self.shelvingGroup_section2_5.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section2_5.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        self.shelvingGroup_section2_5.name = 'shelvingGroup_section2_5';
        
                        self.scene.add(self.shelvingGroup_section2_5);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_5; i++) {
                            self.shelvingGroup_section2_5.getObjectByName('internalShelf_2_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s2_5_internlShelvinStatus = 1
                    self.options.s2_5_ShelvingStatus = 'Wood'


                } 
                else {
                    self.options.shelvesCounterSection2_5 = 0
                    self.scene.remove(self.shelvingGroup_section2_5);

                    for (var i = 1; i <= 2; i++) {
                        document.getElementById(`InternalShelving${i}_S2_5`).style.display = "none";
                    }

                    document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                    document.getElementById("MainShoeShelving_S2_5").style.display = "flex";

                    document.getElementById("internalShelving_sect2_5").value = '0'

                    self.options.s2_5_internlShelvinStatus = 0
                    self.options.s2_5_ShelvingStatus = 'none'

                }

            
                self.options.heigh1Shelf2_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_5 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves2_5").addEventListener('click', requestChangeShelving2_5); 
            document.getElementById("subButtonPlus_Shelves2_5").addEventListener('click', requestChangeShelving2_5); 
            document.getElementById("internalShelving_sect2_5").addEventListener('change', requestChangeShelving2_5);  

            function requestChangeShelving2_5 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect2_5();
            };

            function createInternalShelving_sect2_5() {


                switch (parseInt(document.getElementById("internalShelving_sect2_5").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection2_5 = 0
                        self.scene.remove(self.shelvingGroup_section2_5);

                        document.getElementById("InternalShelving_S2_5").checked = false;

                        document.getElementById("InternalShelving1_S2_5").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                        document.getElementById("MainShoeShelving_S2_5").style.display = "flex";


                        document.getElementById("internalShelving_sect2_5").value = '0'

                        document.getElementById("Drawer_S2_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_5").src="icons/Drawer_Close.jpg";

                    break;

                    case 1:
                        self.options.shelvesCounterSection2_5 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section2_5);
                            
                            self.shelvingGroup_section2_5 = new THREE.Group();
                            self.options.posShelf1_sect2_5 = 13;

                            self.shelvingGroup_section2_5.add(self.createShelfToGroup(self.options.posShelf1_sect2_5, 1, '2_5', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_5").style.display = "none";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                            document.getElementById("InternalShelving1_S2_5").style.display = "none";
                            document.getElementById('internalShelving_sect2_5').value = 0
                            self.options.shelvesCounterSection2_5 = 0;  
                        }
                    break;  
                    case 2:
                        self.options.shelvesCounterSection2_5 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section2_5);
                            self.shelvingGroup_section2_5 = new THREE.Group();
                            self.options.posShelf2_sect2_5 =  13
                            self.options.posShelf1_sect2_5 = self.options.posShelf2_sect2_5 + 12
    
                            self.shelvingGroup_section2_5.add(self.createShelfToGroup(self.options.posShelf1_sect2_5, 1, '2_5', self.options.section2Length),
                            self.createShelfToGroup(self.options.posShelf2_sect2_5, 2, '2_5', self.options.section2Length)
                            );
                            
                            document.getElementById("InternalShelving1_S2_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_5").style.display = "flex";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S2_5").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S2_5").style.display = "none";
                            document.getElementById('internalShelving_sect2_5').value = 1
                            self.options.shelvesCounterSection2_5 = 1;
                        }
    
                    break;
                }
                

                if (self.options.shelvesCounterSection2_5 != 0) {

                    self.shelvingGroup_section2_5.position.y = self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y - 1

                    self.shelvingGroup_section2_5.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section2_5.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;

                    self.shelvingGroup_section2_5.name = 'shelvingGroup_section2_5';

                    self.scene.add(self.shelvingGroup_section2_5);


                    for (var i = 1; i <= self.options.shelvesCounterSection2_5; i++) {
                        self.shelvingGroup_section2_5.getObjectByName('internalShelf_2_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }

                } else {}

                self.options.heigh1Shelf2_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_5').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_5 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_5').textContent.match(/\d+(\.\d+)?/)[0]);
                
                self.options.heigh0Shelf2_5 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S2_5").addEventListener('click', function() {
                createShoeShelving_S2_5();
            });
            function createShoeShelving_S2_5() {
    
                var checkBox_InternalShelving_S2_5 = document.getElementById("ShoeShelving_S2_5");
    
                if ( document.getElementById("ShoeShelving_S2_5").checked == true || self.options.s2_5_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "flex";
                    document.getElementById("MainInternalShelving_S2_5").style.display = "none";
                    
                    document.getElementById("Drawer_S2_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_5").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection2_5 = 1;

                    document.getElementById("ShoeShelving_sect2_5").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect2_5").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_5);
                        
                        self.shelvingGroup_section2_5 = new THREE.Group();
                        self.options.posShelf1_sect2_5 = 14;

                        self.shelvingGroup_section2_5.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_5, 1, '2_5', self.options.section2Length));
                        self.shelvingGroup_section2_5.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_5, 1, '2_5', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_5").style.display = "flex";
                        document.getElementById("InternalShelving2_S2_5").style.display = "none";

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_5").style.display = "flex";
                        document.getElementById("InternalShelving1_S2_5").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_5').value = 0
                        self.options.shelvesCounterSection2_5 = 0;
                    }

                    if (self.options.shelvesCounterSection2_5 != 0) {
    
                        self.shelvingGroup_section2_5.position.y = self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y - 1
        
                        self.shelvingGroup_section2_5.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section2_5.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section2_5.name = 'shelvingGroup_section2_5';
        
                        self.scene.add(self.shelvingGroup_section2_5);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_5; i++) {
                            self.shelvingGroup_section2_5.getObjectByName('internalShelf_2_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection2_5; i++) {
                            self.shelvingGroup_section2_5.getObjectByName('internalShelfShoe_2_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S2_5").style.display = "flex";
                    document.getElementById("InternalShelving2_S2_5").style.display = "none";

    
    
                    self.options.s2_5_internlShelvinStatus = 1
                    self.options.s2_5_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection2_5 = 0
                    self.scene.remove(self.shelvingGroup_section2_5);
    
                    for (var i = 1; i <= 2; i++) {
                        document.getElementById(`InternalShelving${i}_S2_5`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect2_5").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                    document.getElementById("MainInternalShelving_S2_5").style.display = "flex";

                    document.getElementById("Drawer_S2_5").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS2_5").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S2_5").src="icons/Drawer_Close.jpg";

                    self.options.s2_5_internlShelvinStatus = 0
                    self.options.s2_5_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf2_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_5 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves2_5").addEventListener('click', requestChangeShoeShelving2_5); 
            document.getElementById("subButtonPlus_ShoeShelves2_5").addEventListener('click', requestChangeShoeShelving2_5); 
            document.getElementById("ShoeShelving_sect2_5").addEventListener('change', requestChangeShoeShelving2_5); 

            function requestChangeShoeShelving2_5 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect2_5();
            };
    
            function createShoeShelving_sect2_5() {
        
                self.options.s2_5_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect2_5").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection2_5 = 0
                        self.options.s2_5_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section2_5);
    
                        document.getElementById("ShoeShelving_S2_5").checked = false;
        
                        for (var i = 1; i <= 2; i++) {
                            document.getElementById(`InternalShelving${i}_S2_5`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect2_5").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_5").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S2_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_5").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection2_5 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect2_5").value = '1'
                            self.scene.remove(self.shelvingGroup_section2_5);
                            
                            self.shelvingGroup_section2_5 = new THREE.Group();
                            self.options.posShelf1_sect2_5 = 14;

                            self.shelvingGroup_section2_5.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_5, 1, '2_5', self.options.section2Length));
                            self.shelvingGroup_section2_5.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_5, 1, '2_5', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S2_5").style.display = "none";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                            document.getElementById("MainInternalShelving_S2_5").style.display = "flex";

                            document.getElementById("InternalShelving1_S2_5").style.display = "none";
                            document.getElementById('ShoeShelving_sect2_5').value = 0
                            self.options.shelvesCounterSection2_5 = 0;
                        }
    
                    break;
                  
                }

                self.options.heigh0Shelf2_5 = 5

        
                if (self.options.shelvesCounterSection2_5 != 0) {
    
                    self.shelvingGroup_section2_5.position.y = self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y - 1
    
                    self.shelvingGroup_section2_5.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
    
                    self.shelvingGroup_section2_5.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section2_5.name = 'shelvingGroup_section2_5';
    
                    self.scene.add(self.shelvingGroup_section2_5);

                    for (var i = 1; i <= self.options.shelvesCounterSection2_5; i++) {
                        self.shelvingGroup_section2_5.getObjectByName('internalShelfShoe_2_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection2_5; i++) {
                        self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf2_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_5').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf2_5 = parseFloat(document.getElementById('PositionField_InternalShelving2_S2_5').textContent.match(/\d+(\.\d+)?/)[0]);                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section2_5_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S2_5_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_2_5 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_5_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s2_5_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+1).position.y += 1.05
                        if (self.options.s2_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_5_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf2_5-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = Math.floor( self.options.heigh1Shelf2_5 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf2_5 += 1
                            document.getElementById("PositionField_InternalShelving2_S2_5").innerHTML = Math.floor( self.options.heigh2Shelf2_5 ) +"cm";
                        } else{
                            self.options.heigh0Shelf2_5+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S2_5_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf2_5 > 10 && self.options.s2_5_ShelvingStatus === 'Wood' || self.options.heigh2Shelf2_5 > 25 && self.options.s2_5_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_5_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_5 += 1
                        self.options.heigh2Shelf2_5 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = Math.floor( self.options.heigh1Shelf2_5 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S2_5").innerHTML = Math.floor( self.options.heigh2Shelf2_5 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf2_5 > 10 && self.options.s2_5_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_5 > 13 && self.options.s2_5_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s2_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_2_5_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf2_5 += 1
                        self.options.heigh0Shelf2_5 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = Math.floor( self.options.heigh1Shelf2_5 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section2_5_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S2_5_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving2_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_5_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s2_5_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+2).position.y += 1.05
                    if (self.options.s2_5_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_2_5_'+'shelf'+2).position.y += 1.05
                    }

                    self.options.heigh2Shelf2_5 -= 1
                    self.options.heigh0Shelf2_5 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving2_S2_5").innerHTML = Math.floor( self.options.heigh2Shelf2_5 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S2_5_DOWN").addEventListener('click', async function() {

                if (self.options.heigh0Shelf2_5 > 10 && self.options.s2_5_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_5 > 13 && self.options.s2_5_ShelvingStatus === 'Shoe' ) {
    
                    self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+2).position.y -= 1.05
                    if (self.options.s2_5_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_2_5_'+'shelf'+2).position.y -= 1.05
                    }

                    self.options.heigh2Shelf2_5 += 1
                    self.options.heigh0Shelf2_5 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving2_S2_5").innerHTML = Math.floor( self.options.heigh2Shelf2_5 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });



            //section 2_6 shelf generating
            document.getElementById("InternalShelving_S2_6").addEventListener('click', function() {
                createInternalShelving_S2_6();
            });
            function createInternalShelving_S2_6() {

                var checkBox_InternalShelving_S2_6 = document.getElementById("InternalShelving_S2_6");

                if ( document.getElementById("InternalShelving_S2_6").checked == true || self.options.s2_6_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "flex";
                    document.getElementById("MainShoeShelving_S2_6").style.display = "none";

                    document.getElementById("Drawer_S2_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_6").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection2_6 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect2_6").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_6);
                        
                        self.shelvingGroup_section2_6 = new THREE.Group();
                        self.options.posShelf1_sect2_6 = 13;

                        self.shelvingGroup_section2_6.add(self.createShelfToGroup(self.options.posShelf1_sect2_6, 1, '2_6', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_6").style.display = "flex";

                        document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "none";
                        document.getElementById("InternalShelving1_S2_6").style.display = "none";
                        document.getElementById('internalShelving_sect2_6').value = 0
                        self.options.shelvesCounterSection2_6 = 0;
                    }

                    if (self.options.shelvesCounterSection2_6 != 0) {

                        self.shelvingGroup_section2_6.position.y = self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y - 1
        
                        self.shelvingGroup_section2_6.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section2_6.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        self.shelvingGroup_section2_6.name = 'shelvingGroup_section2_6';
        
                        self.scene.add(self.shelvingGroup_section2_6);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_6; i++) {
                            self.shelvingGroup_section2_6.getObjectByName('internalShelf_2_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s2_6_internlShelvinStatus = 1
                    self.options.s2_6_ShelvingStatus = 'Wood'


                } 
                else {
                    self.options.shelvesCounterSection2_6 = 0
                    self.scene.remove(self.shelvingGroup_section2_6);

                    document.getElementById("InternalShelving1_S2_6").style.display = "none";
                    document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "none";
                    document.getElementById("MainShoeShelving_S2_6").style.display = "flex";

                    document.getElementById("internalShelving_sect2_6").value = '0'

                    self.options.s2_6_internlShelvinStatus = 0
                    self.options.s2_6_ShelvingStatus = 'none'

                }

            
                self.options.heigh1Shelf2_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_6 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves2_6").addEventListener('click', requestChangeShelving2_6); 
            document.getElementById("subButtonPlus_Shelves2_6").addEventListener('click', requestChangeShelving2_6); 
            document.getElementById("internalShelving_sect2_6").addEventListener('change', requestChangeShelving2_6);  

            function requestChangeShelving2_6 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect2_6();
            };

            function createInternalShelving_sect2_6() {


                switch (parseInt(document.getElementById("internalShelving_sect2_6").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection2_6 = 0
                        self.scene.remove(self.shelvingGroup_section2_6);

                        document.getElementById("InternalShelving_S2_6").checked = false;

                        document.getElementById("InternalShelving1_S2_6").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "none";
                        document.getElementById("MainShoeShelving_S2_6").style.display = "flex";

                        document.getElementById("internalShelving_sect2_6").value = '0'

                        document.getElementById("Drawer_S2_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_6").src="icons/Drawer_Close.jpg";

                    break;

                    case 1:
                        self.options.shelvesCounterSection2_6 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section2_6);
                            
                            self.shelvingGroup_section2_6 = new THREE.Group();
                            self.options.posShelf1_sect2_6 = 13;

                            self.shelvingGroup_section2_6.add(self.createShelfToGroup(self.options.posShelf1_sect2_6, 1, '2_6', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_6").style.display = "flex";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "none";
                            document.getElementById("InternalShelving1_S2_6").style.display = "none";
                            document.getElementById('internalShelving_sect2_6').value = 0
                            self.options.shelvesCounterSection2_6 = 0;  
                        }
                    break;  
                    
                }
                

                if (self.options.shelvesCounterSection2_6 != 0) {

                    self.shelvingGroup_section2_6.position.y = self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y - 1

                    self.shelvingGroup_section2_6.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section2_6.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;

                    self.shelvingGroup_section2_6.name = 'shelvingGroup_section2_6';

                    self.scene.add(self.shelvingGroup_section2_6);


                    for (var i = 1; i <= self.options.shelvesCounterSection2_6; i++) {
                        self.shelvingGroup_section2_6.getObjectByName('internalShelf_2_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }

                } else {}

                self.options.heigh1Shelf2_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_6').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh0Shelf2_6 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S2_6").addEventListener('click', function() {
                createShoeShelving_S2_6();
            });
            function createShoeShelving_S2_6() {
    
                var checkBox_InternalShelving_S2_6 = document.getElementById("ShoeShelving_S2_6");
    
                if ( document.getElementById("ShoeShelving_S2_6").checked == true || self.options.s2_6_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "flex";
                    document.getElementById("MainInternalShelving_S2_6").style.display = "none";
                    
                    document.getElementById("Drawer_S2_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS2_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_S2_6").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection2_6 = 1;

                    document.getElementById("ShoeShelving_sect2_6").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect2_6").value = '1'

                        self.scene.remove(self.shelvingGroup_section2_6);
                        
                        self.shelvingGroup_section2_6 = new THREE.Group();
                        self.options.posShelf1_sect2_6 = 14;

                        self.shelvingGroup_section2_6.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_6, 1, '2_6', self.options.section2Length));
                        self.shelvingGroup_section2_6.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_6, 1, '2_6', self.options.section2Length));

                        document.getElementById("InternalShelving1_S2_6").style.display = "flex";

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_6").style.display = "flex";
                        document.getElementById("InternalShelving1_S2_6").style.display = "none";
                        document.getElementById('ShoeShelving_sect2_6').value = 0
                        self.options.shelvesCounterSection2_6 = 0;
                    }

                    if (self.options.shelvesCounterSection2_6 != 0) {
    
                        self.shelvingGroup_section2_6.position.y = self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y - 1
        
                        self.shelvingGroup_section2_6.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section2_6.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section2_6.name = 'shelvingGroup_section2_6';
        
                        self.scene.add(self.shelvingGroup_section2_6);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection2_6; i++) {
                            self.shelvingGroup_section2_6.getObjectByName('internalShelf_2_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection2_6; i++) {
                            self.shelvingGroup_section2_6.getObjectByName('internalShelfShoe_2_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S2_6").style.display = "flex";
                    

    
    
                    self.options.s2_6_internlShelvinStatus = 1
                    self.options.s2_6_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection2_6 = 0
                    self.scene.remove(self.shelvingGroup_section2_6);
    
                    document.getElementById("InternalShelving1_S2_6").style.display = "none";

                    
                    document.getElementById("ShoeShelving_sect2_6").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "none";
                    document.getElementById("MainInternalShelving_S2_6").style.display = "flex";

                    document.getElementById("Drawer_S2_6").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS2_6").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S2_6").src="icons/Drawer_Close.jpg";

                    self.options.s2_6_internlShelvinStatus = 0
                    self.options.s2_6_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf2_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf2_6 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves2_6").addEventListener('click', requestChangeShoeShelving2_6); 
            document.getElementById("subButtonPlus_ShoeShelves2_6").addEventListener('click', requestChangeShoeShelving2_6); 
            document.getElementById("ShoeShelving_sect2_6").addEventListener('change', requestChangeShoeShelving2_6); 

            function requestChangeShoeShelving2_6 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect2_6();
            };
    
            function createShoeShelving_sect2_6() {
        
                self.options.s2_6_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect2_6").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection2_6 = 0
                        self.options.s2_6_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section2_6);
    
                        document.getElementById("ShoeShelving_S2_6").checked = false;
        
                        document.getElementById("InternalShelving1_S2_6").style.display = "none";

                        document.getElementById("ShoeShelving_sect2_6").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "none";
                        document.getElementById("MainInternalShelving_S2_6").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S2_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS2_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S2_6").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection2_6 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect2_6").value = '1'
                            self.scene.remove(self.shelvingGroup_section2_6);
                            
                            self.shelvingGroup_section2_6 = new THREE.Group();
                            self.options.posShelf1_sect2_6 = 14;

                            self.shelvingGroup_section2_6.add(self.createShelfShoeToGroup(self.options.posShelf1_sect2_6, 1, '2_6', self.options.section2Length));
                            self.shelvingGroup_section2_6.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect2_6, 1, '2_6', self.options.section2Length));

                            document.getElementById("InternalShelving1_S2_6").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "none";
                            document.getElementById("MainInternalShelving_S2_6").style.display = "flex";

                            document.getElementById("InternalShelving1_S2_6").style.display = "none";
                            document.getElementById('ShoeShelving_sect2_6').value = 0
                            self.options.shelvesCounterSection2_6 = 0;
                        }
    
                    break;
                  
                }

                self.options.heigh0Shelf2_6 = 5

        
                if (self.options.shelvesCounterSection2_6 != 0) {
    
                    self.shelvingGroup_section2_6.position.y = self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y - 1
    
                    self.shelvingGroup_section2_6.position.x = self.scene.getObjectByName( "pillar1", true ).position.x+0.5;
    
                    self.shelvingGroup_section2_6.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section2_6.name = 'shelvingGroup_section2_6';
    
                    self.scene.add(self.shelvingGroup_section2_6);

                    for (var i = 1; i <= self.options.shelvesCounterSection2_6; i++) {
                        self.shelvingGroup_section2_6.getObjectByName('internalShelfShoe_2_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection2_6; i++) {
                        self.scene.getObjectByName('internalShelf_2_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf2_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S2_6').textContent.match(/\d+(\.\d+)?/)[0]);
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section2_6_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S2_6_UP").addEventListener('click', async function( ) {
                
                console.log(parseFloat(document.getElementById('PositionField_InternalShelving1_S2_6').textContent.match(/\d+(\.\d+)?/)[0]));
                console.log(self.options.s2_6_ShelvingStatus);

                if (parseFloat(document.getElementById('PositionField_InternalShelving1_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s2_6_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s2_6_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_2_6_'+'shelf'+1).position.y += 1.05
                    if (self.options.s2_6_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_2_6_'+'shelf'+1).position.y += 1.05
                    }

                    self.options.heigh1Shelf2_6-= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML = Math.floor( self.options.heigh1Shelf2_6 ) +"cm";

                    
                    self.options.heigh0Shelf2_6+= 1
                    


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving1_S2_6_DOWN").addEventListener('click', async function() {
                        
            

                if (self.options.heigh0Shelf2_6 > 10 && self.options.s2_6_ShelvingStatus === 'Wood' || self.options.heigh0Shelf2_6 > 13 && self.options.s2_6_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_2_6_'+'shelf'+1).position.y -= 1.05
                    if (self.options.s2_6_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_2_6_'+'shelf'+1).position.y -= 1.05
                    }

                    self.options.heigh1Shelf2_6 += 1
                    self.options.heigh0Shelf2_6 -= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML = Math.floor( self.options.heigh1Shelf2_6 ) +"cm";

                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

           
    
    
    


            //section 3_1 shelf generating
            document.getElementById("InternalShelving_S3_1").addEventListener('click', function() {
                createInternalShelving_S3_1();
            });
    
            function createInternalShelving_S3_1() {
    
                var checkBox_InternalShelving_S3_1 = document.getElementById("InternalShelving_S3_1");
    
                if ( document.getElementById("InternalShelving_S3_1").checked == true || self.options.s3_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionMoveInternalShelving_S3_1").style.display = "flex";
                    document.getElementById("MainShoeShelving_S3_1").style.display = "none";

                    

                    document.getElementById("Drawer_S3_1").style.pointerEvents = "none";
                    document.getElementById("Drawer_Section3_1").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_1").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection3_1 = 1;

                    document.getElementById("internalShelving_sect3_1").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                            
                        self.scene.remove(self.shelvingGroup_section3_1);
                        
                        self.shelvingGroup_section3_1 = new THREE.Group();
                        self.options.posShelf1_sect3_1 = 12

                        self.shelvingGroup_section3_1.add(self.createShelfToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                        for (var i = 2; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S3_1").style.display = "none";
                        document.getElementById("MainShoeShelving_S3_1").style.display = "flex";
                        document.getElementById("InternalShelving1_S3_1").style.display = "none";
                        document.getElementById('internalShelving_sect3_1').value = 0
                        self.options.shelvesCounterSection3_1 = 0;
                    }

                    if (self.options.shelvesCounterSection3_1 != 0) {
    
                        self.shelvingGroup_section3_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y
        
                        self.shelvingGroup_section3_1.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section3_1.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3 ;
        
                        self.shelvingGroup_section3_1.name = 'shelvingGroup_section3_1';
        
                        self.scene.add(self.shelvingGroup_section3_1);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_1; i++) {
                            self.shelvingGroup_section3_1.getObjectByName('internalShelf_3_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                    for (var i = 2; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                    }

    
    
                    self.options.s3_internlShelvinStatus = 1
                    self.options.s3_ShelvingStatus = 'Wood'
                    
                } 
                else {
                    self.options.shelvesCounterSection3_1 = 0
                    self.scene.remove(self.shelvingGroup_section3_1);
    
                    for (var i = 1; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                    }

                    document.getElementById("internalShelving_sect3_1").value = '0'
                    document.getElementById("sectionMoveInternalShelving_S3_1").style.display = "none";
                    document.getElementById("MainShoeShelving_S3_1").style.display = "flex";

                    document.getElementById("Drawer_S3_1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_Section3_1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S3_1").src="icons/Drawer_Close.jpg";

                    self.options.s3_internlShelvinStatus = 0
                    self.options.s3_ShelvingStatus = 'none'
    
                }
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_1 = 10
    
            }
            document.getElementById("subButtonMinus_Shelves3_1").addEventListener('click', requestChangeShelving3_1); 
            document.getElementById("subButtonPlus_Shelves3_1").addEventListener('click', requestChangeShelving3_1); 
            document.getElementById("internalShelving_sect3_1").addEventListener('change', requestChangeShelving3_1);  
    
    
            function requestChangeShelving3_1 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect3_1();
            };
    
    
            function createInternalShelving_sect3_1() {
            
                self.options.s3_ShelvingStatus = 'Wood'
                
                switch (parseInt(document.getElementById("internalShelving_sect3_1").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection3_1 = 0
                        self.options.s3_ShelvingStatus = 'none'

                        self.scene.remove(self.shelvingGroup_section3_1);
    
                        document.getElementById("InternalShelving_S3_1").checked = false;
    
                        for (var i = 1; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                        }

                        document.getElementById("internalShelving_sect3_1").value = '0'
                        document.getElementById("sectionMoveInternalShelving_S3_1").style.display = "none";
                        document.getElementById("MainShoeShelving_S3_1").style.display = "flex";

                        document.getElementById("Drawer_S3_1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section3_1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_1").src="icons/Drawer_Close.jpg";
    
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection3_1 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                            
                            self.scene.remove(self.shelvingGroup_section3_1);
                            
                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf1_sect3_1 = 12
    
                            self.shelvingGroup_section3_1.add(self.createShelfToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length));
    
                            document.getElementById("InternalShelving_S3_1").style.display = "flex";
                            for (var i = 2; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S3_1").style.display = "none";
                            document.getElementById("MainShoeShelving_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving_S3_1").style.display = "none";
                            document.getElementById('internalShelving_sect3_1').value = 0
                            self.options.shelvesCounterSection3_1 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection3_1 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section3_1);
                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf2_sect3_1 =  12
                            self.options.posShelf1_sect3_1 = self.options.posShelf2_sect3_1 + 12
    
                            self.shelvingGroup_section3_1.add(self.createShelfToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length)
                            );
                            
                            document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_1").style.display = "flex";
                            for (var i = 3; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 23 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = 10 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S3_1").style.display = "none";
                        document.getElementById('internalShelving_sect3_1').value = 1
                        self.options.shelvesCounterSection3_1 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection3_1 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section3_1);                        

                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf3_sect3_1 = 12
                            self.options.posShelf2_sect3_1 = self.options.posShelf3_sect3_1 + 12
                            self.options.posShelf1_sect3_1 = self.options.posShelf2_sect3_1 + 12

                        
                            self.shelvingGroup_section3_1.add(self.createShelfToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length), self.createShelfToGroup(self.options.posShelf3_sect3_1, 3, '3_1', self.options.section3Length)
                            );
                            document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_1").style.display = "flex";
                            for (var i = 4; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 35 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S3_1").style.display = "none";
                            document.getElementById('internalShelving_sect3_1').value = 2
                            self.options.shelvesCounterSection3_1 = 2;
                        }

                    break;  

                    case 4:

                        self.options.shelvesCounterSection3_1 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section3_1);                        

                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf4_sect3_1 = 12
                            self.options.posShelf3_sect3_1 = self.options.posShelf4_sect3_1 + 12
                            self.options.posShelf2_sect3_1 = self.options.posShelf3_sect3_1 + 12
                            self.options.posShelf1_sect3_1 = self.options.posShelf2_sect3_1 + 12
                        
                            self.shelvingGroup_section3_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect3_1, 3, '3_1', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect3_1, 4, '3_1', self.options.section3Length)
                            );
                            document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving4_S3_1").style.display = "flex";
                            for (var i = 5; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 47 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S3_1").style.display = "none";
                            document.getElementById('internalShelving_sect3_1').value = 3
                            self.options.shelvesCounterSection3_1 = 3;
                        }

                    break;  

                    case 5:

                        self.options.shelvesCounterSection3_1 = 5;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 69) {
                            
                            self.scene.remove(self.shelvingGroup_section3_1);                        

                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf5_sect3_1 = 12
                            self.options.posShelf4_sect3_1 = self.options.posShelf5_sect3_1 + 12
                            self.options.posShelf3_sect3_1 = self.options.posShelf4_sect3_1 + 12
                            self.options.posShelf2_sect3_1 = self.options.posShelf3_sect3_1 + 12
                            self.options.posShelf1_sect3_1 = self.options.posShelf2_sect3_1 + 12
                        
            
                            self.shelvingGroup_section3_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect3_1, 3, '3_1', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect3_1, 4, '3_1', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf5_sect3_1, 5, '3_1', self.options.section3Length)
                            );
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "flex";
                            }
                            document.getElementById("InternalShelving6_S3_1").style.display = "none";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 59 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving5_S3_1").style.display = "none";
                            document.getElementById('internalShelving_sect3_1').value = 4
                            self.options.shelvesCounterSection3_1 = 4;
                        }

                    break;  

                    case 6:

                        self.options.shelvesCounterSection3_1 = 6;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) > 82.8) {
                            self.scene.remove(self.shelvingGroup_section3_1);                        

                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf6_sect3_1 = 12
                            self.options.posShelf5_sect3_1 = self.options.posShelf6_sect3_1 + 12
                            self.options.posShelf4_sect3_1 = self.options.posShelf5_sect3_1 + 12
                            self.options.posShelf3_sect3_1 = self.options.posShelf4_sect3_1 + 12
                            self.options.posShelf2_sect3_1 = self.options.posShelf3_sect3_1 + 12
                            self.options.posShelf1_sect3_1 = self.options.posShelf2_sect3_1 + 12
                        
                            
                            self.shelvingGroup_section3_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect3_1, 3, '3_1', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect3_1, 4, '3_1', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf5_sect3_1, 5, '3_1', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf6_sect3_1, 6, '3_1', self.options.section3Length)
                            );
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "flex";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 71 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving6_S3_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving6_S3_1").style.display = "none";
                            document.getElementById('internalShelving_sect3_1').value = 5
                            self.options.shelvesCounterSection3_1 = 5;
                        }

                    break; 

                }

                self.options.heigh0Shelf3_1 = 10

    
                if (self.options.shelvesCounterSection3_1 != 0) {
    
                    self.shelvingGroup_section3_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y
    
                    self.shelvingGroup_section3_1.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;

                    self.shelvingGroup_section3_1.position.z = -self.options.room.width / 2 + self.options.shelf.width -3;

                    self.shelvingGroup_section3_1.name = 'shelvingGroup_section3_1';
    
                    self.scene.add(self.shelvingGroup_section3_1);
    
                    for (var i = 1; i <= self.options.shelvesCounterSection3_1; i++) {
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving3_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving4_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving5_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh6Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving6_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

         
            document.getElementById("ShoeShelving_S3_1").addEventListener('click', function() {
                createShoeShelving_S3_1();
            });
            function createShoeShelving_S3_1() {
    
                var checkBox_InternalShelving_S3_1 = document.getElementById("ShoeShelving_S3_1");
    
                if ( document.getElementById("ShoeShelving_S3_1").checked == true || self.options.s3_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S3_1").style.display = "flex";
                    document.getElementById("MainInternalShelving_S3_1").style.display = "none";
                    
                    document.getElementById("Drawer_S3_1").style.pointerEvents = "none";
                    document.getElementById("Drawer_Section3_1").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_1").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection3_1 = 1;

                    document.getElementById("ShoeShelving_sect3_1").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect3_1").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_1);
                        
                        self.shelvingGroup_section3_1 = new THREE.Group();
                        self.options.posShelf1_sect3_1 = 14;

                        self.shelvingGroup_section3_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length));
                        self.shelvingGroup_section3_1.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                        for (var i = 2; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S3_1").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_1").style.display = "flex";
                        document.getElementById("InternalShelving1_S3_1").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_1').value = 0
                        self.options.shelvesCounterSection3_1 = 0;
                    }

                    if (self.options.shelvesCounterSection3_1 != 0) {
    
                        self.shelvingGroup_section3_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y
        
                        self.shelvingGroup_section3_1.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;

                        //!!
                        self.shelvingGroup_section3_1.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section3_1.name = 'shelvingGroup_section3_1';
        
                        self.scene.add(self.shelvingGroup_section3_1);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_1; i++) {
                            self.shelvingGroup_section3_1.getObjectByName('internalShelf_3_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection3_1; i++) {
                            self.shelvingGroup_section3_1.getObjectByName('internalShelfShoe_3_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                    for (var i = 2; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                    }

    
    
                    self.options.s3_internlShelvinStatus = 1
                    self.options.s3_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection3_1 = 0
                    self.scene.remove(self.shelvingGroup_section3_1);
    
                    for (var i = 1; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect3_1").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S3_1").style.display = "none";
                    document.getElementById("MainInternalShelving_S3_1").style.display = "flex";

                    document.getElementById("Drawer_S3_1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_Section3_1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S3_1").src="icons/Drawer_Close.jpg";

                    self.options.s3_internlShelvinStatus = 0
                    self.options.s3_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_1 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves3_1").addEventListener('click', requestChangeShoeShelving3_1); 
            document.getElementById("subButtonPlus_ShoeShelves3_1").addEventListener('click', requestChangeShoeShelving3_1); 
            document.getElementById("ShoeShelving_sect3_1").addEventListener('change', requestChangeShoeShelving3_1); 

            function requestChangeShoeShelving3_1 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect3_1();
            };
    
            function createShoeShelving_sect3_1() {
        

                self.options.s3_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect3_1").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection3_1 = 0
                        self.options.s3_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section3_1);
    
                        document.getElementById("ShoeShelving_S3_1").checked = false;
        
                        for (var i = 1; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect3_1").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S3_1").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_1").style.display = "flex";
    
                        document.getElementById("Drawer_S3_1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section3_1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_1").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection3_1 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect3_1").value = '1'
                            self.scene.remove(self.shelvingGroup_section3_1);
                            
                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf1_sect3_1 = 14;

                            self.shelvingGroup_section3_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length));
                            self.shelvingGroup_section3_1.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                            for (var i = 2; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S3_1").style.display = "none";
                            document.getElementById("MainInternalShelving_S3_1").style.display = "flex";

                            document.getElementById("InternalShelving1_S3_1").style.display = "none";
                            document.getElementById('ShoeShelving_sect3_1').value = 0
                            self.options.shelvesCounterSection3_1 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection3_1 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section3_1);
                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf2_sect3_1 =  14;
                            self.options.posShelf1_sect3_1 = self.options.posShelf2_sect3_1 + 27.5;
    
                            self.shelvingGroup_section3_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length), self.createShelfShoeToGroup(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length));
                            
                            
                            document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_1").style.display = "flex";
                            for (var i = 3; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S3_1").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_1').value = 1
                        self.options.shelvesCounterSection3_1 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection3_1 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 74) {
                            self.scene.remove(self.shelvingGroup_section3_1);                        

                            self.shelvingGroup_section3_1 = new THREE.Group();
                            self.options.posShelf3_sect3_1 = 14
                            self.options.posShelf2_sect3_1 = self.options.posShelf3_sect3_1 + 27.5
                            self.options.posShelf1_sect3_1 = self.options.posShelf2_sect3_1 + 27.5

                        
                            self.shelvingGroup_section3_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect3_1, 1, '3_1', self.options.section3Length), self.createShelfShoeToGroup(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect3_1, 2, '3_1', self.options.section3Length), self.createShelfShoeToGroup(self.options.posShelf3_sect3_1, 3, '3_1', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf3_sect3_1, 3, '3_1', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_1").style.display = "flex";
                            for (var i = 4; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }        

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 69 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = 25 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = 25 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S3_1").style.display = "none";
                            document.getElementById('ShoeShelving_sect3_1').value = 2
                            self.options.shelvesCounterSection3_1 = 2;
                        }

                    break;  

                  
                }

                self.options.heigh0Shelf3_1 = 5

        
                if (self.options.shelvesCounterSection3_1 != 0) {
    
                    self.shelvingGroup_section3_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y
    
                    self.shelvingGroup_section3_1.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;

                    self.shelvingGroup_section3_1.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section3_1.name = 'shelvingGroup_section3_1';
    
                    self.scene.add(self.shelvingGroup_section3_1);

                    for (var i = 1; i <= self.options.shelvesCounterSection3_1; i++) {
                        self.shelvingGroup_section3_1.getObjectByName('internalShelfShoe_3_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection3_1; i++) {
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving3_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving4_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving5_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh6Shelf3_1 = parseFloat(document.getElementById('PositionField_InternalShelving6_S3_1').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

    
            //section3_1_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S3_1_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_3_1 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s3_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+1).position.y += 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf3_1-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = Math.floor( self.options.heigh1Shelf3_1 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf3_1 += 1
                            document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = Math.floor( self.options.heigh2Shelf3_1 ) +"cm";
                        } else{
                            self.options.heigh0Shelf3_1+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S3_1_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf3_1 > 10 && self.options.s3_ShelvingStatus === 'Wood' || self.options.heigh2Shelf3_1 > 25 && self.options.s3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_1 += 1
                        self.options.heigh2Shelf3_1 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = Math.floor( self.options.heigh1Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = Math.floor( self.options.heigh2Shelf3_1 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf3_1 > 10 && self.options.s3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_1 > 5 && self.options.s3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_1 += 1
                        self.options.heigh0Shelf3_1 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = Math.floor( self.options.heigh1Shelf3_1 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section3_1_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S3_1_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+2).position.y += 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf3_1 -= 1
                        self.options.heigh3Shelf3_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = Math.floor( self.options.heigh2Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = Math.floor( self.options.heigh3Shelf3_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+2).position.y += 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf3_1 -= 1
                        self.options.heigh0Shelf3_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = Math.floor( self.options.heigh2Shelf3_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S3_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf3_1 > 10 && self.options.s3_ShelvingStatus === 'Wood' || self.options.heigh3Shelf3_1 > 5 && self.options.s3_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf3_1 += 1
                        self.options.heigh3Shelf3_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = Math.floor( self.options.heigh2Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = Math.floor( self.options.heigh3Shelf3_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf3_1 > 10 && self.options.s3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_1 > 13 && self.options.s3_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf3_1 += 1
                        self.options.heigh0Shelf3_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = Math.floor( self.options.heigh2Shelf3_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section3_1_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S3_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+3).position.y += 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf3_1 -= 1
                        self.options.heigh4Shelf3_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = Math.floor( self.options.heigh3Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = Math.floor( self.options.heigh4Shelf3_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+3).position.y += 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf3_1 -= 1
                        self.options.heigh0Shelf3_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = Math.floor( self.options.heigh3Shelf3_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S3_1_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf3_1 > 10 && self.options.s3_ShelvingStatus === 'Wood' || self.options.heigh4Shelf3_1 > 5 && self.options.s3_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf3_1 += 1
                        self.options.heigh4Shelf3_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = Math.floor( self.options.heigh3Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = Math.floor( self.options.heigh4Shelf3_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf3_1 > 10 && self.options.s3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_1 > 5 && self.options.s3_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_1_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf3_1 += 1
                        self.options.heigh0Shelf3_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = Math.floor( self.options.heigh3Shelf3_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section3_1_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S3_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+5) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+4).position.y += 1.05
                        

                        self.options.heigh4Shelf3_1 -= 1
                        self.options.heigh5Shelf3_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = Math.floor( self.options.heigh4Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = Math.floor( self.options.heigh5Shelf3_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+4).position.y += 1.05
                        
    
                        self.options.heigh4Shelf3_1 -= 1
                        self.options.heigh0Shelf3_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = Math.floor( self.options.heigh4Shelf3_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S3_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+5) != undefined) {
                
                    if ( self.options.heigh5Shelf3_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+4).position.y -= 1.05
                       
        
                        self.options.heigh4Shelf3_1 += 1
                        self.options.heigh5Shelf3_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = Math.floor( self.options.heigh4Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = Math.floor( self.options.heigh5Shelf3_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf3_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+4).position.y -= 1.05
                        
        
                        self.options.heigh4Shelf3_1 += 1
                        self.options.heigh0Shelf3_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = Math.floor( self.options.heigh4Shelf3_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section3_1_shelf5 up&down
            document.getElementById("MoveInternalShelving5_S3_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+6) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving5_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+5).position.y += 1.05
                        

                        self.options.heigh5Shelf3_1 -= 1
                        self.options.heigh6Shelf3_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = Math.floor( self.options.heigh5Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving6_S3_1").innerHTML = Math.floor( self.options.heigh6Shelf3_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving5_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+5).position.y += 1.05
                        
    
                        self.options.heigh5Shelf3_1 -= 1
                        self.options.heigh0Shelf3_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = Math.floor( self.options.heigh5Shelf3_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving5_S3_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+6) != undefined) {
                
                    if ( self.options.heigh6Shelf3_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+5).position.y -= 1.05
                       
        
                        self.options.heigh5Shelf3_1 += 1
                        self.options.heigh6Shelf3_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = Math.floor( self.options.heigh5Shelf3_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving6_S3_1").innerHTML = Math.floor( self.options.heigh6Shelf3_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf3_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+5).position.y -= 1.05
                        
        
                        self.options.heigh5Shelf3_1 += 1
                        self.options.heigh0Shelf3_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = Math.floor( self.options.heigh5Shelf3_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section3_1_shelf6 up&down
            document.getElementById("MoveInternalShelving6_S3_1_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving6_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+6).position.y += 1.05

                    self.options.heigh6Shelf3_1 -= 1
                    self.options.heigh0Shelf3_1 += 1


                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving6_S3_1").innerHTML = ( self.options.heigh6Shelf3_1 ).toFixed(0) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving6_S3_1_DOWN").addEventListener('click', async function() {

                if ( self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+6).position.y - 2.4  >= 11 ) {

                    self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+6).position.y -= 1.05

                    self.options.heigh6Shelf3_1 += 1
                    self.options.heigh0Shelf3_1 -= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving6_S3_1").innerHTML = ( self.options.heigh6Shelf3_1 ).toFixed(0) +"cm";

                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });

            

    
    
            //section 3_2 shelf generating
            document.getElementById("InternalShelving_S3_2").addEventListener('click', function() {
                createInternalShelving_S3_2();
            });
            function createInternalShelving_S3_2() {
    
                
                var checkBox_InternalShelving_S3_2 = document.getElementById("InternalShelving_S3_2");
    
                if ( document.getElementById("InternalShelving_S3_2").checked == true || self.options.s3_2_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "flex";
                    document.getElementById("MainShoeShelving_S3_2").style.display = "none";

                    document.getElementById("Drawer_S3_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_2").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection3_2 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                        document.getElementById("internalShelving_sect3_2").value = '1'
    
                        self.scene.remove(self.shelvingGroup_section3_2);
                        
                        self.shelvingGroup_section3_2 = new THREE.Group();
                        self.options.posShelf1_sect3_2 = 13;
    
                        self.shelvingGroup_section3_2.add(self.createShelfToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length));
    
                        document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                        for (var i = 2; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                        }
    
                        self.scene.add(self.shelvingGroup_section3_2);
    
    
                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                        document.getElementById("InternalShelving1_S3_2").style.display = "none";
                        document.getElementById('internalShelving_sect3_2').value = 0
                        self.options.shelvesCounterSection3_2 = 0;
                    }
    
                    if (self.options.shelvesCounterSection3_2 != 0) {
    
                        self.shelvingGroup_section3_2.position.y = self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y - 1
        
                        self.shelvingGroup_section3_2.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
                        self.shelvingGroup_section3_2.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        self.shelvingGroup_section3_2.name = 'shelvingGroup_section3_2';
        
                        self.scene.add(self.shelvingGroup_section3_2);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_2; i++) {
                            self.shelvingGroup_section3_2.getObjectByName('internalShelf_3_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
    
                        }
        
                    } else {} 
                    
                    document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";

                    self.options.s3_2_internlShelvinStatus = 1
                    self.options.s3_2_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection3_2 = 0
                    self.scene.remove(self.shelvingGroup_section3_2);
    
                    for (var i = 1; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                    }

                    document.getElementById("internalShelving_sect3_2").value = '0'
                    document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                    document.getElementById("MainShoeShelving_S3_2").style.display = "flex";


                    document.getElementById("Drawer_S3_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS3_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S3_2").src="icons/Drawer_Close.jpg";

                    self.options.s3_2_internlShelvinStatus = 0
                    self.options.s3_2_ShelvingStatus = 'none'

    
                }
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                 
                self.options.heigh1Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_2 = 10
    
            };
            document.getElementById("subButtonMinus_Shelves3_2").addEventListener('click', requestChangeShelving3_2); 
            document.getElementById("subButtonPlus_Shelves3_2").addEventListener('click', requestChangeShelving3_2); 
            document.getElementById("internalShelving_sect3_2").addEventListener('change', requestChangeShelving3_2);  
    
            function requestChangeShelving3_2 () {
                
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect3_2();
            };
            
            function createInternalShelving_sect3_2() {
    
    
                switch ( parseInt(document.getElementById("internalShelving_sect3_2").value, 10) ) {
                    case 0:
    
                        self.options.shelvesCounterSection3_2 = 0
                        self.scene.remove(self.shelvingGroup_section3_2);
    
                        document.getElementById("InternalShelving_S3_2").checked = false;
    
                        for (var i = 1; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                        }

                        document.getElementById("internalShelving_sect3_2").value = '0'
                        document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                        document.getElementById("MainShoeShelving_S3_2").style.display = "flex";

        
                        document.getElementById("Drawer_S3_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section3_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_2").src="icons/Drawer_Close.jpg";
    
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection3_2 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                            self.scene.remove(self.shelvingGroup_section3_2);
                            
                            self.shelvingGroup_section3_2 = new THREE.Group();
                            self.options.posShelf1_sect3_2 = 13
    
                            self.shelvingGroup_section3_2.add(self.createShelfToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length));
    
                            document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_2").style.display = "none";
                            document.getElementById("InternalShelving3_S3_2").style.display = "none";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                        document.getElementById('internalShelving_sect3_2').value = 0
                        self.options.shelvesCounterSection3_2 = 0;}
                    break;
    
                    case 2:
                        self.options.shelvesCounterSection3_2 = 2;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
    
                            self.scene.remove(self.shelvingGroup_section3_2);
    
                            self.shelvingGroup_section3_2 = new THREE.Group();
                            self.options.posShelf2_sect3_2 = 13
                            self.options.posShelf1_sect3_2 = self.options.posShelf2_sect3_2 + 12
    
                            self.shelvingGroup_section3_2.add(self.createShelfToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_2, 2, '3_2', self.options.section3Length)
                            );
    
                            document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_2").style.display = "flex";
                            for (var i = 3; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML =  parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
                            document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML =  10 +"cm";
                            
    
                            
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S3_2").style.display = "none";
                            document.getElementById('internalShelving_sect3_2').value = 1
                            self.options.shelvesCounterSection3_2 = 1;
                        }
    
                    
                    break;
    
                    case 3:

                        self.options.shelvesCounterSection3_2 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section3_2);                        

                            self.shelvingGroup_section3_2 = new THREE.Group();
                            self.options.posShelf3_sect3_2 =13
                            self.options.posShelf2_sect3_2 = self.options.posShelf3_sect3_2 + 12
                            self.options.posShelf1_sect3_2 = self.options.posShelf2_sect3_2 + 12

                        
                            self.shelvingGroup_section3_2.add(self.createShelfToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_2, 2, '3_2', self.options.section3Length), self.createShelfToGroup(self.options.posShelf3_sect3_2, 3, '3_2', self.options.section3Length)
                            );
                            document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_2").style.display = "flex";
                            for (var i = 4; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S3_2").style.display = "none";
                            document.getElementById('internalShelving_sect3_2').value = 2
                            self.options.shelvesCounterSection3_2 = 2;
                        }

                    break;  
                    
                    case 4:

                        self.options.shelvesCounterSection3_2 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section3_2);                        

                            self.shelvingGroup_section3_2 = new THREE.Group();
                            self.options.posShelf4_sect3_2 = 13
                            self.options.posShelf3_sect3_2 = self.options.posShelf4_sect3_2 + 12
                            self.options.posShelf2_sect3_2 = self.options.posShelf3_sect3_2 + 12
                            self.options.posShelf1_sect3_2 = self.options.posShelf2_sect3_2 + 12
                        
                            self.shelvingGroup_section3_2.add(
                                self.createShelfToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf2_sect3_2, 2, '3_2', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect3_2, 3, '3_2', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect3_2, 4, '3_2', self.options.section3Length)
                            );
                            document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving4_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving5_S3_2").style.display = "none";



                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 48 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S3_2").style.display = "none";
                            document.getElementById('internalShelving_sect3_2').value = 3
                            self.options.shelvesCounterSection3_2 = 3;
                        }

                    break;  

                    case 5:

                        self.options.shelvesCounterSection3_2 = 5;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 69) {
                            
                            self.scene.remove(self.shelvingGroup_section3_2);                        

                            self.shelvingGroup_section3_2 = new THREE.Group();
                            self.options.posShelf5_sect3_2 = 13
                            self.options.posShelf4_sect3_2 = self.options.posShelf5_sect3_2 + 12
                            self.options.posShelf3_sect3_2 = self.options.posShelf4_sect3_2 + 12
                            self.options.posShelf2_sect3_2 = self.options.posShelf3_sect3_2 + 12
                            self.options.posShelf1_sect3_2 = self.options.posShelf2_sect3_2 + 12
                        
            
                            self.shelvingGroup_section3_2.add(
                                self.createShelfToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf2_sect3_2, 2, '3_2', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect3_2, 3, '3_2', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect3_2, 4, '3_2', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf5_sect3_2, 5, '3_2', self.options.section3Length)
                            );
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "flex";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 60 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S3_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving5_S3_2").style.display = "none";
                            document.getElementById('internalShelving_sect3_2').value = 4
                            self.options.shelvesCounterSection3_2 = 4;
                        }

                    break;  
                }
                
    
                if (self.options.shelvesCounterSection3_2 != 0) {
    
                    self.shelvingGroup_section3_2.position.y = self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y - 1
    
                    self.shelvingGroup_section3_2.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
    
    
                    self.shelvingGroup_section3_2.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
    
                    self.shelvingGroup_section3_2.name = 'shelvingGroup_section3_2';
    
                    self.scene.add(self.shelvingGroup_section3_2);

    
                    for (var i = 1; i <= self.options.shelvesCounterSection3_2; i++) {
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                       
                    }
      
    
                } else {}
    
    
                self.options.heigh1Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_2').textContent.match(/\d+(\.\d+)?/)[0]); 
                self.options.heigh2Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving3_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving4_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving5_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);

                self.options.heigh0Shelf3_2 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };


            document.getElementById("ShoeShelving_S3_2").addEventListener('click', function() {
                createShoeShelving_S3_2();
            });
            function createShoeShelving_S3_2() {
    
                var checkBox_InternalShelving_S3_2 = document.getElementById("ShoeShelving_S3_2");
    
                if ( document.getElementById("ShoeShelving_S3_2").checked == true || self.options.s3_2_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "flex";
                    document.getElementById("MainInternalShelving_S3_2").style.display = "none";
                    
                    document.getElementById("Drawer_S3_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_2").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection3_2 = 1;

                    document.getElementById("ShoeShelving_sect3_2").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect3_2").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_2);
                        
                        self.shelvingGroup_section3_2 = new THREE.Group();
                        self.options.posShelf1_sect3_2 = 14;

                        self.shelvingGroup_section3_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length));
                        self.shelvingGroup_section3_2.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                        for (var i = 2; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_2").style.display = "flex";
                        document.getElementById("InternalShelving1_S3_2").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_2').value = 0
                        self.options.shelvesCounterSection3_2 = 0;
                    }

                    if (self.options.shelvesCounterSection3_2 != 0) {
    
                        self.shelvingGroup_section3_2.position.y = self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y - 1
        
                        self.shelvingGroup_section3_2.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section3_2.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section3_2.name = 'shelvingGroup_section3_2';
        
                        self.scene.add(self.shelvingGroup_section3_2);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_2; i++) {
                            self.shelvingGroup_section3_2.getObjectByName('internalShelf_3_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection3_2; i++) {
                            self.shelvingGroup_section3_2.getObjectByName('internalShelfShoe_3_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                    for (var i = 2; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                    }

    
    
                    self.options.s3_2_internlShelvinStatus = 1
                    self.options.s3_2_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection3_2 = 0
                    self.scene.remove(self.shelvingGroup_section3_2);
    
                    for (var i = 1; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect3_2").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                    document.getElementById("MainInternalShelving_S3_2").style.display = "flex";

                    document.getElementById("Drawer_S3_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS3_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S3_2").src="icons/Drawer_Close.jpg";

                    self.options.s3_2_internlShelvinStatus = 0
                    self.options.s3_2_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_2 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves3_2").addEventListener('click', requestChangeShoeShelving3_2); 
            document.getElementById("subButtonPlus_ShoeShelves3_2").addEventListener('click', requestChangeShoeShelving3_2); 
            document.getElementById("ShoeShelving_sect3_2").addEventListener('change', requestChangeShoeShelving3_2); 

            function requestChangeShoeShelving3_2 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect3_2();
            };
    
            function createShoeShelving_sect3_2() {
        

                self.options.s3_2_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect3_2").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection3_2 = 0
                        self.options.s3_2_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section3_2);
    
                        document.getElementById("ShoeShelving_S3_2").checked = false;
        
                        for (var i = 1; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect3_2").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_2").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S3_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_2").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection3_2 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect3_2").value = '1'
                            self.scene.remove(self.shelvingGroup_section3_2);
                            
                            self.shelvingGroup_section3_2 = new THREE.Group();
                            self.options.posShelf1_sect3_2 = 14;

                            self.shelvingGroup_section3_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length));
                            self.shelvingGroup_section3_2.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                            for (var i = 2; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                            document.getElementById("MainInternalShelving_S3_2").style.display = "flex";

                            document.getElementById("InternalShelving1_S3_2").style.display = "none";
                            document.getElementById('ShoeShelving_sect3_2').value = 0
                            self.options.shelvesCounterSection3_2 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection3_2 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section3_2);
                            self.shelvingGroup_section3_2 = new THREE.Group();
                            self.options.posShelf2_sect3_2 =  14;
                            self.options.posShelf1_sect3_2 = self.options.posShelf2_sect3_2 + 27.5;
    
                            self.shelvingGroup_section3_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length), self.createShelfShoeToGroup(self.options.posShelf2_sect3_2, 2, '3_2', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect3_2, 2, '3_2', self.options.section3Length));
                            
                            
                            document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_2").style.display = "flex";
                            for (var i = 3; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S3_2").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_2').value = 1
                        self.options.shelvesCounterSection3_2 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection3_2 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 74) {
                            self.scene.remove(self.shelvingGroup_section3_2);                        

                            self.shelvingGroup_section3_2 = new THREE.Group();
                            self.options.posShelf3_sect3_2 = 14
                            self.options.posShelf2_sect3_2 = self.options.posShelf3_sect3_2 + 27.5
                            self.options.posShelf1_sect3_2 = self.options.posShelf2_sect3_2 + 27.5

                        
                            self.shelvingGroup_section3_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect3_2, 1, '3_2', self.options.section3Length), self.createShelfShoeToGroup(self.options.posShelf2_sect3_2, 2, '3_2', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect3_2, 2, '3_2', self.options.section3Length), self.createShelfShoeToGroup(self.options.posShelf3_sect3_2, 3, '3_2', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf3_sect3_2, 3, '3_2', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_2").style.display = "flex";
                            for (var i = 4; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }        

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 69 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = 25 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = 25 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S3_2").style.display = "none";
                            document.getElementById('ShoeShelving_sect3_2').value = 2
                            self.options.shelvesCounterSection3_2 = 2;
                        }

                    break;  

                  
                }

                self.options.heigh0Shelf3_2 = 5

        
                if (self.options.shelvesCounterSection3_2 != 0) {
    
                    self.shelvingGroup_section3_2.position.y = self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y - 1
    
                    self.shelvingGroup_section3_2.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
    
                    self.shelvingGroup_section3_2.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section3_2.name = 'shelvingGroup_section3_2';
    
                    self.scene.add(self.shelvingGroup_section3_2);

                    for (var i = 1; i <= self.options.shelvesCounterSection3_2; i++) {
                        self.shelvingGroup_section3_2.getObjectByName('internalShelfShoe_3_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection3_2; i++) {
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving3_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving4_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf3_2 = parseFloat(document.getElementById('PositionField_InternalShelving5_S3_2').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
    
    

            //section3_2_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S3_2_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_3_2 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+1).position.y += 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf3_2-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = Math.floor( self.options.heigh1Shelf3_2 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf3_2 += 1
                            document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = Math.floor( self.options.heigh2Shelf3_2 ) +"cm";
                        } else{
                            self.options.heigh0Shelf3_2+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S3_2_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf3_2 > 10 && self.options.s3_2_ShelvingStatus === 'Wood' || self.options.heigh2Shelf3_2 > 25 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_2 += 1
                        self.options.heigh2Shelf3_2 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = Math.floor( self.options.heigh1Shelf3_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = Math.floor( self.options.heigh2Shelf3_2 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf3_2 > 10 && self.options.s3_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_2 > 13 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_2 += 1
                        self.options.heigh0Shelf3_2 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = Math.floor( self.options.heigh1Shelf3_2 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section3_2_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S3_2_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+2).position.y += 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf3_2 -= 1
                        self.options.heigh3Shelf3_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = Math.floor( self.options.heigh2Shelf3_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = Math.floor( self.options.heigh3Shelf3_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+2).position.y += 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf3_2 -= 1
                        self.options.heigh0Shelf3_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = Math.floor( self.options.heigh2Shelf3_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S3_2_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf3_2 > 10 && self.options.s3_2_ShelvingStatus === 'Wood' || self.options.heigh3Shelf3_2 > 25 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf3_2 += 1
                        self.options.heigh3Shelf3_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = Math.floor( self.options.heigh2Shelf3_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = Math.floor( self.options.heigh3Shelf3_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf3_2 > 10 && self.options.s3_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_2 > 13 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf3_2 += 1
                        self.options.heigh0Shelf3_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = Math.floor( self.options.heigh2Shelf3_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section3_2_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S3_2_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+3).position.y += 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf3_2 -= 1
                        self.options.heigh4Shelf3_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = Math.floor( self.options.heigh3Shelf3_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = Math.floor( self.options.heigh4Shelf3_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+3).position.y += 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf3_2 -= 1
                        self.options.heigh0Shelf3_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = Math.floor( self.options.heigh3Shelf3_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S3_2_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf3_2 > 10 && self.options.s3_2_ShelvingStatus === 'Wood' || self.options.heigh4Shelf3_2 > 13 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf3_2 += 1
                        self.options.heigh4Shelf3_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = Math.floor( self.options.heigh3Shelf3_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = Math.floor( self.options.heigh4Shelf3_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf3_2 > 10 && self.options.s3_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_2 > 13 && self.options.s3_2_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s3_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_2_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf3_2 += 1
                        self.options.heigh0Shelf3_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = Math.floor( self.options.heigh3Shelf3_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section3_2_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S3_2_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+5) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+4).position.y += 1.05
                        

                        self.options.heigh4Shelf3_2 -= 1
                        self.options.heigh5Shelf3_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = Math.floor( self.options.heigh4Shelf3_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S3_2").innerHTML = Math.floor( self.options.heigh5Shelf3_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+4).position.y += 1.05
                        
    
                        self.options.heigh4Shelf3_2 -= 1
                        self.options.heigh0Shelf3_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = Math.floor( self.options.heigh4Shelf3_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S3_2_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+5) != undefined) {
                
                    if ( self.options.heigh5Shelf3_2 >= 11 ) {
        
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+4).position.y -= 1.05
                       
        
                        self.options.heigh4Shelf3_2 += 1
                        self.options.heigh5Shelf3_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = Math.floor( self.options.heigh4Shelf3_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S3_2").innerHTML = Math.floor( self.options.heigh5Shelf3_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf3_2 >= 11 ) {
        
                        self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+4).position.y -= 1.05
                        
        
                        self.options.heigh4Shelf3_2 += 1
                        self.options.heigh0Shelf3_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = Math.floor( self.options.heigh4Shelf3_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section3_2_shelf5 up&down
            document.getElementById("MoveInternalShelving5_S3_2_UP").addEventListener('click', async function() {

                if (parseFloat(document.getElementById('PositionField_InternalShelving5_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+5).position.y += 1.05
                    

                    self.options.heigh5Shelf3_2 -= 1
                    self.options.heigh0Shelf3_2 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving5_S3_2").innerHTML = Math.floor( self.options.heigh5Shelf3_2 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving5_S3_2_DOWN").addEventListener('click', async function() {

                if ( self.options.heigh0Shelf3_2 >= 11 ) {
    
                    self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+5).position.y -= 1.05
                    
    
                    self.options.heigh5Shelf3_2 += 1
                    self.options.heigh0Shelf3_2 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving5_S3_2").innerHTML = Math.floor( self.options.heigh5Shelf3_2 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });
            
            


            //section 3_3 shelf generating
            document.getElementById("InternalShelving_S3_3").addEventListener('click', function() {
                createInternalShelving_S3_3();
            });
    
            function createInternalShelving_S3_3() {
    
                var checkBox_InternalShelving_S3_3 = document.getElementById("InternalShelving_S3_3");
    
                if ( document.getElementById("InternalShelving_S3_3").checked == true || self.options.s3_3_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "flex";
                    document.getElementById("MainShoeShelving_S3_3").style.display = "none";

                    document.getElementById("Drawer_S3_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_3").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection3_3 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                        document.getElementById("internalShelving_sect3_3").value = '1'
    
                        self.scene.remove(self.shelvingGroup_section3_3);
                        
                        self.shelvingGroup_section3_3 = new THREE.Group();
                        self.options.posShelf1_sect3_3 = 13;
    
                        self.shelvingGroup_section3_3.add(self.createShelfToGroup(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length));
    
                        document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                        for (var i = 2; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";

    
                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                        document.getElementById("InternalShelving1_S3_3").style.display = "none";
                        document.getElementById('internalShelving_sect3_3').value = 0
                        self.options.shelvesCounterSection3_3 = 0;
                    }
    
                    if (self.options.shelvesCounterSection3_3 != 0) {
    
                        self.shelvingGroup_section3_3.position.y = self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y - 1
        
                        self.shelvingGroup_section3_3.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section3_3.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        self.shelvingGroup_section3_3.name = 'shelvingGroup_section3_3';
        
                        self.scene.add(self.shelvingGroup_section3_3);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_3; i++) {
                            self.shelvingGroup_section3_3.getObjectByName('internalShelf_3_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        
    
                    } else {}     
    
                    self.options.s3_3_internlShelvinStatus = 1
                    self.options.s3_3_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection3_3 = 0
                    self.scene.remove(self.shelvingGroup_section3_3);
    
                    for (var i = 1; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                    }
                    document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                    document.getElementById("MainShoeShelving_S3_3").style.display = "flex";

                    document.getElementById("internalShelving_sect3_3").value = '0'

                    self.options.s3_3_internlShelvinStatus = 0
                    self.options.s3_3_ShelvingStatus = 'none'

    
                }
    
               
                self.options.heigh1Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_3 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
    
            document.getElementById("subButtonMinus_Shelves3_3").addEventListener('click', requestChangeShelving3_3); 
            document.getElementById("subButtonPlus_Shelves3_3").addEventListener('click', requestChangeShelving3_3); 
            document.getElementById("internalShelving_sect3_3").addEventListener('change', requestChangeShelving3_3);  
    
            function requestChangeShelving3_3 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect3_3();
            };
    
            function createInternalShelving_sect3_3() {
    
    
                switch (parseInt(document.getElementById("internalShelving_sect3_3").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection3_3 = 0
                        self.scene.remove(self.shelvingGroup_section3_3);
    
                        document.getElementById("InternalShelving_S3_3").checked = false;
                        for (var i = 1; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                        }
                        document.getElementById("InternalShelving2_S3_3").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                        document.getElementById("MainShoeShelving_S3_3").style.display = "flex";

                        document.getElementById("internalShelving_sect3_3").value = '0'
                        

                        document.getElementById("Drawer_S3_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_3").src="icons/Drawer_Close.jpg";
    
                    break;
                    case 1:
                        self.options.shelvesCounterSection3_3 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section3_3);
                            
                            self.shelvingGroup_section3_3 = new THREE.Group();
                            self.options.posShelf1_sect3_3 = 13;
    
                            self.shelvingGroup_section3_3.add(self.createShelfToGroup(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length));
    
                            document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_3").style.display = "none";
                            document.getElementById("InternalShelving3_S3_3").style.display = "none";
                            document.getElementById("InternalShelving4_S3_3").style.display = "none";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                            document.getElementById("InternalShelving1_S3_3").style.display = "none";
                            document.getElementById('internalShelving_sect3_3').value = 0
                            self.options.shelvesCounterSection3_3 = 0;  
                        }
                    break;
                    case 2:
                        self.options.shelvesCounterSection3_3 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section3_3);
                            self.shelvingGroup_section3_3 = new THREE.Group();
                            self.options.posShelf2_sect3_3 =  13
                            self.options.posShelf1_sect3_3 = self.options.posShelf2_sect3_3 + 12
    
                            self.shelvingGroup_section3_3.add(self.createShelfToGroup(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_3, 2, '3_3', self.options.section3Length)
                            );
                            
                            document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_3").style.display = "none";
                            document.getElementById("InternalShelving4_S3_3").style.display = "none";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S3_3").style.display = "none";
                            document.getElementById('internalShelving_sect3_3').value = 1
                            self.options.shelvesCounterSection3_3 = 1;
                        }
    
                    break;    
                    case 3:

                        self.options.shelvesCounterSection3_3 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section3_3);                        

                            self.shelvingGroup_section3_3 = new THREE.Group();
                            self.options.posShelf3_sect3_3 =13
                            self.options.posShelf2_sect3_3 = self.options.posShelf3_sect3_3 + 12
                            self.options.posShelf1_sect3_3 = self.options.posShelf2_sect3_3 + 12

                        
                            self.shelvingGroup_section3_3.add(self.createShelfToGroup(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_3, 2, '3_3', self.options.section3Length), self.createShelfToGroup(self.options.posShelf3_sect3_3, 3, '3_3', self.options.section3Length)
                            );
                            document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_3").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S3_3").style.display = "none";
                            document.getElementById('internalShelving_sect3_3').value = 2
                            self.options.shelvesCounterSection3_3 = 2;
                        }

                    break;  
                    case 4:

                        self.options.shelvesCounterSection3_3 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section3_3);                        

                            self.shelvingGroup_section3_3 = new THREE.Group();
                            self.options.posShelf4_sect3_3 = 13
                            self.options.posShelf3_sect3_3 = self.options.posShelf4_sect3_3 + 12
                            self.options.posShelf2_sect3_3 = self.options.posShelf3_sect3_3 + 12
                            self.options.posShelf1_sect3_3 = self.options.posShelf2_sect3_3 + 12
                        
                            self.shelvingGroup_section3_3.add(
                                self.createShelfToGroup(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length),
                                self.createShelfToGroup(self.options.posShelf2_sect3_3, 2, '3_3', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect3_3, 3, '3_3', self.options.section3Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect3_3, 4, '3_3', self.options.section3Length)
                            );
                            document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving4_S3_3").style.display = "flex";
                            


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 48 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S3_3").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S3_3").style.display = "none";
                            document.getElementById('internalShelving_sect3_3').value = 3
                            self.options.shelvesCounterSection3_3 = 3;
                        }

                    break;  
                }

    
                if (self.options.shelvesCounterSection3_3 != 0) {
    
                    self.shelvingGroup_section3_3.position.y = self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y - 1
    
                    self.shelvingGroup_section3_3.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
    
                    self.shelvingGroup_section3_3.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
    
                    self.shelvingGroup_section3_3.name = 'shelvingGroup_section3_3';
    
                    self.scene.add(self.shelvingGroup_section3_3);
    
                    for (var i = 1; i <= self.options.shelvesCounterSection3_3; i++) {
                        self.shelvingGroup_section3_3.getObjectByName('internalShelf_3_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    

                self.options.heigh1Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving3_S3_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving4_S3_3').textContent.match(/\d+(\.\d+)?/)[0]);

                self.options.heigh0Shelf3_3 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };
    

            document.getElementById("ShoeShelving_S3_3").addEventListener('click', function() {
                createShoeShelving_S3_3();
            });
            function createShoeShelving_S3_3() {
    
                var checkBox_InternalShelving_S3_3 = document.getElementById("ShoeShelving_S3_3");
    
                if ( document.getElementById("ShoeShelving_S3_3").checked == true || self.options.s3_3_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "flex";
                    document.getElementById("MainInternalShelving_S3_3").style.display = "none";
                    
                    document.getElementById("Drawer_S3_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_3").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection3_3 = 1;

                    document.getElementById("ShoeShelving_sect3_3").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect3_3").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_3);
                        
                        self.shelvingGroup_section3_3 = new THREE.Group();
                        self.options.posShelf1_sect3_3 = 14;

                        self.shelvingGroup_section3_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length));
                        self.shelvingGroup_section3_3.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                        for (var i = 2; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_3").style.display = "flex";
                        document.getElementById("InternalShelving1_S3_3").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_3').value = 0
                        self.options.shelvesCounterSection3_3 = 0;
                    }

                    if (self.options.shelvesCounterSection3_3 != 0) {
    
                        self.shelvingGroup_section3_3.position.y = self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y - 1
        
                        self.shelvingGroup_section3_3.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section3_3.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section3_3.name = 'shelvingGroup_section3_3';
        
                        self.scene.add(self.shelvingGroup_section3_3);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_3; i++) {
                            self.shelvingGroup_section3_3.getObjectByName('internalShelf_3_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection3_3; i++) {
                            self.shelvingGroup_section3_3.getObjectByName('internalShelfShoe_3_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                    for (var i = 2; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                    }

    
    
                    self.options.s3_3_internlShelvinStatus = 1
                    self.options.s3_3_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection3_3 = 0
                    self.scene.remove(self.shelvingGroup_section3_3);
    
                    for (var i = 1; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect3_3").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                    document.getElementById("MainInternalShelving_S3_3").style.display = "flex";

                    document.getElementById("Drawer_S3_3").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS3_3").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S3_3").src="icons/Drawer_Close.jpg";

                    self.options.s3_3_internlShelvinStatus = 0
                    self.options.s3_3_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_3 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves3_3").addEventListener('click', requestChangeShoeShelving3_3); 
            document.getElementById("subButtonPlus_ShoeShelves3_3").addEventListener('click', requestChangeShoeShelving3_3); 
            document.getElementById("ShoeShelving_sect3_3").addEventListener('change', requestChangeShoeShelving3_3); 

            function requestChangeShoeShelving3_3 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect3_3();
            };
    
            function createShoeShelving_sect3_3() {
        

                self.options.s3_3_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect3_3").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection3_3 = 0
                        self.options.s3_3_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section3_3);
    
                        document.getElementById("ShoeShelving_S3_3").checked = false;
        
                        for (var i = 1; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect3_3").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_3").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S3_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_3").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection3_3 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect3_3").value = '1'
                            self.scene.remove(self.shelvingGroup_section3_3);
                            
                            self.shelvingGroup_section3_3 = new THREE.Group();
                            self.options.posShelf1_sect3_3 = 14;

                            self.shelvingGroup_section3_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length));
                            self.shelvingGroup_section3_3.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                            for (var i = 2; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                            document.getElementById("MainInternalShelving_S3_3").style.display = "flex";

                            document.getElementById("InternalShelving1_S3_3").style.display = "none";
                            document.getElementById('ShoeShelving_sect3_3').value = 0
                            self.options.shelvesCounterSection3_3 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection3_3 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section3_3);
                            self.shelvingGroup_section3_3 = new THREE.Group();
                            self.options.posShelf2_sect3_3 =  14;
                            self.options.posShelf1_sect3_3 = self.options.posShelf2_sect3_3 + 27.5;
    
                            self.shelvingGroup_section3_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect3_3, 1, '3_3', self.options.section3Length), self.createShelfShoeToGroup(self.options.posShelf2_sect3_3, 2, '3_3', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect3_3, 2, '3_3', self.options.section3Length));
                            
                            
                            document.getElementById("InternalShelving1_S3_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_3").style.display = "flex";
                            for (var i = 3; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S3_3").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_3').value = 1
                        self.options.shelvesCounterSection3_3 = 1;}
    
                    break;
                }

                self.options.heigh0Shelf3_3 = 5

        
                if (self.options.shelvesCounterSection3_3 != 0) {
    
                    self.shelvingGroup_section3_3.position.y = self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y - 1
    
                    self.shelvingGroup_section3_3.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
    
                    self.shelvingGroup_section3_3.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section3_3.name = 'shelvingGroup_section3_3';
    
                    self.scene.add(self.shelvingGroup_section3_3);

                    for (var i = 1; i <= self.options.shelvesCounterSection3_3; i++) {
                        self.shelvingGroup_section3_3.getObjectByName('internalShelfShoe_3_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection3_3; i++) {
                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving3_S3_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf3_3 = parseFloat(document.getElementById('PositionField_InternalShelving4_S3_3').textContent.match(/\d+(\.\d+)?/)[0]);
                

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            

    
            //section3_3_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S3_3_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_3_3 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+1).position.y += 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf3_3-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = Math.floor( self.options.heigh1Shelf3_3 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf3_3 += 1
                            document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = Math.floor( self.options.heigh2Shelf3_3 ) +"cm";
                        } else{
                            self.options.heigh0Shelf3_3+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S3_3_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf3_3 > 10 && self.options.s3_3_ShelvingStatus === 'Wood' || self.options.heigh2Shelf3_3 > 25 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_3 += 1
                        self.options.heigh2Shelf3_3 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = Math.floor( self.options.heigh1Shelf3_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = Math.floor( self.options.heigh2Shelf3_3 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf3_3 > 10 && self.options.s3_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_3 > 13 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_3 += 1
                        self.options.heigh0Shelf3_3 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = Math.floor( self.options.heigh1Shelf3_3 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section3_3_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S3_3_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+2).position.y += 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf3_3 -= 1
                        self.options.heigh3Shelf3_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = Math.floor( self.options.heigh2Shelf3_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = Math.floor( self.options.heigh3Shelf3_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+2).position.y += 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf3_3 -= 1
                        self.options.heigh0Shelf3_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = Math.floor( self.options.heigh2Shelf3_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S3_3_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf3_3 > 10 && self.options.s3_3_ShelvingStatus === 'Wood' || self.options.heigh3Shelf3_3 > 25 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf3_3 += 1
                        self.options.heigh3Shelf3_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = Math.floor( self.options.heigh2Shelf3_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = Math.floor( self.options.heigh3Shelf3_3 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf3_3 > 10 && self.options.s3_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_3 > 13 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf3_3 += 1
                        self.options.heigh0Shelf3_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = Math.floor( self.options.heigh2Shelf3_3 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section3_3_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S3_3_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+3).position.y += 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf3_3 -= 1
                        self.options.heigh4Shelf3_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = Math.floor( self.options.heigh3Shelf3_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S3_3").innerHTML = Math.floor( self.options.heigh4Shelf3_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+3).position.y += 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf3_3 -= 1
                        self.options.heigh0Shelf3_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = Math.floor( self.options.heigh3Shelf3_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S3_3_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf3_3 > 10 && self.options.s3_3_ShelvingStatus === 'Wood' || self.options.heigh4Shelf3_3 > 25 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf3_3 += 1
                        self.options.heigh4Shelf3_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = Math.floor( self.options.heigh3Shelf3_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S3_3").innerHTML = Math.floor( self.options.heigh4Shelf3_3 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf3_3 > 10 && self.options.s3_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_3 > 13 && self.options.s3_3_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s3_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_3_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf3_3 += 1
                        self.options.heigh0Shelf3_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = Math.floor( self.options.heigh3Shelf3_3 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section3_3_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S3_3_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving4_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+4).position.y += 1.05
                    

                    self.options.heigh4Shelf3_3 -= 1
                    self.options.heigh0Shelf3_3 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving4_S3_3").innerHTML = Math.floor( self.options.heigh4Shelf3_3 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S3_3_DOWN").addEventListener('click', async function() {

                if ( self.options.heigh0Shelf3_3 > 10 ) {
    
                    self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+4).position.y -= 1.05
                    
    
                    self.options.heigh4Shelf3_3 += 1
                    self.options.heigh0Shelf3_3 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving4_S3_3").innerHTML = Math.floor( self.options.heigh4Shelf3_3 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });
    

            //section 3_4 shelf generating
            document.getElementById("InternalShelving_S3_4").addEventListener('click', function() {
                createInternalShelving_S3_4();
            });
            function createInternalShelving_S3_4() {

                var checkBox_InternalShelving_S3_4 = document.getElementById("InternalShelving_S3_4");

                if ( document.getElementById("InternalShelving_S3_4").checked == true || self.options.s3_4_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "flex";
                    document.getElementById("MainShoeShelving_S3_4").style.display = "none";

                    document.getElementById("Drawer_S3_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_4").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection3_4 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect3_4").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_4);
                        
                        self.shelvingGroup_section3_4 = new THREE.Group();
                        self.options.posShelf1_sect3_4 = 13;

                        self.shelvingGroup_section3_4.add(self.createShelfToGroup(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_4").style.display = "flex";

                        document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                        document.getElementById("InternalShelving1_S3_4").style.display = "none";
                        document.getElementById('internalShelving_sect3_4').value = 0
                        self.options.shelvesCounterSection3_4 = 0;
                    }

                    if (self.options.shelvesCounterSection3_4 != 0) {

                        self.shelvingGroup_section3_4.position.y = self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y - 1
        
                        self.shelvingGroup_section3_4.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section3_4.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        self.shelvingGroup_section3_4.name = 'shelvingGroup_section3_4';
        
                        self.scene.add(self.shelvingGroup_section3_4);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_4; i++) {
                            self.shelvingGroup_section3_4.getObjectByName('internalShelf_3_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s3_4_internlShelvinStatus = 1
                    self.options.s3_4_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection3_4 = 0
                    self.scene.remove(self.shelvingGroup_section3_4);

                    for (var i = 1; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                    }

                    document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                    document.getElementById("MainShoeShelving_S3_4").style.display = "flex";

                    document.getElementById("internalShelving_sect3_4").value = '0'

                    self.options.s3_4_internlShelvinStatus = 0
                    self.options.s3_4_ShelvingStatus = 'none'


                }

            
                self.options.heigh1Shelf3_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_4 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves3_4").addEventListener('click', requestChangeShelving3_4); 
            document.getElementById("subButtonPlus_Shelves3_4").addEventListener('click', requestChangeShelving3_4); 
            document.getElementById("internalShelving_sect3_4").addEventListener('change', requestChangeShelving3_4);  

            function requestChangeShelving3_4 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect3_4();
            };

            function createInternalShelving_sect3_4() {


                switch (parseInt(document.getElementById("internalShelving_sect3_4").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection3_4 = 0
                        self.scene.remove(self.shelvingGroup_section3_4);

                        document.getElementById("InternalShelving_S3_4").checked = false;

                        for (var i = 1; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                        }

                        document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                        document.getElementById("MainShoeShelving_S3_4").style.display = "flex";

                        document.getElementById("internalShelving_sect3_4").value = '0'

                        document.getElementById("Drawer_S3_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_4").src="icons/Drawer_Close.jpg";

                    break;
                    case 1:
                        self.options.shelvesCounterSection3_4 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section3_4);
                            
                            self.shelvingGroup_section3_4 = new THREE.Group();
                            self.options.posShelf1_sect3_4 = 13;

                            self.shelvingGroup_section3_4.add(self.createShelfToGroup(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_4").style.display = "flex";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                            document.getElementById("InternalShelving1_S3_4").style.display = "none";
                            document.getElementById('internalShelving_sect3_4').value = 0
                            self.options.shelvesCounterSection3_4 = 0;  
                        }
                    break;  
                    case 2:
                        self.options.shelvesCounterSection3_4 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section3_4);
                            self.shelvingGroup_section3_4 = new THREE.Group();
                            self.options.posShelf2_sect3_4 =  13
                            self.options.posShelf1_sect3_4 = self.options.posShelf2_sect3_4 + 12
    
                            self.shelvingGroup_section3_4.add(self.createShelfToGroup(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_4, 2, '3_4', self.options.section3Length)
                            );
                            
                            document.getElementById("InternalShelving1_S3_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_4").style.display = "flex";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S3_4").style.display = "none";
                            document.getElementById('internalShelving_sect3_4').value = 1
                            self.options.shelvesCounterSection3_4 = 1;
                        }
    
                    break;    
                    case 3:

                        self.options.shelvesCounterSection3_4 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section3_4);                        

                            self.shelvingGroup_section3_4 = new THREE.Group();
                            self.options.posShelf3_sect3_4 =13
                            self.options.posShelf2_sect3_4 = self.options.posShelf3_sect3_4 + 12
                            self.options.posShelf1_sect3_4 = self.options.posShelf2_sect3_4 + 12

                        
                            self.shelvingGroup_section3_4.add(self.createShelfToGroup(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_4, 2, '3_4', self.options.section3Length), self.createShelfToGroup(self.options.posShelf3_sect3_4, 3, '3_4', self.options.section3Length)
                            );
                            document.getElementById("InternalShelving1_S3_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_4").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_4").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S3_4").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S3_4").style.display = "none";
                            document.getElementById('internalShelving_sect3_4').value = 2
                            self.options.shelvesCounterSection3_4 = 2;
                        }

                    break; 
                }
                

                if (self.options.shelvesCounterSection3_4 != 0) {

                    self.shelvingGroup_section3_4.position.y = self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y - 1

                    self.shelvingGroup_section3_4.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section3_4.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;

                    self.shelvingGroup_section3_4.name = 'shelvingGroup_section3_4';

                    self.scene.add(self.shelvingGroup_section3_4);


                    for (var i = 1; i <= self.options.shelvesCounterSection3_4; i++) {
                        self.shelvingGroup_section3_4.getObjectByName('internalShelf_3_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                } else {}

                self.options.heigh1Shelf3_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_4 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf3_4 = parseFloat(document.getElementById('PositionField_InternalShelving3_S3_4').textContent.match(/\d+(\.\d+)?/)[0]);
                
                self.options.heigh0Shelf3_4 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S3_4").addEventListener('click', function() {
                createShoeShelving_S3_4();
            });
            function createShoeShelving_S3_4() {
    
                var checkBox_InternalShelving_S3_4 = document.getElementById("ShoeShelving_S3_4");
    
                if ( document.getElementById("ShoeShelving_S3_4").checked == true || self.options.s3_4_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "flex";
                    document.getElementById("MainInternalShelving_S3_4").style.display = "none";
                    
                    document.getElementById("Drawer_S3_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_4").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection3_4 = 1;

                    document.getElementById("ShoeShelving_sect3_4").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect3_4").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_4);
                        
                        self.shelvingGroup_section3_4 = new THREE.Group();
                        self.options.posShelf1_sect3_4 = 14;

                        self.shelvingGroup_section3_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length));
                        self.shelvingGroup_section3_4.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_4").style.display = "flex";
                        for (var i = 2; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_4").style.display = "flex";
                        document.getElementById("InternalShelving1_S3_4").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_4').value = 0
                        self.options.shelvesCounterSection3_4 = 0;
                    }

                    if (self.options.shelvesCounterSection3_4 != 0) {
    
                        self.shelvingGroup_section3_4.position.y = self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y - 1
        
                        self.shelvingGroup_section3_4.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section3_4.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section3_4.name = 'shelvingGroup_section3_4';
        
                        self.scene.add(self.shelvingGroup_section3_4);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_4; i++) {
                            self.shelvingGroup_section3_4.getObjectByName('internalShelf_3_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection3_4; i++) {
                            self.shelvingGroup_section3_4.getObjectByName('internalShelfShoe_3_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S3_4").style.display = "flex";
                    for (var i = 2; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                    }

    
    
                    self.options.s3_4_internlShelvinStatus = 1
                    self.options.s3_4_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection3_4 = 0
                    self.scene.remove(self.shelvingGroup_section3_4);
    
                    for (var i = 1; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect3_4").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                    document.getElementById("MainInternalShelving_S3_4").style.display = "flex";

                    document.getElementById("Drawer_S3_4").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS3_4").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S3_4").src="icons/Drawer_Close.jpg";

                    self.options.s3_4_internlShelvinStatus = 0
                    self.options.s3_4_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf3_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_4 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves3_4").addEventListener('click', requestChangeShoeShelving3_4); 
            document.getElementById("subButtonPlus_ShoeShelves3_4").addEventListener('click', requestChangeShoeShelving3_4); 
            document.getElementById("ShoeShelving_sect3_4").addEventListener('change', requestChangeShoeShelving3_4); 

            function requestChangeShoeShelving3_4 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect3_4();
            };
    
            function createShoeShelving_sect3_4() {
        
                self.options.s3_4_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect3_4").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection3_4 = 0
                        self.options.s3_4_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section3_4);
    
                        document.getElementById("ShoeShelving_S3_4").checked = false;
        
                        for (var i = 1; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect3_4").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_4").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S3_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_4").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection3_4 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect3_4").value = '1'
                            self.scene.remove(self.shelvingGroup_section3_4);
                            
                            self.shelvingGroup_section3_4 = new THREE.Group();
                            self.options.posShelf1_sect3_4 = 14;

                            self.shelvingGroup_section3_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length));
                            self.shelvingGroup_section3_4.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_4").style.display = "flex";
                            for (var i = 2; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                            document.getElementById("MainInternalShelving_S3_4").style.display = "flex";

                            document.getElementById("InternalShelving1_S3_4").style.display = "none";
                            document.getElementById('ShoeShelving_sect3_4').value = 0
                            self.options.shelvesCounterSection3_4 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection3_4 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section3_4);
                            self.shelvingGroup_section3_4 = new THREE.Group();
                            self.options.posShelf2_sect3_4 =  14;
                            self.options.posShelf1_sect3_4 = self.options.posShelf2_sect3_4 + 27.5;
    
                            self.shelvingGroup_section3_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect3_4, 1, '3_4', self.options.section3Length), self.createShelfShoeToGroup(self.options.posShelf2_sect3_4, 2, '3_4', self.options.section3Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect3_4, 2, '3_4', self.options.section3Length));
                            
                            
                            document.getElementById("InternalShelving1_S3_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_4").style.display = "flex";
                            document.getElementById("InternalShelving3_S3_4").style.display = "none";

    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S3_4").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_4').value = 1
                        self.options.shelvesCounterSection3_4 = 1;}
    
                    break;
                  
                }

                self.options.heigh0Shelf3_4 = 5

        
                if (self.options.shelvesCounterSection3_4 != 0) {
    
                    self.shelvingGroup_section3_4.position.y = self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y - 1
    
                    self.shelvingGroup_section3_4.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
    
                    self.shelvingGroup_section3_4.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section3_4.name = 'shelvingGroup_section3_4';
    
                    self.scene.add(self.shelvingGroup_section3_4);

                    for (var i = 1; i <= self.options.shelvesCounterSection3_4; i++) {
                        self.shelvingGroup_section3_4.getObjectByName('internalShelfShoe_3_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection3_4; i++) {
                        self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf3_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_4 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf3_4 = parseFloat(document.getElementById('PositionField_InternalShelving3_S3_4').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section3_4_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S3_4_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_3_4 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+1).position.y += 1.05
                        if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf3_4-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = Math.floor( self.options.heigh1Shelf3_4 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf3_4 += 1
                            document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = Math.floor( self.options.heigh2Shelf3_4 ) +"cm";
                        } else{
                            self.options.heigh0Shelf3_4+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S3_4_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf3_4 > 10 && self.options.s3_4_ShelvingStatus === 'Wood' || self.options.heigh2Shelf3_4 > 25 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_4 += 1
                        self.options.heigh2Shelf3_4 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = Math.floor( self.options.heigh1Shelf3_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = Math.floor( self.options.heigh2Shelf3_4 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf3_4 > 10 && self.options.s3_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_4 > 13 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_4 += 1
                        self.options.heigh0Shelf3_4 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = Math.floor( self.options.heigh1Shelf3_4 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section3_4_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S3_4_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+2).position.y += 1.05
                        if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf3_4 -= 1
                        self.options.heigh3Shelf3_4 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = Math.floor( self.options.heigh2Shelf3_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S3_4").innerHTML = Math.floor( self.options.heigh3Shelf3_4 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+2).position.y += 1.05
                        if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf3_4 -= 1
                        self.options.heigh0Shelf3_4 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = Math.floor( self.options.heigh2Shelf3_4 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S3_4_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf3_4 > 10 && self.options.s3_4_ShelvingStatus === 'Wood' || self.options.heigh3Shelf3_4 > 25 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf3_4 += 1
                        self.options.heigh3Shelf3_4 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = Math.floor( self.options.heigh2Shelf3_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S3_4").innerHTML = Math.floor( self.options.heigh3Shelf3_4 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf3_4 > 10 && self.options.s3_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_4 > 13 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf3_4 += 1
                        self.options.heigh0Shelf3_4 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = Math.floor( self.options.heigh2Shelf3_4 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });

            //section3_4_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S3_4_UP").addEventListener('click', async function() {
            
                if (parseFloat(document.getElementById('PositionField_InternalShelving3_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+3).position.y += 1.05
                    if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+3).position.y += 1.05
                    }

                    self.options.heigh3Shelf3_4 -= 1
                    self.options.heigh0Shelf3_4 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving3_S3_4").innerHTML = Math.floor( self.options.heigh3Shelf3_4 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S3_4_DOWN").addEventListener('click', async function() {

                if (self.options.heigh0Shelf3_4 > 10 && self.options.s3_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_4 > 13 && self.options.s3_4_ShelvingStatus === 'Shoe' ) {        
                    self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+3).position.y -= 1.05
                    if (self.options.s3_4_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_3_4_'+'shelf'+3).position.y -= 1.05
                    }
    
                    self.options.heigh3Shelf3_4 += 1
                    self.options.heigh0Shelf3_4 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving3_S3_4").innerHTML = Math.floor( self.options.heigh3Shelf3_4 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });



            //section 3_5 shelf generating
            document.getElementById("InternalShelving_S3_5").addEventListener('click', function() {
                createInternalShelving_S3_5();
            });
            function createInternalShelving_S3_5() {

                var checkBox_InternalShelving_S3_5 = document.getElementById("InternalShelving_S3_5");

                if ( document.getElementById("InternalShelving_S3_5").checked == true || self.options.s3_5_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "flex";
                    document.getElementById("MainShoeShelving_S3_5").style.display = "none";

                    document.getElementById("Drawer_S3_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_5").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection3_5 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect3_5").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_5);
                        
                        self.shelvingGroup_section3_5 = new THREE.Group();
                        self.options.posShelf1_sect3_5 = 13;

                        self.shelvingGroup_section3_5.add(self.createShelfToGroup(self.options.posShelf1_sect3_5, 1, '3_5', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_5").style.display = "flex";
                        document.getElementById("InternalShelving2_S3_5").style.display = "none";

                        document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                        document.getElementById("InternalShelving1_S3_5").style.display = "none";
                        document.getElementById('internalShelving_sect3_5').value = 0
                        self.options.shelvesCounterSection3_5 = 0;
                    }

                    if (self.options.shelvesCounterSection3_5 != 0) {

                        self.shelvingGroup_section3_5.position.y = self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y - 1
        
                        self.shelvingGroup_section3_5.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section3_5.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        self.shelvingGroup_section3_5.name = 'shelvingGroup_section3_5';
        
                        self.scene.add(self.shelvingGroup_section3_5);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_5; i++) {
                            self.shelvingGroup_section3_5.getObjectByName('internalShelf_3_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s3_5_internlShelvinStatus = 1
                    self.options.s3_5_ShelvingStatus = 'Wood'


                } 
                else {
                    self.options.shelvesCounterSection3_5 = 0
                    self.scene.remove(self.shelvingGroup_section3_5);

                    for (var i = 1; i <= 2; i++) {
                        document.getElementById(`InternalShelving${i}_S3_5`).style.display = "none";
                    }

                    document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                    document.getElementById("MainShoeShelving_S3_5").style.display = "flex";

                    document.getElementById("internalShelving_sect3_5").value = '0'

                    self.options.s3_5_internlShelvinStatus = 0
                    self.options.s3_5_ShelvingStatus = 'none'

                }

            
                self.options.heigh1Shelf3_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_5 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves3_5").addEventListener('click', requestChangeShelving3_5); 
            document.getElementById("subButtonPlus_Shelves3_5").addEventListener('click', requestChangeShelving3_5); 
            document.getElementById("internalShelving_sect3_5").addEventListener('change', requestChangeShelving3_5);  

            function requestChangeShelving3_5 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect3_5();
            };

            function createInternalShelving_sect3_5() {


                switch (parseInt(document.getElementById("internalShelving_sect3_5").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection3_5 = 0
                        self.scene.remove(self.shelvingGroup_section3_5);

                        document.getElementById("InternalShelving_S3_5").checked = false;

                        document.getElementById("InternalShelving1_S3_5").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                        document.getElementById("MainShoeShelving_S3_5").style.display = "flex";


                        document.getElementById("internalShelving_sect3_5").value = '0'

                        document.getElementById("Drawer_S3_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_5").src="icons/Drawer_Close.jpg";

                    break;

                    case 1:
                        self.options.shelvesCounterSection3_5 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section3_5);
                            
                            self.shelvingGroup_section3_5 = new THREE.Group();
                            self.options.posShelf1_sect3_5 = 13;

                            self.shelvingGroup_section3_5.add(self.createShelfToGroup(self.options.posShelf1_sect3_5, 1, '3_5', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_5").style.display = "none";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                            document.getElementById("InternalShelving1_S3_5").style.display = "none";
                            document.getElementById('internalShelving_sect3_5').value = 0
                            self.options.shelvesCounterSection3_5 = 0;  
                        }
                    break;  
                    case 2:
                        self.options.shelvesCounterSection3_5 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section3_5);
                            self.shelvingGroup_section3_5 = new THREE.Group();
                            self.options.posShelf2_sect3_5 =  13
                            self.options.posShelf1_sect3_5 = self.options.posShelf2_sect3_5 + 12
    
                            self.shelvingGroup_section3_5.add(self.createShelfToGroup(self.options.posShelf1_sect3_5, 1, '3_5', self.options.section3Length),
                            self.createShelfToGroup(self.options.posShelf2_sect3_5, 2, '3_5', self.options.section3Length)
                            );
                            
                            document.getElementById("InternalShelving1_S3_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_5").style.display = "flex";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S3_5").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S3_5").style.display = "none";
                            document.getElementById('internalShelving_sect3_5').value = 1
                            self.options.shelvesCounterSection3_5 = 1;
                        }
    
                    break;
                }
                

                if (self.options.shelvesCounterSection3_5 != 0) {

                    self.shelvingGroup_section3_5.position.y = self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y - 1

                    self.shelvingGroup_section3_5.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section3_5.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;

                    self.shelvingGroup_section3_5.name = 'shelvingGroup_section3_5';

                    self.scene.add(self.shelvingGroup_section3_5);


                    for (var i = 1; i <= self.options.shelvesCounterSection3_5; i++) {
                        self.shelvingGroup_section3_5.getObjectByName('internalShelf_3_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }

                } else {}

                self.options.heigh1Shelf3_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_5').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_5 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_5').textContent.match(/\d+(\.\d+)?/)[0]);
                
                self.options.heigh0Shelf3_5 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S3_5").addEventListener('click', function() {
                createShoeShelving_S3_5();
            });
            function createShoeShelving_S3_5() {
    
                var checkBox_InternalShelving_S3_5 = document.getElementById("ShoeShelving_S3_5");
    
                if ( document.getElementById("ShoeShelving_S3_5").checked == true || self.options.s3_5_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "flex";
                    document.getElementById("MainInternalShelving_S3_5").style.display = "none";
                    
                    document.getElementById("Drawer_S3_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_5").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection3_5 = 1;

                    document.getElementById("ShoeShelving_sect3_5").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect3_5").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_5);
                        
                        self.shelvingGroup_section3_5 = new THREE.Group();
                        self.options.posShelf1_sect3_5 = 14;

                        self.shelvingGroup_section3_5.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_5, 1, '3_5', self.options.section3Length));
                        self.shelvingGroup_section3_5.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_5, 1, '3_5', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_5").style.display = "flex";
                        document.getElementById("InternalShelving2_S3_5").style.display = "none";

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_5").style.display = "flex";
                        document.getElementById("InternalShelving1_S3_5").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_5').value = 0
                        self.options.shelvesCounterSection3_5 = 0;
                    }

                    if (self.options.shelvesCounterSection3_5 != 0) {
    
                        self.shelvingGroup_section3_5.position.y = self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y - 1
        
                        self.shelvingGroup_section3_5.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section3_5.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section3_5.name = 'shelvingGroup_section3_5';
        
                        self.scene.add(self.shelvingGroup_section3_5);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_5; i++) {
                            self.shelvingGroup_section3_5.getObjectByName('internalShelf_3_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection3_5; i++) {
                            self.shelvingGroup_section3_5.getObjectByName('internalShelfShoe_3_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S3_5").style.display = "flex";
                    document.getElementById("InternalShelving2_S3_5").style.display = "none";

    
    
                    self.options.s3_5_internlShelvinStatus = 1
                    self.options.s3_5_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection3_5 = 0
                    self.scene.remove(self.shelvingGroup_section3_5);
    
                    for (var i = 1; i <= 2; i++) {
                        document.getElementById(`InternalShelving${i}_S3_5`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect3_5").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                    document.getElementById("MainInternalShelving_S3_5").style.display = "flex";

                    document.getElementById("Drawer_S3_5").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS3_5").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S3_5").src="icons/Drawer_Close.jpg";

                    self.options.s3_5_internlShelvinStatus = 0
                    self.options.s3_5_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf3_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_5 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves3_5").addEventListener('click', requestChangeShoeShelving3_5); 
            document.getElementById("subButtonPlus_ShoeShelves3_5").addEventListener('click', requestChangeShoeShelving3_5); 
            document.getElementById("ShoeShelving_sect3_5").addEventListener('change', requestChangeShoeShelving3_5); 

            function requestChangeShoeShelving3_5 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect3_5();
            };
    
            function createShoeShelving_sect3_5() {
        
                self.options.s3_5_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect3_5").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection3_5 = 0
                        self.options.s3_5_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section3_5);
    
                        document.getElementById("ShoeShelving_S3_5").checked = false;
        
                        for (var i = 1; i <= 2; i++) {
                            document.getElementById(`InternalShelving${i}_S3_5`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect3_5").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_5").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S3_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_5").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection3_5 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect3_5").value = '1'
                            self.scene.remove(self.shelvingGroup_section3_5);
                            
                            self.shelvingGroup_section3_5 = new THREE.Group();
                            self.options.posShelf1_sect3_5 = 14;

                            self.shelvingGroup_section3_5.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_5, 1, '3_5', self.options.section3Length));
                            self.shelvingGroup_section3_5.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_5, 1, '3_5', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S3_5").style.display = "none";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                            document.getElementById("MainInternalShelving_S3_5").style.display = "flex";

                            document.getElementById("InternalShelving1_S3_5").style.display = "none";
                            document.getElementById('ShoeShelving_sect3_5').value = 0
                            self.options.shelvesCounterSection3_5 = 0;
                        }
    
                    break;
                  
                }

                self.options.heigh0Shelf3_5 = 5

        
                if (self.options.shelvesCounterSection3_5 != 0) {
    
                    self.shelvingGroup_section3_5.position.y = self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y - 1
    
                    self.shelvingGroup_section3_5.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
    
                    self.shelvingGroup_section3_5.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section3_5.name = 'shelvingGroup_section3_5';
    
                    self.scene.add(self.shelvingGroup_section3_5);

                    for (var i = 1; i <= self.options.shelvesCounterSection3_5; i++) {
                        self.shelvingGroup_section3_5.getObjectByName('internalShelfShoe_3_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection3_5; i++) {
                        self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf3_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_5').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf3_5 = parseFloat(document.getElementById('PositionField_InternalShelving2_S3_5').textContent.match(/\d+(\.\d+)?/)[0]);                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section3_5_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S3_5_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_3_5 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_5_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s3_5_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+1).position.y += 1.05
                        if (self.options.s3_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_5_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf3_5-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = Math.floor( self.options.heigh1Shelf3_5 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf3_5 += 1
                            document.getElementById("PositionField_InternalShelving2_S3_5").innerHTML = Math.floor( self.options.heigh2Shelf3_5 ) +"cm";
                        } else{
                            self.options.heigh0Shelf3_5+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S3_5_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf3_5 > 10 && self.options.s3_5_ShelvingStatus === 'Wood' || self.options.heigh2Shelf3_5 > 25 && self.options.s3_5_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_5_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_5 += 1
                        self.options.heigh2Shelf3_5 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = Math.floor( self.options.heigh1Shelf3_5 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S3_5").innerHTML = Math.floor( self.options.heigh2Shelf3_5 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf3_5 > 10 && self.options.s3_5_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_5 > 13 && self.options.s3_5_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s3_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_3_5_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf3_5 += 1
                        self.options.heigh0Shelf3_5 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = Math.floor( self.options.heigh1Shelf3_5 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section3_5_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S3_5_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving2_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_5_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s3_5_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+2).position.y += 1.05
                    if (self.options.s3_5_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_3_5_'+'shelf'+2).position.y += 1.05
                    }

                    self.options.heigh2Shelf3_5 -= 1
                    self.options.heigh0Shelf3_5 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving2_S3_5").innerHTML = Math.floor( self.options.heigh2Shelf3_5 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S3_5_DOWN").addEventListener('click', async function() {

                if (self.options.heigh0Shelf3_5 > 10 && self.options.s3_5_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_5 > 13 && self.options.s3_5_ShelvingStatus === 'Shoe' ) {
    
                    self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+2).position.y -= 1.05
                    if (self.options.s3_5_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_3_5_'+'shelf'+2).position.y -= 1.05
                    }

                    self.options.heigh2Shelf3_5 += 1
                    self.options.heigh0Shelf3_5 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving2_S3_5").innerHTML = Math.floor( self.options.heigh2Shelf3_5 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });



            //section 3_6 shelf generating
            document.getElementById("InternalShelving_S3_6").addEventListener('click', function() {
                createInternalShelving_S3_6();
            });
            function createInternalShelving_S3_6() {

                var checkBox_InternalShelving_S3_6 = document.getElementById("InternalShelving_S3_6");

                if ( document.getElementById("InternalShelving_S3_6").checked == true || self.options.s3_6_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "flex";
                    document.getElementById("MainShoeShelving_S3_6").style.display = "none";

                    document.getElementById("Drawer_S3_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_6").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection3_6 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect3_6").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_6);
                        
                        self.shelvingGroup_section3_6 = new THREE.Group();
                        self.options.posShelf1_sect3_6 = 13;

                        self.shelvingGroup_section3_6.add(self.createShelfToGroup(self.options.posShelf1_sect3_6, 1, '3_6', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_6").style.display = "flex";

                        document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                        document.getElementById("InternalShelving1_S3_6").style.display = "none";
                        document.getElementById('internalShelving_sect3_6').value = 0
                        self.options.shelvesCounterSection3_6 = 0;
                    }

                    if (self.options.shelvesCounterSection3_6 != 0) {

                        self.shelvingGroup_section3_6.position.y = self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y - 1
        
                        self.shelvingGroup_section3_6.position.z = -self.options.room.width / 2 + self.options.shelf.width -3;
        
        
                        self.shelvingGroup_section3_6.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        self.shelvingGroup_section3_6.name = 'shelvingGroup_section3_6';
        
                        self.scene.add(self.shelvingGroup_section3_6);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_6; i++) {
                            self.shelvingGroup_section3_6.getObjectByName('internalShelf_3_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s3_6_internlShelvinStatus = 1
                    self.options.s3_6_ShelvingStatus = 'Wood'


                } 
                else {
                    self.options.shelvesCounterSection3_6 = 0
                    self.scene.remove(self.shelvingGroup_section3_6);

                    document.getElementById("InternalShelving1_S3_6").style.display = "none";
                    document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                    document.getElementById("MainShoeShelving_S3_6").style.display = "flex";

                    document.getElementById("internalShelving_sect3_6").value = '0'

                    self.options.s3_6_internlShelvinStatus = 0
                    self.options.s3_6_ShelvingStatus = 'none'

                }

            
                self.options.heigh1Shelf3_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_6 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves3_6").addEventListener('click', requestChangeShelving3_6); 
            document.getElementById("subButtonPlus_Shelves3_6").addEventListener('click', requestChangeShelving3_6); 
            document.getElementById("internalShelving_sect3_6").addEventListener('change', requestChangeShelving3_6);  

            function requestChangeShelving3_6 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect3_6();
            };

            function createInternalShelving_sect3_6() {


                switch (parseInt(document.getElementById("internalShelving_sect3_6").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection3_6 = 0
                        self.scene.remove(self.shelvingGroup_section3_6);

                        document.getElementById("InternalShelving_S3_6").checked = false;

                        document.getElementById("InternalShelving1_S3_6").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                        document.getElementById("MainShoeShelving_S3_6").style.display = "flex";

                        document.getElementById("internalShelving_sect3_6").value = '0'

                        document.getElementById("Drawer_S3_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_6").src="icons/Drawer_Close.jpg";

                    break;

                    case 1:
                        self.options.shelvesCounterSection3_6 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section3_6);
                            
                            self.shelvingGroup_section3_6 = new THREE.Group();
                            self.options.posShelf1_sect3_6 = 13;

                            self.shelvingGroup_section3_6.add(self.createShelfToGroup(self.options.posShelf1_sect3_6, 1, '3_6', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_6").style.display = "flex";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                            document.getElementById("InternalShelving1_S3_6").style.display = "none";
                            document.getElementById('internalShelving_sect3_6').value = 0
                            self.options.shelvesCounterSection3_6 = 0;  
                        }
                    break;  
                    
                }
                

                if (self.options.shelvesCounterSection3_6 != 0) {

                    self.shelvingGroup_section3_6.position.y = self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y - 1

                    self.shelvingGroup_section3_6.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section3_6.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;

                    self.shelvingGroup_section3_6.name = 'shelvingGroup_section3_6';

                    self.scene.add(self.shelvingGroup_section3_6);


                    for (var i = 1; i <= self.options.shelvesCounterSection3_6; i++) {
                        self.shelvingGroup_section3_6.getObjectByName('internalShelf_3_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }

                } else {}

                self.options.heigh1Shelf3_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_6').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh0Shelf3_6 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S3_6").addEventListener('click', function() {
                createShoeShelving_S3_6();
            });
            function createShoeShelving_S3_6() {
    
                var checkBox_InternalShelving_S3_6 = document.getElementById("ShoeShelving_S3_6");
    
                if ( document.getElementById("ShoeShelving_S3_6").checked == true || self.options.s3_6_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "flex";
                    document.getElementById("MainInternalShelving_S3_6").style.display = "none";
                    
                    document.getElementById("Drawer_S3_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS3_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_S3_6").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection3_6 = 1;

                    document.getElementById("ShoeShelving_sect3_6").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect3_6").value = '1'

                        self.scene.remove(self.shelvingGroup_section3_6);
                        
                        self.shelvingGroup_section3_6 = new THREE.Group();
                        self.options.posShelf1_sect3_6 = 14;

                        self.shelvingGroup_section3_6.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_6, 1, '3_6', self.options.section3Length));
                        self.shelvingGroup_section3_6.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_6, 1, '3_6', self.options.section3Length));

                        document.getElementById("InternalShelving1_S3_6").style.display = "flex";

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_6").style.display = "flex";
                        document.getElementById("InternalShelving1_S3_6").style.display = "none";
                        document.getElementById('ShoeShelving_sect3_6').value = 0
                        self.options.shelvesCounterSection3_6 = 0;
                    }

                    if (self.options.shelvesCounterSection3_6 != 0) {
    
                        self.shelvingGroup_section3_6.position.y = self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y - 1
        
                        self.shelvingGroup_section3_6.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section3_6.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section3_6.name = 'shelvingGroup_section3_6';
        
                        self.scene.add(self.shelvingGroup_section3_6);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection3_6; i++) {
                            self.shelvingGroup_section3_6.getObjectByName('internalShelf_3_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection3_6; i++) {
                            self.shelvingGroup_section3_6.getObjectByName('internalShelfShoe_3_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S3_6").style.display = "flex";
                    

    
    
                    self.options.s3_6_internlShelvinStatus = 1
                    self.options.s3_6_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection3_6 = 0
                    self.scene.remove(self.shelvingGroup_section3_6);
    
                    document.getElementById("InternalShelving1_S3_6").style.display = "none";

                    
                    document.getElementById("ShoeShelving_sect3_6").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                    document.getElementById("MainInternalShelving_S3_6").style.display = "flex";

                    document.getElementById("Drawer_S3_6").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS3_6").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S3_6").src="icons/Drawer_Close.jpg";

                    self.options.s3_6_internlShelvinStatus = 0
                    self.options.s3_6_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf3_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf3_6 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves3_6").addEventListener('click', requestChangeShoeShelving3_6); 
            document.getElementById("subButtonPlus_ShoeShelves3_6").addEventListener('click', requestChangeShoeShelving3_6); 
            document.getElementById("ShoeShelving_sect3_6").addEventListener('change', requestChangeShoeShelving3_6); 

            function requestChangeShoeShelving3_6 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect3_6();
            };
    
            function createShoeShelving_sect3_6() {
        
                self.options.s3_6_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect3_6").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection3_6 = 0
                        self.options.s3_6_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section3_6);
    
                        document.getElementById("ShoeShelving_S3_6").checked = false;
        
                        document.getElementById("InternalShelving1_S3_6").style.display = "none";

                        document.getElementById("ShoeShelving_sect3_6").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                        document.getElementById("MainInternalShelving_S3_6").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S3_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS3_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S3_6").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection3_6 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect3_6").value = '1'
                            self.scene.remove(self.shelvingGroup_section3_6);
                            
                            self.shelvingGroup_section3_6 = new THREE.Group();
                            self.options.posShelf1_sect3_6 = 14;

                            self.shelvingGroup_section3_6.add(self.createShelfShoeToGroup(self.options.posShelf1_sect3_6, 1, '3_6', self.options.section3Length));
                            self.shelvingGroup_section3_6.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect3_6, 1, '3_6', self.options.section3Length));

                            document.getElementById("InternalShelving1_S3_6").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                            document.getElementById("MainInternalShelving_S3_6").style.display = "flex";

                            document.getElementById("InternalShelving1_S3_6").style.display = "none";
                            document.getElementById('ShoeShelving_sect3_6').value = 0
                            self.options.shelvesCounterSection3_6 = 0;
                        }
    
                    break;
                  
                }

                self.options.heigh0Shelf3_6 = 5

        
                if (self.options.shelvesCounterSection3_6 != 0) {
    
                    self.shelvingGroup_section3_6.position.y = self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y - 1
    
                    self.shelvingGroup_section3_6.position.x = self.scene.getObjectByName( "pillar2", true ).position.x+0.5;
    
                    self.shelvingGroup_section3_6.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section3_6.name = 'shelvingGroup_section3_6';
    
                    self.scene.add(self.shelvingGroup_section3_6);

                    for (var i = 1; i <= self.options.shelvesCounterSection3_6; i++) {
                        self.shelvingGroup_section3_6.getObjectByName('internalShelfShoe_3_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection3_6; i++) {
                        self.scene.getObjectByName('internalShelf_3_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf3_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S3_6').textContent.match(/\d+(\.\d+)?/)[0]);
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section3_6_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S3_6_UP").addEventListener('click', async function( ) {
                
                console.log(parseFloat(document.getElementById('PositionField_InternalShelving1_S3_6').textContent.match(/\d+(\.\d+)?/)[0]));
                console.log(self.options.s3_6_ShelvingStatus);

                if (parseFloat(document.getElementById('PositionField_InternalShelving1_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s3_6_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s3_6_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_3_6_'+'shelf'+1).position.y += 1.05
                    if (self.options.s3_6_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_3_6_'+'shelf'+1).position.y += 1.05
                    }

                    self.options.heigh1Shelf3_6-= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML = Math.floor( self.options.heigh1Shelf3_6 ) +"cm";

                    
                    self.options.heigh0Shelf3_6+= 1
                    


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving1_S3_6_DOWN").addEventListener('click', async function() {
                        
            

                if (self.options.heigh0Shelf3_6 > 10 && self.options.s3_6_ShelvingStatus === 'Wood' || self.options.heigh0Shelf3_6 > 13 && self.options.s3_6_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_3_6_'+'shelf'+1).position.y -= 1.05
                    if (self.options.s3_6_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_3_6_'+'shelf'+1).position.y -= 1.05
                    }

                    self.options.heigh1Shelf3_6 += 1
                    self.options.heigh0Shelf3_6 -= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML = Math.floor( self.options.heigh1Shelf3_6 ) +"cm";

                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

           
        
        
        
            
            
            //section 4_1 shelf generating
            document.getElementById("InternalShelving_S4_1").addEventListener('click', function() {
                createInternalShelving_S4_1();
            });
    
            function createInternalShelving_S4_1() {
    
                var checkBox_InternalShelving_S4_1 = document.getElementById("InternalShelving_S4_1");
    
                if ( document.getElementById("InternalShelving_S4_1").checked == true || self.options.s4_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionMoveInternalShelving_S4_1").style.display = "flex";
                    document.getElementById("MainShoeShelving_S4_1").style.display = "none";

                    

                    document.getElementById("Drawer_S4_1").style.pointerEvents = "none";
                    document.getElementById("Drawer_Section4_1").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_1").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection4_1 = 1;

                    document.getElementById("internalShelving_sect4_1").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                            
                        self.scene.remove(self.shelvingGroup_section4_1);
                        
                        self.shelvingGroup_section4_1 = new THREE.Group();
                        self.options.posShelf1_sect4_1 = 12

                        self.shelvingGroup_section4_1.add(self.createShelfToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                        for (var i = 2; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S4_1").style.display = "none";
                        document.getElementById("MainShoeShelving_S4_1").style.display = "flex";
                        document.getElementById("InternalShelving1_S4_1").style.display = "none";
                        document.getElementById('internalShelving_sect4_1').value = 0
                        self.options.shelvesCounterSection4_1 = 0;
                    }

                    if (self.options.shelvesCounterSection4_1 != 0) {
    
                        self.shelvingGroup_section4_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y
        
                        self.shelvingGroup_section4_1.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section4_1.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3 ;
        
                        self.shelvingGroup_section4_1.name = 'shelvingGroup_section4_1';
        
                        self.scene.add(self.shelvingGroup_section4_1);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_1; i++) {
                            self.shelvingGroup_section4_1.getObjectByName('internalShelf_4_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                    for (var i = 2; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                    }

    
    
                    self.options.s4_internlShelvinStatus = 1
                    self.options.s4_ShelvingStatus = 'Wood'
                    
                } 
                else {
                    self.options.shelvesCounterSection4_1 = 0
                    self.scene.remove(self.shelvingGroup_section4_1);
    
                    for (var i = 1; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                    }

                    document.getElementById("internalShelving_sect4_1").value = '0'
                    document.getElementById("sectionMoveInternalShelving_S4_1").style.display = "none";
                    document.getElementById("MainShoeShelving_S4_1").style.display = "flex";

                    document.getElementById("Drawer_S4_1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_Section4_1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S4_1").src="icons/Drawer_Close.jpg";

                    self.options.s4_internlShelvinStatus = 0
                    self.options.s4_ShelvingStatus = 'none'
    
                }
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_1 = 10
    
            }
            document.getElementById("subButtonMinus_Shelves4_1").addEventListener('click', requestChangeShelving4_1); 
            document.getElementById("subButtonPlus_Shelves4_1").addEventListener('click', requestChangeShelving4_1); 
            document.getElementById("internalShelving_sect4_1").addEventListener('change', requestChangeShelving4_1);  
    
    
            function requestChangeShelving4_1 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect4_1();
            };
    
    
            function createInternalShelving_sect4_1() {
            
                self.options.s4_ShelvingStatus = 'Wood'
                
                switch (parseInt(document.getElementById("internalShelving_sect4_1").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection4_1 = 0
                        self.options.s4_ShelvingStatus = 'none'

                        self.scene.remove(self.shelvingGroup_section4_1);
    
                        document.getElementById("InternalShelving_S4_1").checked = false;
    
                        for (var i = 1; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                        }

                        document.getElementById("internalShelving_sect4_1").value = '0'
                        document.getElementById("sectionMoveInternalShelving_S4_1").style.display = "none";
                        document.getElementById("MainShoeShelving_S4_1").style.display = "flex";

                        document.getElementById("Drawer_S4_1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section4_1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_1").src="icons/Drawer_Close.jpg";
    
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection4_1 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                            
                            self.scene.remove(self.shelvingGroup_section4_1);
                            
                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf1_sect4_1 = 12
    
                            self.shelvingGroup_section4_1.add(self.createShelfToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length));
    
                            document.getElementById("InternalShelving_S4_1").style.display = "flex";
                            for (var i = 2; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S4_1").style.display = "none";
                            document.getElementById("MainShoeShelving_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving_S4_1").style.display = "none";
                            document.getElementById('internalShelving_sect4_1').value = 0
                            self.options.shelvesCounterSection4_1 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection4_1 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section4_1);
                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf2_sect4_1 =  12
                            self.options.posShelf1_sect4_1 = self.options.posShelf2_sect4_1 + 12
    
                            self.shelvingGroup_section4_1.add(self.createShelfToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length)
                            );
                            
                            document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_1").style.display = "flex";
                            for (var i = 3; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 23 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = 10 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S4_1").style.display = "none";
                        document.getElementById('internalShelving_sect4_1').value = 1
                        self.options.shelvesCounterSection4_1 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection4_1 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section4_1);                        

                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf3_sect4_1 = 12
                            self.options.posShelf2_sect4_1 = self.options.posShelf3_sect4_1 + 12
                            self.options.posShelf1_sect4_1 = self.options.posShelf2_sect4_1 + 12

                        
                            self.shelvingGroup_section4_1.add(self.createShelfToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length), self.createShelfToGroup(self.options.posShelf3_sect4_1, 3, '4_1', self.options.section4Length)
                            );
                            document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_1").style.display = "flex";
                            for (var i = 4; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 35 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S4_1").style.display = "none";
                            document.getElementById('internalShelving_sect4_1').value = 2
                            self.options.shelvesCounterSection4_1 = 2;
                        }

                    break;  

                    case 4:

                        self.options.shelvesCounterSection4_1 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section4_1);                        

                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf4_sect4_1 = 12
                            self.options.posShelf3_sect4_1 = self.options.posShelf4_sect4_1 + 12
                            self.options.posShelf2_sect4_1 = self.options.posShelf3_sect4_1 + 12
                            self.options.posShelf1_sect4_1 = self.options.posShelf2_sect4_1 + 12
                        
                            self.shelvingGroup_section4_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect4_1, 3, '4_1', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect4_1, 4, '4_1', self.options.section4Length)
                            );
                            document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving4_S4_1").style.display = "flex";
                            for (var i = 5; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 47 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S4_1").style.display = "none";
                            document.getElementById('internalShelving_sect4_1').value = 3
                            self.options.shelvesCounterSection4_1 = 3;
                        }

                    break;  

                    case 5:

                        self.options.shelvesCounterSection4_1 = 5;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 69) {
                            
                            self.scene.remove(self.shelvingGroup_section4_1);                        

                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf5_sect4_1 = 12
                            self.options.posShelf4_sect4_1 = self.options.posShelf5_sect4_1 + 12
                            self.options.posShelf3_sect4_1 = self.options.posShelf4_sect4_1 + 12
                            self.options.posShelf2_sect4_1 = self.options.posShelf3_sect4_1 + 12
                            self.options.posShelf1_sect4_1 = self.options.posShelf2_sect4_1 + 12
                        
            
                            self.shelvingGroup_section4_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect4_1, 3, '4_1', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect4_1, 4, '4_1', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf5_sect4_1, 5, '4_1', self.options.section4Length)
                            );
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "flex";
                            }
                            document.getElementById("InternalShelving6_S4_1").style.display = "none";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 59 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving5_S4_1").style.display = "none";
                            document.getElementById('internalShelving_sect4_1').value = 4
                            self.options.shelvesCounterSection4_1 = 4;
                        }

                    break;  

                    case 6:

                        self.options.shelvesCounterSection4_1 = 6;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) > 82.8) {
                            self.scene.remove(self.shelvingGroup_section4_1);                        

                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf6_sect4_1 = 12
                            self.options.posShelf5_sect4_1 = self.options.posShelf6_sect4_1 + 12
                            self.options.posShelf4_sect4_1 = self.options.posShelf5_sect4_1 + 12
                            self.options.posShelf3_sect4_1 = self.options.posShelf4_sect4_1 + 12
                            self.options.posShelf2_sect4_1 = self.options.posShelf3_sect4_1 + 12
                            self.options.posShelf1_sect4_1 = self.options.posShelf2_sect4_1 + 12
                        
                            
                            self.shelvingGroup_section4_1.add(
                                self.createShelfToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect4_1, 3, '4_1', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect4_1, 4, '4_1', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf5_sect4_1, 5, '4_1', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf6_sect4_1, 6, '4_1', self.options.section4Length)
                            );
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "flex";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 71 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving6_S4_1").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving6_S4_1").style.display = "none";
                            document.getElementById('internalShelving_sect4_1').value = 5
                            self.options.shelvesCounterSection4_1 = 5;
                        }

                    break; 

                }

                self.options.heigh0Shelf4_1 = 10

    
                if (self.options.shelvesCounterSection4_1 != 0) {
    
                    self.shelvingGroup_section4_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y
    
                    self.shelvingGroup_section4_1.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;

                    self.shelvingGroup_section4_1.position.z = -self.options.room.width / 2 + self.options.shelf.width -3;

                    self.shelvingGroup_section4_1.name = 'shelvingGroup_section4_1';
    
                    self.scene.add(self.shelvingGroup_section4_1);
    
                    for (var i = 1; i <= self.options.shelvesCounterSection4_1; i++) {
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving3_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving4_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving5_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh6Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving6_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

         
            document.getElementById("ShoeShelving_S4_1").addEventListener('click', function() {
                createShoeShelving_S4_1();
            });
            function createShoeShelving_S4_1() {
    
                var checkBox_InternalShelving_S4_1 = document.getElementById("ShoeShelving_S4_1");
    
                if ( document.getElementById("ShoeShelving_S4_1").checked == true || self.options.s4_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S4_1").style.display = "flex";
                    document.getElementById("MainInternalShelving_S4_1").style.display = "none";
                    
                    document.getElementById("Drawer_S4_1").style.pointerEvents = "none";
                    document.getElementById("Drawer_Section4_1").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_1").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection4_1 = 1;

                    document.getElementById("ShoeShelving_sect4_1").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect4_1").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_1);
                        
                        self.shelvingGroup_section4_1 = new THREE.Group();
                        self.options.posShelf1_sect4_1 = 14;

                        self.shelvingGroup_section4_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length));
                        self.shelvingGroup_section4_1.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                        for (var i = 2; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S4_1").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_1").style.display = "flex";
                        document.getElementById("InternalShelving1_S4_1").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_1').value = 0
                        self.options.shelvesCounterSection4_1 = 0;
                    }

                    if (self.options.shelvesCounterSection4_1 != 0) {
    
                        self.shelvingGroup_section4_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y
        
                        self.shelvingGroup_section4_1.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;

                        //!!
                        self.shelvingGroup_section4_1.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section4_1.name = 'shelvingGroup_section4_1';
        
                        self.scene.add(self.shelvingGroup_section4_1);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_1; i++) {
                            self.shelvingGroup_section4_1.getObjectByName('internalShelf_4_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection4_1; i++) {
                            self.shelvingGroup_section4_1.getObjectByName('internalShelfShoe_4_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                    for (var i = 2; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                    }

    
    
                    self.options.s4_internlShelvinStatus = 1
                    self.options.s4_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection4_1 = 0
                    self.scene.remove(self.shelvingGroup_section4_1);
    
                    for (var i = 1; i <= 6; i++) {
                        document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect4_1").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S4_1").style.display = "none";
                    document.getElementById("MainInternalShelving_S4_1").style.display = "flex";

                    document.getElementById("Drawer_S4_1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_Section4_1").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S4_1").src="icons/Drawer_Close.jpg";

                    self.options.s4_internlShelvinStatus = 0
                    self.options.s4_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_1 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves4_1").addEventListener('click', requestChangeShoeShelving4_1); 
            document.getElementById("subButtonPlus_ShoeShelves4_1").addEventListener('click', requestChangeShoeShelving4_1); 
            document.getElementById("ShoeShelving_sect4_1").addEventListener('change', requestChangeShoeShelving4_1); 

            function requestChangeShoeShelving4_1 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect4_1();
            };
    
            function createShoeShelving_sect4_1() {
        

                self.options.s4_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect4_1").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection4_1 = 0
                        self.options.s4_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section4_1);
    
                        document.getElementById("ShoeShelving_S4_1").checked = false;
        
                        for (var i = 1; i <= 6; i++) {
                            document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect4_1").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S4_1").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_1").style.display = "flex";
    
                        document.getElementById("Drawer_S4_1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section4_1").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_1").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection4_1 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect4_1").value = '1'
                            self.scene.remove(self.shelvingGroup_section4_1);
                            
                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf1_sect4_1 = 14;

                            self.shelvingGroup_section4_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length));
                            self.shelvingGroup_section4_1.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                            for (var i = 2; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S4_1").style.display = "none";
                            document.getElementById("MainInternalShelving_S4_1").style.display = "flex";

                            document.getElementById("InternalShelving1_S4_1").style.display = "none";
                            document.getElementById('ShoeShelving_sect4_1').value = 0
                            self.options.shelvesCounterSection4_1 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection4_1 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section4_1);
                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf2_sect4_1 =  14;
                            self.options.posShelf1_sect4_1 = self.options.posShelf2_sect4_1 + 27.5;
    
                            self.shelvingGroup_section4_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length), self.createShelfShoeToGroup(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length));
                            
                            
                            document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_1").style.display = "flex";
                            for (var i = 3; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S4_1").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_1').value = 1
                        self.options.shelvesCounterSection4_1 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection4_1 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 74) {
                            self.scene.remove(self.shelvingGroup_section4_1);                        

                            self.shelvingGroup_section4_1 = new THREE.Group();
                            self.options.posShelf3_sect4_1 = 14
                            self.options.posShelf2_sect4_1 = self.options.posShelf3_sect4_1 + 27.5
                            self.options.posShelf1_sect4_1 = self.options.posShelf2_sect4_1 + 27.5

                        
                            self.shelvingGroup_section4_1.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect4_1, 1, '4_1', self.options.section4Length), self.createShelfShoeToGroup(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect4_1, 2, '4_1', self.options.section4Length), self.createShelfShoeToGroup(self.options.posShelf3_sect4_1, 3, '4_1', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf3_sect4_1, 3, '4_1', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_1").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_1").style.display = "flex";
                            for (var i = 4; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }        

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 69 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = 25 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = 25 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S4_1").style.display = "none";
                            document.getElementById('ShoeShelving_sect4_1').value = 2
                            self.options.shelvesCounterSection4_1 = 2;
                        }

                    break;  

                  
                }

                self.options.heigh0Shelf4_1 = 5

        
                if (self.options.shelvesCounterSection4_1 != 0) {
    
                    self.shelvingGroup_section4_1.position.y = self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y - self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y
    
                    self.shelvingGroup_section4_1.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;

                    self.shelvingGroup_section4_1.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section4_1.name = 'shelvingGroup_section4_1';
    
                    self.scene.add(self.shelvingGroup_section4_1);

                    for (var i = 1; i <= self.options.shelvesCounterSection4_1; i++) {
                        self.shelvingGroup_section4_1.getObjectByName('internalShelfShoe_4_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection4_1; i++) {
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving3_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving4_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving5_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh6Shelf4_1 = parseFloat(document.getElementById('PositionField_InternalShelving6_S4_1').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

    
            //section4_1_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S4_1_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_4_1 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s4_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+1).position.y += 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf4_1-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = Math.floor( self.options.heigh1Shelf4_1 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf4_1 += 1
                            document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = Math.floor( self.options.heigh2Shelf4_1 ) +"cm";
                        } else{
                            self.options.heigh0Shelf4_1+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S4_1_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf4_1 > 10 && self.options.s4_ShelvingStatus === 'Wood' || self.options.heigh2Shelf4_1 > 25 && self.options.s4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_1 += 1
                        self.options.heigh2Shelf4_1 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = Math.floor( self.options.heigh1Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = Math.floor( self.options.heigh2Shelf4_1 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf4_1 > 10 && self.options.s4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_1 > 5 && self.options.s4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_1 += 1
                        self.options.heigh0Shelf4_1 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = Math.floor( self.options.heigh1Shelf4_1 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section4_1_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S4_1_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+2).position.y += 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf4_1 -= 1
                        self.options.heigh3Shelf4_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = Math.floor( self.options.heigh2Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = Math.floor( self.options.heigh3Shelf4_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+2).position.y += 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf4_1 -= 1
                        self.options.heigh0Shelf4_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = Math.floor( self.options.heigh2Shelf4_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S4_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf4_1 > 10 && self.options.s4_ShelvingStatus === 'Wood' || self.options.heigh3Shelf4_1 > 25 && self.options.s4_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf4_1 += 1
                        self.options.heigh3Shelf4_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = Math.floor( self.options.heigh2Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = Math.floor( self.options.heigh3Shelf4_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf4_1 > 10 && self.options.s4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_1 > 5 && self.options.s4_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf4_1 += 1
                        self.options.heigh0Shelf4_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = Math.floor( self.options.heigh2Shelf4_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section4_1_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S4_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+3).position.y += 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf4_1 -= 1
                        self.options.heigh4Shelf4_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = Math.floor( self.options.heigh3Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = Math.floor( self.options.heigh4Shelf4_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 14 && self.options.s4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+3).position.y += 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf4_1 -= 1
                        self.options.heigh0Shelf4_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = Math.floor( self.options.heigh3Shelf4_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S4_1_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf4_1 > 10 && self.options.s4_ShelvingStatus === 'Wood' || self.options.heigh4Shelf4_1 > 5 && self.options.s4_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf4_1 += 1
                        self.options.heigh4Shelf4_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = Math.floor( self.options.heigh3Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = Math.floor( self.options.heigh4Shelf4_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf4_1 > 10 && self.options.s4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_1 > 13 && self.options.s4_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_1_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf4_1 += 1
                        self.options.heigh0Shelf4_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = Math.floor( self.options.heigh3Shelf4_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section4_1_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S4_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+5) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+4).position.y += 1.05
                        

                        self.options.heigh4Shelf4_1 -= 1
                        self.options.heigh5Shelf4_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = Math.floor( self.options.heigh4Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = Math.floor( self.options.heigh5Shelf4_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+4).position.y += 1.05
                        
    
                        self.options.heigh4Shelf4_1 -= 1
                        self.options.heigh0Shelf4_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = Math.floor( self.options.heigh4Shelf4_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S4_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+5) != undefined) {
                
                    if ( self.options.heigh5Shelf4_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+4).position.y -= 1.05
                       
        
                        self.options.heigh4Shelf4_1 += 1
                        self.options.heigh5Shelf4_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = Math.floor( self.options.heigh4Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = Math.floor( self.options.heigh5Shelf4_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf4_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+4).position.y -= 1.05
                        
        
                        self.options.heigh4Shelf4_1 += 1
                        self.options.heigh0Shelf4_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = Math.floor( self.options.heigh4Shelf4_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section4_1_shelf5 up&down
            document.getElementById("MoveInternalShelving5_S4_1_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+6) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving5_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+5).position.y += 1.05
                        

                        self.options.heigh5Shelf4_1 -= 1
                        self.options.heigh6Shelf4_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = Math.floor( self.options.heigh5Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving6_S4_1").innerHTML = Math.floor( self.options.heigh6Shelf4_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving5_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+5).position.y += 1.05
                        
    
                        self.options.heigh5Shelf4_1 -= 1
                        self.options.heigh0Shelf4_1 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = Math.floor( self.options.heigh5Shelf4_1 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving5_S4_1_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+6) != undefined) {
                
                    if ( self.options.heigh6Shelf4_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+5).position.y -= 1.05
                       
        
                        self.options.heigh5Shelf4_1 += 1
                        self.options.heigh6Shelf4_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = Math.floor( self.options.heigh5Shelf4_1 ) +"cm";
                        document.getElementById("PositionField_InternalShelving6_S4_1").innerHTML = Math.floor( self.options.heigh6Shelf4_1 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf4_1 > 10 ) {
        
                        self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+5).position.y -= 1.05
                        
        
                        self.options.heigh5Shelf4_1 += 1
                        self.options.heigh0Shelf4_1 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = Math.floor( self.options.heigh5Shelf4_1 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section4_1_shelf6 up&down
            document.getElementById("MoveInternalShelving6_S4_1_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving6_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+6).position.y += 1.05

                    self.options.heigh6Shelf4_1 -= 1
                    self.options.heigh0Shelf4_1 += 1


                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving6_S4_1").innerHTML = ( self.options.heigh6Shelf4_1 ).toFixed(0) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving6_S4_1_DOWN").addEventListener('click', async function() {

                if ( self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+6).position.y - 2.4  >= 11 ) {

                    self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+6).position.y -= 1.05

                    self.options.heigh6Shelf4_1 += 1
                    self.options.heigh0Shelf4_1 -= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving6_S4_1").innerHTML = ( self.options.heigh6Shelf4_1 ).toFixed(0) +"cm";

                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });

            

    
    
            //section 4_2 shelf generating
            document.getElementById("InternalShelving_S4_2").addEventListener('click', function() {
                createInternalShelving_S4_2();
            });
            function createInternalShelving_S4_2() {
    
                
                var checkBox_InternalShelving_S4_2 = document.getElementById("InternalShelving_S4_2");
    
                if ( document.getElementById("InternalShelving_S4_2").checked == true || self.options.s4_2_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "flex";
                    document.getElementById("MainShoeShelving_S4_2").style.display = "none";

                    document.getElementById("Drawer_S4_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_2").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection4_2 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                        document.getElementById("internalShelving_sect4_2").value = '1'
    
                        self.scene.remove(self.shelvingGroup_section4_2);
                        
                        self.shelvingGroup_section4_2 = new THREE.Group();
                        self.options.posShelf1_sect4_2 = 13;
    
                        self.shelvingGroup_section4_2.add(self.createShelfToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length));
    
                        document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                        for (var i = 2; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                        }
    
                        self.scene.add(self.shelvingGroup_section4_2);
    
    
                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                        document.getElementById("InternalShelving1_S4_2").style.display = "none";
                        document.getElementById('internalShelving_sect4_2').value = 0
                        self.options.shelvesCounterSection4_2 = 0;
                    }
    
                    if (self.options.shelvesCounterSection4_2 != 0) {
    
                        self.shelvingGroup_section4_2.position.y = self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y - 1
        
                        self.shelvingGroup_section4_2.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
                        self.shelvingGroup_section4_2.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        self.shelvingGroup_section4_2.name = 'shelvingGroup_section4_2';
        
                        self.scene.add(self.shelvingGroup_section4_2);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_2; i++) {
                            self.shelvingGroup_section4_2.getObjectByName('internalShelf_4_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
    
                        }
        
                    } else {} 
                    
                    document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";

                    self.options.s4_2_internlShelvinStatus = 1
                    self.options.s4_2_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection4_2 = 0
                    self.scene.remove(self.shelvingGroup_section4_2);
    
                    for (var i = 1; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                    }

                    document.getElementById("internalShelving_sect4_2").value = '0'
                    document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                    document.getElementById("MainShoeShelving_S4_2").style.display = "flex";


                    document.getElementById("Drawer_S4_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS4_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S4_2").src="icons/Drawer_Close.jpg";

                    self.options.s4_2_internlShelvinStatus = 0
                    self.options.s4_2_ShelvingStatus = 'none'

    
                }
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                 
                self.options.heigh1Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_2 = 10
    
            };
            document.getElementById("subButtonMinus_Shelves4_2").addEventListener('click', requestChangeShelving4_2); 
            document.getElementById("subButtonPlus_Shelves4_2").addEventListener('click', requestChangeShelving4_2); 
            document.getElementById("internalShelving_sect4_2").addEventListener('change', requestChangeShelving4_2);  
    
            function requestChangeShelving4_2 () {
                
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect4_2();
            };
            
            function createInternalShelving_sect4_2() {
    
    
                switch ( parseInt(document.getElementById("internalShelving_sect4_2").value, 10) ) {
                    case 0:
    
                        self.options.shelvesCounterSection4_2 = 0
                        self.scene.remove(self.shelvingGroup_section4_2);
    
                        document.getElementById("InternalShelving_S4_2").checked = false;
    
                        for (var i = 1; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                        }

                        document.getElementById("internalShelving_sect4_2").value = '0'
                        document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                        document.getElementById("MainShoeShelving_S4_2").style.display = "flex";

        
                        document.getElementById("Drawer_S4_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_Section4_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_2").src="icons/Drawer_Close.jpg";
    
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection4_2 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                            self.scene.remove(self.shelvingGroup_section4_2);
                            
                            self.shelvingGroup_section4_2 = new THREE.Group();
                            self.options.posShelf1_sect4_2 = 13
    
                            self.shelvingGroup_section4_2.add(self.createShelfToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length));
    
                            document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_2").style.display = "none";
                            document.getElementById("InternalShelving3_S4_2").style.display = "none";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 11 +"cm";
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                        document.getElementById('internalShelving_sect4_2').value = 0
                        self.options.shelvesCounterSection4_2 = 0;}
                    break;
    
                    case 2:
                        self.options.shelvesCounterSection4_2 = 2;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
    
                            self.scene.remove(self.shelvingGroup_section4_2);
    
                            self.shelvingGroup_section4_2 = new THREE.Group();
                            self.options.posShelf2_sect4_2 = 13
                            self.options.posShelf1_sect4_2 = self.options.posShelf2_sect4_2 + 12
    
                            self.shelvingGroup_section4_2.add(self.createShelfToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_2, 2, '4_2', self.options.section4Length)
                            );
    
                            document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_2").style.display = "flex";
                            for (var i = 3; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML =  parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
                            document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML =  10 +"cm";
                            
    
                            
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S4_2").style.display = "none";
                            document.getElementById('internalShelving_sect4_2').value = 1
                            self.options.shelvesCounterSection4_2 = 1;
                        }
    
                    
                    break;
    
                    case 3:

                        self.options.shelvesCounterSection4_2 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section4_2);                        

                            self.shelvingGroup_section4_2 = new THREE.Group();
                            self.options.posShelf3_sect4_2 =13
                            self.options.posShelf2_sect4_2 = self.options.posShelf3_sect4_2 + 12
                            self.options.posShelf1_sect4_2 = self.options.posShelf2_sect4_2 + 12

                        
                            self.shelvingGroup_section4_2.add(self.createShelfToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_2, 2, '4_2', self.options.section4Length), self.createShelfToGroup(self.options.posShelf3_sect4_2, 3, '4_2', self.options.section4Length)
                            );
                            document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_2").style.display = "flex";
                            for (var i = 4; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S4_2").style.display = "none";
                            document.getElementById('internalShelving_sect4_2').value = 2
                            self.options.shelvesCounterSection4_2 = 2;
                        }

                    break;  
                    
                    case 4:

                        self.options.shelvesCounterSection4_2 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section4_2);                        

                            self.shelvingGroup_section4_2 = new THREE.Group();
                            self.options.posShelf4_sect4_2 = 13
                            self.options.posShelf3_sect4_2 = self.options.posShelf4_sect4_2 + 12
                            self.options.posShelf2_sect4_2 = self.options.posShelf3_sect4_2 + 12
                            self.options.posShelf1_sect4_2 = self.options.posShelf2_sect4_2 + 12
                        
                            self.shelvingGroup_section4_2.add(
                                self.createShelfToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf2_sect4_2, 2, '4_2', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect4_2, 3, '4_2', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect4_2, 4, '4_2', self.options.section4Length)
                            );
                            document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving4_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving5_S4_2").style.display = "none";



                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 48 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S4_2").style.display = "none";
                            document.getElementById('internalShelving_sect4_2').value = 3
                            self.options.shelvesCounterSection4_2 = 3;
                        }

                    break;  

                    case 5:

                        self.options.shelvesCounterSection4_2 = 5;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 69) {
                            
                            self.scene.remove(self.shelvingGroup_section4_2);                        

                            self.shelvingGroup_section4_2 = new THREE.Group();
                            self.options.posShelf5_sect4_2 = 13
                            self.options.posShelf4_sect4_2 = self.options.posShelf5_sect4_2 + 12
                            self.options.posShelf3_sect4_2 = self.options.posShelf4_sect4_2 + 12
                            self.options.posShelf2_sect4_2 = self.options.posShelf3_sect4_2 + 12
                            self.options.posShelf1_sect4_2 = self.options.posShelf2_sect4_2 + 12
                        
            
                            self.shelvingGroup_section4_2.add(
                                self.createShelfToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf2_sect4_2, 2, '4_2', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect4_2, 3, '4_2', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect4_2, 4, '4_2', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf5_sect4_2, 5, '4_2', self.options.section4Length)
                            );
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "flex";
                            }


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 60 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = 10 +"cm";
                            document.getElementById("PositionField_InternalShelving5_S4_2").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving5_S4_2").style.display = "none";
                            document.getElementById('internalShelving_sect4_2').value = 4
                            self.options.shelvesCounterSection4_2 = 4;
                        }

                    break;  
                }
                
    
                if (self.options.shelvesCounterSection4_2 != 0) {
    
                    self.shelvingGroup_section4_2.position.y = self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y - 1
    
                    self.shelvingGroup_section4_2.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
    
    
                    self.shelvingGroup_section4_2.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
    
                    self.shelvingGroup_section4_2.name = 'shelvingGroup_section4_2';
    
                    self.scene.add(self.shelvingGroup_section4_2);

    
                    for (var i = 1; i <= self.options.shelvesCounterSection4_2; i++) {
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                       
                    }
      
    
                } else {}
    
    
                self.options.heigh1Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_2').textContent.match(/\d+(\.\d+)?/)[0]); 
                self.options.heigh2Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving3_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving4_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving5_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);

                self.options.heigh0Shelf4_2 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };


            document.getElementById("ShoeShelving_S4_2").addEventListener('click', function() {
                createShoeShelving_S4_2();
            });
            function createShoeShelving_S4_2() {
    
                var checkBox_InternalShelving_S4_2 = document.getElementById("ShoeShelving_S4_2");
    
                if ( document.getElementById("ShoeShelving_S4_2").checked == true || self.options.s4_2_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "flex";
                    document.getElementById("MainInternalShelving_S4_2").style.display = "none";
                    
                    document.getElementById("Drawer_S4_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_2").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_2").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection4_2 = 1;

                    document.getElementById("ShoeShelving_sect4_2").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect4_2").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_2);
                        
                        self.shelvingGroup_section4_2 = new THREE.Group();
                        self.options.posShelf1_sect4_2 = 14;

                        self.shelvingGroup_section4_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length));
                        self.shelvingGroup_section4_2.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                        for (var i = 2; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_2").style.display = "flex";
                        document.getElementById("InternalShelving1_S4_2").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_2').value = 0
                        self.options.shelvesCounterSection4_2 = 0;
                    }

                    if (self.options.shelvesCounterSection4_2 != 0) {
    
                        self.shelvingGroup_section4_2.position.y = self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y - 1
        
                        self.shelvingGroup_section4_2.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section4_2.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section4_2.name = 'shelvingGroup_section4_2';
        
                        self.scene.add(self.shelvingGroup_section4_2);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_2; i++) {
                            self.shelvingGroup_section4_2.getObjectByName('internalShelf_4_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection4_2; i++) {
                            self.shelvingGroup_section4_2.getObjectByName('internalShelfShoe_4_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                    for (var i = 2; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                    }

    
    
                    self.options.s4_2_internlShelvinStatus = 1
                    self.options.s4_2_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection4_2 = 0
                    self.scene.remove(self.shelvingGroup_section4_2);
    
                    for (var i = 1; i <= 5; i++) {
                        document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect4_2").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                    document.getElementById("MainInternalShelving_S4_2").style.display = "flex";

                    document.getElementById("Drawer_S4_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS4_2").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S4_2").src="icons/Drawer_Close.jpg";

                    self.options.s4_2_internlShelvinStatus = 0
                    self.options.s4_2_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_2 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves4_2").addEventListener('click', requestChangeShoeShelving4_2); 
            document.getElementById("subButtonPlus_ShoeShelves4_2").addEventListener('click', requestChangeShoeShelving4_2); 
            document.getElementById("ShoeShelving_sect4_2").addEventListener('change', requestChangeShoeShelving4_2); 

            function requestChangeShoeShelving4_2 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect4_2();
            };
    
            function createShoeShelving_sect4_2() {
        

                self.options.s4_2_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect4_2").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection4_2 = 0
                        self.options.s4_2_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section4_2);
    
                        document.getElementById("ShoeShelving_S4_2").checked = false;
        
                        for (var i = 1; i <= 5; i++) {
                            document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect4_2").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_2").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S4_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_2").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_2").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection4_2 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect4_2").value = '1'
                            self.scene.remove(self.shelvingGroup_section4_2);
                            
                            self.shelvingGroup_section4_2 = new THREE.Group();
                            self.options.posShelf1_sect4_2 = 14;

                            self.shelvingGroup_section4_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length));
                            self.shelvingGroup_section4_2.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                            for (var i = 2; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                            document.getElementById("MainInternalShelving_S4_2").style.display = "flex";

                            document.getElementById("InternalShelving1_S4_2").style.display = "none";
                            document.getElementById('ShoeShelving_sect4_2').value = 0
                            self.options.shelvesCounterSection4_2 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection4_2 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section4_2);
                            self.shelvingGroup_section4_2 = new THREE.Group();
                            self.options.posShelf2_sect4_2 =  14;
                            self.options.posShelf1_sect4_2 = self.options.posShelf2_sect4_2 + 27.5;
    
                            self.shelvingGroup_section4_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length), self.createShelfShoeToGroup(self.options.posShelf2_sect4_2, 2, '4_2', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect4_2, 2, '4_2', self.options.section4Length));
                            
                            
                            document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_2").style.display = "flex";
                            for (var i = 3; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S4_2").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_2').value = 1
                        self.options.shelvesCounterSection4_2 = 1;}
    
                    break;

                    case 3:

                        self.options.shelvesCounterSection4_2 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 74) {
                            self.scene.remove(self.shelvingGroup_section4_2);                        

                            self.shelvingGroup_section4_2 = new THREE.Group();
                            self.options.posShelf3_sect4_2 = 14
                            self.options.posShelf2_sect4_2 = self.options.posShelf3_sect4_2 + 27.5
                            self.options.posShelf1_sect4_2 = self.options.posShelf2_sect4_2 + 27.5

                        
                            self.shelvingGroup_section4_2.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect4_2, 1, '4_2', self.options.section4Length), self.createShelfShoeToGroup(self.options.posShelf2_sect4_2, 2, '4_2', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect4_2, 2, '4_2', self.options.section4Length), self.createShelfShoeToGroup(self.options.posShelf3_sect4_2, 3, '4_2', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf3_sect4_2, 3, '4_2', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_2").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_2").style.display = "flex";
                            for (var i = 4; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }        

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 69 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = 25 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = 25 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S4_2").style.display = "none";
                            document.getElementById('ShoeShelving_sect4_2').value = 2
                            self.options.shelvesCounterSection4_2 = 2;
                        }

                    break;  

                  
                }

                self.options.heigh0Shelf4_2 = 5

        
                if (self.options.shelvesCounterSection4_2 != 0) {
    
                    self.shelvingGroup_section4_2.position.y = self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y - 1
    
                    self.shelvingGroup_section4_2.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
    
                    self.shelvingGroup_section4_2.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;

                    self.shelvingGroup_section4_2.name = 'shelvingGroup_section4_2';
    
                    self.scene.add(self.shelvingGroup_section4_2);

                    for (var i = 1; i <= self.options.shelvesCounterSection4_2; i++) {
                        self.shelvingGroup_section4_2.getObjectByName('internalShelfShoe_4_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection4_2; i++) {
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving3_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving4_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh5Shelf4_2 = parseFloat(document.getElementById('PositionField_InternalShelving5_S4_2').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
    
    

            //section4_2_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S4_2_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_4_2 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+1).position.y += 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf4_2-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = Math.floor( self.options.heigh1Shelf4_2 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf4_2 += 1
                            document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = Math.floor( self.options.heigh2Shelf4_2 ) +"cm";
                        } else{
                            self.options.heigh0Shelf4_2+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S4_2_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf4_2 > 10 && self.options.s4_2_ShelvingStatus === 'Wood' || self.options.heigh2Shelf4_2 > 25 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_2 += 1
                        self.options.heigh2Shelf4_2 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = Math.floor( self.options.heigh1Shelf4_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = Math.floor( self.options.heigh2Shelf4_2 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf4_2 > 10 && self.options.s4_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_2 > 13 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_2 += 1
                        self.options.heigh0Shelf4_2 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = Math.floor( self.options.heigh1Shelf4_2 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section4_2_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S4_2_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+2).position.y += 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf4_2 -= 1
                        self.options.heigh3Shelf4_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = Math.floor( self.options.heigh2Shelf4_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = Math.floor( self.options.heigh3Shelf4_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+2).position.y += 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf4_2 -= 1
                        self.options.heigh0Shelf4_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = Math.floor( self.options.heigh2Shelf4_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S4_2_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf4_2 > 10 && self.options.s4_2_ShelvingStatus === 'Wood' || self.options.heigh3Shelf4_2 > 25 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf4_2 += 1
                        self.options.heigh3Shelf4_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = Math.floor( self.options.heigh2Shelf4_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = Math.floor( self.options.heigh3Shelf4_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf4_2 > 10 && self.options.s4_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_2 > 13 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf4_2 += 1
                        self.options.heigh0Shelf4_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = Math.floor( self.options.heigh2Shelf4_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section4_2_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S4_2_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+3).position.y += 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf4_2 -= 1
                        self.options.heigh4Shelf4_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = Math.floor( self.options.heigh3Shelf4_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = Math.floor( self.options.heigh4Shelf4_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_2_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+3).position.y += 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf4_2 -= 1
                        self.options.heigh0Shelf4_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = Math.floor( self.options.heigh3Shelf4_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S4_2_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf4_2 > 10 && self.options.s4_2_ShelvingStatus === 'Wood' || self.options.heigh4Shelf4_2 > 13 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf4_2 += 1
                        self.options.heigh4Shelf4_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = Math.floor( self.options.heigh3Shelf4_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = Math.floor( self.options.heigh4Shelf4_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf4_2 > 10 && self.options.s4_2_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_2 > 13 && self.options.s4_2_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s4_2_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_2_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf4_2 += 1
                        self.options.heigh0Shelf4_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = Math.floor( self.options.heigh3Shelf4_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section4_2_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S4_2_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+5) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+4).position.y += 1.05
                        

                        self.options.heigh4Shelf4_2 -= 1
                        self.options.heigh5Shelf4_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = Math.floor( self.options.heigh4Shelf4_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S4_2").innerHTML = Math.floor( self.options.heigh5Shelf4_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving4_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+4).position.y += 1.05
                        
    
                        self.options.heigh4Shelf4_2 -= 1
                        self.options.heigh0Shelf4_2 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = Math.floor( self.options.heigh4Shelf4_2 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S4_2_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+5) != undefined) {
                
                    if ( self.options.heigh5Shelf4_2 >= 11 ) {
        
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+4).position.y -= 1.05
                       
        
                        self.options.heigh4Shelf4_2 += 1
                        self.options.heigh5Shelf4_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = Math.floor( self.options.heigh4Shelf4_2 ) +"cm";
                        document.getElementById("PositionField_InternalShelving5_S4_2").innerHTML = Math.floor( self.options.heigh5Shelf4_2 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if ( self.options.heigh0Shelf4_2 >= 11 ) {
        
                        self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+4).position.y -= 1.05
                        
        
                        self.options.heigh4Shelf4_2 += 1
                        self.options.heigh0Shelf4_2 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = Math.floor( self.options.heigh4Shelf4_2 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section4_2_shelf5 up&down
            document.getElementById("MoveInternalShelving5_S4_2_UP").addEventListener('click', async function() {

                if (parseFloat(document.getElementById('PositionField_InternalShelving5_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+5).position.y += 1.05
                    

                    self.options.heigh5Shelf4_2 -= 1
                    self.options.heigh0Shelf4_2 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving5_S4_2").innerHTML = Math.floor( self.options.heigh5Shelf4_2 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving5_S4_2_DOWN").addEventListener('click', async function() {

                if ( self.options.heigh0Shelf4_2 >= 11 ) {
    
                    self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+5).position.y -= 1.05
                    
    
                    self.options.heigh5Shelf4_2 += 1
                    self.options.heigh0Shelf4_2 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving5_S4_2").innerHTML = Math.floor( self.options.heigh5Shelf4_2 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });
            
            


            //section 4_3 shelf generating
            document.getElementById("InternalShelving_S4_3").addEventListener('click', function() {
                createInternalShelving_S4_3();
            });
    
            function createInternalShelving_S4_3() {
    
                var checkBox_InternalShelving_S4_3 = document.getElementById("InternalShelving_S4_3");
    
                if ( document.getElementById("InternalShelving_S4_3").checked == true || self.options.s4_3_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "flex";
                    document.getElementById("MainShoeShelving_S4_3").style.display = "none";

                    document.getElementById("Drawer_S4_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_3").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection4_3 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
    
                        document.getElementById("internalShelving_sect4_3").value = '1'
    
                        self.scene.remove(self.shelvingGroup_section4_3);
                        
                        self.shelvingGroup_section4_3 = new THREE.Group();
                        self.options.posShelf1_sect4_3 = 13;
    
                        self.shelvingGroup_section4_3.add(self.createShelfToGroup(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length));
    
                        document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                        for (var i = 2; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";

    
                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "none";
                        document.getElementById("InternalShelving1_S4_3").style.display = "none";
                        document.getElementById('internalShelving_sect4_3').value = 0
                        self.options.shelvesCounterSection4_3 = 0;
                    }
    
                    if (self.options.shelvesCounterSection4_3 != 0) {
    
                        self.shelvingGroup_section4_3.position.y = self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y - 1
        
                        self.shelvingGroup_section4_3.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section4_3.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        self.shelvingGroup_section4_3.name = 'shelvingGroup_section4_3';
        
                        self.scene.add(self.shelvingGroup_section4_3);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_3; i++) {
                            self.shelvingGroup_section4_3.getObjectByName('internalShelf_4_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        
    
                    } else {}     
    
                    self.options.s4_3_internlShelvinStatus = 1
                    self.options.s4_3_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection4_3 = 0
                    self.scene.remove(self.shelvingGroup_section4_3);
    
                    for (var i = 1; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                    }
                    document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "none";
                    document.getElementById("MainShoeShelving_S4_3").style.display = "flex";

                    document.getElementById("internalShelving_sect4_3").value = '0'

                    self.options.s4_3_internlShelvinStatus = 0
                    self.options.s4_3_ShelvingStatus = 'none'

    
                }
    
               
                self.options.heigh1Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_3 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
    
            document.getElementById("subButtonMinus_Shelves4_3").addEventListener('click', requestChangeShelving4_3); 
            document.getElementById("subButtonPlus_Shelves4_3").addEventListener('click', requestChangeShelving4_3); 
            document.getElementById("internalShelving_sect4_3").addEventListener('change', requestChangeShelving4_3);  
    
            function requestChangeShelving4_3 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createInternalShelving_sect4_3();
            };
    
            function createInternalShelving_sect4_3() {
    
    
                switch (parseInt(document.getElementById("internalShelving_sect4_3").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection4_3 = 0
                        self.scene.remove(self.shelvingGroup_section4_3);
    
                        document.getElementById("InternalShelving_S4_3").checked = false;
                        for (var i = 1; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                        }
                        document.getElementById("InternalShelving2_S4_3").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "none";
                        document.getElementById("MainShoeShelving_S4_3").style.display = "flex";

                        document.getElementById("internalShelving_sect4_3").value = '0'
                        

                        document.getElementById("Drawer_S4_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_3").src="icons/Drawer_Close.jpg";
    
                    break;
                    case 1:
                        self.options.shelvesCounterSection4_3 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section4_3);
                            
                            self.shelvingGroup_section4_3 = new THREE.Group();
                            self.options.posShelf1_sect4_3 = 13;
    
                            self.shelvingGroup_section4_3.add(self.createShelfToGroup(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length));
    
                            document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_3").style.display = "none";
                            document.getElementById("InternalShelving3_S4_3").style.display = "none";
                            document.getElementById("InternalShelving4_S4_3").style.display = "none";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "none";
                            document.getElementById("InternalShelving1_S4_3").style.display = "none";
                            document.getElementById('internalShelving_sect4_3').value = 0
                            self.options.shelvesCounterSection4_3 = 0;  
                        }
                    break;
                    case 2:
                        self.options.shelvesCounterSection4_3 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section4_3);
                            self.shelvingGroup_section4_3 = new THREE.Group();
                            self.options.posShelf2_sect4_3 =  13
                            self.options.posShelf1_sect4_3 = self.options.posShelf2_sect4_3 + 12
    
                            self.shelvingGroup_section4_3.add(self.createShelfToGroup(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_3, 2, '4_3', self.options.section4Length)
                            );
                            
                            document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_3").style.display = "none";
                            document.getElementById("InternalShelving4_S4_3").style.display = "none";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S4_3").style.display = "none";
                            document.getElementById('internalShelving_sect4_3').value = 1
                            self.options.shelvesCounterSection4_3 = 1;
                        }
    
                    break;    
                    case 3:

                        self.options.shelvesCounterSection4_3 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section4_3);                        

                            self.shelvingGroup_section4_3 = new THREE.Group();
                            self.options.posShelf3_sect4_3 =13
                            self.options.posShelf2_sect4_3 = self.options.posShelf3_sect4_3 + 12
                            self.options.posShelf1_sect4_3 = self.options.posShelf2_sect4_3 + 12

                        
                            self.shelvingGroup_section4_3.add(self.createShelfToGroup(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_3, 2, '4_3', self.options.section4Length), self.createShelfToGroup(self.options.posShelf3_sect4_3, 3, '4_3', self.options.section4Length)
                            );
                            document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_3").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S4_3").style.display = "none";
                            document.getElementById('internalShelving_sect4_3').value = 2
                            self.options.shelvesCounterSection4_3 = 2;
                        }

                    break;  
                    case 4:

                        self.options.shelvesCounterSection4_3 = 4;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) > 57.2 ) {
                            self.scene.remove(self.shelvingGroup_section4_3);                        

                            self.shelvingGroup_section4_3 = new THREE.Group();
                            self.options.posShelf4_sect4_3 = 13
                            self.options.posShelf3_sect4_3 = self.options.posShelf4_sect4_3 + 12
                            self.options.posShelf2_sect4_3 = self.options.posShelf3_sect4_3 + 12
                            self.options.posShelf1_sect4_3 = self.options.posShelf2_sect4_3 + 12
                        
                            self.shelvingGroup_section4_3.add(
                                self.createShelfToGroup(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length),
                                self.createShelfToGroup(self.options.posShelf2_sect4_3, 2, '4_3', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf3_sect4_3, 3, '4_3', self.options.section4Length), 
                                self.createShelfToGroup(self.options.posShelf4_sect4_3, 4, '4_3', self.options.section4Length)
                            );
                            document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving4_S4_3").style.display = "flex";
                            


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 48 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving4_S4_3").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving4_S4_3").style.display = "none";
                            document.getElementById('internalShelving_sect4_3').value = 3
                            self.options.shelvesCounterSection4_3 = 3;
                        }

                    break;  
                }

    
                if (self.options.shelvesCounterSection4_3 != 0) {
    
                    self.shelvingGroup_section4_3.position.y = self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y - 1
    
                    self.shelvingGroup_section4_3.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
    
                    self.shelvingGroup_section4_3.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
    
                    self.shelvingGroup_section4_3.name = 'shelvingGroup_section4_3';
    
                    self.scene.add(self.shelvingGroup_section4_3);
    
                    for (var i = 1; i <= self.options.shelvesCounterSection4_3; i++) {
                        self.shelvingGroup_section4_3.getObjectByName('internalShelf_4_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    

                self.options.heigh1Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving3_S4_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving4_S4_3').textContent.match(/\d+(\.\d+)?/)[0]);

                self.options.heigh0Shelf4_3 = 10
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };
    

            document.getElementById("ShoeShelving_S4_3").addEventListener('click', function() {
                createShoeShelving_S4_3();
            });
            function createShoeShelving_S4_3() {
    
                var checkBox_InternalShelving_S4_3 = document.getElementById("ShoeShelving_S4_3");
    
                if ( document.getElementById("ShoeShelving_S4_3").checked == true || self.options.s4_3_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "flex";
                    document.getElementById("MainInternalShelving_S4_3").style.display = "none";
                    
                    document.getElementById("Drawer_S4_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_3").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_3").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection4_3 = 1;

                    document.getElementById("ShoeShelving_sect4_3").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect4_3").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_3);
                        
                        self.shelvingGroup_section4_3 = new THREE.Group();
                        self.options.posShelf1_sect4_3 = 14;

                        self.shelvingGroup_section4_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length));
                        self.shelvingGroup_section4_3.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                        for (var i = 2; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_3").style.display = "flex";
                        document.getElementById("InternalShelving1_S4_3").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_3').value = 0
                        self.options.shelvesCounterSection4_3 = 0;
                    }

                    if (self.options.shelvesCounterSection4_3 != 0) {
    
                        self.shelvingGroup_section4_3.position.y = self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y - 1
        
                        self.shelvingGroup_section4_3.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section4_3.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section4_3.name = 'shelvingGroup_section4_3';
        
                        self.scene.add(self.shelvingGroup_section4_3);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_3; i++) {
                            self.shelvingGroup_section4_3.getObjectByName('internalShelf_4_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection4_3; i++) {
                            self.shelvingGroup_section4_3.getObjectByName('internalShelfShoe_4_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                    for (var i = 2; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                    }

    
    
                    self.options.s4_3_internlShelvinStatus = 1
                    self.options.s4_3_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection4_3 = 0
                    self.scene.remove(self.shelvingGroup_section4_3);
    
                    for (var i = 1; i <= 4; i++) {
                        document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect4_3").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                    document.getElementById("MainInternalShelving_S4_3").style.display = "flex";

                    document.getElementById("Drawer_S4_3").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS4_3").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S4_3").src="icons/Drawer_Close.jpg";

                    self.options.s4_3_internlShelvinStatus = 0
                    self.options.s4_3_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_3 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves4_3").addEventListener('click', requestChangeShoeShelving4_3); 
            document.getElementById("subButtonPlus_ShoeShelves4_3").addEventListener('click', requestChangeShoeShelving4_3); 
            document.getElementById("ShoeShelving_sect4_3").addEventListener('change', requestChangeShoeShelving4_3); 

            function requestChangeShoeShelving4_3 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect4_3();
            };
    
            function createShoeShelving_sect4_3() {
        

                self.options.s4_3_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect4_3").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection4_3 = 0
                        self.options.s4_3_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section4_3);
    
                        document.getElementById("ShoeShelving_S4_3").checked = false;
        
                        for (var i = 1; i <= 4; i++) {
                            document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect4_3").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_3").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S4_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_3").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_3").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection4_3 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect4_3").value = '1'
                            self.scene.remove(self.shelvingGroup_section4_3);
                            
                            self.shelvingGroup_section4_3 = new THREE.Group();
                            self.options.posShelf1_sect4_3 = 14;

                            self.shelvingGroup_section4_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length));
                            self.shelvingGroup_section4_3.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                            for (var i = 2; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                            document.getElementById("MainInternalShelving_S4_3").style.display = "flex";

                            document.getElementById("InternalShelving1_S4_3").style.display = "none";
                            document.getElementById('ShoeShelving_sect4_3').value = 0
                            self.options.shelvesCounterSection4_3 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection4_3 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section4_3);
                            self.shelvingGroup_section4_3 = new THREE.Group();
                            self.options.posShelf2_sect4_3 =  14;
                            self.options.posShelf1_sect4_3 = self.options.posShelf2_sect4_3 + 27.5;
    
                            self.shelvingGroup_section4_3.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect4_3, 1, '4_3', self.options.section4Length), self.createShelfShoeToGroup(self.options.posShelf2_sect4_3, 2, '4_3', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect4_3, 2, '4_3', self.options.section4Length));
                            
                            
                            document.getElementById("InternalShelving1_S4_3").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_3").style.display = "flex";
                            for (var i = 3; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                            }
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S4_3").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_3').value = 1
                        self.options.shelvesCounterSection4_3 = 1;}
    
                    break;
                }

                self.options.heigh0Shelf4_3 = 5

        
                if (self.options.shelvesCounterSection4_3 != 0) {
    
                    self.shelvingGroup_section4_3.position.y = self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y - 1
    
                    self.shelvingGroup_section4_3.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
    
                    self.shelvingGroup_section4_3.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section4_3.name = 'shelvingGroup_section4_3';
    
                    self.scene.add(self.shelvingGroup_section4_3);

                    for (var i = 1; i <= self.options.shelvesCounterSection4_3; i++) {
                        self.shelvingGroup_section4_3.getObjectByName('internalShelfShoe_4_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection4_3; i++) {
                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving3_S4_3').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh4Shelf4_3 = parseFloat(document.getElementById('PositionField_InternalShelving4_S4_3').textContent.match(/\d+(\.\d+)?/)[0]);
                

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            

    
            //section4_3_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S4_3_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_4_3 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+1).position.y += 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf4_3-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = Math.floor( self.options.heigh1Shelf4_3 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf4_3 += 1
                            document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = Math.floor( self.options.heigh2Shelf4_3 ) +"cm";
                        } else{
                            self.options.heigh0Shelf4_3+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S4_3_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf4_3 > 10 && self.options.s4_3_ShelvingStatus === 'Wood' || self.options.heigh2Shelf4_3 > 25 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_3 += 1
                        self.options.heigh2Shelf4_3 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = Math.floor( self.options.heigh1Shelf4_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = Math.floor( self.options.heigh2Shelf4_3 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf4_3 > 10 && self.options.s4_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_3 > 13 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_3 += 1
                        self.options.heigh0Shelf4_3 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = Math.floor( self.options.heigh1Shelf4_3 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section4_3_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S4_3_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+2).position.y += 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf4_3 -= 1
                        self.options.heigh3Shelf4_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = Math.floor( self.options.heigh2Shelf4_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = Math.floor( self.options.heigh3Shelf4_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+2).position.y += 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf4_3 -= 1
                        self.options.heigh0Shelf4_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = Math.floor( self.options.heigh2Shelf4_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S4_3_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf4_3 > 10 && self.options.s4_3_ShelvingStatus === 'Wood' || self.options.heigh3Shelf4_3 > 25 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf4_3 += 1
                        self.options.heigh3Shelf4_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = Math.floor( self.options.heigh2Shelf4_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = Math.floor( self.options.heigh3Shelf4_3 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf4_3 > 10 && self.options.s4_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_3 > 13 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf4_3 += 1
                        self.options.heigh0Shelf4_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = Math.floor( self.options.heigh2Shelf4_3 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
    
            //section4_3_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S4_3_UP").addEventListener('click', async function() {
                
                if (self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+4) != undefined) {
                    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+3).position.y += 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+3).position.y += 1.05
                        }

                        self.options.heigh3Shelf4_3 -= 1
                        self.options.heigh4Shelf4_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = Math.floor( self.options.heigh3Shelf4_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S4_3").innerHTML = Math.floor( self.options.heigh4Shelf4_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving3_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_3_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+3).position.y += 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+3).position.y += 1.05
                        }
    
                        self.options.heigh3Shelf4_3 -= 1
                        self.options.heigh0Shelf4_3 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = Math.floor( self.options.heigh3Shelf4_3 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S4_3_DOWN").addEventListener('click', async function() {

                
                if (self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+4) != undefined) {

                    if (self.options.heigh4Shelf4_3 > 10 && self.options.s4_3_ShelvingStatus === 'Wood' || self.options.heigh4Shelf4_3 > 25 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {
                        
                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+3).position.y -= 1.05
                        }

                        self.options.heigh3Shelf4_3 += 1
                        self.options.heigh4Shelf4_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = Math.floor( self.options.heigh3Shelf4_3 ) +"cm";
                        document.getElementById("PositionField_InternalShelving4_S4_3").innerHTML = Math.floor( self.options.heigh4Shelf4_3 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf4_3 > 10 && self.options.s4_3_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_3 > 13 && self.options.s4_3_ShelvingStatus === 'Shoe' ) {        
                        self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+3).position.y -= 1.05
                        if (self.options.s4_3_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_3_'+'shelf'+3).position.y -= 1.05
                        }
        
                        self.options.heigh3Shelf4_3 += 1
                        self.options.heigh0Shelf4_3 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = Math.floor( self.options.heigh3Shelf4_3 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });

            //section4_3_shelf4 up&down
            document.getElementById("MoveInternalShelving4_S4_3_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving4_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                    self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+4).position.y += 1.05
                    

                    self.options.heigh4Shelf4_3 -= 1
                    self.options.heigh0Shelf4_3 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving4_S4_3").innerHTML = Math.floor( self.options.heigh4Shelf4_3 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving4_S4_3_DOWN").addEventListener('click', async function() {

                if ( self.options.heigh0Shelf4_3 > 10 ) {
    
                    self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+4).position.y -= 1.05
                    
    
                    self.options.heigh4Shelf4_3 += 1
                    self.options.heigh0Shelf4_3 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving4_S4_3").innerHTML = Math.floor( self.options.heigh4Shelf4_3 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });
    

            //section 4_4 shelf generating
            document.getElementById("InternalShelving_S4_4").addEventListener('click', function() {
                createInternalShelving_S4_4();
            });
            function createInternalShelving_S4_4() {

                var checkBox_InternalShelving_S4_4 = document.getElementById("InternalShelving_S4_4");

                if ( document.getElementById("InternalShelving_S4_4").checked == true || self.options.s4_4_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "flex";
                    document.getElementById("MainShoeShelving_S4_4").style.display = "none";

                    document.getElementById("Drawer_S4_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_4").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection4_4 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect4_4").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_4);
                        
                        self.shelvingGroup_section4_4 = new THREE.Group();
                        self.options.posShelf1_sect4_4 = 13;

                        self.shelvingGroup_section4_4.add(self.createShelfToGroup(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_4").style.display = "flex";

                        document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                        document.getElementById("InternalShelving1_S4_4").style.display = "none";
                        document.getElementById('internalShelving_sect4_4').value = 0
                        self.options.shelvesCounterSection4_4 = 0;
                    }

                    if (self.options.shelvesCounterSection4_4 != 0) {

                        self.shelvingGroup_section4_4.position.y = self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y - 1
        
                        self.shelvingGroup_section4_4.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section4_4.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        self.shelvingGroup_section4_4.name = 'shelvingGroup_section4_4';
        
                        self.scene.add(self.shelvingGroup_section4_4);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_4; i++) {
                            self.shelvingGroup_section4_4.getObjectByName('internalShelf_4_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s4_4_internlShelvinStatus = 1
                    self.options.s4_4_ShelvingStatus = 'Wood'

                } 
                else {
                    self.options.shelvesCounterSection4_4 = 0
                    self.scene.remove(self.shelvingGroup_section4_4);

                    for (var i = 1; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                    }
                    document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                    document.getElementById("MainShoeShelving_S4_4").style.display = "flex";

                    document.getElementById("internalShelving_sect4_4").value = '0'

                    self.options.s4_4_internlShelvinStatus = 0
                    self.options.s4_4_ShelvingStatus = 'none'


                }

            
                self.options.heigh1Shelf4_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_4 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves4_4").addEventListener('click', requestChangeShelving4_4); 
            document.getElementById("subButtonPlus_Shelves4_4").addEventListener('click', requestChangeShelving4_4); 
            document.getElementById("internalShelving_sect4_4").addEventListener('change', requestChangeShelving4_4);  

            function requestChangeShelving4_4 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect4_4();
            };

            function createInternalShelving_sect4_4() {


                switch (parseInt(document.getElementById("internalShelving_sect4_4").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection4_4 = 0
                        self.scene.remove(self.shelvingGroup_section4_4);

                        document.getElementById("InternalShelving_S4_4").checked = false;

                        for (var i = 1; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                        }

                        document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                        document.getElementById("MainShoeShelving_S4_4").style.display = "flex";

                        document.getElementById("internalShelving_sect4_4").value = '0'

                        document.getElementById("Drawer_S4_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_4").src="icons/Drawer_Close.jpg";

                    break;
                    case 1:
                        self.options.shelvesCounterSection4_4 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section4_4);
                            
                            self.shelvingGroup_section4_4 = new THREE.Group();
                            self.options.posShelf1_sect4_4 = 13;

                            self.shelvingGroup_section4_4.add(self.createShelfToGroup(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_4").style.display = "flex";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                            document.getElementById("InternalShelving1_S4_4").style.display = "none";
                            document.getElementById('internalShelving_sect4_4').value = 0
                            self.options.shelvesCounterSection4_4 = 0;  
                        }
                    break;  
                    case 2:
                        self.options.shelvesCounterSection4_4 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section4_4);
                            self.shelvingGroup_section4_4 = new THREE.Group();
                            self.options.posShelf2_sect4_4 =  13
                            self.options.posShelf1_sect4_4 = self.options.posShelf2_sect4_4 + 12
    
                            self.shelvingGroup_section4_4.add(self.createShelfToGroup(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_4, 2, '4_4', self.options.section4Length)
                            );
                            
                            document.getElementById("InternalShelving1_S4_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_4").style.display = "flex";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S4_4").style.display = "none";
                            document.getElementById('internalShelving_sect4_4').value = 1
                            self.options.shelvesCounterSection4_4 = 1;
                        }
    
                    break;    
                    case 3:

                        self.options.shelvesCounterSection4_4 = 3;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 46) {
                            self.scene.remove(self.shelvingGroup_section4_4);                        

                            self.shelvingGroup_section4_4 = new THREE.Group();
                            self.options.posShelf3_sect4_4 =13
                            self.options.posShelf2_sect4_4 = self.options.posShelf3_sect4_4 + 12
                            self.options.posShelf1_sect4_4 = self.options.posShelf2_sect4_4 + 12

                        
                            self.shelvingGroup_section4_4.add(self.createShelfToGroup(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_4, 2, '4_4', self.options.section4Length), self.createShelfToGroup(self.options.posShelf3_sect4_4, 3, '4_4', self.options.section4Length)
                            );
                            document.getElementById("InternalShelving1_S4_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_4").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_4").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 36 +"cm";

                            document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = 10 +"cm";

                            document.getElementById("PositionField_InternalShelving3_S4_4").innerHTML = 10 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving3_S4_4").style.display = "none";
                            document.getElementById('internalShelving_sect4_4').value = 2
                            self.options.shelvesCounterSection4_4 = 2;
                        }

                    break; 
                }
                

                if (self.options.shelvesCounterSection4_4 != 0) {

                    self.shelvingGroup_section4_4.position.y = self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y - 1

                    self.shelvingGroup_section4_4.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section4_4.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;

                    self.shelvingGroup_section4_4.name = 'shelvingGroup_section4_4';

                    self.scene.add(self.shelvingGroup_section4_4);


                    for (var i = 1; i <= self.options.shelvesCounterSection4_4; i++) {
                        self.shelvingGroup_section4_4.getObjectByName('internalShelf_4_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        if (self.options.Glassmat_Shelf1_sect4_4 == true) {
                            self.shelvingGroup_section4_4.getObjectByName('internalShelf_4_4_shelf1').material.map = self.textures[58].map;
                        }
                    }

                } else {}

                self.options.heigh1Shelf4_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_4 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf4_4 = parseFloat(document.getElementById('PositionField_InternalShelving3_S4_4').textContent.match(/\d+(\.\d+)?/)[0]);
                
                self.options.heigh0Shelf4_4 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S4_4").addEventListener('click', function() {
                createShoeShelving_S4_4();
            });
            function createShoeShelving_S4_4() {
    
                var checkBox_InternalShelving_S4_4 = document.getElementById("ShoeShelving_S4_4");
    
                if ( document.getElementById("ShoeShelving_S4_4").checked == true || self.options.s4_4_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "flex";
                    document.getElementById("MainInternalShelving_S4_4").style.display = "none";
                    
                    document.getElementById("Drawer_S4_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_4").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_4").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection4_4 = 1;

                    document.getElementById("ShoeShelving_sect4_4").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect4_4").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_4);
                        
                        self.shelvingGroup_section4_4 = new THREE.Group();
                        self.options.posShelf1_sect4_4 = 14;

                        self.shelvingGroup_section4_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length));
                        self.shelvingGroup_section4_4.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_4").style.display = "flex";
                        for (var i = 2; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                        }

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_4").style.display = "flex";
                        document.getElementById("InternalShelving1_S4_4").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_4').value = 0
                        self.options.shelvesCounterSection4_4 = 0;
                    }

                    if (self.options.shelvesCounterSection4_4 != 0) {
    
                        self.shelvingGroup_section4_4.position.y = self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y - 1
        
                        self.shelvingGroup_section4_4.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section4_4.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section4_4.name = 'shelvingGroup_section4_4';
        
                        self.scene.add(self.shelvingGroup_section4_4);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_4; i++) {
                            self.shelvingGroup_section4_4.getObjectByName('internalShelf_4_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection4_4; i++) {
                            self.shelvingGroup_section4_4.getObjectByName('internalShelfShoe_4_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S4_4").style.display = "flex";
                    for (var i = 2; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                    }

    
    
                    self.options.s4_4_internlShelvinStatus = 1
                    self.options.s4_4_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection4_4 = 0
                    self.scene.remove(self.shelvingGroup_section4_4);
    
                    for (var i = 1; i <= 3; i++) {
                        document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect4_4").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                    document.getElementById("MainInternalShelving_S4_4").style.display = "flex";

                    document.getElementById("Drawer_S4_4").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS4_4").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S4_4").src="icons/Drawer_Close.jpg";

                    self.options.s4_4_internlShelvinStatus = 0
                    self.options.s4_4_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf4_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_4 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves4_4").addEventListener('click', requestChangeShoeShelving4_4); 
            document.getElementById("subButtonPlus_ShoeShelves4_4").addEventListener('click', requestChangeShoeShelving4_4); 
            document.getElementById("ShoeShelving_sect4_4").addEventListener('change', requestChangeShoeShelving4_4); 

            function requestChangeShoeShelving4_4 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect4_4();
            };
    
            function createShoeShelving_sect4_4() {
        
                self.options.s4_4_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect4_4").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection4_4 = 0
                        self.options.s4_4_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section4_4);
    
                        document.getElementById("ShoeShelving_S4_4").checked = false;
        
                        for (var i = 1; i <= 3; i++) {
                            document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect4_4").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_4").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S4_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_4").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_4").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection4_4 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect4_4").value = '1'
                            self.scene.remove(self.shelvingGroup_section4_4);
                            
                            self.shelvingGroup_section4_4 = new THREE.Group();
                            self.options.posShelf1_sect4_4 = 14;

                            self.shelvingGroup_section4_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length));
                            self.shelvingGroup_section4_4.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_4").style.display = "flex";
                            for (var i = 2; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                            }

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                            document.getElementById("MainInternalShelving_S4_4").style.display = "flex";

                            document.getElementById("InternalShelving1_S4_4").style.display = "none";
                            document.getElementById('ShoeShelving_sect4_4').value = 0
                            self.options.shelvesCounterSection4_4 = 0;
                        }
    
                    break;
    
                    case 2:
    
                        self.options.shelvesCounterSection4_4 = 2;
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 47) {
                            self.scene.remove(self.shelvingGroup_section4_4);
                            self.shelvingGroup_section4_4 = new THREE.Group();
                            self.options.posShelf2_sect4_4 =  14;
                            self.options.posShelf1_sect4_4 = self.options.posShelf2_sect4_4 + 27.5;
    
                            self.shelvingGroup_section4_4.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf1_sect4_4, 1, '4_4', self.options.section4Length), self.createShelfShoeToGroup(self.options.posShelf2_sect4_4, 2, '4_4', self.options.section4Length), self.createShelfShoeToGroup2(self.options.posShelf2_sect4_4, 2, '4_4', self.options.section4Length));
                            
                            
                            document.getElementById("InternalShelving1_S4_4").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_4").style.display = "flex";
                            document.getElementById("InternalShelving3_S4_4").style.display = "none";

    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 42 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = 25 +"cm";
    
    
                        } else {showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("InternalShelving2_S4_4").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_4').value = 1
                        self.options.shelvesCounterSection4_4 = 1;}
    
                    break;
                  
                }

                self.options.heigh0Shelf4_4 = 5

        
                if (self.options.shelvesCounterSection4_4 != 0) {
    
                    self.shelvingGroup_section4_4.position.y = self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y - 1
    
                    self.shelvingGroup_section4_4.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
    
                    self.shelvingGroup_section4_4.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section4_4.name = 'shelvingGroup_section4_4';
    
                    self.scene.add(self.shelvingGroup_section4_4);

                    for (var i = 1; i <= self.options.shelvesCounterSection4_4; i++) {
                        self.shelvingGroup_section4_4.getObjectByName('internalShelfShoe_4_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection4_4; i++) {
                        self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf4_4 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_4 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_4').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh3Shelf4_4 = parseFloat(document.getElementById('PositionField_InternalShelving3_S4_4').textContent.match(/\d+(\.\d+)?/)[0]);
                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section4_4_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S4_4_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_4_4 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+1).position.y += 1.05
                        if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf4_4-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = Math.floor( self.options.heigh1Shelf4_4 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf4_4 += 1
                            document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = Math.floor( self.options.heigh2Shelf4_4 ) +"cm";
                        } else{
                            self.options.heigh0Shelf4_4+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S4_4_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf4_4 > 10 && self.options.s4_4_ShelvingStatus === 'Wood' || self.options.heigh2Shelf4_4 > 25 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_4 += 1
                        self.options.heigh2Shelf4_4 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = Math.floor( self.options.heigh1Shelf4_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = Math.floor( self.options.heigh2Shelf4_4 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf4_4 > 10 && self.options.s4_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_4 > 13 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_4 += 1
                        self.options.heigh0Shelf4_4 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = Math.floor( self.options.heigh1Shelf4_4 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section4_4_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S4_4_UP").addEventListener('click', async function() {
                

                if (self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+3) != undefined) {

    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {


                        self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+2).position.y += 1.05
                        if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf4_4 -= 1
                        self.options.heigh3Shelf4_4 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = Math.floor( self.options.heigh2Shelf4_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S4_4").innerHTML = Math.floor( self.options.heigh3Shelf4_4 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                } else {

                    if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+2).position.y += 1.05
                        if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+2).position.y += 1.05
                        }
    
                        self.options.heigh2Shelf4_4 -= 1
                        self.options.heigh0Shelf4_4 += 1
    
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = Math.floor( self.options.heigh2Shelf4_4 ) +"cm";

    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S4_4_DOWN").addEventListener('click', async function() {

                if (self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+3) != undefined) {
                
                    if (self.options.heigh3Shelf4_4 > 10 && self.options.s4_4_ShelvingStatus === 'Wood' || self.options.heigh3Shelf4_4 > 25 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {

        
                        self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+2).position.y -= 1.05
                        }
    
        
                        self.options.heigh2Shelf4_4 += 1
                        self.options.heigh3Shelf4_4 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = Math.floor( self.options.heigh2Shelf4_4 ) +"cm";
                        document.getElementById("PositionField_InternalShelving3_S4_4").innerHTML = Math.floor( self.options.heigh3Shelf4_4 ) +"cm";

        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                } else {

                    if (self.options.heigh0Shelf4_4 > 10 && self.options.s4_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_4 > 13 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {
        
                        self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+2).position.y -= 1.05
                        if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+2).position.y -= 1.05
                        }

                        self.options.heigh2Shelf4_4 += 1
                        self.options.heigh0Shelf4_4 -= 1
        
        
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = Math.floor( self.options.heigh2Shelf4_4 ) +"cm";
        
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });

            //section4_4_shelf3 up&down
            document.getElementById("MoveInternalShelving3_S4_4_UP").addEventListener('click', async function() {
            
                if (parseFloat(document.getElementById('PositionField_InternalShelving3_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_4_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving3_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+3).position.y += 1.05
                    if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+3).position.y += 1.05
                    }

                    self.options.heigh3Shelf4_4 -= 1
                    self.options.heigh0Shelf4_4 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving3_S4_4").innerHTML = Math.floor( self.options.heigh3Shelf4_4 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }

            });
            document.getElementById("MoveInternalShelving3_S4_4_DOWN").addEventListener('click', async function() {

                if (self.options.heigh0Shelf4_4 > 10 && self.options.s4_4_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_4 > 13 && self.options.s4_4_ShelvingStatus === 'Shoe' ) {        
                    self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+3).position.y -= 1.05
                    if (self.options.s4_4_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_4_4_'+'shelf'+3).position.y -= 1.05
                    }
    
                    self.options.heigh3Shelf4_4 += 1
                    self.options.heigh0Shelf4_4 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving3_S4_4").innerHTML = Math.floor( self.options.heigh3Shelf4_4 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }


            });



            //section 4_5 shelf generating
            document.getElementById("InternalShelving_S4_5").addEventListener('click', function() {
                createInternalShelving_S4_5();
            });
            function createInternalShelving_S4_5() {

                var checkBox_InternalShelving_S4_5 = document.getElementById("InternalShelving_S4_5");

                if ( document.getElementById("InternalShelving_S4_5").checked == true || self.options.s4_5_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "flex";
                    document.getElementById("MainShoeShelving_S4_5").style.display = "none";

                    document.getElementById("Drawer_S4_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_5").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection4_5 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect4_5").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_5);
                        
                        self.shelvingGroup_section4_5 = new THREE.Group();
                        self.options.posShelf1_sect4_5 = 13;

                        self.shelvingGroup_section4_5.add(self.createShelfToGroup(self.options.posShelf1_sect4_5, 1, '4_5', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_5").style.display = "flex";
                        document.getElementById("InternalShelving2_S4_5").style.display = "none";

                        document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                        document.getElementById("InternalShelving1_S4_5").style.display = "none";
                        document.getElementById('internalShelving_sect4_5').value = 0
                        self.options.shelvesCounterSection4_5 = 0;
                    }

                    if (self.options.shelvesCounterSection4_5 != 0) {

                        self.shelvingGroup_section4_5.position.y = self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y - 1
        
                        self.shelvingGroup_section4_5.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section4_5.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        self.shelvingGroup_section4_5.name = 'shelvingGroup_section4_5';
        
                        self.scene.add(self.shelvingGroup_section4_5);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_5; i++) {
                            self.shelvingGroup_section4_5.getObjectByName('internalShelf_4_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s4_5_internlShelvinStatus = 1
                    self.options.s4_5_ShelvingStatus = 'Wood'


                } 
                else {
                    self.options.shelvesCounterSection4_5 = 0
                    self.scene.remove(self.shelvingGroup_section4_5);

                    for (var i = 1; i <= 2; i++) {
                        document.getElementById(`InternalShelving${i}_S4_5`).style.display = "none";
                    }

                    document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                    document.getElementById("MainShoeShelving_S4_5").style.display = "flex";

                    document.getElementById("internalShelving_sect4_5").value = '0'

                    self.options.s4_5_internlShelvinStatus = 0
                    self.options.s4_5_ShelvingStatus = 'none'

                }

            
                self.options.heigh1Shelf4_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_5 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves4_5").addEventListener('click', requestChangeShelving4_5); 
            document.getElementById("subButtonPlus_Shelves4_5").addEventListener('click', requestChangeShelving4_5); 
            document.getElementById("internalShelving_sect4_5").addEventListener('change', requestChangeShelving4_5);  

            function requestChangeShelving4_5 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect4_5();
            };

            function createInternalShelving_sect4_5() {


                switch (parseInt(document.getElementById("internalShelving_sect4_5").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection4_5 = 0
                        self.scene.remove(self.shelvingGroup_section4_5);

                        document.getElementById("InternalShelving_S4_5").checked = false;

                        document.getElementById("InternalShelving1_S4_5").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                        document.getElementById("MainShoeShelving_S4_5").style.display = "flex";


                        document.getElementById("internalShelving_sect4_5").value = '0'

                        document.getElementById("Drawer_S4_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_5").src="icons/Drawer_Close.jpg";

                    break;

                    case 1:
                        self.options.shelvesCounterSection4_5 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section4_5);
                            
                            self.shelvingGroup_section4_5 = new THREE.Group();
                            self.options.posShelf1_sect4_5 = 13;

                            self.shelvingGroup_section4_5.add(self.createShelfToGroup(self.options.posShelf1_sect4_5, 1, '4_5', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_5").style.display = "none";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                            document.getElementById("InternalShelving1_S4_5").style.display = "none";
                            document.getElementById('internalShelving_sect4_5').value = 0
                            self.options.shelvesCounterSection4_5 = 0;  
                        }
                    break;  
                    case 2:
                        self.options.shelvesCounterSection4_5 = 2;
    
                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 34) {
                            self.scene.remove(self.shelvingGroup_section4_5);
                            self.shelvingGroup_section4_5 = new THREE.Group();
                            self.options.posShelf2_sect4_5 =  13
                            self.options.posShelf1_sect4_5 = self.options.posShelf2_sect4_5 + 12
    
                            self.shelvingGroup_section4_5.add(self.createShelfToGroup(self.options.posShelf1_sect4_5, 1, '4_5', self.options.section4Length),
                            self.createShelfToGroup(self.options.posShelf2_sect4_5, 2, '4_5', self.options.section4Length)
                            );
                            
                            document.getElementById("InternalShelving1_S4_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_5").style.display = "flex";
    
                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - 24 +"cm";
    
                            document.getElementById("PositionField_InternalShelving2_S4_5").innerHTML = 10 +"cm";
    
    
                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("InternalShelving2_S4_5").style.display = "none";
                            document.getElementById('internalShelving_sect4_5').value = 1
                            self.options.shelvesCounterSection4_5 = 1;
                        }
    
                    break;
                }
                

                if (self.options.shelvesCounterSection4_5 != 0) {

                    self.shelvingGroup_section4_5.position.y = self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y - 1

                    self.shelvingGroup_section4_5.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section4_5.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;

                    self.shelvingGroup_section4_5.name = 'shelvingGroup_section4_5';

                    self.scene.add(self.shelvingGroup_section4_5);


                    for (var i = 1; i <= self.options.shelvesCounterSection4_5; i++) {
                        self.shelvingGroup_section4_5.getObjectByName('internalShelf_4_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }

                } else {}

                self.options.heigh1Shelf4_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_5').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_5 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_5').textContent.match(/\d+(\.\d+)?/)[0]);
                
                self.options.heigh0Shelf4_5 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S4_5").addEventListener('click', function() {
                createShoeShelving_S4_5();
            });
            function createShoeShelving_S4_5() {
    
                var checkBox_InternalShelving_S4_5 = document.getElementById("ShoeShelving_S4_5");
    
                if ( document.getElementById("ShoeShelving_S4_5").checked == true || self.options.s4_5_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "flex";
                    document.getElementById("MainInternalShelving_S4_5").style.display = "none";
                    
                    document.getElementById("Drawer_S4_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_5").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_5").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection4_5 = 1;

                    document.getElementById("ShoeShelving_sect4_5").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect4_5").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_5);
                        
                        self.shelvingGroup_section4_5 = new THREE.Group();
                        self.options.posShelf1_sect4_5 = 14;

                        self.shelvingGroup_section4_5.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_5, 1, '4_5', self.options.section4Length));
                        self.shelvingGroup_section4_5.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_5, 1, '4_5', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_5").style.display = "flex";
                        document.getElementById("InternalShelving2_S4_5").style.display = "none";

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_5").style.display = "flex";
                        document.getElementById("InternalShelving1_S4_5").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_5').value = 0
                        self.options.shelvesCounterSection4_5 = 0;
                    }

                    if (self.options.shelvesCounterSection4_5 != 0) {
    
                        self.shelvingGroup_section4_5.position.y = self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y - 1
        
                        self.shelvingGroup_section4_5.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section4_5.position.z = -self.options.room.width / 2 + self.options.shelf.width /2 ;
        
                        self.shelvingGroup_section4_5.name = 'shelvingGroup_section4_5';
        
                        self.scene.add(self.shelvingGroup_section4_5);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_5; i++) {
                            self.shelvingGroup_section4_5.getObjectByName('internalShelf_4_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection4_5; i++) {
                            self.shelvingGroup_section4_5.getObjectByName('internalShelfShoe_4_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S4_5").style.display = "flex";
                    document.getElementById("InternalShelving2_S4_5").style.display = "none";

    
    
                    self.options.s4_5_internlShelvinStatus = 1
                    self.options.s4_5_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection4_5 = 0
                    self.scene.remove(self.shelvingGroup_section4_5);
    
                    for (var i = 1; i <= 2; i++) {
                        document.getElementById(`InternalShelving${i}_S4_5`).style.display = "none";
                    }
                    

                    document.getElementById("ShoeShelving_sect4_5").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                    document.getElementById("MainInternalShelving_S4_5").style.display = "flex";

                    document.getElementById("Drawer_S4_5").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS4_5").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S4_5").src="icons/Drawer_Close.jpg";

                    self.options.s4_5_internlShelvinStatus = 0
                    self.options.s4_5_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf4_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_5 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves4_5").addEventListener('click', requestChangeShoeShelving4_5); 
            document.getElementById("subButtonPlus_ShoeShelves4_5").addEventListener('click', requestChangeShoeShelving4_5); 
            document.getElementById("ShoeShelving_sect4_5").addEventListener('change', requestChangeShoeShelving4_5); 

            function requestChangeShoeShelving4_5 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect4_5();
            };
    
            function createShoeShelving_sect4_5() {
        
                self.options.s4_5_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect4_5").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection4_5 = 0
                        self.options.s4_5_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section4_5);
    
                        document.getElementById("ShoeShelving_S4_5").checked = false;
        
                        for (var i = 1; i <= 2; i++) {
                            document.getElementById(`InternalShelving${i}_S4_5`).style.display = "none";
                        }
                        
                        document.getElementById("ShoeShelving_sect4_5").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_5").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S4_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_5").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_5").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection4_5 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect4_5").value = '1'
                            self.scene.remove(self.shelvingGroup_section4_5);
                            
                            self.shelvingGroup_section4_5 = new THREE.Group();
                            self.options.posShelf1_sect4_5 = 14;

                            self.shelvingGroup_section4_5.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_5, 1, '4_5', self.options.section4Length));
                            self.shelvingGroup_section4_5.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_5, 1, '4_5', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_5").style.display = "flex";
                            document.getElementById("InternalShelving2_S4_5").style.display = "none";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                            document.getElementById("MainInternalShelving_S4_5").style.display = "flex";

                            document.getElementById("InternalShelving1_S4_5").style.display = "none";
                            document.getElementById('ShoeShelving_sect4_5').value = 0
                            self.options.shelvesCounterSection4_5 = 0;
                        }
    
                    break;
                  
                }

                self.options.heigh0Shelf4_5 = 5

        
                if (self.options.shelvesCounterSection4_5 != 0) {
    
                    self.shelvingGroup_section4_5.position.y = self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y - 1
    
                    self.shelvingGroup_section4_5.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
    
                    self.shelvingGroup_section4_5.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section4_5.name = 'shelvingGroup_section4_5';
    
                    self.scene.add(self.shelvingGroup_section4_5);

                    for (var i = 1; i <= self.options.shelvesCounterSection4_5; i++) {
                        self.shelvingGroup_section4_5.getObjectByName('internalShelfShoe_4_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection4_5; i++) {
                        self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf4_5 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_5').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh2Shelf4_5 = parseFloat(document.getElementById('PositionField_InternalShelving2_S4_5').textContent.match(/\d+(\.\d+)?/)[0]);                
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section4_5_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S4_5_UP").addEventListener('click', async function( ) {
                
                if (self.options.sectionHeight_4_5 > 10  ) { 
    
                    if (parseFloat(document.getElementById('PositionField_InternalShelving1_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_5_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s4_5_ShelvingStatus === 'Shoe' ) {
    
                        self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+1).position.y += 1.05
                        if (self.options.s4_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_5_'+'shelf'+1).position.y += 1.05
                        }
    
                        self.options.heigh1Shelf4_5-= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = Math.floor( self.options.heigh1Shelf4_5 ) +"cm";
    
                        if (self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+2) != undefined) {
                            self.options.heigh2Shelf4_5 += 1
                            document.getElementById("PositionField_InternalShelving2_S4_5").innerHTML = Math.floor( self.options.heigh2Shelf4_5 ) +"cm";
                        } else{
                            self.options.heigh0Shelf4_5+= 1
                        }
    
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
    
                    if (self.options.statusShowDimensions == 1) {
                        await self.createDimensions();
                    }
    
                } else {showHintPanel("A minimum height is required between shelves and/or partitions."); };
            });
            document.getElementById("MoveInternalShelving1_S4_5_DOWN").addEventListener('click', async function() {
                        
                if (self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+2) != undefined) {

                    if (self.options.heigh2Shelf4_5 > 10 && self.options.s4_5_ShelvingStatus === 'Wood' || self.options.heigh2Shelf4_5 > 25 && self.options.s4_5_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_5_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_5 += 1
                        self.options.heigh2Shelf4_5 -= 1
            
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = Math.floor( self.options.heigh1Shelf4_5 ) +"cm";
                        document.getElementById("PositionField_InternalShelving2_S4_5").innerHTML = Math.floor( self.options.heigh2Shelf4_5 ) +"cm";

                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }
                } else {

                    if (self.options.heigh0Shelf4_5 > 10 && self.options.s4_5_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_5 > 13 && self.options.s4_5_ShelvingStatus === 'Shoe' ) {

                        self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+1).position.y -= 1.05
                        if (self.options.s4_5_ShelvingStatus === 'Shoe') {
                            self.scene.getObjectByName('internalShelfShoe_4_5_'+'shelf'+1).position.y -= 1.05
                        }

                        self.options.heigh1Shelf4_5 += 1
                        self.options.heigh0Shelf4_5 -= 1
    
                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = Math.floor( self.options.heigh1Shelf4_5 ) +"cm";
    
                    } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                }
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });

            //section4_5_shelf2 up&down
            document.getElementById("MoveInternalShelving2_S4_5_UP").addEventListener('click', async function() {
                
                if (parseFloat(document.getElementById('PositionField_InternalShelving2_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_5_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving2_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 26 && self.options.s4_5_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+2).position.y += 1.05
                    if (self.options.s4_5_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_4_5_'+'shelf'+2).position.y += 1.05
                    }

                    self.options.heigh2Shelf4_5 -= 1
                    self.options.heigh0Shelf4_5 += 1

    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving2_S4_5").innerHTML = Math.floor( self.options.heigh2Shelf4_5 ) +"cm";


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving2_S4_5_DOWN").addEventListener('click', async function() {

                if (self.options.heigh0Shelf4_5 > 10 && self.options.s4_5_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_5 > 13 && self.options.s4_5_ShelvingStatus === 'Shoe' ) {
    
                    self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+2).position.y -= 1.05
                    if (self.options.s4_5_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_4_5_'+'shelf'+2).position.y -= 1.05
                    }

                    self.options.heigh2Shelf4_5 += 1
                    self.options.heigh0Shelf4_5 -= 1
    
    
                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving2_S4_5").innerHTML = Math.floor( self.options.heigh2Shelf4_5 ) +"cm";
    
                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

            
                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });



            //section 4_6 shelf generating
            document.getElementById("InternalShelving_S4_6").addEventListener('click', function() {
                createInternalShelving_S4_6();
            });
            function createInternalShelving_S4_6() {

                var checkBox_InternalShelving_S4_6 = document.getElementById("InternalShelving_S4_6");

                if ( document.getElementById("InternalShelving_S4_6").checked == true || self.options.s4_6_internlShelvinStatus == 0 ) {

                    document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "flex";
                    document.getElementById("MainShoeShelving_S4_6").style.display = "none";

                    document.getElementById("Drawer_S4_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_6").src="icons/Drawer_Disable.jpg";

                    self.options.shelvesCounterSection4_6 = 1;

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                        document.getElementById("internalShelving_sect4_6").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_6);
                        
                        self.shelvingGroup_section4_6 = new THREE.Group();
                        self.options.posShelf1_sect4_6 = 13;

                        self.shelvingGroup_section4_6.add(self.createShelfToGroup(self.options.posShelf1_sect4_6, 1, '4_6', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_6").style.display = "flex";

                        document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "none";
                        document.getElementById("InternalShelving1_S4_6").style.display = "none";
                        document.getElementById('internalShelving_sect4_6').value = 0
                        self.options.shelvesCounterSection4_6 = 0;
                    }

                    if (self.options.shelvesCounterSection4_6 != 0) {

                        self.shelvingGroup_section4_6.position.y = self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y - 1
        
                        self.shelvingGroup_section4_6.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;
        
        
                        self.shelvingGroup_section4_6.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        self.shelvingGroup_section4_6.name = 'shelvingGroup_section4_6';
        
                        self.scene.add(self.shelvingGroup_section4_6);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_6; i++) {
                            self.shelvingGroup_section4_6.getObjectByName('internalShelf_4_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
        
                        }
        

                    } else {}     

                    self.options.s4_6_internlShelvinStatus = 1
                    self.options.s4_6_ShelvingStatus = 'Wood'


                } 
                else {
                    self.options.shelvesCounterSection4_6 = 0
                    self.scene.remove(self.shelvingGroup_section4_6);

                    document.getElementById("InternalShelving1_S4_6").style.display = "none";
                    document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "none";
                    document.getElementById("MainShoeShelving_S4_6").style.display = "flex";

                    document.getElementById("internalShelving_sect4_6").value = '0'

                    self.options.s4_6_internlShelvinStatus = 0
                    self.options.s4_6_ShelvingStatus = 'none'

                }

            
                self.options.heigh1Shelf4_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_6 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("subButtonMinus_Shelves4_6").addEventListener('click', requestChangeShelving4_6); 
            document.getElementById("subButtonPlus_Shelves4_6").addEventListener('click', requestChangeShelving4_6); 
            document.getElementById("internalShelving_sect4_6").addEventListener('change', requestChangeShelving4_6);  

            function requestChangeShelving4_6 () {

                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }

                createInternalShelving_sect4_6();
            };

            function createInternalShelving_sect4_6() {


                switch (parseInt(document.getElementById("internalShelving_sect4_6").value, 10)) {
                    case 0:

                        self.options.shelvesCounterSection4_6 = 0
                        self.scene.remove(self.shelvingGroup_section4_6);

                        document.getElementById("InternalShelving_S4_6").checked = false;

                        document.getElementById("InternalShelving1_S4_6").style.display = "none";
                        document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "none";
                        document.getElementById("MainShoeShelving_S4_6").style.display = "flex";

                        document.getElementById("internalShelving_sect4_6").value = '0'

                        document.getElementById("Drawer_S4_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_6").src="icons/Drawer_Close.jpg";

                    break;

                    case 1:
                        self.options.shelvesCounterSection4_6 = 1;


                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {

                            self.scene.remove(self.shelvingGroup_section4_6);
                            
                            self.shelvingGroup_section4_6 = new THREE.Group();
                            self.options.posShelf1_sect4_6 = 13;

                            self.shelvingGroup_section4_6.add(self.createShelfToGroup(self.options.posShelf1_sect4_6, 1, '4_6', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_6").style.display = "flex";

                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML = Math.floor( parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0])  ) - 12 +"cm";


                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "none";
                            document.getElementById("InternalShelving1_S4_6").style.display = "none";
                            document.getElementById('internalShelving_sect4_6').value = 0
                            self.options.shelvesCounterSection4_6 = 0;  
                        }
                    break;  
                    
                }
                

                if (self.options.shelvesCounterSection4_6 != 0) {

                    self.shelvingGroup_section4_6.position.y = self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y - 1

                    self.shelvingGroup_section4_6.position.z = -self.options.room.width / 2 + self.options.shelf.width - 3;

                    self.shelvingGroup_section4_6.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;

                    self.shelvingGroup_section4_6.name = 'shelvingGroup_section4_6';

                    self.scene.add(self.shelvingGroup_section4_6);


                    for (var i = 1; i <= self.options.shelvesCounterSection4_6; i++) {
                        self.shelvingGroup_section4_6.getObjectByName('internalShelf_4_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }

                } else {}

                self.options.heigh1Shelf4_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_6').textContent.match(/\d+(\.\d+)?/)[0]);
                self.options.heigh0Shelf4_6 = 10

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
            };

            document.getElementById("ShoeShelving_S4_6").addEventListener('click', function() {
                createShoeShelving_S4_6();
            });
            function createShoeShelving_S4_6() {
    
                var checkBox_InternalShelving_S4_6 = document.getElementById("ShoeShelving_S4_6");
    
                if ( document.getElementById("ShoeShelving_S4_6").checked == true || self.options.s4_6_internlShelvinStatus == 0 ) {
        
                    document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "flex";
                    document.getElementById("MainInternalShelving_S4_6").style.display = "none";
                    
                    document.getElementById("Drawer_S4_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_SectionS4_6").style.pointerEvents = "none";
                    document.getElementById("Drawer_S4_6").src="icons/Drawer_Disable.jpg";
    
                    self.options.shelvesCounterSection4_6 = 1;

                    document.getElementById("ShoeShelving_sect4_6").value = '1'

                    if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                        document.getElementById("ShoeShelving_sect4_6").value = '1'

                        self.scene.remove(self.shelvingGroup_section4_6);
                        
                        self.shelvingGroup_section4_6 = new THREE.Group();
                        self.options.posShelf1_sect4_6 = 14;

                        self.shelvingGroup_section4_6.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_6, 1, '4_6', self.options.section4Length));
                        self.shelvingGroup_section4_6.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_6, 1, '4_6', self.options.section4Length));

                        document.getElementById("InternalShelving1_S4_6").style.display = "flex";

                        //UPDATE CORRESPONDING INTERFACE TOO
                        document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                    } else {
                        showHintPanel("The maximum number of shelves within this height has been reached.");
                        document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_6").style.display = "flex";
                        document.getElementById("InternalShelving1_S4_6").style.display = "none";
                        document.getElementById('ShoeShelving_sect4_6').value = 0
                        self.options.shelvesCounterSection4_6 = 0;
                    }

                    if (self.options.shelvesCounterSection4_6 != 0) {
    
                        self.shelvingGroup_section4_6.position.y = self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y - 1
        
                        self.shelvingGroup_section4_6.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
        
                        //!!
                        self.shelvingGroup_section4_6.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;
        
                        self.shelvingGroup_section4_6.name = 'shelvingGroup_section4_6';
        
                        self.scene.add(self.shelvingGroup_section4_6);
        
                        for (var i = 1; i <= self.options.shelvesCounterSection4_6; i++) {
                            self.shelvingGroup_section4_6.getObjectByName('internalShelf_4_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                        for (var i = 1; i <= self.options.shelvesCounterSection4_6; i++) {
                            self.shelvingGroup_section4_6.getObjectByName('internalShelfShoe_4_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        }

                    } else {}
    
                    document.getElementById("InternalShelving1_S4_6").style.display = "flex";
                    

    
    
                    self.options.s4_6_internlShelvinStatus = 1
                    self.options.s4_6_ShelvingStatus = 'Shoe'

                } 
                else {
                    self.options.shelvesCounterSection4_6 = 0
                    self.scene.remove(self.shelvingGroup_section4_6);
    
                    document.getElementById("InternalShelving1_S4_6").style.display = "none";

                    
                    document.getElementById("ShoeShelving_sect4_6").value = '0'
                    document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "none";
                    document.getElementById("MainInternalShelving_S4_6").style.display = "flex";

                    document.getElementById("Drawer_S4_6").style.pointerEvents = "auto";
                    document.getElementById("Drawer_SectionS4_6").style.pointerEvents = "auto";
                    document.getElementById("Drawer_S4_6").src="icons/Drawer_Close.jpg";

                    self.options.s4_6_internlShelvinStatus = 0
                    self.options.s4_6_ShelvingStatus = 'none'
    
                }

                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                self.options.heigh1Shelf4_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) 
                self.options.heigh0Shelf4_6 = 5
    
            }
            document.getElementById("subButtonMinus_ShoeShelves4_6").addEventListener('click', requestChangeShoeShelving4_6); 
            document.getElementById("subButtonPlus_ShoeShelves4_6").addEventListener('click', requestChangeShoeShelving4_6); 
            document.getElementById("ShoeShelving_sect4_6").addEventListener('change', requestChangeShoeShelving4_6); 

            function requestChangeShoeShelving4_6 () {
    
                var max = parseInt(this.max);
                if (parseInt(this.value) >= max) {
                    showHintPanel("The maximum number of shelves within this height has been reached.");
                    this.value = max; 
                }
                var min = parseInt(this.min);
                if (parseInt(this.value) <= min) {
                    showHintPanel("The minimum number of shelves within this height has been reached.");
                    this.value = min; 
                }
    
                createShoeShelving_sect4_6();
            };
    
            function createShoeShelving_sect4_6() {
        
                self.options.s4_6_ShelvingStatus = 'Shoe'

                switch (parseInt(document.getElementById("ShoeShelving_sect4_6").value, 10)) {
                    case 0:
    
                        self.options.shelvesCounterSection4_6 = 0
                        self.options.s4_6_ShelvingStatus = 'none'
                        self.scene.remove(self.shelvingGroup_section4_6);
    
                        document.getElementById("ShoeShelving_S4_6").checked = false;
        
                        document.getElementById("InternalShelving1_S4_6").style.display = "none";

                        document.getElementById("ShoeShelving_sect4_6").value = '0'
                        document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "none";
                        document.getElementById("MainInternalShelving_S4_6").style.display = "flex";
    
                        
                        document.getElementById("Drawer_S4_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_SectionS4_6").style.pointerEvents = "auto";
                        document.getElementById("Drawer_S4_6").src="icons/Drawer_Close.jpg";
        
                    break;
    
                    case 1:
                        self.options.shelvesCounterSection4_6 = 1;

                        if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {

                            document.getElementById("ShoeShelving_sect4_6").value = '1'
                            self.scene.remove(self.shelvingGroup_section4_6);
                            
                            self.shelvingGroup_section4_6 = new THREE.Group();
                            self.options.posShelf1_sect4_6 = 14;

                            self.shelvingGroup_section4_6.add(self.createShelfShoeToGroup(self.options.posShelf1_sect4_6, 1, '4_6', self.options.section4Length));
                            self.shelvingGroup_section4_6.add(self.createShelfShoeToGroup2(self.options.posShelf1_sect4_6, 1, '4_6', self.options.section4Length));

                            document.getElementById("InternalShelving1_S4_6").style.display = "flex";


                            //UPDATE CORRESPONDING INTERFACE TOO
                            document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML = parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) - 15 +"cm";



                        } else {
                            showHintPanel("The maximum number of shelves within this height has been reached.");
                            document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "none";
                            document.getElementById("MainInternalShelving_S4_6").style.display = "flex";

                            document.getElementById("InternalShelving1_S4_6").style.display = "none";
                            document.getElementById('ShoeShelving_sect4_6').value = 0
                            self.options.shelvesCounterSection4_6 = 0;
                        }
    
                    break;
                  
                }

                self.options.heigh0Shelf4_6 = 5

        
                if (self.options.shelvesCounterSection4_6 != 0) {
    
                    self.shelvingGroup_section4_6.position.y = self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y - 1
    
                    self.shelvingGroup_section4_6.position.x = self.scene.getObjectByName( "pillar3", true ).position.x+0.5;
    
                    self.shelvingGroup_section4_6.position.z = -self.options.room.width / 2 + self.options.shelf.width /2;

                    self.shelvingGroup_section4_6.name = 'shelvingGroup_section4_6';
    
                    self.scene.add(self.shelvingGroup_section4_6);

                    for (var i = 1; i <= self.options.shelvesCounterSection4_6; i++) {
                        self.shelvingGroup_section4_6.getObjectByName('internalShelfShoe_4_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                    }

                    for (var i = 1; i <= self.options.shelvesCounterSection4_6; i++) {
                        self.scene.getObjectByName('internalShelf_4_6_'+'shelf'+i).material.map = self.textures[self.options.shelf.texture].map;
                        
                    }
    
                } else {}
    
               
                
                self.options.heigh1Shelf4_6 = parseFloat(document.getElementById('PositionField_InternalShelving1_S4_6').textContent.match(/\d+(\.\d+)?/)[0]);
    
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };

            //section4_6_shelf1 up&down
            document.getElementById("MoveInternalShelving1_S4_6_UP").addEventListener('click', async function( ) {
                
                console.log(parseFloat(document.getElementById('PositionField_InternalShelving1_S4_6').textContent.match(/\d+(\.\d+)?/)[0]));
                console.log(self.options.s4_6_ShelvingStatus);

                if (parseFloat(document.getElementById('PositionField_InternalShelving1_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 && self.options.s4_6_ShelvingStatus === 'Wood' || parseFloat(document.getElementById('PositionField_InternalShelving1_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 6 && self.options.s4_6_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_4_6_'+'shelf'+1).position.y += 1.05
                    if (self.options.s4_6_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_4_6_'+'shelf'+1).position.y += 1.05
                    }

                    self.options.heigh1Shelf4_6-= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML = Math.floor( self.options.heigh1Shelf4_6 ) +"cm";

                    
                    self.options.heigh0Shelf4_6+= 1
                    


                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                if (self.options.statusShowDimensions == 1) {
                    await self.createDimensions();
                }
    
            });
            document.getElementById("MoveInternalShelving1_S4_6_DOWN").addEventListener('click', async function() {
                        
            

                if (self.options.heigh0Shelf4_6 > 10 && self.options.s4_6_ShelvingStatus === 'Wood' || self.options.heigh0Shelf4_6 > 13 && self.options.s4_6_ShelvingStatus === 'Shoe' ) {

                    self.scene.getObjectByName('internalShelf_4_6_'+'shelf'+1).position.y -= 1.05
                    if (self.options.s4_6_ShelvingStatus === 'Shoe') {
                        self.scene.getObjectByName('internalShelfShoe_4_6_'+'shelf'+1).position.y -= 1.05
                    }

                    self.options.heigh1Shelf4_6 += 1
                    self.options.heigh0Shelf4_6 -= 1

                    //UPDATE CORRESPONDING INTERFACE TOO
                    document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML = Math.floor( self.options.heigh1Shelf4_6 ) +"cm";

                } else { showHintPanel("A minimum height is required between shelves and/or partitions."); }

                
                    
                if (self.options.statusShowDimensions == 1) {
                    await  self.createDimensions();
                }
                    
            });
            
               
  
    
    
    
    
    
    
             
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            //events about moving  horizontal dividers, up down
            //1_1 MOVE UP
            function moveUphorizontalDividerSection1_1() {
                if ( self.options.shelvesCounterSection1_1 != 0 || self.options.shelvesCounterSection1_2 != 0 || self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined  ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_1Group'))
                            self.options.s1_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_1Group'))
                            self.options.s1_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
                            self.options.s1_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
                            self.options.s1_2_doorStatus = 1;
                        }
    
            
                        if ( self.options.shelvesCounterSection1_1 != 0 ) {
                            
                            self.options.shelvesCounterSection1_1 = 0
                            self.scene.remove(self.shelvingGroup_section1_1);
                            
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_1").value = '0';
                            document.getElementById("ShoeShelving_sect1_1").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_1").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_1").style.display = "none";
                            document.getElementById("InternalShelving_S1").checked = false;
                            document.getElementById("ShoeShelving_S1").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_2 != 0 ) {
                        
                            self.options.shelvesCounterSection1_2 = 0
                            self.scene.remove(self.shelvingGroup_section1_2);

                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_2").value = '0';
                            document.getElementById("ShoeShelving_sect1_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                            document.getElementById("InternalShelving_S1_2").checked = false;
                            document.getElementById("ShoeShelving_S1_2").checked = false;

                        } else {}
    
    
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_1_2 -= 1.05;
                            self.options.sectionHeight_1_1 += 1.05;
            
            
                            self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y += 1.05
                            
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
            
                            self.createWireframeBack_section1_2();
                            self.createRayCastRecieverSection1_2(); 

                            document.getElementById("Height_HorizontalPartition_S1_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            
            
            
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                        
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
        
                        self.options.sectionHeight_1_2 -= 1.05;
                        self.options.sectionHeight_1_1 += 1.05;
        
        
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y += 1.05
                        
                        self.createWireframeBack_section1_1();
                        self.createRayCastRecieverSection1_1();
        
                        self.createWireframeBack_section1_2();
                        self.createRayCastRecieverSection1_2(); 

                        document.getElementById("Height_HorizontalPartition_S1_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";   
        
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
    
                self.updateDoorButtons();
                self.calculateOutput();
    
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartition1_1_UpButton").addEventListener('click', moveUphorizontalDividerSection1_1); 
            document.getElementById("moveHorizontalPartition1_1__2_UpButton").addEventListener('click', moveUphorizontalDividerSection1_1); 
        
            //1_1 MOVE DOWN 
            function moveDownhorizontalDividerSection1_1() {
                if ( self.options.shelvesCounterSection1_1 != 0 || self.options.shelvesCounterSection1_2 != 0 || self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_1Group'))
                            self.options.s1_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_1Group'))
                            self.options.s1_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
                            self.options.s1_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
                            self.options.s1_2_doorStatus = 1;
                        }
                       
    
                        if ( self.options.shelvesCounterSection1_1 != 0 ) {

                            self.options.shelvesCounterSection1_1 = 0
                            self.scene.remove(self.shelvingGroup_section1_1);

                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_1").value = '0';
                            document.getElementById("ShoeShelving_sect1_1").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_1").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_1").style.display = "none";
                            document.getElementById("InternalShelving_S1").checked = false;
                            document.getElementById("ShoeShelving_S1").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_2 != 0 ) {
                            self.options.shelvesCounterSection1_2 = 0
                            self.scene.remove(self.shelvingGroup_section1_2);
                        
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_2").value = '0';
                            document.getElementById("ShoeShelving_sect1_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                            document.getElementById("InternalShelving_S1_2").checked = false;
                            document.getElementById("ShoeShelving_S1_2").checked = false;
                        
                        } else { }
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_1_2 += 1.05;
                            self.options.sectionHeight_1_1 -= 1.05;

                            self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();

                            self.createWireframeBack_section1_2();
                            self.createRayCastRecieverSection1_2(); 

                            document.getElementById("Height_HorizontalPartition_S1_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};

    
                    }else {
                        
                        return;
                    }
                } else{
    
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                        self.options.sectionHeight_1_2 += 1.05;
                        self.options.sectionHeight_1_1 -= 1.05;

                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section1_1();
                        self.createRayCastRecieverSection1_1();

                        self.createWireframeBack_section1_2();
                        self.createRayCastRecieverSection1_2(); 

                        document.getElementById("Height_HorizontalPartition_S1_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
    
    
    
                self.updateDoorButtons();
                self.calculateOutput();
    
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                
            };
            document.getElementById("moveHorizontalPartition1_1_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_1); 
            document.getElementById("moveHorizontalPartition1_1__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_1); 
    
            //1_2 MOVE UP
            function moveUphorizontalDividerSection1_2() {
                if ( self.options.shelvesCounterSection1_3 != 0 || self.options.shelvesCounterSection1_2 != 0 || self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                            self.options.s1_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
                            self.options.s1_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
                            self.options.s1_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
                            self.options.s1_2_doorStatus = 1;
                        }
               
    
                        if ( self.options.shelvesCounterSection1_3 != 0 ) {
                            
                            self.options.shelvesCounterSection1_3 = 0
                            self.scene.remove(self.shelvingGroup_section1_3);
                            
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_3").value = '0';
                            document.getElementById("ShoeShelving_sect1_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                            document.getElementById("InternalShelving_S1_3").checked = false;
                            document.getElementById("ShoeShelving_S1_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_2 != 0 ) {
                        
                            self.options.shelvesCounterSection1_2 = 0
                            self.scene.remove(self.shelvingGroup_section1_2);

                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_2").value = '0';
                            document.getElementById("ShoeShelving_sect1_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                            document.getElementById("InternalShelving_S1_2").checked = false;
                            document.getElementById("ShoeShelving_S1_2").checked = false;

                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_1_3 -= 1.05;
                            self.options.sectionHeight_1_2 += 1.05;
            
                            self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y += 1.05
                            
                            self.createWireframeBack_section1_3();
                            self.createRayCastRecieverSection1_3();
            
                            self.createWireframeBack_section1_2();
                            self.createRayCastRecieverSection1_2(); 

                            document.getElementById("Height_HorizontalPartition_S1_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
            
            
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                        self.options.sectionHeight_1_3 -= 1.05;
                        self.options.sectionHeight_1_2 += 1.05;
        
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y += 1.05
                        
                        self.createWireframeBack_section1_3();
                        self.createRayCastRecieverSection1_3();
        
                        self.createWireframeBack_section1_2();
                        self.createRayCastRecieverSection1_2(); 

                        document.getElementById("Height_HorizontalPartition_S1_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
        
        
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartition1_2_UpButton").addEventListener('click', moveUphorizontalDividerSection1_2); 
            document.getElementById("moveHorizontalPartition1_2__2_UpButton").addEventListener('click', moveUphorizontalDividerSection1_2); 

            //1_2 MOVE DOWN
            function moveDownhorizontalDividerSection1_2() {
                if ( self.options.shelvesCounterSection1_3 != 0 || self.options.shelvesCounterSection1_2 != 0 || self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined  ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                            self.options.s1_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
                            self.options.s1_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
                            self.options.s1_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
                            self.options.s1_2_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection1_3 != 0 ) {
                            
                            self.options.shelvesCounterSection1_3 = 0
                            self.scene.remove(self.shelvingGroup_section1_3);
                            
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_3").value = '0';
                            document.getElementById("ShoeShelving_sect1_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                            document.getElementById("InternalShelving_S1_3").checked = false;
                            document.getElementById("ShoeShelving_S1_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_2 != 0 ) {
                        
                            self.options.shelvesCounterSection1_2 = 0
                            self.scene.remove(self.shelvingGroup_section1_2);

                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_2").value = '0';
                            document.getElementById("ShoeShelving_sect1_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                            document.getElementById("InternalShelving_S1_2").checked = false;
                            document.getElementById("ShoeShelving_S1_2").checked = false;

                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_1_3 += 1.05;
                            self.options.sectionHeight_1_2 -= 1.05;

                            self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section1_3();
                            self.createRayCastRecieverSection1_3();

                            self.createWireframeBack_section1_2();
                            self.createRayCastRecieverSection1_2(); 

                            document.getElementById("Height_HorizontalPartition_S1_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                            document.getElementById("Height_HorizontalPartition_S1_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_1_3 += 1.05;
                        self.options.sectionHeight_1_2 -= 1.05;

                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section1_3();
                        self.createRayCastRecieverSection1_3();

                        self.createWireframeBack_section1_2();
                        self.createRayCastRecieverSection1_2(); 

                        document.getElementById("Height_HorizontalPartition_S1_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                        document.getElementById("Height_HorizontalPartition_S1_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartition1_2_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_2); 
            document.getElementById("moveHorizontalPartition1_2__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_2); 


            //1_3 MOVE UP
            function moveUphorizontalDividerSection1_3() {
                if ( self.options.shelvesCounterSection1_3 != 0 || self.options.shelvesCounterSection1_4 != 0 || self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
                        
                        if (self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                            self.options.s1_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
                            self.options.s1_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                            self.options.s1_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
                            self.options.s1_4_doorStatus = 1;
                        }

                        if ( self.options.shelvesCounterSection1_3 != 0 ) {
                            
                            self.options.shelvesCounterSection1_3 = 0
                            self.scene.remove(self.shelvingGroup_section1_3);
                            
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_3").value = '0';
                            document.getElementById("ShoeShelving_sect1_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                            document.getElementById("InternalShelving_S1_3").checked = false;
                            document.getElementById("ShoeShelving_S1_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_4 != 0 ) {
                        
                            self.options.shelvesCounterSection1_4 = 0
                            self.scene.remove(self.shelvingGroup_section1_4);

                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_4").value = '0';
                            document.getElementById("ShoeShelving_sect1_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                            document.getElementById("InternalShelving_S1_4").checked = false;
                            document.getElementById("ShoeShelving_S1_4").checked = false;

                        } else {}
               
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_1_4 -= 1.05;
                            self.options.sectionHeight_1_3 += 1.05;
    
    
                            self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y += 1.05
                            
                            self.createWireframeBack_section1_4();
                            self.createRayCastRecieverSection1_4();
    
                            self.createWireframeBack_section1_3();
                            self.createRayCastRecieverSection1_3(); 
    
                            document.getElementById("Height_HorizontalPartition_S1_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                            document.getElementById("Height_HorizontalPartition_S1_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            
    
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_1_4 -= 1.05;
                        self.options.sectionHeight_1_3 += 1.05;
    
    
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y += 1.05
                        
                        self.createWireframeBack_section1_4();
                        self.createRayCastRecieverSection1_4();
    
                        self.createWireframeBack_section1_3();
                        self.createRayCastRecieverSection1_3(); 
    
                        document.getElementById("Height_HorizontalPartition_S1_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                        document.getElementById("Height_HorizontalPartition_S1_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        
    
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS1_3_UpButton").addEventListener('click', moveUphorizontalDividerSection1_3); 
            document.getElementById("moveHorizontalPartitionS1_3__2_UpButton").addEventListener('click', moveUphorizontalDividerSection1_3); 
    
            //1_3 MOVE DOWN
            function moveDownhorizontalDividerSection1_3() {
                if ( self.options.shelvesCounterSection1_3 != 0 || self.options.shelvesCounterSection1_4 != 0 || self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined  ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                            self.options.s1_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
                            self.options.s1_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                            self.options.s1_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
                            self.options.s1_4_doorStatus = 1;
                        }

                        if ( self.options.shelvesCounterSection1_3 != 0 ) {
                            
                            self.options.shelvesCounterSection1_3 = 0
                            self.scene.remove(self.shelvingGroup_section1_3);
                            
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_3").value = '0';
                            document.getElementById("ShoeShelving_sect1_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                            document.getElementById("InternalShelving_S1_3").checked = false;
                            document.getElementById("ShoeShelving_S1_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_4 != 0 ) {
                        
                            self.options.shelvesCounterSection1_4 = 0
                            self.scene.remove(self.shelvingGroup_section1_4);

                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_4").value = '0';
                            document.getElementById("ShoeShelving_sect1_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                            document.getElementById("InternalShelving_S1_4").checked = false;
                            document.getElementById("ShoeShelving_S1_4").checked = false;

                        } else {}
               
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_1_4 += 1.05;
                            self.options.sectionHeight_1_3 -= 1.05;
    
                            self.options.sectionHeight_1_4_positionY -= 1.05
    
                            self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section1_3();
                            self.createRayCastRecieverSection1_3();
    
                            self.createWireframeBack_section1_4();
                            self.createRayCastRecieverSection1_4(); 
    
                            document.getElementById("Height_HorizontalPartition_S1_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                            document.getElementById("Height_HorizontalPartition_S1_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            
    
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_1_4 += 1.05;
                        self.options.sectionHeight_1_3 -= 1.05;
    
                        self.options.sectionHeight_1_4_positionY -= 1.05
    
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section1_3();
                        self.createRayCastRecieverSection1_3();
    
                        self.createWireframeBack_section1_4();
                        self.createRayCastRecieverSection1_4();
                        
                        document.getElementById("Height_HorizontalPartition_S1_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                        document.getElementById("Height_HorizontalPartition_S1_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        
    
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS1_3_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_3); 
            document.getElementById("moveHorizontalPartitionS1_3__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_3); 
    
            //1_4 MOVE UP
            function moveUphorizontalDividerSection1_4() {
                if ( self.options.shelvesCounterSection1_4 != 0 || self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                            self.options.s1_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
                            self.options.s1_5_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                            self.options.s1_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
                            self.options.s1_4_doorStatus = 1;
                        }

                        if ( self.options.shelvesCounterSection1_5 != 0 ) {
                            
                            self.options.shelvesCounterSection1_5 = 0
                            self.scene.remove(self.shelvingGroup_section1_5);
                            
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_5`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_5").value = '0';
                            document.getElementById("ShoeShelving_sect1_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                            document.getElementById("InternalShelving_S1_5").checked = false;
                            document.getElementById("ShoeShelving_S1_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_4 != 0 ) {
                        
                            self.options.shelvesCounterSection1_4 = 0
                            self.scene.remove(self.shelvingGroup_section1_4);

                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_4").value = '0';
                            document.getElementById("ShoeShelving_sect1_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                            document.getElementById("InternalShelving_S1_4").checked = false;
                            document.getElementById("ShoeShelving_S1_4").checked = false;

                        } else {}
            

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_1_5 -= 1.05;
                            self.options.sectionHeight_1_4 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y += 1.05
                            
                            self.createWireframeBack_section1_4();
                            self.createRayCastRecieverSection1_4();

                            self.createWireframeBack_section1_5();
                            self.createRayCastRecieverSection1_5(); 

                            document.getElementById("Height_HorizontalPartition_S1_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_1_5 -= 1.05;
                        self.options.sectionHeight_1_4 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y += 1.05
                        
                        self.createWireframeBack_section1_4();
                        self.createRayCastRecieverSection1_4();

                        self.createWireframeBack_section1_5();
                        self.createRayCastRecieverSection1_5(); 

                        document.getElementById("Height_HorizontalPartition_S1_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS1_4_UpButton").addEventListener('click', moveUphorizontalDividerSection1_4); 
            document.getElementById("moveHorizontalPartitionS1_4__2_UpButton").addEventListener('click', moveUphorizontalDividerSection1_4); 

            //1_4 MOVE DOWN
            function moveDownhorizontalDividerSection1_4() {
                if ( self.options.shelvesCounterSection1_4 != 0 || self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                            self.options.s1_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
                            self.options.s1_5_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                            self.options.s1_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
                            self.options.s1_4_doorStatus = 1;
                        }

                        if ( self.options.shelvesCounterSection1_5 != 0 ) {
                            
                            self.options.shelvesCounterSection1_5 = 0
                            self.scene.remove(self.shelvingGroup_section1_5);
                            
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_5`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_5").value = '0';
                            document.getElementById("ShoeShelving_sect1_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                            document.getElementById("InternalShelving_S1_5").checked = false;
                            document.getElementById("ShoeShelving_S1_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_4 != 0 ) {
                        
                            self.options.shelvesCounterSection1_4 = 0
                            self.scene.remove(self.shelvingGroup_section1_4);

                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_4").value = '0';
                            document.getElementById("ShoeShelving_sect1_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                            document.getElementById("InternalShelving_S1_4").checked = false;
                            document.getElementById("ShoeShelving_S1_4").checked = false;

                        } else {}
            
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_1_5 += 1.05;
                            self.options.sectionHeight_1_4 -= 1.05;

                            self.options.sectionHeight_1_5_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section1_5();
                            self.createRayCastRecieverSection1_5();

                            self.createWireframeBack_section1_4();
                            self.createRayCastRecieverSection1_4(); 

                            document.getElementById("Height_HorizontalPartition_S1_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_1_5 += 1.05;
                        self.options.sectionHeight_1_4 -= 1.05;

                        self.options.sectionHeight_1_5_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section1_5();
                        self.createRayCastRecieverSection1_5();

                        self.createWireframeBack_section1_4();
                        self.createRayCastRecieverSection1_4();
                        
                        document.getElementById("Height_HorizontalPartition_S1_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS1_4_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_4); 
            document.getElementById("moveHorizontalPartitionS1_4__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_4); 
            
            
            //1_5 MOVE UP
            function moveUphorizontalDividerSection1_5() {
                if ( self.options.shelvesCounterSection1_5 != 0 || self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_6Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection1_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                            self.options.s1_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
                            self.options.s1_6_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                            self.options.s1_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
                            self.options.s1_5_doorStatus = 1;
                        }

                        if ( self.options.shelvesCounterSection1_5 != 0 ) {
                            
                            self.options.shelvesCounterSection1_5 = 0
                            self.scene.remove(self.shelvingGroup_section1_5);
                            
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_5`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_5").value = '0';
                            document.getElementById("ShoeShelving_sect1_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                            document.getElementById("InternalShelving_S1_5").checked = false;
                            document.getElementById("ShoeShelving_S1_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_6 != 0 ) {
                        
                            self.options.shelvesCounterSection1_6 = 0
                            self.scene.remove(self.shelvingGroup_section1_6);

                            document.getElementById("InternalShelving1_S1_6").style.display = "none";
                            document.getElementById("internalShelving_sect1_6").value = '0';
                            document.getElementById("ShoeShelving_sect1_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                            document.getElementById("InternalShelving_S1_6").checked = false;
                            document.getElementById("ShoeShelving_S1_6").checked = false;

                        } else {}
            

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_1_6 -= 1.05;
                            self.options.sectionHeight_1_5 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y += 1.05
                            
                            self.createWireframeBack_section1_5();
                            self.createRayCastRecieverSection1_5();

                            self.createWireframeBack_section1_6();
                            self.createRayCastRecieverSection1_6(); 

                            document.getElementById("Height_HorizontalPartition_S1_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_1_6 -= 1.05;
                        self.options.sectionHeight_1_5 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y += 1.05
                        
                        self.createWireframeBack_section1_5();
                        self.createRayCastRecieverSection1_5();

                        self.createWireframeBack_section1_6();
                        self.createRayCastRecieverSection1_6(); 

                        document.getElementById("Height_HorizontalPartition_S1_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS1_5_UpButton").addEventListener('click', moveUphorizontalDividerSection1_5); 
            document.getElementById("moveHorizontalPartitionS1_5__2_UpButton").addEventListener('click', moveUphorizontalDividerSection1_5); 

            //1_5 MOVE DOWN
            function moveDownhorizontalDividerSection1_5() {
                if ( self.options.shelvesCounterSection1_5 != 0 || self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_6Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection1_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                            self.options.s1_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
                            self.options.s1_6_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                            self.options.s1_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
                            self.options.s1_5_doorStatus = 1;
                        }

                        if ( self.options.shelvesCounterSection1_5 != 0 ) {
                            
                            self.options.shelvesCounterSection1_5 = 0
                            self.scene.remove(self.shelvingGroup_section1_5);
                            
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S1_5`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect1_5").value = '0';
                            document.getElementById("ShoeShelving_sect1_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                            document.getElementById("InternalShelving_S1_5").checked = false;
                            document.getElementById("ShoeShelving_S1_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection1_6 != 0 ) {
                        
                            self.options.shelvesCounterSection1_6 = 0
                            self.scene.remove(self.shelvingGroup_section1_6);

                            document.getElementById("InternalShelving1_S1_6").style.display = "none";
                            document.getElementById("internalShelving_sect1_6").value = '0';
                            document.getElementById("ShoeShelving_sect1_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                            document.getElementById("InternalShelving_S1_6").checked = false;
                            document.getElementById("ShoeShelving_S1_6").checked = false;

                        } else {}
            
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_1_6 += 1.05;
                            self.options.sectionHeight_1_5 -= 1.05;

                            self.options.sectionHeight_1_6_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section1_6();
                            self.createRayCastRecieverSection1_6();

                            self.createWireframeBack_section1_5();
                            self.createRayCastRecieverSection1_5(); 

                            document.getElementById("Height_HorizontalPartition_S1_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_1_6 += 1.05;
                        self.options.sectionHeight_1_5 -= 1.05;

                        self.options.sectionHeight_1_6_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section1_6();
                        self.createRayCastRecieverSection1_6();

                        self.createWireframeBack_section1_5();
                        self.createRayCastRecieverSection1_5();
                        
                        document.getElementById("Height_HorizontalPartition_S1_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS1_5_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_5); 
            document.getElementById("moveHorizontalPartitionS1_5__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_5);
            
            
            //1_6 MOVE UP
            function moveUphorizontalDividerSection1_6() {
                if ( self.options.shelvesCounterSection1_6 != 0 || self.scene.getObjectByName( "doorSection1_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_7Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_7Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection1_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_7Group'))
                            self.options.s1_7_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_7Group'))
                            self.options.s1_7_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                            self.options.s1_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
                            self.options.s1_6_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection1_6 != 0 ) {
                        
                            self.options.shelvesCounterSection1_6 = 0
                            self.scene.remove(self.shelvingGroup_section1_6);

                            document.getElementById("InternalShelving1_S1_6").style.display = "none";
                            document.getElementById("internalShelving_sect1_6").value = '0';
                            document.getElementById("ShoeShelving_sect1_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                            document.getElementById("InternalShelving_S1_6").checked = false;
                            document.getElementById("ShoeShelving_S1_6").checked = false;

                        } else {}
            

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_1_7 -= 1.05;
                            self.options.sectionHeight_1_6 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y += 1.05
                            
                            self.createWireframeBack_section1_6();
                            self.createRayCastRecieverSection1_6();

                            self.createWireframeBack_section1_7();
                            self.createRayCastRecieverSection1_7(); 

                            document.getElementById("Height_HorizontalPartition_S1_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_1_7 -= 1.05;
                        self.options.sectionHeight_1_6 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y += 1.05
                        
                        self.createWireframeBack_section1_6();
                        self.createRayCastRecieverSection1_6();

                        self.createWireframeBack_section1_7();
                        self.createRayCastRecieverSection1_7(); 

                        document.getElementById("Height_HorizontalPartition_S1_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS1_6_UpButton").addEventListener('click', moveUphorizontalDividerSection1_6); 
            document.getElementById("moveHorizontalPartitionS1_6__2_UpButton").addEventListener('click', moveUphorizontalDividerSection1_6); 

            //1_6 MOVE DOWN
            function moveDownhorizontalDividerSection1_6() {
                if ( self.options.shelvesCounterSection1_6 != 0 || self.scene.getObjectByName( "doorSection1_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_7Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_7Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection1_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_7Group'))
                            self.options.s1_7_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_7Group'))
                            self.options.s1_7_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection1_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                            self.options.s1_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
                            self.options.s1_6_doorStatus = 1;
                        }

    
                        if ( self.options.shelvesCounterSection1_6 != 0 ) {
                        
                            self.options.shelvesCounterSection1_6 = 0
                            self.scene.remove(self.shelvingGroup_section1_6);

                            document.getElementById("InternalShelving1_S1_6").style.display = "none";
                            document.getElementById("internalShelving_sect1_6").value = '0';
                            document.getElementById("ShoeShelving_sect1_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                            document.getElementById("InternalShelving_S1_6").checked = false;
                            document.getElementById("ShoeShelving_S1_6").checked = false;

                        } else {}
            
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_1_7 += 1.05;
                            self.options.sectionHeight_1_6 -= 1.05;

                            self.options.sectionHeight_1_7_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section1_7();
                            self.createRayCastRecieverSection1_7();

                            self.createWireframeBack_section1_6();
                            self.createRayCastRecieverSection1_6(); 

                            document.getElementById("Height_HorizontalPartition_S1_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S1_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_1_7 += 1.05;
                        self.options.sectionHeight_1_6 -= 1.05;

                        self.options.sectionHeight_1_7_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section1_7();
                        self.createRayCastRecieverSection1_7();

                        self.createWireframeBack_section1_6();
                        self.createRayCastRecieverSection1_6();
                        
                        document.getElementById("Height_HorizontalPartition_S1_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S1_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS1_6_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_6); 
            document.getElementById("moveHorizontalPartitionS1_6__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection1_6);



            

            //2 SECTION MOVING BUTTONS 
            //2_1 MOVE UP
            function moveUphorizontalDividerSection2_1() {
                if ( self.options.shelvesCounterSection2_1 != 0 || self.options.shelvesCounterSection2_2 != 0 || self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_1Group'))
                            self.options.s2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_1Group'))
                            self.options.s2_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                            self.options.s2_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
                            self.options.s2_2_doorStatus = 1;
                        }

                        if ( self.options.shelvesCounterSection2_1 != 0 ) {
                            
                            self.options.shelvesCounterSection2_1 = 0
                            self.scene.remove(self.shelvingGroup_section2_1);      
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_1").value = '0';
                            document.getElementById("ShoeShelving_sect2_1").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_1").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_1").style.display = "none";
                            document.getElementById("InternalShelving_S2_1").checked = false;
                            document.getElementById("ShoeShelving_S2_1").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_2 != 0 ) {
                            
                            self.options.shelvesCounterSection2_2 = 0
                            self.scene.remove(self.shelvingGroup_section2_2); 
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_2").value = '0';
                            document.getElementById("ShoeShelving_sect2_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                            document.getElementById("InternalShelving_S2_2").checked = false;
                            document.getElementById("ShoeShelving_S2_2").checked = false;
                            
                        } else {}
    
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_2_2 -= 1.05;
                            self.options.sectionHeight_2_1 += 1.05;
            
            
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y += 1.05
                            
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
            
                            self.createWireframeBack_section2_2();
                            self.createRayCastRecieverSection2_2(); 

                            document.getElementById("Height_HorizontalPartition_2_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            
            
            
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
        
                        self.options.sectionHeight_2_2 -= 1.05;
                        self.options.sectionHeight_2_1 += 1.05;
        
        
                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y += 1.05
                        
                        self.createWireframeBack_section2_1();
                        self.createRayCastRecieverSection2_1();
        
                        self.createWireframeBack_section2_2();
                        self.createRayCastRecieverSection2_2(); 

                        document.getElementById("Height_HorizontalPartition_S2_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm"; 
        
        
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                    
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartition2_1_UpButton").addEventListener('click', moveUphorizontalDividerSection2_1); 
            document.getElementById("moveHorizontalPartition2_1__2_UpButton").addEventListener('click', moveUphorizontalDividerSection2_1); 
    
            //2_1 MOVE DOWN
            function moveDownhorizontalDividerSection2_1() {
                if ( self.options.shelvesCounterSection2_1 != 0 || self.options.shelvesCounterSection2_2 != 0 || self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined  ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_1Group'))
                            self.options.s2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_1Group'))
                            self.options.s2_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                            self.options.s2_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
                            self.options.s2_2_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection2_1 != 0 ) {
                            
                            self.options.shelvesCounterSection2_1 = 0
                            self.scene.remove(self.shelvingGroup_section2_1);
                            
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_1").value = '0';
                            document.getElementById("ShoeShelving_sect2_1").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_1").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_1").style.display = "none";
                            document.getElementById("InternalShelving_S2_1").checked = false;
                            document.getElementById("ShoeShelving_S2_1").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_2 != 0 ) {
                            
                            self.options.shelvesCounterSection2_2 = 0
                            self.scene.remove(self.shelvingGroup_section2_2);
                            
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_2").value = '0';
                            document.getElementById("ShoeShelving_sect2_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                            document.getElementById("InternalShelving_S2_2").checked = false;
                            document.getElementById("ShoeShelving_S2_2").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_2_2 += 1.05;
                            self.options.sectionHeight_2_1 -= 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();

                            self.createWireframeBack_section2_2();
                            self.createRayCastRecieverSection2_2(); 

                            document.getElementById("Height_HorizontalPartition_S2_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_2_2 += 1.05;
                        self.options.sectionHeight_2_1 -= 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section2_1();
                        self.createRayCastRecieverSection2_1();

                        self.createWireframeBack_section2_2();
                        self.createRayCastRecieverSection2_2(); 

                        document.getElementById("Height_HorizontalPartition_S2_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                    
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                
            };
            document.getElementById("moveHorizontalPartition2_1_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_1); 
            document.getElementById("moveHorizontalPartition2_1__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_1); 
    
            //2_2 MOVE UP
            function moveUphorizontalDividerSection2_2() {
                if ( self.options.shelvesCounterSection2_3 != 0 || self.options.shelvesCounterSection2_2 != 0 || self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                            self.options.s2_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
                            self.options.s2_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                            self.options.s2_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
                            self.options.s2_2_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection2_3 != 0 ) {
                            
                            self.options.shelvesCounterSection2_3 = 0
                            self.scene.remove(self.shelvingGroup_section2_3);      
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_3").value = '0';
                            document.getElementById("ShoeShelving_sect2_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                            document.getElementById("InternalShelving_S2_3").checked = false;
                            document.getElementById("ShoeShelving_S2_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_2 != 0 ) {
                            
                            self.options.shelvesCounterSection2_2 = 0
                            self.scene.remove(self.shelvingGroup_section2_2);        
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_2").value = '0';
                            document.getElementById("ShoeShelving_sect2_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                            document.getElementById("InternalShelving_S2_2").checked = false;
                            document.getElementById("ShoeShelving_S2_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_2_3 -= 1.05;
                            self.options.sectionHeight_2_2 += 1.05;
            
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y += 1.05
                            
                            self.createWireframeBack_section2_3();
                            self.createRayCastRecieverSection2_3();
            
                            self.createWireframeBack_section2_2();
                            self.createRayCastRecieverSection2_2(); 

                            document.getElementById("Height_HorizontalPartition_S2_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
            
            
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
        
                        self.options.sectionHeight_2_3 -= 1.05;
                        self.options.sectionHeight_2_2 += 1.05;
        
                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y += 1.05
                        
                        self.createWireframeBack_section2_3();
                        self.createRayCastRecieverSection2_3();
        
                        self.createWireframeBack_section2_2();
                        self.createRayCastRecieverSection2_2(); 

                        document.getElementById("Height_HorizontalPartition_S2_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
        
        
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS2_2_UpButton").addEventListener('click', moveUphorizontalDividerSection2_2); 
            document.getElementById("moveHorizontalPartitionS2_2__2_UpButton").addEventListener('click', moveUphorizontalDividerSection2_2); 
            

            //2_2 MOVE DOWN
            function moveDownhorizontalDividerSection2_2() {
                if ( self.options.shelvesCounterSection2_3 != 0 || self.options.shelvesCounterSection2_2 != 0 || self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                            self.options.s2_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
                            self.options.s2_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                            self.options.s2_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
                            self.options.s2_2_doorStatus = 1;
                        }
               
                        if ( self.options.shelvesCounterSection2_3 != 0 ) {
                            
                            self.options.shelvesCounterSection2_3 = 0
                            self.scene.remove(self.shelvingGroup_section2_3);
                            
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_3").value = '0';
                            document.getElementById("ShoeShelving_sect2_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                            document.getElementById("InternalShelving_S2_3").checked = false;
                            document.getElementById("ShoeShelving_S2_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_2 != 0 ) {
                            
                            self.options.shelvesCounterSection2_2 = 0
                            self.scene.remove(self.shelvingGroup_section2_2);
                            
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_2").value = '0';
                            document.getElementById("ShoeShelving_sect2_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                            document.getElementById("InternalShelving_S2_2").checked = false;
                            document.getElementById("ShoeShelving_S2_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                                
                            self.options.sectionHeight_2_3 += 1.05;
                            self.options.sectionHeight_2_2 -= 1.05;

                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section2_3();
                            self.createRayCastRecieverSection2_3();

                            self.createWireframeBack_section2_2();
                            self.createRayCastRecieverSection2_2(); 

                            document.getElementById("Height_HorizontalPartition_S2_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");}; 

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_2_3 += 1.05;
                        self.options.sectionHeight_2_2 -= 1.05;

                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section2_3();
                        self.createRayCastRecieverSection2_3();

                        self.createWireframeBack_section2_2();
                        self.createRayCastRecieverSection2_2(); 

                        document.getElementById("Height_HorizontalPartition_S2_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS2_2_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_2); 
            document.getElementById("moveHorizontalPartitionS2_2__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_2); 
    
            //2_3 MOVE UP
            function moveUphorizontalDividerSection2_3() {
                if ( self.options.shelvesCounterSection2_3 != 0 || self.options.shelvesCounterSection2_4 != 0 || self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                            self.options.s2_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
                            self.options.s2_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                            self.options.s2_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
                            self.options.s2_4_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection2_3 != 0 ) {
                            
                            self.options.shelvesCounterSection2_3 = 0
                            self.scene.remove(self.shelvingGroup_section2_3);
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_3").value = '0';
                            document.getElementById("ShoeShelving_sect2_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                            document.getElementById("InternalShelving_S2_3").checked = false;
                            document.getElementById("ShoeShelving_S2_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_4 != 0 ) {
                            
                            self.options.shelvesCounterSection2_4 = 0
                            self.scene.remove(self.shelvingGroup_section2_4);          
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_4").value = '0';
                            document.getElementById("ShoeShelving_sect2_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                            document.getElementById("InternalShelving_S2_4").checked = false;
                            document.getElementById("ShoeShelving_S2_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_2_4 -= 1.05;
                            self.options.sectionHeight_2_3 += 1.05;
    
    
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y += 1.05
                            
                            self.createWireframeBack_section2_4();
                            self.createRayCastRecieverSection2_4();
    
                            self.createWireframeBack_section2_3();
                            self.createRayCastRecieverSection2_3(); 
    
                            document.getElementById("Height_HorizontalPartition_S2_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                            document.getElementById("Height_HorizontalPartition_S2_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_2_4 -= 1.05;
                        self.options.sectionHeight_2_3 += 1.05;
    
    
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y += 1.05
                        
                        self.createWireframeBack_section2_4();
                        self.createRayCastRecieverSection2_4();
    
                        self.createWireframeBack_section2_3();
                        self.createRayCastRecieverSection2_3(); 
    
                        document.getElementById("Height_HorizontalPartition_S2_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                        document.getElementById("Height_HorizontalPartition_S2_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS2_3_UpButton").addEventListener('click', moveUphorizontalDividerSection2_3); 
            document.getElementById("moveHorizontalPartitionS2_3__2_UpButton").addEventListener('click', moveUphorizontalDividerSection2_3); 
    
            //2_3 MOVE DOWN
            function moveDownhorizontalDividerSection2_3() {
                if ( self.options.shelvesCounterSection2_3 != 0 || self.options.shelvesCounterSection2_4 != 0 || self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                            self.options.s2_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
                            self.options.s2_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                            self.options.s2_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
                            self.options.s2_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection2_3 != 0 ) {
                            
                            self.options.shelvesCounterSection2_3 = 0
                            self.scene.remove(self.shelvingGroup_section2_3);
                            
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_3").value = '0';
                            document.getElementById("ShoeShelving_sect2_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                            document.getElementById("InternalShelving_S2_3").checked = false;
                            document.getElementById("ShoeShelving_S2_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_4 != 0 ) {
                            
                            self.options.shelvesCounterSection2_4 = 0
                            self.scene.remove(self.shelvingGroup_section2_4);
                            
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_4").value = '0';
                            document.getElementById("ShoeShelving_sect2_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                            document.getElementById("InternalShelving_S2_4").checked = false;
                            document.getElementById("ShoeShelving_S2_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_2_4 += 1.05;
                            self.options.sectionHeight_2_3 -= 1.05;
    
                            self.options.sectionHeight_2_4_positionY -= 1.05
    
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section2_3();
                            self.createRayCastRecieverSection2_3();
    
                            self.createWireframeBack_section2_4();
                            self.createRayCastRecieverSection2_4(); 
    
                            document.getElementById("Height_HorizontalPartition_S2_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                            document.getElementById("Height_HorizontalPartition_S2_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
    
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};  

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_2_4 += 1.05;
                        self.options.sectionHeight_2_3 -= 1.05;
    
                        self.options.sectionHeight_2_4_positionY -= 1.05
    
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section2_3();
                        self.createRayCastRecieverSection2_3();
    
                        self.createWireframeBack_section2_4();
                        self.createRayCastRecieverSection2_4(); 
    
                        document.getElementById("Height_HorizontalPartition_S2_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                        document.getElementById("Height_HorizontalPartition_S2_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};  
                }
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                        
            };
            document.getElementById("moveHorizontalPartitionS2_3_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_3); 
            document.getElementById("moveHorizontalPartitionS2_3__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_3); 

            //2_4 MOVE UP
            function moveUphorizontalDividerSection2_4() {
                if ( self.options.shelvesCounterSection2_4 != 0 || self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                            self.options.s2_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
                            self.options.s2_5_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                            self.options.s2_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
                            self.options.s2_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection2_5 != 0 ) {
                            
                            self.options.shelvesCounterSection2_5 = 0
                            self.scene.remove(self.shelvingGroup_section2_5);
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S2_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_5").value = '0';
                            document.getElementById("ShoeShelving_sect2_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                            document.getElementById("InternalShelving_S2_5").checked = false;
                            document.getElementById("ShoeShelving_S2_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_4 != 0 ) {
                            
                            self.options.shelvesCounterSection2_4 = 0
                            self.scene.remove(self.shelvingGroup_section2_4);              
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_4").value = '0';
                            document.getElementById("ShoeShelving_sect2_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                            document.getElementById("InternalShelving_S2_4").checked = false;
                            document.getElementById("ShoeShelving_S2_4").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_2_5 -= 1.05;
                            self.options.sectionHeight_2_4 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y += 1.05
                            
                            self.createWireframeBack_section2_4();
                            self.createRayCastRecieverSection2_4();

                            self.createWireframeBack_section2_5();
                            self.createRayCastRecieverSection2_5(); 

                            document.getElementById("Height_HorizontalPartition_S2_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_2_5 -= 1.05;
                        self.options.sectionHeight_2_4 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y += 1.05
                        
                        self.createWireframeBack_section2_4();
                        self.createRayCastRecieverSection2_4();

                        self.createWireframeBack_section2_5();
                        self.createRayCastRecieverSection2_5(); 

                        document.getElementById("Height_HorizontalPartition_S2_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS2_4_UpButton").addEventListener('click', moveUphorizontalDividerSection2_4); 
            document.getElementById("moveHorizontalPartitionS2_4__2_UpButton").addEventListener('click', moveUphorizontalDividerSection2_4); 

            //2_4 MOVE DOWN
            function moveDownhorizontalDividerSection2_4() {
                if ( self.options.shelvesCounterSection2_4 != 0 || self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                            self.options.s2_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
                            self.options.s2_5_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                            self.options.s2_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
                            self.options.s2_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection2_5 != 0 ) {
                            
                            self.options.shelvesCounterSection2_5 = 0
                            self.scene.remove(self.shelvingGroup_section2_5);
                            
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S2_5`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_5").value = '0';
                            document.getElementById("ShoeShelving_sect2_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                            document.getElementById("InternalShelving_S2_5").checked = false;
                            document.getElementById("ShoeShelving_S2_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_4 != 0 ) {
                            
                            self.options.shelvesCounterSection2_4 = 0
                            self.scene.remove(self.shelvingGroup_section2_4);
                            
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_4").value = '0';
                            document.getElementById("ShoeShelving_sect2_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                            document.getElementById("InternalShelving_S2_4").checked = false;
                            document.getElementById("ShoeShelving_S2_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_2_5 += 1.05;
                            self.options.sectionHeight_2_4 -= 1.05;

                            self.options.sectionHeight_2_5_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section2_5();
                            self.createRayCastRecieverSection2_5();

                            self.createWireframeBack_section2_4();
                            self.createRayCastRecieverSection2_4(); 

                            document.getElementById("Height_HorizontalPartition_S2_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_2_5 += 1.05;
                        self.options.sectionHeight_2_4 -= 1.05;

                        self.options.sectionHeight_2_5_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section2_5();
                        self.createRayCastRecieverSection2_5();

                        self.createWireframeBack_section2_4();
                        self.createRayCastRecieverSection2_4();
                        
                        document.getElementById("Height_HorizontalPartition_S2_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS2_4_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_4); 
            document.getElementById("moveHorizontalPartitionS2_4__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_4); 

            //2_5 MOVE UP
            function moveUphorizontalDividerSection2_5() {
                if ( self.options.shelvesCounterSection2_5 != 0 || self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_6Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection2_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                            self.options.s2_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
                            self.options.s2_6_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                            self.options.s2_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
                            self.options.s2_5_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection2_5 != 0 ) {
                            
                            self.options.shelvesCounterSection2_5 = 0
                            self.scene.remove(self.shelvingGroup_section2_5);  
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S2_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect2_5").value = '0';
                            document.getElementById("ShoeShelving_sect2_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                            document.getElementById("InternalShelving_S2_5").checked = false;
                            document.getElementById("ShoeShelving_S2_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_6 != 0 ) {
                            
                            self.options.shelvesCounterSection2_6 = 0
                            self.scene.remove(self.shelvingGroup_section2_6);
                            document.getElementById("InternalShelving1_S2_6").style.display = "none";
                            document.getElementById("internalShelving_sect2_6").value = '0';
                            document.getElementById("ShoeShelving_sect2_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "none";
                            document.getElementById("InternalShelving_S2_6").checked = false;
                            document.getElementById("ShoeShelving_S2_6").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_2_6 -= 1.05;
                            self.options.sectionHeight_2_5 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y += 1.05
                            
                            self.createWireframeBack_section2_5();
                            self.createRayCastRecieverSection2_5();

                            self.createWireframeBack_section2_6();
                            self.createRayCastRecieverSection2_6(); 

                            document.getElementById("Height_HorizontalPartition_S2_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_2_6 -= 1.05;
                        self.options.sectionHeight_2_5 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y += 1.05
                        
                        self.createWireframeBack_section2_5();
                        self.createRayCastRecieverSection2_5();

                        self.createWireframeBack_section2_6();
                        self.createRayCastRecieverSection2_6(); 

                        document.getElementById("Height_HorizontalPartition_S2_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS2_5_UpButton").addEventListener('click', moveUphorizontalDividerSection2_5); 
            document.getElementById("moveHorizontalPartitionS2_5__2_UpButton").addEventListener('click', moveUphorizontalDividerSection2_5); 

            //2_5 MOVE DOWN
            function moveDownhorizontalDividerSection2_5() {
                if ( self.options.shelvesCounterSection2_5 != 0 || self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_6Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection2_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                            self.options.s2_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
                            self.options.s2_6_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                            self.options.s2_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
                            self.options.s2_5_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection2_5 != 0 ) {
                            
                            self.options.shelvesCounterSection2_5 = 0
                            self.scene.remove(self.shelvingGroup_section2_5);
                            
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S2_5`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect2_5").value = '0';
                            document.getElementById("ShoeShelving_sect2_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                            document.getElementById("InternalShelving_S2_5").checked = false;
                            document.getElementById("ShoeShelving_S2_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection2_6 != 0 ) {
                            
                            self.options.shelvesCounterSection2_6 = 0
                            self.scene.remove(self.shelvingGroup_section2_6);
                            
                            document.getElementById("InternalShelving1_S2_6").style.display = "none";

                            document.getElementById("internalShelving_sect2_4").value = '0';
                            document.getElementById("ShoeShelving_sect2_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                            document.getElementById("InternalShelving_S2_4").checked = false;
                            document.getElementById("ShoeShelving_S2_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_2_6 += 1.05;
                            self.options.sectionHeight_2_5 -= 1.05;

                            self.options.sectionHeight_2_6_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section2_6();
                            self.createRayCastRecieverSection2_6();

                            self.createWireframeBack_section2_5();
                            self.createRayCastRecieverSection2_5(); 

                            document.getElementById("Height_HorizontalPartition_S2_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_2_6 += 1.05;
                        self.options.sectionHeight_2_5 -= 1.05;

                        self.options.sectionHeight_2_6_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section2_6();
                        self.createRayCastRecieverSection2_6();

                        self.createWireframeBack_section2_5();
                        self.createRayCastRecieverSection2_5();
                        
                        document.getElementById("Height_HorizontalPartition_S2_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS2_5_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_5); 
            document.getElementById("moveHorizontalPartitionS2_5__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_5);

            //2_6 MOVE UP
            function moveUphorizontalDividerSection2_6() {
                if ( self.options.shelvesCounterSection2_6 != 0 || self.scene.getObjectByName( "doorSection2_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_7Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_7Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection2_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_7Group'))
                            self.options.s2_7_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_7Group'))
                            self.options.s2_7_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                            self.options.s2_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
                            self.options.s2_6_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection2_6 != 0 ) {
                            
                            self.options.shelvesCounterSection2_6 = 0
                            self.scene.remove(self.shelvingGroup_section2_6);
                            
                            document.getElementById("InternalShelving1_S2_6").style.display = "none";

                            document.getElementById("internalShelving_sect2_6").value = '0';
                            document.getElementById("ShoeShelving_sect2_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "none";
                            document.getElementById("InternalShelving_S2_6").checked = false;
                            document.getElementById("ShoeShelving_S2_6").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_2_7 -= 1.05;
                            self.options.sectionHeight_2_6 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y += 1.05
                            
                            self.createWireframeBack_section2_6();
                            self.createRayCastRecieverSection2_6();

                            self.createWireframeBack_section2_7();
                            self.createRayCastRecieverSection2_7(); 

                            document.getElementById("Height_HorizontalPartition_S2_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_2_7 -= 1.05;
                        self.options.sectionHeight_2_6 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y += 1.05
                        
                        self.createWireframeBack_section2_6();
                        self.createRayCastRecieverSection2_6();

                        self.createWireframeBack_section2_7();
                        self.createRayCastRecieverSection2_7(); 

                        document.getElementById("Height_HorizontalPartition_S2_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS2_6_UpButton").addEventListener('click', moveUphorizontalDividerSection2_6); 
            document.getElementById("moveHorizontalPartitionS2_6__2_UpButton").addEventListener('click', moveUphorizontalDividerSection2_6); 

            //2_6 MOVE DOWN
            function moveDownhorizontalDividerSection2_6() {
                if ( self.options.shelvesCounterSection2_6 != 0 || self.scene.getObjectByName( "doorSection2_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_7Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_7Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection2_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_7Group'))
                            self.options.s2_7_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_7Group'))
                            self.options.s2_7_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection2_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                            self.options.s2_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
                            self.options.s2_6_doorStatus = 1;
                        }
            
    
                        if ( self.options.shelvesCounterSection2_6 != 0 ) {
                            
                            self.options.shelvesCounterSection2_6 = 0
                            self.scene.remove(self.shelvingGroup_section2_6);
                            
                            document.getElementById("InternalShelving1_S2_6").style.display = "none";

                            document.getElementById("internalShelving_sect2_6").value = '0';
                            document.getElementById("ShoeShelving_sect2_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "none";
                            document.getElementById("InternalShelving_S2_6").checked = false;
                            document.getElementById("ShoeShelving_S2_6").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_2_7 += 1.05;
                            self.options.sectionHeight_2_6 -= 1.05;

                            self.options.sectionHeight_2_7_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section2_7();
                            self.createRayCastRecieverSection2_7();

                            self.createWireframeBack_section2_6();
                            self.createRayCastRecieverSection2_6(); 

                            document.getElementById("Height_HorizontalPartition_S2_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S2_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_2_7 += 1.05;
                        self.options.sectionHeight_2_6 -= 1.05;

                        self.options.sectionHeight_2_7_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section2_7();
                        self.createRayCastRecieverSection2_7();

                        self.createWireframeBack_section2_6();
                        self.createRayCastRecieverSection2_6();
                        
                        document.getElementById("Height_HorizontalPartition_S2_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S2_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS2_6_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_6); 
            document.getElementById("moveHorizontalPartitionS2_6__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection2_6);

            
            
    
            //3 SECTION MOVING BUTTONS 
            //3_1 MOVE UP
            function moveUphorizontalDividerSection3_1() {
                if ( self.options.shelvesCounterSection3_1 != 0 || self.options.shelvesCounterSection3_2 != 0 || self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_1Group'))
                            self.options.s3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_1Group'))
                            self.options.s3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                            self.options.s3_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
                            self.options.s3_2_doorStatus = 1;
                        }

                        if ( self.options.shelvesCounterSection3_1 != 0 ) {
                            
                            self.options.shelvesCounterSection3_1 = 0
                            self.scene.remove(self.shelvingGroup_section3_1);
                            
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect3_1").value = '0';
                            document.getElementById("ShoeShelving_sect3_1").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_1").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_1").style.display = "none";
                            document.getElementById("InternalShelving_S3_1").checked = false;
                            document.getElementById("ShoeShelving_S3_1").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_2 != 0 ) {
                            
                            self.options.shelvesCounterSection3_2 = 0
                            self.scene.remove(self.shelvingGroup_section3_2);
                            
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect3_2").value = '0';
                            document.getElementById("ShoeShelving_sect3_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                            document.getElementById("InternalShelving_S3_2").checked = false;
                            document.getElementById("ShoeShelving_S3_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_3_2 -= 1.05;
                            self.options.sectionHeight_3_1 += 1.05;
            
            
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y += 1.05
                            
                            self.createWireframeBack_section3_1();
                            self.createRayCastRecieverSection3_1();
            
                            self.createWireframeBack_section3_2();
                            self.createRayCastRecieverSection3_2(); 

                            document.getElementById("Height_HorizontalPartition_S3_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            
            
            
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                        self.options.sectionHeight_3_2 -= 1.05;
                        self.options.sectionHeight_3_1 += 1.05;
        
        
                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y += 1.05
                        
                        self.createWireframeBack_section3_1();
                        self.createRayCastRecieverSection3_1();
        
                        self.createWireframeBack_section3_2();
                        self.createRayCastRecieverSection3_2(); 

                        document.getElementById("Height_HorizontalPartition_S3_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        
        
        
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
    
            };
            document.getElementById("moveHorizontalPartition3_1_UpButton").addEventListener('click', moveUphorizontalDividerSection3_1); 
            document.getElementById("moveHorizontalPartition3_1__2_UpButton").addEventListener('click', moveUphorizontalDividerSection3_1); 
    
            //3_1 MOVE DOWN
            function moveDownhorizontalDividerSection3_1() {
                if ( self.options.shelvesCounterSection3_1 != 0 || self.options.shelvesCounterSection3_2 != 0 || self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_1Group'))
                            self.options.s3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_1Group'))
                            self.options.s3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                            self.options.s3_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
                            self.options.s3_2_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection3_1 != 0 ) {
                            
                            self.options.shelvesCounterSection3_1 = 0
                            self.scene.remove(self.shelvingGroup_section3_1);
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_1").value = '0';
                            document.getElementById("ShoeShelving_sect3_1").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_1").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_1").style.display = "none";
                            document.getElementById("InternalShelving_S3_1").checked = false;
                            document.getElementById("ShoeShelving_S3_1").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_2 != 0 ) {
                            
                            self.options.shelvesCounterSection3_2 = 0
                            self.scene.remove(self.shelvingGroup_section3_2);
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_2").value = '0';
                            document.getElementById("ShoeShelving_sect3_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                            document.getElementById("InternalShelving_S3_2").checked = false;
                            document.getElementById("ShoeShelving_S3_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
        
                            self.options.sectionHeight_3_2 += 1.05;
                            self.options.sectionHeight_3_1 -= 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section3_1();
                            self.createRayCastRecieverSection3_1();

                            self.createWireframeBack_section3_2();
                            self.createRayCastRecieverSection3_2(); 

                            document.getElementById("Height_HorizontalPartition_S3_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_3_2 += 1.05;
                        self.options.sectionHeight_3_1 -= 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section3_1();
                        self.createRayCastRecieverSection3_1();

                        self.createWireframeBack_section3_2();
                        self.createRayCastRecieverSection3_2(); 

                        document.getElementById("Height_HorizontalPartition_S3_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
                
            };
            document.getElementById("moveHorizontalPartition3_1_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_1); 
            document.getElementById("moveHorizontalPartition3_1__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_1);     
    
    
            //3_2 MOVE UP
            function moveUphorizontalDividerSection3_2() {
                if ( self.options.shelvesCounterSection3_3 != 0 || self.options.shelvesCounterSection3_2 != 0 || self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                            self.options.s3_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
                            self.options.s3_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                            self.options.s3_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
                            self.options.s3_2_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection3_3 != 0 ) {
                            
                            self.options.shelvesCounterSection3_3 = 0
                            self.scene.remove(self.shelvingGroup_section3_3);      
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_3").value = '0';
                            document.getElementById("ShoeShelving_sect3_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                            document.getElementById("InternalShelving_S3_3").checked = false;
                            document.getElementById("ShoeShelving_S3_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_2 != 0 ) {
                            
                            self.options.shelvesCounterSection3_2 = 0
                            self.scene.remove(self.shelvingGroup_section3_2);        
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_2").value = '0';
                            document.getElementById("ShoeShelving_sect3_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                            document.getElementById("InternalShelving_S3_2").checked = false;
                            document.getElementById("ShoeShelving_S3_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_3_3 -= 1.05;
                            self.options.sectionHeight_3_2 += 1.05;
            
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y += 1.05
                            
                            self.createWireframeBack_section3_3();
                            self.createRayCastRecieverSection3_3();
            
                            self.createWireframeBack_section3_2();
                            self.createRayCastRecieverSection3_2(); 

                            document.getElementById("Height_HorizontalPartition_S3_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
            
            
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
        
                        self.options.sectionHeight_3_3 -= 1.05;
                        self.options.sectionHeight_3_2 += 1.05;
        
                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y += 1.05
                        
                        self.createWireframeBack_section3_3();
                        self.createRayCastRecieverSection3_3();
        
                        self.createWireframeBack_section3_2();
                        self.createRayCastRecieverSection3_2(); 

                        document.getElementById("Height_HorizontalPartition_S3_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
        
        
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS3_2_UpButton").addEventListener('click', moveUphorizontalDividerSection3_2); 
            document.getElementById("moveHorizontalPartitionS3_2__2_UpButton").addEventListener('click', moveUphorizontalDividerSection3_2); 

            //3_2 MOVE DOWN
            function moveDownhorizontalDividerSection3_2() {
                if ( self.options.shelvesCounterSection3_3 != 0 || self.options.shelvesCounterSection3_2 != 0 || self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                            self.options.s3_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
                            self.options.s3_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                            self.options.s3_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
                            self.options.s3_2_doorStatus = 1;
                        }
               
                        if ( self.options.shelvesCounterSection3_3 != 0 ) {
                            
                            self.options.shelvesCounterSection3_3 = 0
                            self.scene.remove(self.shelvingGroup_section3_3);      
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_3").value = '0';
                            document.getElementById("ShoeShelving_sect3_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                            document.getElementById("InternalShelving_S3_3").checked = false;
                            document.getElementById("ShoeShelving_S3_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_2 != 0 ) {
                            
                            self.options.shelvesCounterSection3_2 = 0
                            self.scene.remove(self.shelvingGroup_section3_2);        
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_2").value = '0';
                            document.getElementById("ShoeShelving_sect3_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                            document.getElementById("InternalShelving_S3_2").checked = false;
                            document.getElementById("ShoeShelving_S3_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                                
                            self.options.sectionHeight_3_3 += 1.05;
                            self.options.sectionHeight_3_2 -= 1.05;

                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section3_3();
                            self.createRayCastRecieverSection3_3();

                            self.createWireframeBack_section3_2();
                            self.createRayCastRecieverSection3_2(); 

                            document.getElementById("Height_HorizontalPartition_S3_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");}; 

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_3_3 += 1.05;
                        self.options.sectionHeight_3_2 -= 1.05;

                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section3_3();
                        self.createRayCastRecieverSection3_3();

                        self.createWireframeBack_section3_2();
                        self.createRayCastRecieverSection3_2(); 

                        document.getElementById("Height_HorizontalPartition_S3_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS3_2_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_2); 
            document.getElementById("moveHorizontalPartitionS3_2__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_2); 
    
            //3_3 MOVE UP
            function moveUphorizontalDividerSection3_3() {
                if ( self.options.shelvesCounterSection3_3 != 0 || self.options.shelvesCounterSection3_4 != 0  || self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                            self.options.s3_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
                            self.options.s3_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                            self.options.s3_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
                            self.options.s3_4_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection3_3 != 0 ) {
                            
                            self.options.shelvesCounterSection3_3 = 0
                            self.scene.remove(self.shelvingGroup_section3_3);
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_3").value = '0';
                            document.getElementById("ShoeShelving_sect3_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                            document.getElementById("InternalShelving_S3_3").checked = false;
                            document.getElementById("ShoeShelving_S3_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_4 != 0 ) {
                            
                            self.options.shelvesCounterSection3_4 = 0
                            self.scene.remove(self.shelvingGroup_section3_4);          
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_4").value = '0';
                            document.getElementById("ShoeShelving_sect3_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                            document.getElementById("InternalShelving_S3_4").checked = false;
                            document.getElementById("ShoeShelving_S3_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_3_4 -= 1.05;
                            self.options.sectionHeight_3_3 += 1.05;
    
    
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y += 1.05
                            
                            self.createWireframeBack_section3_4();
                            self.createRayCastRecieverSection3_4();
    
                            self.createWireframeBack_section3_3();
                            self.createRayCastRecieverSection3_3(); 
    
                            document.getElementById("Height_HorizontalPartition_S3_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                            document.getElementById("Height_HorizontalPartition_S3_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_3_4 -= 1.05;
                        self.options.sectionHeight_3_3 += 1.05;
    
    
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y += 1.05
                        
                        self.createWireframeBack_section3_4();
                        self.createRayCastRecieverSection3_4();
    
                        self.createWireframeBack_section3_3();
                        self.createRayCastRecieverSection3_3(); 
    
                        document.getElementById("Height_HorizontalPartition_S3_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                        document.getElementById("Height_HorizontalPartition_S3_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS3_3_UpButton").addEventListener('click', moveUphorizontalDividerSection3_3); 
            document.getElementById("moveHorizontalPartitionS3_3__2_UpButton").addEventListener('click', moveUphorizontalDividerSection3_3); 
    
            //3_3 MOVE DOWN
            function moveDownhorizontalDividerSection3_3() {
                if ( self.options.shelvesCounterSection3_3 != 0 || self.options.shelvesCounterSection3_4 != 0  || self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                            self.options.s3_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
                            self.options.s3_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                            self.options.s3_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
                            self.options.s3_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection3_3 != 0 ) {
                            
                            self.options.shelvesCounterSection3_3 = 0
                            self.scene.remove(self.shelvingGroup_section3_3);
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_3").value = '0';
                            document.getElementById("ShoeShelving_sect3_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                            document.getElementById("InternalShelving_S3_3").checked = false;
                            document.getElementById("ShoeShelving_S3_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_4 != 0 ) {
                            
                            self.options.shelvesCounterSection3_4 = 0
                            self.scene.remove(self.shelvingGroup_section3_4);          
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_4").value = '0';
                            document.getElementById("ShoeShelving_sect3_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                            document.getElementById("InternalShelving_S3_4").checked = false;
                            document.getElementById("ShoeShelving_S3_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_3_4 += 1.05;
                            self.options.sectionHeight_3_3 -= 1.05;
    
                            self.options.sectionHeight_3_4_positionY -= 1.05
    
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section3_3();
                            self.createRayCastRecieverSection3_3();
    
                            self.createWireframeBack_section3_4();
                            self.createRayCastRecieverSection3_4(); 
    
                            document.getElementById("Height_HorizontalPartition_S3_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                            document.getElementById("Height_HorizontalPartition_S3_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
    
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};  

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_3_4 += 1.05;
                        self.options.sectionHeight_3_3 -= 1.05;
    
                        self.options.sectionHeight_3_4_positionY -= 1.05
    
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section3_3();
                        self.createRayCastRecieverSection3_3();
    
                        self.createWireframeBack_section3_4();
                        self.createRayCastRecieverSection3_4(); 
    
                        document.getElementById("Height_HorizontalPartition_S3_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                        document.getElementById("Height_HorizontalPartition_S3_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};  
                }
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                        
            };
            document.getElementById("moveHorizontalPartitionS3_3_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_3); 
            document.getElementById("moveHorizontalPartitionS3_3__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_3); 

            //3_4 MOVE UP
            function moveUphorizontalDividerSection3_4() {
                if ( self.options.shelvesCounterSection3_4 != 0 || self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                            self.options.s3_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
                            self.options.s3_5_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                            self.options.s3_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
                            self.options.s3_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection3_5 != 0 ) {
                            
                            self.options.shelvesCounterSection3_5 = 0
                            self.scene.remove(self.shelvingGroup_section3_5);
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S3_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_5").value = '0';
                            document.getElementById("ShoeShelving_sect3_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                            document.getElementById("InternalShelving_S3_5").checked = false;
                            document.getElementById("ShoeShelving_S3_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_4 != 0 ) {
                            
                            self.options.shelvesCounterSection3_4 = 0
                            self.scene.remove(self.shelvingGroup_section3_4);              
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_4").value = '0';
                            document.getElementById("ShoeShelving_sect3_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                            document.getElementById("InternalShelving_S3_4").checked = false;
                            document.getElementById("ShoeShelving_S3_4").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_3_5 -= 1.05;
                            self.options.sectionHeight_3_4 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y += 1.05
                            
                            self.createWireframeBack_section3_4();
                            self.createRayCastRecieverSection3_4();

                            self.createWireframeBack_section3_5();
                            self.createRayCastRecieverSection3_5(); 

                            document.getElementById("Height_HorizontalPartition_S3_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_3_5 -= 1.05;
                        self.options.sectionHeight_3_4 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y += 1.05
                        
                        self.createWireframeBack_section3_4();
                        self.createRayCastRecieverSection3_4();

                        self.createWireframeBack_section3_5();
                        self.createRayCastRecieverSection3_5(); 

                        document.getElementById("Height_HorizontalPartition_S3_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS3_4_UpButton").addEventListener('click', moveUphorizontalDividerSection3_4); 
            document.getElementById("moveHorizontalPartitionS3_4__2_UpButton").addEventListener('click', moveUphorizontalDividerSection3_4); 

            //3_4 MOVE DOWN
            function moveDownhorizontalDividerSection3_4() {
                if ( self.options.shelvesCounterSection3_4 != 0 || self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                            self.options.s3_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
                            self.options.s3_5_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                            self.options.s3_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
                            self.options.s3_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection3_5 != 0 ) {
                            
                            self.options.shelvesCounterSection3_5 = 0
                            self.scene.remove(self.shelvingGroup_section3_5);
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S3_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_5").value = '0';
                            document.getElementById("ShoeShelving_sect3_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                            document.getElementById("InternalShelving_S3_5").checked = false;
                            document.getElementById("ShoeShelving_S3_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_4 != 0 ) {
                            
                            self.options.shelvesCounterSection3_4 = 0
                            self.scene.remove(self.shelvingGroup_section3_4);              
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_4").value = '0';
                            document.getElementById("ShoeShelving_sect3_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                            document.getElementById("InternalShelving_S3_4").checked = false;
                            document.getElementById("ShoeShelving_S3_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_3_5 += 1.05;
                            self.options.sectionHeight_3_4 -= 1.05;

                            self.options.sectionHeight_3_5_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section3_5();
                            self.createRayCastRecieverSection3_5();

                            self.createWireframeBack_section3_4();
                            self.createRayCastRecieverSection3_4(); 

                            document.getElementById("Height_HorizontalPartition_S3_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_3_5 += 1.05;
                        self.options.sectionHeight_3_4 -= 1.05;

                        self.options.sectionHeight_3_5_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section3_5();
                        self.createRayCastRecieverSection3_5();

                        self.createWireframeBack_section3_4();
                        self.createRayCastRecieverSection3_4();
                        
                        document.getElementById("Height_HorizontalPartition_S3_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS3_4_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_4); 
            document.getElementById("moveHorizontalPartitionS3_4__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_4);  
            
            //3_5 MOVE UP
            function moveUphorizontalDividerSection3_5() {
                if ( self.options.shelvesCounterSection3_5 != 0 || self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_6Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection3_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                            self.options.s3_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
                            self.options.s3_6_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                            self.options.s3_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
                            self.options.s3_5_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection3_5 != 0 ) {
                            
                            self.options.shelvesCounterSection3_5 = 0
                            self.scene.remove(self.shelvingGroup_section3_5);  
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S3_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_5").value = '0';
                            document.getElementById("ShoeShelving_sect3_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                            document.getElementById("InternalShelving_S3_5").checked = false;
                            document.getElementById("ShoeShelving_S3_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_6 != 0 ) {
                            
                            self.options.shelvesCounterSection3_6 = 0
                            self.scene.remove(self.shelvingGroup_section3_6);
                            document.getElementById("InternalShelving1_S3_6").style.display = "none";
                            document.getElementById("internalShelving_sect3_6").value = '0';
                            document.getElementById("ShoeShelving_sect3_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                            document.getElementById("InternalShelving_S3_6").checked = false;
                            document.getElementById("ShoeShelving_S3_6").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_3_6 -= 1.05;
                            self.options.sectionHeight_3_5 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y += 1.05
                            
                            self.createWireframeBack_section3_5();
                            self.createRayCastRecieverSection3_5();

                            self.createWireframeBack_section3_6();
                            self.createRayCastRecieverSection3_6(); 

                            document.getElementById("Height_HorizontalPartition_S3_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_3_6 -= 1.05;
                        self.options.sectionHeight_3_5 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y += 1.05
                        
                        self.createWireframeBack_section3_5();
                        self.createRayCastRecieverSection3_5();

                        self.createWireframeBack_section3_6();
                        self.createRayCastRecieverSection3_6(); 

                        document.getElementById("Height_HorizontalPartition_S3_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS3_5_UpButton").addEventListener('click', moveUphorizontalDividerSection3_5); 
            document.getElementById("moveHorizontalPartitionS3_5__2_UpButton").addEventListener('click', moveUphorizontalDividerSection3_5); 

            //3_5 MOVE DOWN
            function moveDownhorizontalDividerSection3_5() {
                if ( self.options.shelvesCounterSection3_5 != 0 || self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_6Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection3_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                            self.options.s3_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
                            self.options.s3_6_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                            self.options.s3_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
                            self.options.s3_5_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection3_5 != 0 ) {
                            
                            self.options.shelvesCounterSection3_5 = 0
                            self.scene.remove(self.shelvingGroup_section3_5);  
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S3_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect3_5").value = '0';
                            document.getElementById("ShoeShelving_sect3_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                            document.getElementById("InternalShelving_S3_5").checked = false;
                            document.getElementById("ShoeShelving_S3_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection3_6 != 0 ) {
                            
                            self.options.shelvesCounterSection3_6 = 0
                            self.scene.remove(self.shelvingGroup_section3_6);
                            document.getElementById("InternalShelving1_S3_6").style.display = "none";
                            document.getElementById("internalShelving_sect3_6").value = '0';
                            document.getElementById("ShoeShelving_sect3_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                            document.getElementById("InternalShelving_S3_6").checked = false;
                            document.getElementById("ShoeShelving_S3_6").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_3_6 += 1.05;
                            self.options.sectionHeight_3_5 -= 1.05;

                            self.options.sectionHeight_3_6_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section3_6();
                            self.createRayCastRecieverSection3_6();

                            self.createWireframeBack_section3_5();
                            self.createRayCastRecieverSection3_5(); 

                            document.getElementById("Height_HorizontalPartition_S3_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_3_6 += 1.05;
                        self.options.sectionHeight_3_5 -= 1.05;

                        self.options.sectionHeight_3_6_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section3_6();
                        self.createRayCastRecieverSection3_6();

                        self.createWireframeBack_section3_5();
                        self.createRayCastRecieverSection3_5();
                        
                        document.getElementById("Height_HorizontalPartition_S3_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS3_5_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_5); 
            document.getElementById("moveHorizontalPartitionS3_5__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_5); 
            
            //3_6 MOVE UP
            function moveUphorizontalDividerSection3_6() {
                if ( self.options.shelvesCounterSection3_6 != 0 || self.scene.getObjectByName( "doorSection3_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_7Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_7Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection3_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_7Group'))
                            self.options.s3_7_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_7Group'))
                            self.options.s3_7_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                            self.options.s3_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
                            self.options.s3_6_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection3_6 != 0 ) {
                            
                            self.options.shelvesCounterSection3_6 = 0
                            self.scene.remove(self.shelvingGroup_section3_6);
                            document.getElementById("InternalShelving1_S3_6").style.display = "none";
                            document.getElementById("internalShelving_sect3_6").value = '0';
                            document.getElementById("ShoeShelving_sect3_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                            document.getElementById("InternalShelving_S3_6").checked = false;
                            document.getElementById("ShoeShelving_S3_6").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_3_7 -= 1.05;
                            self.options.sectionHeight_3_6 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y += 1.05
                            
                            self.createWireframeBack_section3_6();
                            self.createRayCastRecieverSection3_6();

                            self.createWireframeBack_section3_7();
                            self.createRayCastRecieverSection3_7(); 

                            document.getElementById("Height_HorizontalPartition_S3_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_3_7 -= 1.05;
                        self.options.sectionHeight_3_6 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y += 1.05
                        
                        self.createWireframeBack_section3_6();
                        self.createRayCastRecieverSection3_6();

                        self.createWireframeBack_section3_7();
                        self.createRayCastRecieverSection3_7(); 

                        document.getElementById("Height_HorizontalPartition_S3_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS3_6_UpButton").addEventListener('click', moveUphorizontalDividerSection3_6); 
            document.getElementById("moveHorizontalPartitionS3_6__2_UpButton").addEventListener('click', moveUphorizontalDividerSection3_6); 

            //3_6 MOVE DOWN
            function moveDownhorizontalDividerSection3_6() {
                if ( self.options.shelvesCounterSection3_6 != 0 || self.scene.getObjectByName( "doorSection3_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_7Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_7Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection3_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_7Group'))
                            self.options.s3_7_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_7Group'))
                            self.options.s3_7_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection3_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                            self.options.s3_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
                            self.options.s3_6_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection3_6 != 0 ) {
                            
                            self.options.shelvesCounterSection3_6 = 0
                            self.scene.remove(self.shelvingGroup_section3_6);
                            document.getElementById("InternalShelving1_S3_6").style.display = "none";
                            document.getElementById("internalShelving_sect3_6").value = '0';
                            document.getElementById("ShoeShelving_sect3_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                            document.getElementById("InternalShelving_S3_6").checked = false;
                            document.getElementById("ShoeShelving_S3_6").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_3_7 += 1.05;
                            self.options.sectionHeight_3_6 -= 1.05;

                            self.options.sectionHeight_3_7_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section3_7();
                            self.createRayCastRecieverSection3_7();

                            self.createWireframeBack_section3_6();
                            self.createRayCastRecieverSection3_6(); 

                            document.getElementById("Height_HorizontalPartition_S3_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S3_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_3_7 += 1.05;
                        self.options.sectionHeight_3_6 -= 1.05;

                        self.options.sectionHeight_3_7_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section3_7();
                        self.createRayCastRecieverSection3_7();

                        self.createWireframeBack_section3_6();
                        self.createRayCastRecieverSection3_6();
                        
                        document.getElementById("Height_HorizontalPartition_S3_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S3_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS3_6_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_6); 
            document.getElementById("moveHorizontalPartitionS3_6__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection3_6); 
 

    
            //4 SECTION MOVING BUTTONS 
            //4_1 MOVE UP
            function moveUphorizontalDividerSection4_1() {
                if ( self.options.shelvesCounterSection4_1 != 0 || self.options.shelvesCounterSection4_2 != 0 || self.scene.getObjectByName( "doorSection4_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
    
                        if (self.scene.getObjectByName( "doorSection4_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_1Group'))
                            self.options.s4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_1Group'))
                            self.options.s4_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                            self.options.s4_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
                            self.options.s4_2_doorStatus = 1;
                        }
               
                        if ( self.options.shelvesCounterSection4_1 != 0 ) {
                            
                            self.options.shelvesCounterSection4_1 = 0
                            self.scene.remove(self.shelvingGroup_section4_1);      
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_1").value = '0';
                            document.getElementById("ShoeShelving_sect4_1").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_1").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_1").style.display = "none";
                            document.getElementById("InternalShelving_S4_1").checked = false;
                            document.getElementById("ShoeShelving_S4_1").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_2 != 0 ) {
                            
                            self.options.shelvesCounterSection4_2 = 0
                            self.scene.remove(self.shelvingGroup_section4_2); 
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_2").value = '0';
                            document.getElementById("ShoeShelving_sect4_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                            document.getElementById("InternalShelving_S4_2").checked = false;
                            document.getElementById("ShoeShelving_S4_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_4_2 -= 1.05;
                            self.options.sectionHeight_4_1 += 1.05;
            
            
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y += 1.05
                            
                            self.createWireframeBack_section4_1();
                            self.createRayCastRecieverSection4_1();
            
                            self.createWireframeBack_section4_2();
                            self.createRayCastRecieverSection4_2(); 

                            document.getElementById("Height_HorizontalPartition_S4_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            
            
            
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                        self.options.sectionHeight_4_2 -= 1.05;
                        self.options.sectionHeight_4_1 += 1.05;
        
        
                        self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y += 1.05
                        
                        self.createWireframeBack_section4_1();
                        self.createRayCastRecieverSection4_1();
        
                        self.createWireframeBack_section4_2();
                        self.createRayCastRecieverSection4_2(); 

                        document.getElementById("Height_HorizontalPartition_S4_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        
        
        
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                    
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartition4_1_UpButton").addEventListener('click', moveUphorizontalDividerSection4_1); 
            document.getElementById("moveHorizontalPartition4_1__2_UpButton").addEventListener('click', moveUphorizontalDividerSection4_1);  
    
            //4_1 MOVE DOWN
            function moveDownhorizontalDividerSection4_1() {
                if ( self.options.shelvesCounterSection4_1 != 0 || self.options.shelvesCounterSection4_2 != 0 || self.scene.getObjectByName( "doorSection4_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection4_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_1Group'))
                            self.options.s4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_1Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_1Group'))
                            self.options.s4_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                            self.options.s4_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
                            self.options.s4_2_doorStatus = 1;
                        }
               
                        if ( self.options.shelvesCounterSection4_1 != 0 ) {
                            
                            self.options.shelvesCounterSection4_1 = 0
                            self.scene.remove(self.shelvingGroup_section4_1);      
                            for (var i = 1; i <= 6; i++) {
                                document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_1").value = '0';
                            document.getElementById("ShoeShelving_sect4_1").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_1").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_1").style.display = "none";
                            document.getElementById("InternalShelving_S4_1").checked = false;
                            document.getElementById("ShoeShelving_S4_1").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_2 != 0 ) {
                            
                            self.options.shelvesCounterSection4_2 = 0
                            self.scene.remove(self.shelvingGroup_section4_2); 
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_2").value = '0';
                            document.getElementById("ShoeShelving_sect4_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                            document.getElementById("InternalShelving_S4_2").checked = false;
                            document.getElementById("ShoeShelving_S4_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_4_2 += 1.05;
                            self.options.sectionHeight_4_1 -= 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section4_1();
                            self.createRayCastRecieverSection4_1();

                            self.createWireframeBack_section4_2();
                            self.createRayCastRecieverSection4_2(); 

                            document.getElementById("Height_HorizontalPartition_S4_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                        self.options.sectionHeight_4_2 += 1.05;
                        self.options.sectionHeight_4_1 -= 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section4_1();
                        self.createRayCastRecieverSection4_1();

                        self.createWireframeBack_section4_2();
                        self.createRayCastRecieverSection4_2(); 

                        document.getElementById("Height_HorizontalPartition_S4_1").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                
            };
            document.getElementById("moveHorizontalPartition4_1_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_1); 
            document.getElementById("moveHorizontalPartition4_1__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_1); 

              
            //4_2 MOVE UP
            function moveUphorizontalDividerSection4_2() {
                if ( self.options.shelvesCounterSection4_3 != 0 || self.options.shelvesCounterSection4_2 != 0 || self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                            self.options.s4_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
                            self.options.s4_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                            self.options.s4_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
                            self.options.s4_2_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection4_3 != 0 ) {
                            
                            self.options.shelvesCounterSection4_3 = 0
                            self.scene.remove(self.shelvingGroup_section4_3);      
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_3").value = '0';
                            document.getElementById("ShoeShelving_sect4_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                            document.getElementById("InternalShelving_S4_3").checked = false;
                            document.getElementById("ShoeShelving_S4_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_2 != 0 ) {
                            
                            self.options.shelvesCounterSection4_2 = 0
                            self.scene.remove(self.shelvingGroup_section4_2);        
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_2").value = '0';
                            document.getElementById("ShoeShelving_sect4_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                            document.getElementById("InternalShelving_S4_2").checked = false;
                            document.getElementById("ShoeShelving_S4_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
            
                            self.options.sectionHeight_4_3 -= 1.05;
                            self.options.sectionHeight_4_2 += 1.05;
            
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y += 1.05
                            
                            self.createWireframeBack_section4_3();
                            self.createRayCastRecieverSection4_3();
            
                            self.createWireframeBack_section4_2();
                            self.createRayCastRecieverSection4_2(); 

                            document.getElementById("Height_HorizontalPartition_S4_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
            
            
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
        
                        self.options.sectionHeight_4_3 -= 1.05;
                        self.options.sectionHeight_4_2 += 1.05;
        
                        self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y += 1.05
                        
                        self.createWireframeBack_section4_3();
                        self.createRayCastRecieverSection4_3();
        
                        self.createWireframeBack_section4_2();
                        self.createRayCastRecieverSection4_2(); 

                        document.getElementById("Height_HorizontalPartition_S4_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
        
        
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
                
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS4_2_UpButton").addEventListener('click', moveUphorizontalDividerSection4_2); 
            document.getElementById("moveHorizontalPartitionS4_2__2_UpButton").addEventListener('click', moveUphorizontalDividerSection4_2); 

            //4_2 MOVE DOWN
            function moveDownhorizontalDividerSection4_2() {
                if ( self.options.shelvesCounterSection4_3 != 0 || self.options.shelvesCounterSection4_2 != 0 || self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                            self.options.s4_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
                            self.options.s4_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                            self.options.s4_2_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
                            self.options.s4_2_doorStatus = 1;
                        }
               
                        if ( self.options.shelvesCounterSection4_3 != 0 ) {
                            
                            self.options.shelvesCounterSection4_3 = 0
                            self.scene.remove(self.shelvingGroup_section4_3);      
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_3").value = '0';
                            document.getElementById("ShoeShelving_sect4_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                            document.getElementById("InternalShelving_S4_3").checked = false;
                            document.getElementById("ShoeShelving_S4_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_2 != 0 ) {
                            
                            self.options.shelvesCounterSection4_2 = 0
                            self.scene.remove(self.shelvingGroup_section4_2);        
                            for (var i = 1; i <= 5; i++) {
                                document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_2").value = '0';
                            document.getElementById("ShoeShelving_sect4_2").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                            document.getElementById("InternalShelving_S4_2").checked = false;
                            document.getElementById("ShoeShelving_S4_2").checked = false;
                            
                        } else {}
    
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
                                
                            self.options.sectionHeight_4_3 += 1.05;
                            self.options.sectionHeight_4_2 -= 1.05;

                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section4_3();
                            self.createRayCastRecieverSection4_3();

                            self.createWireframeBack_section4_2();
                            self.createRayCastRecieverSection4_2(); 

                            document.getElementById("Height_HorizontalPartition_S4_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");}; 

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_4_3 += 1.05;
                        self.options.sectionHeight_4_2 -= 1.05;

                        self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section4_3();
                        self.createRayCastRecieverSection4_3();

                        self.createWireframeBack_section4_2();
                        self.createRayCastRecieverSection4_2(); 

                        document.getElementById("Height_HorizontalPartition_S4_2").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS4_2_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_2); 
            document.getElementById("moveHorizontalPartitionS4_2__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_2); 
    
            //4_3 MOVE UP
            function moveUphorizontalDividerSection4_3() {
                if ( self.options.shelvesCounterSection4_3 != 0 || self.options.shelvesCounterSection4_4 != 0 || self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                            self.options.s4_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
                            self.options.s4_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                            self.options.s4_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
                            self.options.s4_4_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection4_3 != 0 ) {
                            
                            self.options.shelvesCounterSection4_3 = 0
                            self.scene.remove(self.shelvingGroup_section4_3);
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_3").value = '0';
                            document.getElementById("ShoeShelving_sect4_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                            document.getElementById("InternalShelving_S4_3").checked = false;
                            document.getElementById("ShoeShelving_S4_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_4 != 0 ) {
                            
                            self.options.shelvesCounterSection4_4 = 0
                            self.scene.remove(self.shelvingGroup_section4_4);          
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_4").value = '0';
                            document.getElementById("ShoeShelving_sect4_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                            document.getElementById("InternalShelving_S4_4").checked = false;
                            document.getElementById("ShoeShelving_S4_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_4_4 -= 1.05;
                            self.options.sectionHeight_4_3 += 1.05;
    
    
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y += 1.05
                            
                            self.createWireframeBack_section4_4();
                            self.createRayCastRecieverSection4_4();
    
                            self.createWireframeBack_section4_3();
                            self.createRayCastRecieverSection4_3(); 
    
                            document.getElementById("Height_HorizontalPartition_S4_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                            document.getElementById("Height_HorizontalPartition_S4_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};
    
    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_4_4 -= 1.05;
                        self.options.sectionHeight_4_3 += 1.05;
    
    
                        self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y += 1.05
                        
                        self.createWireframeBack_section4_4();
                        self.createRayCastRecieverSection4_4();
    
                        self.createWireframeBack_section4_3();
                        self.createRayCastRecieverSection4_3(); 
    
                        document.getElementById("Height_HorizontalPartition_S4_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                        document.getElementById("Height_HorizontalPartition_S4_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
    
            };
            document.getElementById("moveHorizontalPartitionS4_3_UpButton").addEventListener('click', moveUphorizontalDividerSection4_3); 
            document.getElementById("moveHorizontalPartitionS4_3__2_UpButton").addEventListener('click', moveUphorizontalDividerSection4_3); 
    
            //4_3 MOVE DOWN
            function moveDownhorizontalDividerSection4_3() {
                if ( self.options.shelvesCounterSection4_3 != 0 || self.options.shelvesCounterSection4_4 != 0 || self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {
    
                        if (self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                            self.options.s4_3_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
                            self.options.s4_3_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                            self.options.s4_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
                            self.options.s4_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection4_3 != 0 ) {
                            
                            self.options.shelvesCounterSection4_3 = 0
                            self.scene.remove(self.shelvingGroup_section4_3);
                            for (var i = 1; i <= 4; i++) {
                                document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_3").value = '0';
                            document.getElementById("ShoeShelving_sect4_3").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_3").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                            document.getElementById("InternalShelving_S4_3").checked = false;
                            document.getElementById("ShoeShelving_S4_3").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_4 != 0 ) {
                            
                            self.options.shelvesCounterSection4_4 = 0
                            self.scene.remove(self.shelvingGroup_section4_4);          
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_4").value = '0';
                            document.getElementById("ShoeShelving_sect4_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                            document.getElementById("InternalShelving_S4_4").checked = false;
                            document.getElementById("ShoeShelving_S4_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                            self.options.sectionHeight_4_4 += 1.05;
                            self.options.sectionHeight_4_3 -= 1.05;
    
                            self.options.sectionHeight_4_4_positionY -= 1.05
    
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section4_3();
                            self.createRayCastRecieverSection4_3();
    
                            self.createWireframeBack_section4_4();
                            self.createRayCastRecieverSection4_4(); 
    
                            document.getElementById("Height_HorizontalPartition_S4_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                            document.getElementById("Height_HorizontalPartition_S4_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
    
                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};  

    
                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {
    
                        self.options.sectionHeight_4_4 += 1.05;
                        self.options.sectionHeight_4_3 -= 1.05;
    
                        self.options.sectionHeight_4_4_positionY -= 1.05
    
                        self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section4_3();
                        self.createRayCastRecieverSection4_3();
    
                        self.createWireframeBack_section4_4();
                        self.createRayCastRecieverSection4_4(); 
    
                        document.getElementById("Height_HorizontalPartition_S4_3").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
    
                        document.getElementById("Height_HorizontalPartition_S4_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
    
                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};  
                }
    
                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }
                        
            };
            document.getElementById("moveHorizontalPartitionS4_3_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_3); 
            document.getElementById("moveHorizontalPartitionS4_3__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_3); 

            //4_4 MOVE UP
            function moveUphorizontalDividerSection4_4() {
                if ( self.options.shelvesCounterSection4_4 != 0 || self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                            self.options.s4_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
                            self.options.s4_5_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                            self.options.s4_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
                            self.options.s4_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection4_5 != 0 ) {
                            
                            self.options.shelvesCounterSection4_5 = 0
                            self.scene.remove(self.shelvingGroup_section4_5);
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S4_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_5").value = '0';
                            document.getElementById("ShoeShelving_sect4_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                            document.getElementById("InternalShelving_S4_5").checked = false;
                            document.getElementById("ShoeShelving_S4_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_4 != 0 ) {
                            
                            self.options.shelvesCounterSection4_4 = 0
                            self.scene.remove(self.shelvingGroup_section4_4);              
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_4").value = '0';
                            document.getElementById("ShoeShelving_sect4_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                            document.getElementById("InternalShelving_S4_4").checked = false;
                            document.getElementById("ShoeShelving_S4_4").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_4_5 -= 1.05;
                            self.options.sectionHeight_4_4 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y += 1.05
                            
                            self.createWireframeBack_section4_4();
                            self.createRayCastRecieverSection4_4();

                            self.createWireframeBack_section4_5();
                            self.createRayCastRecieverSection4_5(); 

                            document.getElementById("Height_HorizontalPartition_S4_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_4_5 -= 1.05;
                        self.options.sectionHeight_4_4 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y += 1.05
                        
                        self.createWireframeBack_section4_4();
                        self.createRayCastRecieverSection4_4();

                        self.createWireframeBack_section4_5();
                        self.createRayCastRecieverSection4_5(); 

                        document.getElementById("Height_HorizontalPartition_S4_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS4_4_UpButton").addEventListener('click', moveUphorizontalDividerSection4_4); 
            document.getElementById("moveHorizontalPartitionS4_4__2_UpButton").addEventListener('click', moveUphorizontalDividerSection4_4); 

            //4_4 MOVE DOWN
            function moveDownhorizontalDividerSection4_4() {
                if ( self.options.shelvesCounterSection4_4 != 0 || self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                            self.options.s4_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
                            self.options.s4_5_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                            self.options.s4_4_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
                            self.options.s4_4_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection4_5 != 0 ) {
                            
                            self.options.shelvesCounterSection4_5 = 0
                            self.scene.remove(self.shelvingGroup_section4_5);
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S4_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_5").value = '0';
                            document.getElementById("ShoeShelving_sect4_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                            document.getElementById("InternalShelving_S4_5").checked = false;
                            document.getElementById("ShoeShelving_S4_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_4 != 0 ) {
                            
                            self.options.shelvesCounterSection4_4 = 0
                            self.scene.remove(self.shelvingGroup_section4_4);              
                            for (var i = 1; i <= 3; i++) {
                                document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_4").value = '0';
                            document.getElementById("ShoeShelving_sect4_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                            document.getElementById("InternalShelving_S4_4").checked = false;
                            document.getElementById("ShoeShelving_S4_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_4_5 += 1.05;
                            self.options.sectionHeight_4_4 -= 1.05;

                            self.options.sectionHeight_4_5_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section4_5();
                            self.createRayCastRecieverSection4_5();

                            self.createWireframeBack_section4_4();
                            self.createRayCastRecieverSection4_4(); 

                            document.getElementById("Height_HorizontalPartition_S4_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_4_5 += 1.05;
                        self.options.sectionHeight_4_4 -= 1.05;

                        self.options.sectionHeight_4_5_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section4_5();
                        self.createRayCastRecieverSection4_5();

                        self.createWireframeBack_section4_4();
                        self.createRayCastRecieverSection4_4();
                        
                        document.getElementById("Height_HorizontalPartition_S4_4").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS4_4_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_4); 
            document.getElementById("moveHorizontalPartitionS4_4__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_4);    
         

            //4_5 MOVE UP
            function moveUphorizontalDividerSection4_5() {
                if ( self.options.shelvesCounterSection4_5 != 0 || self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_6Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection4_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                            self.options.s4_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
                            self.options.s4_6_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                            self.options.s4_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
                            self.options.s4_5_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection4_5 != 0 ) {
                            
                            self.options.shelvesCounterSection4_5 = 0
                            self.scene.remove(self.shelvingGroup_section4_5);  
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S4_5`).style.display = "none";
                            }
                            document.getElementById("internalShelving_sect4_5").value = '0';
                            document.getElementById("ShoeShelving_sect4_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                            document.getElementById("InternalShelving_S4_5").checked = false;
                            document.getElementById("ShoeShelving_S4_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_6 != 0 ) {
                            
                            self.options.shelvesCounterSection4_6 = 0
                            self.scene.remove(self.shelvingGroup_section4_6);
                            document.getElementById("InternalShelving1_S4_6").style.display = "none";
                            document.getElementById("internalShelving_sect4_6").value = '0';
                            document.getElementById("ShoeShelving_sect4_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "none";
                            document.getElementById("InternalShelving_S4_6").checked = false;
                            document.getElementById("ShoeShelving_S4_6").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_4_6 -= 1.05;
                            self.options.sectionHeight_4_5 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y += 1.05
                            
                            self.createWireframeBack_section4_5();
                            self.createRayCastRecieverSection4_5();

                            self.createWireframeBack_section4_6();
                            self.createRayCastRecieverSection4_6(); 

                            document.getElementById("Height_HorizontalPartition_S4_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_4_6 -= 1.05;
                        self.options.sectionHeight_4_5 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y += 1.05
                        
                        self.createWireframeBack_section4_5();
                        self.createRayCastRecieverSection4_5();

                        self.createWireframeBack_section4_6();
                        self.createRayCastRecieverSection4_6(); 

                        document.getElementById("Height_HorizontalPartition_S4_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS4_5_UpButton").addEventListener('click', moveUphorizontalDividerSection4_5); 
            document.getElementById("moveHorizontalPartitionS4_5__2_UpButton").addEventListener('click', moveUphorizontalDividerSection4_5); 

            //4_5 MOVE DOWN
            function moveDownhorizontalDividerSection4_5() {
                if ( self.options.shelvesCounterSection4_5 != 0 || self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_6Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection4_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                            self.options.s4_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
                            self.options.s4_6_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                            self.options.s4_5_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
                            self.options.s4_5_doorStatus = 1;
                        }
            
                        if ( self.options.shelvesCounterSection4_5 != 0 ) {
                            
                            self.options.shelvesCounterSection4_5 = 0
                            self.scene.remove(self.shelvingGroup_section4_5);
                            
                            for (var i = 1; i <= 2; i++) {
                                document.getElementById(`InternalShelving${i}_S4_5`).style.display = "none";
                            }

                            document.getElementById("internalShelving_sect4_5").value = '0';
                            document.getElementById("ShoeShelving_sect4_5").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                            document.getElementById("InternalShelving_S4_5").checked = false;
                            document.getElementById("ShoeShelving_S4_5").checked = false;
                            
                        } else {}
    
                        if ( self.options.shelvesCounterSection4_6 != 0 ) {
                            
                            self.options.shelvesCounterSection4_6 = 0
                            self.scene.remove(self.shelvingGroup_section4_6);
                            
                            document.getElementById("InternalShelving1_S4_6").style.display = "none";

                            document.getElementById("internalShelving_sect4_4").value = '0';
                            document.getElementById("ShoeShelving_sect4_4").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                            document.getElementById("InternalShelving_S4_4").checked = false;
                            document.getElementById("ShoeShelving_S4_4").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_4_6 += 1.05;
                            self.options.sectionHeight_4_5 -= 1.05;

                            self.options.sectionHeight_4_6_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section4_6();
                            self.createRayCastRecieverSection4_6();

                            self.createWireframeBack_section4_5();
                            self.createRayCastRecieverSection4_5(); 

                            document.getElementById("Height_HorizontalPartition_S4_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_4_6 += 1.05;
                        self.options.sectionHeight_4_5 -= 1.05;

                        self.options.sectionHeight_4_6_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section4_6();
                        self.createRayCastRecieverSection4_6();

                        self.createWireframeBack_section4_5();
                        self.createRayCastRecieverSection4_5();
                        
                        document.getElementById("Height_HorizontalPartition_S4_5").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS4_5_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_5); 
            document.getElementById("moveHorizontalPartitionS4_5__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_5);

            //4_6 MOVE UP
            function moveUphorizontalDividerSection4_6() {
                if ( self.options.shelvesCounterSection4_6 != 0 || self.scene.getObjectByName( "doorSection4_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_7Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_7Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection4_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_7Group'))
                            self.options.s4_7_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_7Group'))
                            self.options.s4_7_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                            self.options.s4_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
                            self.options.s4_6_doorStatus = 1;
                        }
    
                        if ( self.options.shelvesCounterSection4_6 != 0 ) {
                            
                            self.options.shelvesCounterSection4_6 = 0
                            self.scene.remove(self.shelvingGroup_section4_6);
                            
                            document.getElementById("InternalShelving1_S4_6").style.display = "none";

                            document.getElementById("internalShelving_sect4_6").value = '0';
                            document.getElementById("ShoeShelving_sect4_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "none";
                            document.getElementById("InternalShelving_S4_6").checked = false;
                            document.getElementById("ShoeShelving_S4_6").checked = false;
                            
                        } else {}

                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_4_7 -= 1.05;
                            self.options.sectionHeight_4_6 += 1.05;


                            self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y += 1.05
                            
                            self.createWireframeBack_section4_6();
                            self.createRayCastRecieverSection4_6();

                            self.createWireframeBack_section4_7();
                            self.createRayCastRecieverSection4_7(); 

                            document.getElementById("Height_HorizontalPartition_S4_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_4_7 -= 1.05;
                        self.options.sectionHeight_4_6 += 1.05;


                        self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y += 1.05
                        
                        self.createWireframeBack_section4_6();
                        self.createRayCastRecieverSection4_6();

                        self.createWireframeBack_section4_7();
                        self.createRayCastRecieverSection4_7(); 

                        document.getElementById("Height_HorizontalPartition_S4_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS4_6_UpButton").addEventListener('click', moveUphorizontalDividerSection4_6); 
            document.getElementById("moveHorizontalPartitionS4_6__2_UpButton").addEventListener('click', moveUphorizontalDividerSection4_6); 

            //4_6 MOVE DOWN
            function moveDownhorizontalDividerSection4_6() {
                if ( self.options.shelvesCounterSection4_6 != 0 || self.scene.getObjectByName( "doorSection4_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_7Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_7Group", true ) != undefined ) {
                    if (confirm('Are you sure you want to change dimensions of this section? Such change might impact progress within the compartments and some of the product elements might be lost')) {

                        if (self.scene.getObjectByName( "doorSection4_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_7Group'))
                            self.options.s4_7_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_7Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_7Group'))
                            self.options.s4_7_doorStatus = 1;
                        }
                
                        if (self.scene.getObjectByName( "doorSection4_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                            self.options.s4_6_doorStatus = 1;
                        }
                        if (self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined) {
                            self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
                            self.options.s4_6_doorStatus = 1;
                        }
            
    
                        if ( self.options.shelvesCounterSection4_6 != 0 ) {
                            
                            self.options.shelvesCounterSection4_6 = 0
                            self.scene.remove(self.shelvingGroup_section4_6);
                            
                            document.getElementById("InternalShelving1_S4_6").style.display = "none";

                            document.getElementById("internalShelving_sect4_6").value = '0';
                            document.getElementById("ShoeShelving_sect4_6").value = '0';
                            document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "none";
                            document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "none";
                            document.getElementById("InternalShelving_S4_6").checked = false;
                            document.getElementById("ShoeShelving_S4_6").checked = false;
                            
                        } else {}
                
                        if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                            self.options.sectionHeight_4_7 += 1.05;
                            self.options.sectionHeight_4_6 -= 1.05;

                            self.options.sectionHeight_4_7_positionY -= 1.05

                            self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y -= 1.05
                            
                            self.createWireframeBack_section4_7();
                            self.createRayCastRecieverSection4_7();

                            self.createWireframeBack_section4_6();
                            self.createRayCastRecieverSection4_6(); 

                            document.getElementById("Height_HorizontalPartition_S4_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                            document.getElementById("Height_HorizontalPartition_S4_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                            

                        } else {showHintPanel("A compartmentâs minimum height has been reached.");};


                    }else {
                        
                        return;
                    }
                } else{
                    if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 11 ) {

                        self.options.sectionHeight_4_7 += 1.05;
                        self.options.sectionHeight_4_6 -= 1.05;

                        self.options.sectionHeight_4_7_positionY -= 1.05

                        self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y -= 1.05
                        
                        self.createWireframeBack_section4_7();
                        self.createRayCastRecieverSection4_7();

                        self.createWireframeBack_section4_6();
                        self.createRayCastRecieverSection4_6();
                        
                        document.getElementById("Height_HorizontalPartition_S4_6").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) - 1) +"cm";

                        document.getElementById("Height_HorizontalPartition_S4_7").innerHTML = Math.floor(parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) + 1) +"cm";
                        

                    } else {showHintPanel("A compartmentâs minimum height has been reached.");};
                }

                self.updateDoorButtons();
                self.calculateOutput();
                if (self.options.statusShowDimensions == 1) {
                    self.createDimensions();
                }

            };
            document.getElementById("moveHorizontalPartitionS4_6_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_6); 
            document.getElementById("moveHorizontalPartitionS4_6__2_DownButton").addEventListener('click', moveDownhorizontalDividerSection4_6);
    
 

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            // events about moving pillars (vertical dividers) 
            
            function move1PatitionDown() {
                if (parseFloat(document.getElementById('pillar1PositionField_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) > 20) {
                    if (self.options.shelvesCounterSection2_1 != 0 || self.options.shelvesCounterSection2_2 != 0 || self.options.shelvesCounterSection2_3 != 0 || self.options.shelvesCounterSection2_4 != 0 || self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined || self.options.shelvesCounterSection1_1 != 0 || self.options.shelvesCounterSection1_2 != 0 || self.options.shelvesCounterSection1_3 != 0 || self.options.shelvesCounterSection1_4 != 0 || self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection1_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection1_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection1_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined) {
                        if (confirm('Are you sure you want to change the width of section? Such change might impact progress within the compartment and some of the product elements might be lost')) {
    
                            self.options.wasChangedSectionsLengthOrNot = 1;
    
    
                            self.options.pillar1Position = self.scene.getObjectByName( "pillar1", true ).position.x;
                        
    
                            self.removeHorizontalDividers();
                            self.removeHorizontalDividersS2();
    
                            self.options.section1Length -= 1;
                            self.options.section2Length += 1;
                            self.options.pillar1Position -= 1
    
                            self.pillar1.position.x = self.options.pillar1Position;
    
    
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
    
                            if (self.options.amountOfSections >= 2) {
                                self.createWireframeBack_section2_1();
                                self.createRayCastRecieverSection2_1();
                            }
    
                            self.options.pillar1Position = self.scene.getObjectByName( "pillar1", true ).position.x;
                            self.options.pillar1ChangedOrNot = true;
                            self.options.pillar2ChangedOrNot = true;
    
                        }else {
                            
                            return;
                        }
                    }else {
    
                        self.options.wasChangedSectionsLengthOrNot = 1;
    
    
                        self.options.pillar1Position = self.scene.getObjectByName( "pillar1", true ).position.x;
                    
    
                        self.removeHorizontalDividers();
                        self.removeHorizontalDividersS2();
    
                        self.options.section1Length -= 1;
                        self.options.section2Length += 1;
                        self.options.pillar1Position -= 1
    
                        self.pillar1.position.x = self.options.pillar1Position;
    
    
                        self.createWireframeBack_section1_1();
                        self.createRayCastRecieverSection1_1();
    
    
                        if (self.options.amountOfSections >= 2) {
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
                        }
    
                        self.options.pillar1Position = self.scene.getObjectByName( "pillar1", true ).position.x;
                        self.options.pillar1ChangedOrNot = true;
                        self.options.pillar2ChangedOrNot = true;
                    }
    
    
    
                    var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                    }

                    var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                    }
                    
    
    
    
                    self.updateDoorButtons();
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }
    
    
                } else {
                    showHintPanel("A compartmentâs minimum width has been reached.");
                };
    
                
            };
    
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move1PatitionDownButton_S1_${i}`).addEventListener('click', move1PatitionDown);
            }
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move1PatitionDownButton_S2_${i}`).addEventListener('click', move1PatitionDown);
            }

    
    
            function move1PatitionUp() {
                if (parseFloat(document.getElementById('pillar2PositionField_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) > 20) {
                    if (self.options.shelvesCounterSection2_1 != 0 || self.options.shelvesCounterSection2_2 != 0 || self.options.shelvesCounterSection2_3 != 0 || self.options.shelvesCounterSection2_4 != 0 || self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined || self.options.shelvesCounterSection1_1 != 0 || self.options.shelvesCounterSection1_2 != 0 || self.options.shelvesCounterSection1_3 != 0 || self.options.shelvesCounterSection1_4 != 0 || self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection1_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection1_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection1_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined) {
                        if (confirm('Are you sure you want to change the width of section? Such change might impact progress within the compartment and some of the product elements might be lost')) {
    
                            self.options.wasChangedSectionsLengthOrNot = 1;
    
                            // sync of position
                            self.options.pillar1Position = self.scene.getObjectByName( "pillar1", true ).position.x;
                            
                            self.options.section1Length += 1;
                            self.options.section2Length -= 1;
                            self.options.pillar1Position += 1;
    
    
                            self.pillar1.position.x = self.options.pillar1Position;
    
    
                            self.removeHorizontalDividers();
    
                            //
                            self.createWireframeBack_section1_1();
                            self.createRayCastRecieverSection1_1();
    
                            
                            if (self.options.amountOfSections >= 2) {
                                self.removeHorizontalDividersS2();
    
                                self.createWireframeBack_section2_1();
                                self.createRayCastRecieverSection2_1();
    
                            }
    
                            self.options.pillar1Position = self.scene.getObjectByName( "pillar1", true ).position.x;
                            self.options.pillar1ChangedOrNot = true;
    
                        }else {
                            
                            return;
                        }
                    }else {
    
                        self.options.wasChangedSectionsLengthOrNot = 1;
    
                        // sync of position
                        self.options.pillar1Position = self.scene.getObjectByName( "pillar1", true ).position.x;
                        
                        self.options.section1Length += 1;
                        self.options.section2Length -= 1;
                        self.options.pillar1Position += 1;
    
                        
    
                        self.pillar1.position.x = self.options.pillar1Position;
    
                        self.removeHorizontalDividers();
    
                        //
                        self.createWireframeBack_section1_1();
                        self.createRayCastRecieverSection1_1();
    
                        
                        if (self.options.amountOfSections >= 2) {
                            self.removeHorizontalDividersS2();
    
                            self.createWireframeBack_section2_1();
                            self.createRayCastRecieverSection2_1();
    
                        }
    
                        self.options.pillar1Position = self.scene.getObjectByName( "pillar1", true ).position.x;
                        self.options.pillar1ChangedOrNot = true;
    
                    }
    
    
                    var pillarPositionS1 = Math.floor(self.options.section1Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                    }

                    var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                    }

                    var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                    }
                    
    
                    self.updateDoorButtons();      
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }
    
    
                } else {
                    showHintPanel("A compartmentâs minimum width has been reached. This is applicable for all affected compartments.");
                };
            };
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move1PatitionUpButton_S1_${i}`).addEventListener('click', move1PatitionUp);
            }
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move1PatitionUpButton_S2_${i}`).addEventListener('click', move1PatitionUp);
            }

    
    
    
            function move2PatitionDown() {
    
                if (parseFloat(document.getElementById('pillar2PositionField_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) > 20 ) {
                    if ( self.options.shelvesCounterSection3_1 != 0 || self.options.shelvesCounterSection3_2 != 0 || self.options.shelvesCounterSection3_3 != 0 || self.options.shelvesCounterSection3_4 != 0 || self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined || self.options.shelvesCounterSection2_1 != 0 || self.options.shelvesCounterSection2_2 != 0 || self.options.shelvesCounterSection2_3 != 0 || self.options.shelvesCounterSection2_4 != 0 || self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined ) {
                        if (confirm('Are you sure you want to change the width of section? Such change might impact progress within the compartment and some of the product elements might be lost')) {
    
                            self.options.wasChangedSectionsLengthOrNot = 1;
    
                            // sync of position
                            self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                            
                            self.options.section2Length -= 1;
                            self.options.section3Length += 1;
                            self.options.pillar2Position -= 1;
    
                            self.pillar2.position.x = self.options.pillar2Position;
    
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
    
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
    
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
    
                            self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                            self.options.pillar2ChangedOrNot = true;
                            self.options.pillar3ChangedOrNot = true;
                        }else {
                            
                            return;
                        }
                    }else {
                        self.options.wasChangedSectionsLengthOrNot = 1;
    
                        // sync of position
                        self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                        
                        self.options.section2Length -= 1;
                        self.options.section3Length += 1;
                        self.options.pillar2Position -= 1;
    
                        self.pillar2.position.x = self.options.pillar2Position;
    
                        self.removeHorizontalDividersS2();
                        self.removeHorizontalDividersS3();
    
                        self.createWireframeBack_section2_1();
                        self.createWireframeBack_section3_1();
    
                        self.createRayCastRecieverSection2_1();
                        self.createRayCastRecieverSection3_1();
    
                        self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                        self.options.pillar2ChangedOrNot = true;
                        self.options.pillar3ChangedOrNot = true;
                    }
    
    
                    var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                    }

                    var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                    }
                    
    
    
                    self.updateDoorButtons();
    
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }
    
    
                } else {
                    showHintPanel("A compartmentâs minimum width has been reached.");
                };
                
            };
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move2PatitionDownButton_S2_${i}`).addEventListener('click', move2PatitionDown);
            }
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move2PatitionDownButton_S3_${i}`).addEventListener('click', move2PatitionDown);
            }
    
    
            function move2PatitionUp() {
                if (parseFloat(document.getElementById('pillar3PositionField_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) > 20) {
                    if ( self.options.shelvesCounterSection3_1 != 0 || self.options.shelvesCounterSection3_2 != 0 || self.options.shelvesCounterSection3_3 != 0 || self.options.shelvesCounterSection3_4 != 0 || self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined || self.options.shelvesCounterSection2_1 != 0 || self.options.shelvesCounterSection2_2 != 0 || self.options.shelvesCounterSection2_3 != 0 || self.options.shelvesCounterSection2_4 != 0 || self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined ) {
                        if (confirm('Are you sure you want to change the width of section? Such change might impact progress within the compartment and some of the product elements might be lost')) {
    
                            self.options.wasChangedSectionsLengthOrNot = 1;
    
                            // sync of position
                            self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                            
                            self.options.section2Length += 1;
                            self.options.section3Length -= 1;
                            self.options.pillar2Position += 1;
    
                            self.pillar2.position.x = self.options.pillar2Position;
    
                            self.removeHorizontalDividersS2();
                            self.removeHorizontalDividersS3();
    
                            self.createWireframeBack_section2_1();
                            self.createWireframeBack_section3_1();
    
                            self.createRayCastRecieverSection2_1();
                            self.createRayCastRecieverSection3_1();
    
    
                            self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                            self.options.pillar2ChangedOrNot = true;
                            self.options.pillar3ChangedOrNot = true;
                        }else {
                            
                            return;
                        }
                    }else {
    
                        self.options.wasChangedSectionsLengthOrNot = 1;
    
                        // sync of position
                        self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                        
                        self.options.section2Length += 1;
                        self.options.section3Length -= 1;
                        self.options.pillar2Position += 1;
    
                        self.pillar2.position.x = self.options.pillar2Position;
    
                        self.removeHorizontalDividersS2();
                        self.removeHorizontalDividersS3();
    
                        //self.createWireframeBack_section1_1();
                        self.createWireframeBack_section2_1();
                        self.createWireframeBack_section3_1();
    
                        self.createRayCastRecieverSection2_1();
                        self.createRayCastRecieverSection3_1();
    
    
                        self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                        self.options.pillar2ChangedOrNot = true;
                        self.options.pillar3ChangedOrNot = true;
    
                    }
    
    
                    var pillarPositionS2 = Math.floor(self.options.section2Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                    }

                    var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                    }
                    
    
    
    
                    self.updateDoorButtons();
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }
    
    
                } else {
                    showHintPanel("A compartmentâs minimum width has been reached. This is applicable for all affected compartments.");
                };
                
            };
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move2PatitionUpButton_S2_${i}`).addEventListener('click', move2PatitionUp);
            }
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move2PatitionUpButton_S3_${i}`).addEventListener('click', move2PatitionUp);
            }
    
    
    
    
    
            function move3PatitionDown() {
                if (parseFloat(document.getElementById('pillar3PositionField_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) > 20) {
                    if ( self.options.shelvesCounterSection4_1 != 0 || self.options.shelvesCounterSection4_2 != 0 || self.options.shelvesCounterSection4_3 != 0 || self.options.shelvesCounterSection4_4 != 0 || self.scene.getObjectByName( "doorSection4_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection4_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection4_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection4_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined || self.options.shelvesCounterSection3_1 != 0 || self.options.shelvesCounterSection3_2 != 0 || self.options.shelvesCounterSection3_3 != 0 || self.options.shelvesCounterSection3_4 != 0 || self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined ) {
                        if (confirm('Are you sure you want to change the width of section? Such change might impact progress within the compartment and some of the product elements might be lost')) {
                            self.options.wasChangedSectionsLengthOrNot = 1;
    
                            // sync of position
                            self.options.pillar3Position = self.scene.getObjectByName( "pillar3", true ).position.x;
                            
                            self.options.section3Length -= 1;
                            self.options.section4Length += 1;
                            self.options.pillar3Position -= 1;
            
                            self.pillar3.position.x = self.options.pillar3Position;
            
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
            
                            self.createWireframeBack_section3_1();
                            self.createWireframeBack_section4_1();
                            self.createRayCastRecieverSection3_1();
                            self.createRayCastRecieverSection4_1();
    
                            self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                            self.options.pillar3Position = self.scene.getObjectByName( "pillar3", true ).position.x;
                            self.options.pillar2ChangedOrNot = true;
                            self.options.pillar3ChangedOrNot = true;
    
                        }else {
                            
                            return;
                        }
                    }else {
                        self.options.wasChangedSectionsLengthOrNot = 1;
    
                        // sync of position
                        self.options.pillar3Position = self.scene.getObjectByName( "pillar3", true ).position.x;
                        
                        self.options.section3Length -= 1;
                        self.options.section4Length += 1;
                        self.options.pillar3Position -= 1;
        
                        self.pillar3.position.x = self.options.pillar3Position;
        
                        self.removeHorizontalDividersS3();
                        self.removeHorizontalDividersS4();
        
                        self.createWireframeBack_section3_1();
                        self.createWireframeBack_section4_1();
                        self.createRayCastRecieverSection3_1();
                        self.createRayCastRecieverSection4_1();
    
                        self.options.pillar2Position = self.scene.getObjectByName( "pillar2", true ).position.x;
                        self.options.pillar2ChangedOrNot = true;
                        self.options.pillar3ChangedOrNot = true;
                    }
    
    
                   
                    var pillarPositionS4 = Math.floor(self.options.section4Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 5; i++) {
                        document.getElementById(`pillar4PositionField_S4_${i}`).innerHTML = pillarPositionS4;
                    }

                    var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                    }
    
    
                    self.updateDoorButtons();
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }
    
    
    
                } else {
                    showHintPanel("A compartmentâs minimum width has been reached.");
                };
                
            };
    
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move3PatitionDownButton_S3_${i}`).addEventListener('click', move3PatitionDown);
            }
            for (let i = 1; i <= 5; i++) {
                document.getElementById(`move3PatitionDownButton_S4_${i}`).addEventListener('click', move3PatitionDown);
            }
    
    
            function move3PatitionUp() {
    
                if (parseFloat(document.getElementById('pillar4PositionField_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) > 20) {
                    if ( self.options.shelvesCounterSection4_1 != 0 || self.options.shelvesCounterSection4_2 != 0 || self.options.shelvesCounterSection4_3 != 0 || self.options.shelvesCounterSection4_4 != 0 || self.scene.getObjectByName( "doorSection4_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection4_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection4_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection4_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined || self.options.shelvesCounterSection3_1 != 0 || self.options.shelvesCounterSection3_2 != 0 || self.options.shelvesCounterSection3_3 != 0 || self.options.shelvesCounterSection3_4 != 0 || self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined ||  self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined || self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined || self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_1", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined || self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined ) {
                        if (confirm('Are you sure you want to change the width of section? Such change might impact progress within the compartment and some of the product elements might be lost')) {
    
                            self.options.wasChangedSectionsLengthOrNot = 1;
    
                            // sync of position
                            self.options.pillar3Position = self.scene.getObjectByName( "pillar3", true ).position.x;
                            
                            self.options.section3Length += 1;
                            self.options.section4Length -= 1;
                            self.options.pillar3Position += 1;
    
                            self.pillar3.position.x = self.options.pillar3Position;
    
                            self.removeHorizontalDividersS3();
                            self.removeHorizontalDividersS4();
    
                            self.createWireframeBack_section3_1();
                            self.createWireframeBack_section4_1();
                            self.createRayCastRecieverSection3_1();
                            self.createRayCastRecieverSection4_1();
    
                            self.options.pillar3Position = self.scene.getObjectByName( "pillar3", true ).position.x;
                            self.options.pillar3ChangedOrNot = true;
    
                        }else {
                            
                            return;
                        }
                    }else {
                        self.options.wasChangedSectionsLengthOrNot = 1;
    
                        // sync of position
                        self.options.pillar3Position = self.scene.getObjectByName( "pillar3", true ).position.x;
                        
                        self.options.section3Length += 1;
                        self.options.section4Length -= 1;
                        self.options.pillar3Position += 1;
    
                        self.pillar3.position.x = self.options.pillar3Position;
    
                        self.removeHorizontalDividersS3();
                        self.removeHorizontalDividersS4();
    
                        self.createWireframeBack_section3_1();
                        self.createWireframeBack_section4_1();
                        self.createRayCastRecieverSection3_1();
                        self.createRayCastRecieverSection4_1();
    
                        self.options.pillar3Position = self.scene.getObjectByName( "pillar3", true ).position.x;
                        self.options.pillar3ChangedOrNot = true;
                    }
    
                    
    
                    var pillarPositionS4 = Math.floor(self.options.section4Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 5; i++) {
                        document.getElementById(`pillar4PositionField_S4_${i}`).innerHTML = pillarPositionS4;
                    }

                    var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) + "cm";
                    for (let i = 1; i <= 7; i++) {
                        document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                    }
    
                    self.updateDoorButtons();
                    if (self.options.statusShowDimensions == 1) {
                        self.createDimensions();
                    }
    
    
                } else {
                    showHintPanel("A compartmentâs minimum width has been reached. This is applicable for all affected compartments.");
                };
                
            };

            for (let i = 1; i <= 7; i++) {
                document.getElementById(`move3PatitionUpButton_S3_${i}`).addEventListener('click', move3PatitionUp);
            }
            for (let i = 1; i <= 5; i++) {
                document.getElementById(`move3PatitionUpButton_S4_${i}`).addEventListener('click', move3PatitionUp);
            }

    
    
    
    
    
    
    
    
    
    
        
            
            //DOORS
    
    
            //Create Doors (universal)
            
    
            function createDoor(
                groupId, 
                groupName, 
                doorHeight, 
                doorWidth, 
                doorName, 
                groupPositionX, 
                groupPositionY, 
                handleName,
                handlePosTop, 
                handlePosSides
            ) {
                self.scene.remove(groupName);
            
                groupName = new THREE.Group();
                groupName.name = groupId;
            
                self.loadAndPlaceHandle(handleName, handlePosTop,handlePosSides, self.options.shelf.width + 5, groupName, !self.options.statusHideHandle);

                groupName.add(self.createDoorProto(doorHeight + 2, doorWidth, doorName, doorName));
                groupName.position.x = groupPositionX;
                groupName.position.y = groupPositionY;
                groupName.position.z = -self.options.room.width / 2 + self.options.shelf.width - (self.options.shelf.thickness);
            
                
                self.scene.add(groupName);
            };
    
    
            function createDoubleDoor(groupId, groupName, doorHeight_1, doorWidth_1, doorName_1, groupPositionX, groupPositionY, handleName_1, handlePosTop_1, handlePosSides_1, doorHeight_2, doorWidth_2, doorName_2, handleName_2, handlePosTop_2, handlePosSides_2) {
    
                self.scene.remove(groupName);
    
                groupName = new THREE.Group();
                groupName.name = groupId;
    
                // 0.15 is the gap between doors
                groupName.add(self.createDoorProto(doorHeight_1 +2, doorWidth_1 / 2 - 0.20, doorName_1));
                groupName.add(self.createDoorProto(doorHeight_2 +2, doorWidth_2 / 2 - 0.20, doorName_2));
    
                self.loadAndPlaceHandle(handleName_1, handlePosTop_1,handlePosSides_1, 1.5, groupName, !self.options.statusHideHandle);
                self.loadAndPlaceHandle(handleName_2, handlePosTop_2, handlePosSides_2, 1.5, groupName, !self.options.statusHideHandle);
                
                groupName.position.x = groupPositionX
                groupName.position.y = groupPositionY
                groupName.position.z = -self.options.room.width / 2 + self.options.shelf.width - (self.options.shelf.thickness)
    
                groupName.getObjectByName(doorName_2).position.x = doorWidth_1 / 2
    
                self.scene.add(groupName);
    
            };
    
    
            function addGrommet(
                groupId, 
                groupName, 
                groupPositionX, 
                groupPositionY, 
                grommetName,
                grommetPosTop, 
                grommetPosSides,
                grommetPosDepth,
                grommetrotationX,
                groupPositionZ
            ) {
                self.scene.remove(groupName);
            
                groupName = new THREE.Group();
                groupName.name = groupId;

                groupName.position.x = groupPositionX;
                groupName.position.y = groupPositionY;
                groupName.position.z = groupPositionZ
                
                self.loadAndPlaceGrommet(grommetName, grommetPosTop, grommetPosSides, grommetPosDepth, grommetrotationX, groupName);
                self.scene.add(groupName);
            };
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
            //save /load via url
            //ð´
            function loadStateFromURL() {
                
                const params = new URLSearchParams(window.location.search);

                if (params.has('URLpu')) {
                    self.options.URLParamsUsed = params.get('URLpu')
                }
            
                // Load cube position from URL parameters
                if (params.has('w')) {
                    document.getElementById("subdomainWidthCabinet_Dimensions").value = parseFloat(+params.get('w'));
                    document.getElementById("sliderWidth").value = parseFloat(+params.get('w'));
                    changeWidth();
                }
                if (params.has('h')) {
                    document.getElementById("subdomainHeightCabinet_Dimensions").value = parseFloat(+params.get('h'));
                    document.getElementById("sliderHeight").value = parseFloat(+params.get('h'));
                    changeHeight();
                }
                if (params.has('d')) {
                    document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value = parseFloat(+params.get('d'));
                    document.getElementById("sliderDepth").value = parseFloat(+params.get('d'));
                    changeDepth();
                }
                if (params.has('f')) {
                    self.options.statusLegs = parseFloat(+params.get('f'));

                    switch (self.options.statusLegs) {
    
                        case 0: 
                            document.getElementById("typeFeet").value = "Slider";
                            self.options.statusLegs = 0;
                        break;
            
                        case 1: 
                            document.getElementById("typeFeet").value = "Plinth";
                            self.options.statusLegs = 0;
                        break;
            
                        case 2: 
                            document.getElementById("typeFeet").value = "MetalLegs";
                            self.options.statusLegs = 0;
                        break;
                        
                    }

                    changeLegs();
                                 
                }

                //verticals
                if (params.has('v')) {
                    document.getElementById("subdomainNumberElementCorpus_Cabinet_Dimensionsz").value = parseFloat(+params.get('v'))
                    self.startVerticals();
                }
                    
                //color
                if (params.has('FC')) {
                    self.options.shelf.texture = params.get('FC');
                }  
                if (params.has('PC')) {
                    self.options.pillar.texture = params.get('PC');
                }
                if (params.has('DC')) {
                    self.options.doors.texture = params.get('DC');
                    setUpStartColorsURL(); 
                    self.updateShelfProtoMaterial();
                }   
                
                if (params.has('cC')) {
                    document.getElementById("choosenColor_Carcass").innerHTML = params.get('cC');
                } 
                if (params.has('iC')) {
                    document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = params.get('iC');
                } 

                if (params.has('cC')) {
                    document.getElementById("choosenColor_Carcass").innerHTML = params.get('cC');
                } 
                if (params.has('iC')) {
                    document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = params.get('iC');
                } 
                if (params.has('ihC')) {
                    document.getElementById("choosenColor_CarcassIcon").innerHTML = params.get('ihC');
                } 

                if (params.has('cF')) {
                    document.getElementById("choosenColor_Door").innerHTML = params.get('cF');
                } 
                if (params.has('iF')) {
                    document.getElementById("choosenColor_DoorIcon").style.backgroundColor = params.get('iF');
                } 
                if (params.has('ihF')) {
                    document.getElementById("choosenColor_DoorIcon").innerHTML = params.get('ihF');
                } 

    
                //s1 horizontals
                if (params.has('s1_hDS')) {
                    self.options.s1_horizDividStatus = +params.get('s1_hDS');
                }    
                if (params.has('s1_hDS') == 1) {
    
                    document.getElementById("HorizontalPartition_S1_1").checked = true;
    
                    if (params.has('s1_AHD')) {
                        self.options.s1_AmountOfHorDividers = params.get('s1_AHD');

                        document.getElementById('amount_HorPartition1_1').value = +params.get('s1_AHD');
                        document.getElementById('amount_HorPartition1_2').value = +params.get('s1_AHD');
                        document.getElementById('amount_HorPartition1_3').value = +params.get('s1_AHD');
                        document.getElementById('amount_HorPartition1_4').value = +params.get('s1_AHD');
                        document.getElementById('amount_HorPartition1_5').value = +params.get('s1_AHD');

                    }  
    
                    switch(params.get('s1_AHD')){
                        case '1':    
                            if ( params.has('s1_hDS') == 1) {    
    
                                self.options.sectionHeight_1_2 = +self.params.get('H_S1_2');
                                self.options.sectionHeight_1_1 = +self.params.get('H_S1_1');
                                
                                createHorizontalPartition_S1_1('savedCorrectionURL')
                            } else {};
                        break;
                        case '2':
                            if (  params.has('s1_2_hDS') == 1 ) {
        
                                self.options.sectionHeight_1_1 = +self.params.get('H_S1_1');
                                self.options.sectionHeight_1_2 = +self.params.get('H_S1_2');
                                self.options.sectionHeight_1_3 = +self.params.get('H_S1_3');
    
                                createHorizontalPartition_S1_1('savedCorrectionURL')
                                createHorizontalPartition_S1_2('savedCorrectionURL')
    
        
                            } else {};
                        break;
                        case '3':
                            if (  params.has('s1_3_hDS') == 1 ) {
        
                                self.options.sectionHeight_1_1 = +self.params.get('H_S1_1');
                                self.options.sectionHeight_1_2 = +self.params.get('H_S1_2');
                                self.options.sectionHeight_1_3 = +self.params.get('H_S1_3');
                                self.options.sectionHeight_1_4 = +self.params.get('H_S1_4');

                                createHorizontalPartition_S1_1('savedCorrectionURL')
                                createHorizontalPartition_S1_2('savedCorrectionURL')    
                                createHorizontalPartition_S1_3('savedCorrectionURL')
        
                            } else {};
                        break;
                        case '4':            
                            if ( params.has('s1_4_hDS') == 1 ) {
        
    
                                self.options.sectionHeight_1_1 = +self.params.get('H_S1_1');
                                self.options.sectionHeight_1_2 = +self.params.get('H_S1_2');
                                self.options.sectionHeight_1_3 = +self.params.get('H_S1_3');
                                self.options.sectionHeight_1_4 = +self.params.get('H_S1_4');
                                self.options.sectionHeight_1_5 = +self.params.get('H_S1_5');

                                createHorizontalPartition_S1_1('savedCorrectionURL')
                                createHorizontalPartition_S1_2('savedCorrectionURL')
                                createHorizontalPartition_S1_3('savedCorrectionURL')
                                createHorizontalPartition_S1_4('savedCorrectionURL')

        
                            } else {};
                        break;
                        case '5':            
                            if ( params.has('s1_5_hDS') == 1 ) {
        
    
                                self.options.sectionHeight_1_1 = +self.params.get('H_S1_1');
                                self.options.sectionHeight_1_2 = +self.params.get('H_S1_2');
                                self.options.sectionHeight_1_3 = +self.params.get('H_S1_3');
                                self.options.sectionHeight_1_4 = +self.params.get('H_S1_4');
                                self.options.sectionHeight_1_5 = +self.params.get('H_S1_5');
                                self.options.sectionHeight_1_6 = +self.params.get('H_S1_6');

                                createHorizontalPartition_S1_1('savedCorrectionURL')
                                createHorizontalPartition_S1_2('savedCorrectionURL')
                                createHorizontalPartition_S1_3('savedCorrectionURL')
                                createHorizontalPartition_S1_4('savedCorrectionURL')
                                createHorizontalPartition_S1_5('savedCorrectionURL')

        
                            } else {};
                        break;
                        case '6':            
                            if ( params.has('s1_6_hDS') == 1 ) {
        
    
                                self.options.sectionHeight_1_1 = +self.params.get('H_S1_1');
                                self.options.sectionHeight_1_2 = +self.params.get('H_S1_2');
                                self.options.sectionHeight_1_3 = +self.params.get('H_S1_3');
                                self.options.sectionHeight_1_4 = +self.params.get('H_S1_4');
                                self.options.sectionHeight_1_5 = +self.params.get('H_S1_5');
                                self.options.sectionHeight_1_6 = +self.params.get('H_S1_6');
                                self.options.sectionHeight_1_7 = +self.params.get('H_S1_7');

                                createHorizontalPartition_S1_1('savedCorrectionURL')
                                createHorizontalPartition_S1_2('savedCorrectionURL')
                                createHorizontalPartition_S1_3('savedCorrectionURL')
                                createHorizontalPartition_S1_4('savedCorrectionURL')
                                createHorizontalPartition_S1_5('savedCorrectionURL')
                                createHorizontalPartition_S1_6('savedCorrectionURL')
        
                            } else {};
                        break;
                        
                    }
    
                } else {}  
    
    
                //s2 horizontals
                if (params.has('s2_hDS')) {
                    self.options.s2_horizDividStatus = +params.get('s2_hDS');
                }    
                if (params.has('s2_hDS') == 1) {
    
                    document.getElementById("HorizontalPartition_S2_1").checked = true;
    
                    if (params.has('s2_AHD')) {
                        self.options.s2_AmountOfHorDividers = params.get('s2_AHD');

                        document.getElementById('amount_HorPartition2_1').value = +params.get('s2_AHD');
                        document.getElementById('amount_HorPartition2_2').value = +params.get('s2_AHD');
                        document.getElementById('amount_HorPartition2_3').value = +params.get('s2_AHD');
                        document.getElementById('amount_HorPartition2_4').value = +params.get('s2_AHD');
                        document.getElementById('amount_HorPartition2_5').value = +params.get('s2_AHD');
                    }  
    
                    switch(params.get('s2_AHD')){
                        case '1':    
                            if ( params.has('s2_hDS') == 1) {    
    
                                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
                                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                                
                                createHorizontalPartition_S2_1('savedCorrectionURL')
                            } else {};
                        break;
                        case '2':
                            if (  params.has('s2_2_hDS') == 1 ) {
        
                                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
                                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
    
                                createHorizontalPartition_S2_1('savedCorrectionURL')
                                createHorizontalPartition_S2_2('savedCorrectionURL')
    
        
                            } else {};
                        break;
                        case '3':
                            if (  params.has('s2_3_hDS') == 1 ) {
        
                                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
                                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
                                self.options.sectionHeight_2_4 = +self.params.get('H_S2_4');

                                createHorizontalPartition_S2_1('savedCorrectionURL')
                                createHorizontalPartition_S2_2('savedCorrectionURL')    
                                createHorizontalPartition_S2_3('savedCorrectionURL')
        
                            } else {};
                        break;
                        case '4':            
                            if ( params.has('s2_4_hDS') == 1 ) {
        
    
                                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
                                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
                                self.options.sectionHeight_2_4 = +self.params.get('H_S2_4');
                                self.options.sectionHeight_2_5 = +self.params.get('H_S2_5');

                                createHorizontalPartition_S2_1('savedCorrectionURL')
                                createHorizontalPartition_S2_2('savedCorrectionURL')
                                createHorizontalPartition_S2_3('savedCorrectionURL')
                                createHorizontalPartition_S2_4('savedCorrectionURL')

        
                            } else {};
                        break;
                        case '5':            
                            if ( params.has('s2_5_hDS') == 1 ) {
        
    
                                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
                                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
                                self.options.sectionHeight_2_4 = +self.params.get('H_S2_4');
                                self.options.sectionHeight_2_5 = +self.params.get('H_S2_5');
                                self.options.sectionHeight_2_6 = +self.params.get('H_S2_6');

                                createHorizontalPartition_S2_1('savedCorrectionURL')
                                createHorizontalPartition_S2_2('savedCorrectionURL')
                                createHorizontalPartition_S2_3('savedCorrectionURL')
                                createHorizontalPartition_S2_4('savedCorrectionURL')
                                createHorizontalPartition_S2_5('savedCorrectionURL')

        
                            } else {};
                        break;
                        case '6':            
                            if ( params.has('s2_6_hDS') == 1 ) {
        
    
                                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
                                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
                                self.options.sectionHeight_2_4 = +self.params.get('H_S2_4');
                                self.options.sectionHeight_2_5 = +self.params.get('H_S2_5');
                                self.options.sectionHeight_2_6 = +self.params.get('H_S2_6');
                                self.options.sectionHeight_2_7 = +self.params.get('H_S2_7');

                                createHorizontalPartition_S2_1('savedCorrectionURL')
                                createHorizontalPartition_S2_2('savedCorrectionURL')
                                createHorizontalPartition_S2_3('savedCorrectionURL')
                                createHorizontalPartition_S2_4('savedCorrectionURL')
                                createHorizontalPartition_S2_5('savedCorrectionURL')
                                createHorizontalPartition_S2_6('savedCorrectionURL')
        
                            } else {};
                        break;
                        case '7':            
                            if ( params.has('s2_7_hDS') == 1 ) {
        
    
                                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
                                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
                                self.options.sectionHeight_2_4 = +self.params.get('H_S2_4');
                                self.options.sectionHeight_2_5 = +self.params.get('H_S2_5');
                                self.options.sectionHeight_2_6 = +self.params.get('H_S2_6');
                                self.options.sectionHeight_2_7 = +self.params.get('H_S2_7');
                                self.options.sectionHeight_2_8 = +self.params.get('H_S2_8');

                                createHorizontalPartition_S2_1('savedCorrectionURL')
                                createHorizontalPartition_S2_2('savedCorrectionURL')
                                createHorizontalPartition_S2_3('savedCorrectionURL')
                                createHorizontalPartition_S2_4('savedCorrectionURL')
                                createHorizontalPartition_S2_5('savedCorrectionURL')
                                createHorizontalPartition_S2_6('savedCorrectionURL')
                                createHorizontalPartition_S2_7('savedCorrectionURL')
        
                            } else {};
                        break;
                        case '8':            
                            if ( params.has('s2_8_hDS') == 1 ) {
        
    
                                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
                                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
                                self.options.sectionHeight_2_4 = +self.params.get('H_S2_4');
                                self.options.sectionHeight_2_5 = +self.params.get('H_S2_5');
                                self.options.sectionHeight_2_6 = +self.params.get('H_S2_6');
                                self.options.sectionHeight_2_7 = +self.params.get('H_S2_7');
                                self.options.sectionHeight_2_8 = +self.params.get('H_S2_8');
                                self.options.sectionHeight_2_9 = +self.params.get('H_S2_9');

                                createHorizontalPartition_S2_1('savedCorrectionURL')
                                createHorizontalPartition_S2_2('savedCorrectionURL')
                                createHorizontalPartition_S2_3('savedCorrectionURL')
                                createHorizontalPartition_S2_4('savedCorrectionURL')
                                createHorizontalPartition_S2_5('savedCorrectionURL')
                                createHorizontalPartition_S2_6('savedCorrectionURL')
                                createHorizontalPartition_S2_7('savedCorrectionURL')
                                createHorizontalPartition_S2_8('savedCorrectionURL')
        
                            } else {};
                        break;
                    }
    
                } else {}             
                
                
                //s3 horizontals
                if (params.has('s3_hDS')) {
                    self.options.s3_horizDividStatus = +params.get('s3_hDS');
                }    
                if (params.has('s3_hDS') == 1) {
    
                    document.getElementById("HorizontalPartition_S3_1").checked = true;
    
                    if (params.has('s3_AHD')) {
                        self.options.s3_AmountOfHorDividers = params.get('s3_AHD');

                        document.getElementById('amount_HorPartition3_1').value = +params.get('s3_AHD');
                        document.getElementById('amount_HorPartition3_2').value = +params.get('s3_AHD');
                        document.getElementById('amount_HorPartition3_3').value = +params.get('s3_AHD');
                        document.getElementById('amount_HorPartition3_4').value = +params.get('s3_AHD');
                        document.getElementById('amount_HorPartition3_5').value = +params.get('s3_AHD');
                    }  
    
                    switch(params.get('s3_AHD')){
                        case '1':    
                            if ( params.has('s3_hDS') == 1) {    
    
                                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
                                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                                
                                createHorizontalPartition_S3_1('savedCorrectionURL')
                            } else {};
                        break;
                        case '2':
                            if (  params.has('s3_2_hDS') == 1 ) {
        
                                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
                                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
    
                                createHorizontalPartition_S3_1('savedCorrectionURL')
                                createHorizontalPartition_S3_2('savedCorrectionURL')
    
        
                            } else {};
                        break;
                        case '3':
                            if (  params.has('s3_3_hDS') == 1 ) {
        
                                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
                                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
                                self.options.sectionHeight_3_4 = +self.params.get('H_S3_4');

                                createHorizontalPartition_S3_1('savedCorrectionURL')
                                createHorizontalPartition_S3_2('savedCorrectionURL')    
                                createHorizontalPartition_S3_3('savedCorrectionURL')
        
                            } else {};
                        break;
                        case '4':            
                            if ( params.has('s3_4_hDS') == 1 ) {
            
                                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
                                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
                                self.options.sectionHeight_3_4 = +self.params.get('H_S3_4');
                                self.options.sectionHeight_3_5 = +self.params.get('H_S3_5');

                                createHorizontalPartition_S3_1('savedCorrectionURL')
                                createHorizontalPartition_S3_2('savedCorrectionURL')
                                createHorizontalPartition_S3_3('savedCorrectionURL')
                                createHorizontalPartition_S3_4('savedCorrectionURL')

        
                            } else {};
                        break;
                        case '5':            
                            if ( params.has('s3_5_hDS') == 1 ) {
            
                                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
                                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
                                self.options.sectionHeight_3_4 = +self.params.get('H_S3_4');
                                self.options.sectionHeight_3_5 = +self.params.get('H_S3_5');
                                self.options.sectionHeight_3_6 = +self.params.get('H_S3_6');


                                createHorizontalPartition_S3_1('savedCorrectionURL')
                                createHorizontalPartition_S3_2('savedCorrectionURL')
                                createHorizontalPartition_S3_3('savedCorrectionURL')
                                createHorizontalPartition_S3_4('savedCorrectionURL')
                                createHorizontalPartition_S3_5('savedCorrectionURL')

        
                            } else {};
                        break;
                        case '6':            
                            if ( params.has('s3_6_hDS') == 1 ) {
            
                                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
                                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
                                self.options.sectionHeight_3_4 = +self.params.get('H_S3_4');
                                self.options.sectionHeight_3_5 = +self.params.get('H_S3_5');
                                self.options.sectionHeight_3_6 = +self.params.get('H_S3_6');
                                self.options.sectionHeight_3_7 = +self.params.get('H_S3_7');


                                createHorizontalPartition_S3_1('savedCorrectionURL')
                                createHorizontalPartition_S3_2('savedCorrectionURL')
                                createHorizontalPartition_S3_3('savedCorrectionURL')
                                createHorizontalPartition_S3_4('savedCorrectionURL')
                                createHorizontalPartition_S3_5('savedCorrectionURL')
                                createHorizontalPartition_S3_6('savedCorrectionURL')

        
                            } else {};
                        break;
                        case '7':            
                            if ( params.has('s3_7_hDS') == 1 ) {
            
                                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
                                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
                                self.options.sectionHeight_3_4 = +self.params.get('H_S3_4');
                                self.options.sectionHeight_3_5 = +self.params.get('H_S3_5');
                                self.options.sectionHeight_3_6 = +self.params.get('H_S3_6');
                                self.options.sectionHeight_3_7 = +self.params.get('H_S3_7');
                                self.options.sectionHeight_3_8 = +self.params.get('H_S3_8');


                                createHorizontalPartition_S3_1('savedCorrectionURL')
                                createHorizontalPartition_S3_2('savedCorrectionURL')
                                createHorizontalPartition_S3_3('savedCorrectionURL')
                                createHorizontalPartition_S3_4('savedCorrectionURL')
                                createHorizontalPartition_S3_5('savedCorrectionURL')
                                createHorizontalPartition_S3_6('savedCorrectionURL')
                                createHorizontalPartition_S3_7('savedCorrectionURL')
        
                            } else {};
                        break;
                        case '8':            
                            if ( params.has('s3_8_hDS') == 1 ) {
            
                                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
                                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
                                self.options.sectionHeight_3_4 = +self.params.get('H_S3_4');
                                self.options.sectionHeight_3_5 = +self.params.get('H_S3_5');
                                self.options.sectionHeight_3_6 = +self.params.get('H_S3_6');
                                self.options.sectionHeight_3_7 = +self.params.get('H_S3_7');
                                self.options.sectionHeight_3_8 = +self.params.get('H_S3_8');
                                self.options.sectionHeight_3_9 = +self.params.get('H_S3_9');

                                createHorizontalPartition_S3_1('savedCorrectionURL')
                                createHorizontalPartition_S3_2('savedCorrectionURL')
                                createHorizontalPartition_S3_3('savedCorrectionURL')
                                createHorizontalPartition_S3_4('savedCorrectionURL')
                                createHorizontalPartition_S3_5('savedCorrectionURL')
                                createHorizontalPartition_S3_6('savedCorrectionURL')
                                createHorizontalPartition_S3_7('savedCorrectionURL')
                                createHorizontalPartition_S3_8('savedCorrectionURL')
        
                            } else {};
                        break;
                    }
    
                } else {}          
    
                
    
                //restore doors, drawers  
                if (params.has('s1_d')) {
                    self.options.s1_doorStatus = self.params.get('s1_d');
                    switch (self.options.s1_doorStatus) {
                        case '1':
                            createEmpty_S1();
                        break;
                        case '2':
                            createDoorLeft_S1();
                        break;
                        case '3':
                            createDoorRight_S1();
                        break
                        case '4':
                            createDoubleDoor_S1();
                        break;
                        case '5':
                            createDrawer_S1();
                        break;
                        default:
                            //
                        break;
                    }; 
                }         
                if (params.has('s1_2_d')) {
                    self.options.s1_2_doorStatus = params.get('s1_2_d');
                    switch (self.options.s1_2_doorStatus) {
                        case '1':
                            createEmpty_S1_2();
                        break;
                        case '2':
                            createDoorLeft_S1_2();
                        break;
                        case '3':
                            createDoorRight_S1_2();
                        break
                        case '4':
                            createDoubleDoor_S1_2();
                        break;
                        case '5':
                            createDrawer_S1_2();
                        break;
                        default:
                            //
                        break;
                    }; 
                }                    
                if (params.has('s1_3_d')) {
                    self.options.s1_3_doorStatus = params.get('s1_3_d');
                    switch (self.options.s1_3_doorStatus) {
                        case '1':
                            createEmpty_S1_3();
                        break;
                        case '2':
                            createDoorLeft_S1_3();
                        break;
                        case '3':
                            createDoorRight_S1_3();
                        break
                        case '4':
                            createDoubleDoor_S1_3();
                        break;
                        case '5':
                            createDrawer_S1_3();
                        break;
                        default:
                            //
                        break;
                    }; 
                }  
                if (params.has('s1_4_d')) {
                    self.options.s1_4_doorStatus = params.get('s1_4_d');
                    switch (self.options.s1_4_doorStatus) {
                        case '1':
                            createEmpty_S1_4();
                        break;
                        case '2':
                            createDoorLeft_S1_4();
                        break;
                        case '3':
                            createDoorRight_S1_4();
                        break
                        case '4':
                            createDoubleDoor_S1_4();
                        break;
                        case '5':
                            createDrawer_S1_4();
                        break;
                        default:
                            //
                        break;
                    };
                }    
                if (params.has('s1_5_d')) {
                    self.options.s1_5_doorStatus = params.get('s1_5_d');
                    switch (self.options.s1_5_doorStatus) {
                        case '1':
                            createEmpty_S1_5();
                        break;
                        case '2':
                            createDoorLeft_S1_5();
                        break;
                        case '3':
                            createDoorRight_S1_5();
                        break
                        case '4':
                            createDoubleDoor_S1_5();
                        break;
                        case '5':
                            createDrawer_S1_5();
                        break;
                        default:
                            //
                        break;
                    };
                }    
                if (params.has('s1_6_d')) {
                    self.options.s1_6_doorStatus = params.get('s1_6_d');
                    switch (self.options.s1_6_doorStatus) {
                        case '1':
                            createEmpty_S1_6();
                        break;
                        case '5':
                            createDrawer_S1_6();
                        break;
                        default:
                            //
                        break;
                    };
                }   
                if (params.has('s1_7_d')) {
                    self.options.s1_7_doorStatus = params.get('s1_7_d');
                    switch (self.options.s1_7_doorStatus) {
                        case '1':
                            createEmpty_S1_7();
                        break;
                        case '5':
                            createDrawer_S1_7();
                        break;
                        default:
                            //
                        break;
                    };
                }  
                if (params.has('s1_8_d')) {
                    self.options.s1_8_doorStatus = params.get('s1_8_d');
                    switch (self.options.s1_8_doorStatus) {
                        case '1':
                            createEmpty_S1_8();
                        break;
                        case '5':
                            createDrawer_S1_8();
                        break;
                        default:
                            //
                        break;
                    };
                }  
                if (params.has('s1_9_d')) {
                    self.options.s1_9_doorStatus = params.get('s1_9_d');
                    switch (self.options.s1_9_doorStatus) {
                        case '1':
                            createEmpty_S1_9();
                        break;
                        case '5':
                            createDrawer_S1_9();
                        break;
                        default:
                            //
                        break;
                    };
                }    
    
                if (params.has('s2_d')) {
                    self.options.s2_doorStatus = params.get('s2_d');
                    switch (self.options.s2_doorStatus) {
                        case '1':
                            createEmpty_S2();
                        break;
                        case '2':
                            createDoorLeft_S2();
                        break;
                        case '3':
                            createDoorRight_S2();
                        break
                        case '4':
                            createDoubleDoor_S2();
                        break;
                        case '5':
                            createDrawer_S2();
                        break;
                        default:
                            //
                        break;
                    };  
                }                      
                if (params.has('s2_2_d')) {
                    self.options.s2_2_doorStatus = params.get('s2_2_d');
                    switch (self.options.s2_2_doorStatus) {
                        case '1':
                            createEmpty_S2_2();
                        break;
                        case '2':
                            createDoorLeft_S2_2();
                        break;
                        case '3':
                            createDoorRight_S2_2();
                        break
                        case '4':
                            createDoubleDoor_S2_2();
                        break;
                        case '5':
                            createDrawer_S2_2();
                        break;
                        default:
                            //
                        break;
                    }; 
                }                    
                if (params.has('s2_3_d')) {
                    self.options.s2_3_doorStatus = params.get('s2_3_d');
                    switch (self.options.s2_3_doorStatus) {
                        case '1':
                            createEmpty_S2_3();
                        break;
                        case '2':
                            createDoorLeft_S2_3();
                        break;
                        case '3':
                            createDoorRight_S2_3();
                        break
                        case '4':
                            createDoubleDoor_S2_3();
                        break;
                        case '5':
                            createDrawer_S2_3();
                        break;
                        default:
                            //
                        break;
                    }; 
                }  
                if (params.has('s2_4_d')) {
                    self.options.s2_4_doorStatus = params.get('s2_4_d');
                    switch (self.options.s2_4_doorStatus) {
                        case '1':
                            createEmpty_S2_4();
                        break;
                        case '2':
                            createDoorLeft_S2_4();
                        break;
                        case '3':
                            createDoorRight_S2_4();
                        break
                        case '4':
                            createDoubleDoor_S2_4();
                        break;
                        case '5':
                            createDrawer_S2_4();
                        break;
                        default:
                            //
                        break;
                    };
                }    
                if (params.has('s2_5_d')) {
                    self.options.s2_5_doorStatus = params.get('s2_5_d');
                    switch (self.options.s2_5_doorStatus) {
                        case '1':
                            createEmpty_S2_5();
                        break;
                        case '2':
                            createDoorLeft_S2_5();
                        break;
                        case '3':
                            createDoorRight_S2_5();
                        break
                        case '4':
                            createDoubleDoor_S2_5();
                        break;
                        case '5':
                            createDrawer_S2_5();
                        break;
                        default:
                            //
                        break;
                    };
                }
                if (params.has('s2_6_d')) {
                    self.options.s2_6_doorStatus = params.get('s2_6_d');
                    switch (self.options.s2_6_doorStatus) {
                        case '1':
                            createEmpty_S2_6();
                        break;
                        case '5':
                            createDrawer_S2_6();
                        break;
                        default:
                            //
                        break;
                    };
                } 
                if (params.has('s2_7_d')) {
                    self.options.s2_7_doorStatus = params.get('s2_7_d');
                    switch (self.options.s2_7_doorStatus) {
                        case '1':
                            createEmpty_S2_7();
                        break;
                        case '5':
                            createDrawer_S2_7();
                        break;
                        default:
                            //
                        break;
                    };
                } 
                if (params.has('s2_8_d')) {
                    self.options.s2_8_doorStatus = params.get('s2_8_d');
                    switch (self.options.s2_8_doorStatus) {
                        case '1':
                            createEmpty_S2_8();
                        break;
                        case '5':
                            createDrawer_S2_8();
                        break;
                        default:
                            //
                        break;
                    };
                }
                if (params.has('s2_9_d')) {
                    self.options.s2_9_doorStatus = params.get('s2_9_d');
                    switch (self.options.s2_9_doorStatus) {
                        case '1':
                            createEmpty_S2_9();
                        break;
                        case '5':
                            createDrawer_S2_9();
                        break;
                        default:
                            //
                        break;
                    };
                }   

    
                if (params.has('s3_d')) {
                    self.options.s3_doorStatus = params.get('s3_d');
                    switch (self.options.s3_doorStatus) {
                        case '1':
                            createEmpty_S3();
                        break;
                        case '2':
                            createDoorLeft_S3();
                        break;
                        case '3':
                            createDoorRight_S3();
                        break
                        case '4':
                            createDoubleDoor_S3();
                        break;
                        case '5':
                            createDrawer_S3();
                        break;
                        default:
                            //
                        break;
                    };
                } 
                if (params.has('s3_2_d')) {
                    self.options.s3_2_doorStatus = params.get('s3_2_d');
                    switch (self.options.s3_2_doorStatus) {
                        case '1':
                            createEmpty_S3_2();
                        break;
                        case '2':
                            createDoorLeft_S3_2();
                        break;
                        case '3':
                            createDoorRight_S3_2();
                        break
                        case '4':
                            createDoubleDoor_S3_2();
                        break;
                        case '5':
                            createDrawer_S3_2();
                        break;
                        default:
                            //
                        break;
                    }; 
                }                    
                if (params.has('s3_3_d')) {
                    self.options.s3_3_doorStatus = params.get('s3_3_d');
                    switch (self.options.s3_3_doorStatus) {
                        case '1':
                            createEmpty_S3_3();
                        break;
                        case '2':
                            createDoorLeft_S3_3();
                        break;
                        case '3':
                            createDoorRight_S3_3();
                        break
                        case '4':
                            createDoubleDoor_S3_3();
                        break;
                        case '5':
                            createDrawer_S3_3();
                        break;
                        default:
                            //
                        break;
                    }; 
                }  
                if (params.has('s3_4_d')) {
                    self.options.s3_4_doorStatus = params.get('s3_4_d');
                    switch (self.options.s3_4_doorStatus) {
                        case '1':
                            createEmpty_S3_4();
                        break;
                        case '2':
                            createDoorLeft_S3_4();
                        break;
                        case '3':
                            createDoorRight_S3_4();
                        break
                        case '4':
                            createDoubleDoor_S3_4();
                        break;
                        case '5':
                            createDrawer_S3_4();
                        break;
                        default:
                            //
                        break;
                    };
                }    
                if (params.has('s3_5_d')) {
                    self.options.s3_5_doorStatus = params.get('s3_5_d');
                    switch (self.options.s3_5_doorStatus) {
                        case '1':
                            createEmpty_S3_5();
                        break;
                        case '2':
                            createDoorLeft_S3_5();
                        break;
                        case '3':
                            createDoorRight_S3_5();
                        break
                        case '4':
                            createDoubleDoor_S3_5();
                        break;
                        case '5':
                            createDrawer_S3_5();
                        break;
                        default:
                            //
                        break;
                    };
                }
                if (params.has('s3_6_d')) {
                    self.options.s3_6_doorStatus = params.get('s3_6_d');
                    switch (self.options.s3_6_doorStatus) {
                        case '1':
                            createEmpty_S3_6();
                        break;
                        case '5':
                            createDrawer_S3_6();
                        break;
                        default:
                            //
                        break;
                    };
                }  
                if (params.has('s3_7_d')) {
                    self.options.s3_7_doorStatus = params.get('s3_7_d');
                    switch (self.options.s3_7_doorStatus) {
                        case '1':
                            createEmpty_S3_7();
                        break;
                        case '5':
                            createDrawer_S3_7();
                        break;
                        default:
                            //
                        break;
                    };
                }  
                if (params.has('s3_8_d')) {
                    self.options.s3_8_doorStatus = params.get('s3_8_d');
                    switch (self.options.s3_8_doorStatus) {
                        case '1':
                            createEmpty_S3_8();
                        break;
                        case '5':
                            createDrawer_S3_8();
                        break;
                        default:
                            //
                        break;
                    };
                }  
                if (params.has('s3_9_d')) {
                    self.options.s3_9_doorStatus = params.get('s3_9_d');
                    switch (self.options.s3_9_doorStatus) {
                        case '1':
                            createEmpty_S3_9();
                        break;
                        case '5':
                            createDrawer_S3_9();
                        break;
                        default:
                            //
                        break;
                    };
                }  
    
                //internal shelving
                //s1_1
                if (params.has('s1_iss')) {
                    if (params.get("s1_iss") == 1 && params.get("s1_ss") == 'Wood' ) {

                        document.getElementById("InternalShelving_S1").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S1_1").style.display = 'flex';
                        document.getElementById("internalShelving_sect1_1").value = params.get("s1_isa");
                        self.options.s1_ShelvingStatus = params.get("s1_ss");

                        var retrievedHeightArrString = params.get('is_1_1_A');
                        var retrievedHeightArr = JSON.parse(retrievedHeightArrString);
                    
                        createInternalShelving_sect1_1();

                        for (let i = 1; i <= retrievedHeightArr.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+i).position.y = retrievedHeightArr[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = params.get("pf_is1_s1_1");
                        document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = params.get("pf_is2_s1_1");
                        document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = params.get("pf_is3_s1_1");
                        document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = params.get("pf_is4_s1_1");
                        document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = params.get("pf_is5_s1_1");
                        document.getElementById("PositionField_InternalShelving6_S1_1").innerHTML = params.get("pf_is6_s1_1");

                        self.options.heigh0Shelf1_1 = params.get("h0S1_1");
                        self.options.heigh1Shelf1_1 = params.get("h1S1_1");
                        self.options.heigh2Shelf1_1 = params.get("h2S1_1");
                        self.options.heigh3Shelf1_1 = params.get("h3S1_1");
                        self.options.heigh4Shelf1_1 = params.get("h4S1_1");
                        self.options.heigh5Shelf1_1 = params.get("h5S1_1");
                        self.options.heigh6Shelf1_1 = params.get("h6S1_1");


                    } 
                    else if (params.get("s1_iss") == 1 && params.get("s1_ss") == 'Shoe' ) {
                        document.getElementById("ShoeShelving_S1").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S1_1").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect1_1").value = params.get("s1_ssa");

                        self.options.s1_ShelvingStatus = params.get("s1_ss");

                        var retrievedHeightArrString = params.get('is_1_1_A');
                        var retrievedHeightArr = JSON.parse(retrievedHeightArrString);
                    
                        createShoeShelving_sect1_1();

                        for (let i = 1; i <= retrievedHeightArr.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+i).position.y = retrievedHeightArr[i]
                        }
                        document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML = params.get("pf_is1_s1_1");
                        document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML = params.get("pf_is2_s1_1");
                        document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML = params.get("pf_is3_s1_1");
                        document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML = params.get("pf_is4_s1_1");
                        document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML = params.get("pf_is5_s1_1");
                        document.getElementById("PositionField_InternalShelving6_S1_1").innerHTML = params.get("pf_is6_s1_1");

                        self.options.heigh0Shelf1_1 = params.get("h0S1_1");
                        self.options.heigh1Shelf1_1 = params.get("h1S1_1");
                        self.options.heigh2Shelf1_1 = params.get("h2S1_1");
                        self.options.heigh3Shelf1_1 = params.get("h3S1_1");
                        self.options.heigh4Shelf1_1 = params.get("h4S1_1");
                        self.options.heigh5Shelf1_1 = params.get("h5S1_1");
                        self.options.heigh6Shelf1_1 = params.get("h6S1_1");

                    } else {}
                }
                if (params.has('s1_2_iss')) {
                    if (params.get("s1_2_iss") == 1 && params.get("s1_2_ss") == 'Wood' ) {
    
                        document.getElementById("InternalShelving_S1_2").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S1_2").style.display = 'flex';
                        document.getElementById("internalShelving_sect1_2").value = params.get("s1_2_isa");
                        self.options.s1_2_ShelvingStatus = params.get("s1_2_ss");

                        var retrievedHeightArrString1_2 = params.get('is_1_2_A');
                        var retrievedHeightArr1_2 = JSON.parse(retrievedHeightArrString1_2);
                        
                        createInternalShelving_sect1_2();

                        for (let i = 1; i <= retrievedHeightArr1_2.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+i).position.y = retrievedHeightArr1_2[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = params.get("pf_is1_s1_2");
                        document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = params.get("pf_is2_s1_2");
                        document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = params.get("pf_is3_s1_2");
                        document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = params.get("pf_is4_s1_2");
                        document.getElementById("PositionField_InternalShelving5_S1_2").innerHTML = params.get("pf_is5_s1_2");


                        self.options.heigh0Shelf1_2 = params.get("h0S1_2");
                        self.options.heigh1Shelf1_2 = params.get("h1S1_2");
                        self.options.heigh2Shelf1_2 = params.get("h2S1_2");
                        self.options.heigh3Shelf1_2 = params.get("h3S1_2");
                        self.options.heigh4Shelf1_2 = params.get("h4S1_2");
                        self.options.heigh5Shelf1_2 = params.get("h5S1_2");

                    } else if (params.get("s1_2_iss") == 1 && params.get("s1_2_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S1_2").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S1_2").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect1_2").value = params.get("s1_2_ssa");
                        self.options.s1_2_ShelvingStatus = params.get("s1_2_ss");

                        var retrievedHeightArrString1_2 = params.get('is_1_2_A');
                        var retrievedHeightArr1_2 = JSON.parse(retrievedHeightArrString1_2);
                        
                        createShoeShelving_sect1_2();

                        for (let i = 1; i <= retrievedHeightArr1_2.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+i).position.y = retrievedHeightArr1_2[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML = params.get("pf_is1_s1_2");
                        document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML = params.get("pf_is2_s1_2");
                        document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML = params.get("pf_is3_s1_2");
                        document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML = params.get("pf_is4_s1_2");
                        document.getElementById("PositionField_InternalShelving5_S1_2").innerHTML = params.get("pf_is5_s1_2");


                        self.options.heigh0Shelf1_2 = params.get("h0S1_2");
                        self.options.heigh1Shelf1_2 = params.get("h1S1_2");
                        self.options.heigh2Shelf1_2 = params.get("h2S1_2");
                        self.options.heigh3Shelf1_2 = params.get("h3S1_2");
                        self.options.heigh4Shelf1_2 = params.get("h4S1_2");
                        self.options.heigh5Shelf1_2 = params.get("h5S1_2");
                    } else {}

                }
                if (params.has('s1_3_iss')) {
                    if (params.get("s1_3_iss") == 1 && params.get("s1_3_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S1_3").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S1_3").style.display = 'flex';
                        document.getElementById("internalShelving_sect1_3").value = params.get("s1_3_isa");
                        self.options.s1_3_ShelvingStatus = params.get("s1_3_ss");

                        var retrievedHeightArrString1_3 = params.get('is_1_3_A');
                        var retrievedHeightArr1_3 = JSON.parse(retrievedHeightArrString1_3);
                        
                        createInternalShelving_sect1_3();

                        for (let i = 1; i <= retrievedHeightArr1_3.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+i).position.y = retrievedHeightArr1_3[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = params.get("pf_is1_s1_3");
                        document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = params.get("pf_is2_s1_3");
                        document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = params.get("pf_is3_s1_3");
                        document.getElementById("PositionField_InternalShelving4_S1_3").innerHTML = params.get("pf_is4_s1_3");


                        self.options.heigh0Shelf1_3 = params.get("h0S1_3");
                        self.options.heigh1Shelf1_3 = params.get("h1S1_3");
                        self.options.heigh2Shelf1_3 = params.get("h2S1_3");
                        self.options.heigh3Shelf1_3 = params.get("h3S1_3");
                        self.options.heigh4Shelf1_3 = params.get("h4S1_3");

                    } else if (params.get("s1_3_iss") == 1 && params.get("s1_3_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S1_3").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S1_3").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect1_3").value = params.get("s1_3_isa");
                        self.options.s1_3_ShelvingStatus = params.get("s1_3_ss");

                        var retrievedHeightArrString1_3 = params.get('is_1_3_A');
                        var retrievedHeightArr1_3 = JSON.parse(retrievedHeightArrString1_3);
                        
                        createShoeShelving_sect1_3();

                        for (let i = 1; i <= retrievedHeightArr1_3.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+i).position.y = retrievedHeightArr1_3[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML = params.get("pf_is1_s1_3");
                        document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML = params.get("pf_is2_s1_3");
                        document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML = params.get("pf_is3_s1_3");
                        document.getElementById("PositionField_InternalShelving4_S1_3").innerHTML = params.get("pf_is4_s1_3");


                        self.options.heigh0Shelf1_3 = params.get("h0S1_3");
                        self.options.heigh1Shelf1_3 = params.get("h1S1_3");
                        self.options.heigh2Shelf1_3 = params.get("h2S1_3");
                        self.options.heigh3Shelf1_3 = params.get("h3S1_3");
                        self.options.heigh4Shelf1_3 = params.get("h4S1_3");

                    } else {}
                } 
                if (params.has('s1_4_iss')) {
                    if (params.get("s1_4_iss") == 1 && params.get("s1_4_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S1_4").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S1_4").style.display = 'flex';
                        document.getElementById("internalShelving_sect1_4").value = params.get("s1_4_isa");
                        self.options.s1_4_ShelvingStatus = params.get("s1_4_ss");

                        var retrievedHeightArrString1_4 = params.get('is_1_4_A');
                        var retrievedHeightArr1_4 = JSON.parse(retrievedHeightArrString1_4);
                        
                        createInternalShelving_sect1_4();

                        for (let i = 1; i <= retrievedHeightArr1_4.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+i).position.y = retrievedHeightArr1_4[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = params.get("pf_is1_s1_4");
                        document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = params.get("pf_is2_s1_4");
                        document.getElementById("PositionField_InternalShelving3_S1_4").innerHTML = params.get("pf_is3_s1_4");


                        self.options.heigh0Shelf1_4 = params.get("h0S1_4");
                        self.options.heigh1Shelf1_4 = params.get("h1S1_4");
                        self.options.heigh2Shelf1_4 = params.get("h2S1_4");
                        self.options.heigh3Shelf1_4 = params.get("h3S1_4");


                    } else if (params.get("s1_4_iss") == 1 && params.get("s1_4_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S1_4").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S1_4").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect1_4").value = params.get("s1_4_isa");
                        self.options.s1_4_ShelvingStatus = params.get("s1_4_ss");

                        var retrievedHeightArrString1_4 = params.get('is_1_4_A');
                        var retrievedHeightArr1_4 = JSON.parse(retrievedHeightArrString1_4);
                        
                        createShoeShelving_sect1_4();

                        for (let i = 1; i <= retrievedHeightArr1_4.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+i).position.y = retrievedHeightArr1_4[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML = params.get("pf_is1_s1_4");
                        document.getElementById("PositionField_InternalShelving2_S1_4").innerHTML = params.get("pf_is2_s1_4");
                        document.getElementById("PositionField_InternalShelving3_S1_4").innerHTML = params.get("pf_is3_s1_4");


                        self.options.heigh0Shelf1_4 = params.get("h0S1_4");
                        self.options.heigh1Shelf1_4 = params.get("h1S1_4");
                        self.options.heigh2Shelf1_4 = params.get("h2S1_4");
                        self.options.heigh3Shelf1_4 = params.get("h3S1_4");

                    } else {}

                } 
                if (params.has('s1_5_iss')) {
                    if (params.get("s1_5_iss") == 1 && params.get("s1_5_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S1_5").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S1_5").style.display = 'flex';
                        document.getElementById("internalShelving_sect1_5").value = params.get("s1_5_isa");
                        self.options.s1_5_ShelvingStatus = params.get("s1_5_ss");

                        var retrievedHeightArrString1_5 = params.get('is_1_5_A');
                        var retrievedHeightArr1_5 = JSON.parse(retrievedHeightArrString1_5);
                        
                        createInternalShelving_sect1_5();

                        for (let i = 1; i <= retrievedHeightArr1_5.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+i).position.y = retrievedHeightArr1_5[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = params.get("pf_is1_s1_5");
                        document.getElementById("PositionField_InternalShelving2_S1_5").innerHTML = params.get("pf_is2_s1_5");

                        self.options.heigh0Shelf1_5 = params.get("h0S1_5");
                        self.options.heigh1Shelf1_5 = params.get("h1S1_5");
                        self.options.heigh2Shelf1_5 = params.get("h2S1_5");

                    } else if (params.get("s1_5_iss") == 1 && params.get("s1_5_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S1_5").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S1_5").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect1_5").value = params.get("s1_5_isa");
                        self.options.s1_5_ShelvingStatus = params.get("s1_5_ss");

                        var retrievedHeightArrString1_5 = params.get('is_1_5_A');
                        var retrievedHeightArr1_5 = JSON.parse(retrievedHeightArrString1_5);
                        
                        createShoeShelving_sect1_5();

                        for (let i = 1; i <= retrievedHeightArr1_5.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+i).position.y = retrievedHeightArr1_5[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML = params.get("pf_is1_s1_5");
                        document.getElementById("PositionField_InternalShelving2_S1_5").innerHTML = params.get("pf_is2_s1_5");

                        self.options.heigh0Shelf1_5 = params.get("h0S1_5");
                        self.options.heigh1Shelf1_5 = params.get("h1S1_5");
                        self.options.heigh2Shelf1_5 = params.get("h2S1_5");

                    } else {}

                } 
                if (params.has('s1_6_iss')) {
                    if (params.get("s1_6_iss") == 1 && params.get("s1_6_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S1_6").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S1_6").style.display = 'flex';
                        document.getElementById("internalShelving_sect1_6").value = params.get("s1_6_isa");
                        self.options.s1_6_ShelvingStatus = params.get("s1_6_ss");

                        var retrievedHeightArrString1_6 = params.get('is_1_6_A');
                        var retrievedHeightArr1_6 = JSON.parse(retrievedHeightArrString1_6);
                        
                        createInternalShelving_sect1_6();

                        for (let i = 1; i <= retrievedHeightArr1_6.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_6_'+'shelf'+i).position.y = retrievedHeightArr1_6[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML = params.get("pf_is1_s1_6");

                        self.options.heigh0Shelf1_6 = params.get("h0S1_6");
                        self.options.heigh1Shelf1_6 = params.get("h1S1_6");

                    } else if (params.get("s1_6_iss") == 1 && params.get("s1_6_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S1_6").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S1_6").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect1_6").value = params.get("s1_6_isa");
                        self.options.s1_6_ShelvingStatus = params.get("s1_6_ss");

                        var retrievedHeightArrString1_6 = params.get('is_1_6_A');
                        var retrievedHeightArr1_6 = JSON.parse(retrievedHeightArrString1_6);
                        
                        createShoeShelving_sect1_6();

                        for (let i = 1; i <= retrievedHeightArr1_6.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_1_6_'+'shelf'+i).position.y = retrievedHeightArr1_6[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML = params.get("pf_is1_s1_6");

                        self.options.heigh0Shelf1_6 = params.get("h0S1_6");
                        self.options.heigh1Shelf1_6 = params.get("h1S1_6");

                    } else {}

                } 

                //s2_1
                if (params.has('s2_iss')) {
                    if (params.get("s2_iss") == 1 && params.get("s2_ss") == 'Wood' ) {

                        document.getElementById("InternalShelving_S2_1").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S2_1").style.display = 'flex';
                        document.getElementById("internalShelving_sect2_1").value = params.get("s2_isa");
                        self.options.s2_ShelvingStatus = params.get("s2_ss");

                        var retrievedHeightArrString2_1 = params.get('is_2_1_A');
                        var retrievedHeightArr2_1 = JSON.parse(retrievedHeightArrString2_1);
                    
                        createInternalShelving_sect2_1();

                        for (let i = 1; i <= retrievedHeightArr2_1.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+i).position.y = retrievedHeightArr2_1[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = params.get("pf_is1_s2_1");
                        document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = params.get("pf_is2_s2_1");
                        document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = params.get("pf_is3_s2_1");
                        document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = params.get("pf_is4_s2_1");
                        document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = params.get("pf_is5_s2_1");
                        document.getElementById("PositionField_InternalShelving6_S2_1").innerHTML = params.get("pf_is6_s2_1");

                        self.options.heigh0Shelf2_1 = params.get("h0S2_1");
                        self.options.heigh1Shelf2_1 = params.get("h1S2_1");
                        self.options.heigh2Shelf2_1 = params.get("h2S2_1");
                        self.options.heigh3Shelf2_1 = params.get("h3S2_1");
                        self.options.heigh4Shelf2_1 = params.get("h4S2_1");
                        self.options.heigh5Shelf2_1 = params.get("h5S2_1");
                        self.options.heigh6Shelf2_1 = params.get("h6S2_1");

                    }else if (params.get("s1_iss") == 1 && params.get("s1_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S2_1").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S2_1").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect2_1").value = params.get("s2_isa");
                        self.options.s2_ShelvingStatus = params.get("s2_ss");

                        var retrievedHeightArrString2_1 = params.get('is_2_1_A');
                        var retrievedHeightArr2_1 = JSON.parse(retrievedHeightArrString2_1);
                    
                        createShoeShelving_sect2_1();

                        for (let i = 1; i <= retrievedHeightArr2_1.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+i).position.y = retrievedHeightArr2_1[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML = params.get("pf_is1_s2_1");
                        document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML = params.get("pf_is2_s2_1");
                        document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML = params.get("pf_is3_s2_1");
                        document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML = params.get("pf_is4_s2_1");
                        document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML = params.get("pf_is5_s2_1");
                        document.getElementById("PositionField_InternalShelving6_S2_1").innerHTML = params.get("pf_is6_s2_1");

                        self.options.heigh0Shelf2_1 = params.get("h0S2_1");
                        self.options.heigh1Shelf2_1 = params.get("h1S2_1");
                        self.options.heigh2Shelf2_1 = params.get("h2S2_1");
                        self.options.heigh3Shelf2_1 = params.get("h3S2_1");
                        self.options.heigh4Shelf2_1 = params.get("h4S2_1");
                        self.options.heigh5Shelf2_1 = params.get("h5S2_1");
                        self.options.heigh6Shelf2_1 = params.get("h6S2_1");

                    } else {}
                }
                if (params.has('s2_2_iss')) {
                    if (params.get("s2_2_iss") == 1 && params.get("s2_2_ss") == 'Wood' ) {
    
                        document.getElementById("InternalShelving_S2_2").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S2_2").style.display = 'flex';
                        document.getElementById("internalShelving_sect2_2").value = params.get("s2_2_isa");
                        self.options.s2_2_ShelvingStatus = params.get("s2_2_ss");

                        var retrievedHeightArrString2_2 = params.get('is_2_2_A');
                        var retrievedHeightArr2_2 = JSON.parse(retrievedHeightArrString2_2);
                        
                        createInternalShelving_sect2_2();

                        for (let i = 1; i <= retrievedHeightArr2_2.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+i).position.y = retrievedHeightArr2_2[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = params.get("pf_is1_s2_2");
                        document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = params.get("pf_is2_s2_2");
                        document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = params.get("pf_is3_s2_2");
                        document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = params.get("pf_is4_s2_2");
                        document.getElementById("PositionField_InternalShelving5_S2_2").innerHTML = params.get("pf_is5_s2_2");

                        self.options.heigh0Shelf2_2 = params.get("h0S2_2");
                        self.options.heigh1Shelf2_2 = params.get("h1S2_2");
                        self.options.heigh2Shelf2_2 = params.get("h2S2_2");
                        self.options.heigh3Shelf2_2 = params.get("h3S2_2");
                        self.options.heigh4Shelf2_2 = params.get("h4S2_2");
                        self.options.heigh5Shelf2_2 = params.get("h5S2_2");

                    } else if (params.get("s2_2_iss") == 1 && params.get("s2_2_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S2_2").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S2_2").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect2_2").value = params.get("s2_2_isa");
                        self.options.s2_2_ShelvingStatus = params.get("s2_2_ss");

                        var retrievedHeightArrString2_2 = params.get('is_2_2_A');
                        var retrievedHeightArr2_2 = JSON.parse(retrievedHeightArrString2_2);
                        
                        createShoeShelving_sect2_2();

                        for (let i = 1; i <= retrievedHeightArr2_2.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+i).position.y = retrievedHeightArr2_2[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML = params.get("pf_is1_s2_2");
                        document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML = params.get("pf_is2_s2_2");
                        document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML = params.get("pf_is3_s2_2");
                        document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML = params.get("pf_is4_s2_2");
                        document.getElementById("PositionField_InternalShelving5_S2_2").innerHTML = params.get("pf_is5_s2_2");

                        self.options.heigh0Shelf2_2 = params.get("h0S2_2");
                        self.options.heigh1Shelf2_2 = params.get("h1S2_2");
                        self.options.heigh2Shelf2_2 = params.get("h2S2_2");
                        self.options.heigh3Shelf2_2 = params.get("h3S2_2");
                        self.options.heigh4Shelf2_2 = params.get("h4S2_2");
                        self.options.heigh5Shelf2_2 = params.get("h5S2_2");

                    } else {}

                }
                if (params.has('s2_3_iss')) {
                    if (params.get("s2_3_iss") == 1 && params.get("s2_3_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S2_3").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S2_3").style.display = 'flex';
                        document.getElementById("internalShelving_sect2_3").value = params.get("s2_3_isa");
                        self.options.s2_3_ShelvingStatus = params.get("s2_3_ss");

                        var retrievedHeightArrString2_3 = params.get('is_2_3_A');
                        var retrievedHeightArr2_3 = JSON.parse(retrievedHeightArrString2_3);
                        
                        createInternalShelving_sect2_3();

                        for (let i = 1; i <= retrievedHeightArr2_3.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+i).position.y = retrievedHeightArr2_3[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = params.get("pf_is1_s2_3");
                        document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = params.get("pf_is2_s2_3");
                        document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = params.get("pf_is3_s2_3");
                        document.getElementById("PositionField_InternalShelving4_S2_3").innerHTML = params.get("pf_is4_s2_3");

                        self.options.heigh0Shelf2_3 = params.get("h0S2_3");
                        self.options.heigh1Shelf2_3 = params.get("h1S2_3");
                        self.options.heigh2Shelf2_3 = params.get("h2S2_3");
                        self.options.heigh3Shelf2_3 = params.get("h3S2_3");
                        self.options.heigh4Shelf2_3 = params.get("h4S2_3");

                    } else if (params.get("s1_3_iss") == 1 && params.get("s1_3_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S2_3").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S2_3").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect2_3").value = params.get("s2_3_isa");
                        self.options.s2_3_ShelvingStatus = params.get("s2_3_ss");

                        var retrievedHeightArrString2_3 = params.get('is_2_3_A');
                        var retrievedHeightArr2_3 = JSON.parse(retrievedHeightArrString2_3);
                        
                        createShoeShelving_sect2_3();

                        for (let i = 1; i <= retrievedHeightArr2_3.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+i).position.y = retrievedHeightArr2_3[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML = params.get("pf_is1_s2_3");
                        document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML = params.get("pf_is2_s2_3");
                        document.getElementById("PositionField_InternalShelving3_S2_3").innerHTML = params.get("pf_is3_s2_3");
                        document.getElementById("PositionField_InternalShelving4_S2_3").innerHTML = params.get("pf_is4_s2_3");

                        self.options.heigh0Shelf2_3 = params.get("h0S2_3");
                        self.options.heigh1Shelf2_3 = params.get("h1S2_3");
                        self.options.heigh2Shelf2_3 = params.get("h2S2_3");
                        self.options.heigh3Shelf2_3 = params.get("h3S2_3");
                        self.options.heigh4Shelf2_3 = params.get("h4S2_3");

                    } else {}
                }
                if (params.has('s2_4_iss')) {
                    if (params.get("s2_4_iss") == 1 && params.get("s2_4_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S2_4").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S2_4").style.display = 'flex';
                        document.getElementById("internalShelving_sect2_4").value = params.get("s2_4_isa");
                        self.options.s2_4_ShelvingStatus = params.get("s2_4_ss");

                        var retrievedHeightArrString2_4 = params.get('is_2_4_A');
                        var retrievedHeightArr2_4 = JSON.parse(retrievedHeightArrString2_4);
                        
                        createInternalShelving_sect2_4();

                        for (let i = 1; i <= retrievedHeightArr2_4.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+i).position.y = retrievedHeightArr2_4[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = params.get("pf_is1_s2_4");
                        document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = params.get("pf_is2_s2_4");
                        document.getElementById("PositionField_InternalShelving3_S2_4").innerHTML = params.get("pf_is3_s2_4");

                        self.options.heigh0Shelf2_4 = params.get("h0S2_4");
                        self.options.heigh1Shelf2_4 = params.get("h1S2_4");
                        self.options.heigh2Shelf2_4 = params.get("h2S2_4");
                        self.options.heigh3Shelf2_4 = params.get("h3S2_4");

                    } else if (params.get("s2_4_iss") == 1 && params.get("s2_4_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S2_4").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S2_4").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect2_4").value = params.get("s2_4_isa");
                        self.options.s2_4_ShelvingStatus = params.get("s2_4_ss");

                        var retrievedHeightArrString2_4 = params.get('is_2_4_A');
                        var retrievedHeightArr2_4 = JSON.parse(retrievedHeightArrString2_4);
                        
                        createShoeShelving_sect2_4();

                        for (let i = 1; i <= retrievedHeightArr2_4.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+i).position.y = retrievedHeightArr2_4[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML = params.get("pf_is1_s2_4");
                        document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML = params.get("pf_is2_s2_4");
                        document.getElementById("PositionField_InternalShelving3_S2_4").innerHTML = params.get("pf_is3_s2_4");

                        self.options.heigh0Shelf2_4 = params.get("h0S2_4");
                        self.options.heigh1Shelf2_4 = params.get("h1S2_4");
                        self.options.heigh2Shelf2_4 = params.get("h2S2_4");
                        self.options.heigh3Shelf2_4 = params.get("h3S2_4");

                    } else {}
                }
                if (params.has('s2_5_iss')) {
                    if (params.get("s2_5_iss") == 1 && params.get("s2_5_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S2_5").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S2_5").style.display = 'flex';
                        document.getElementById("internalShelving_sect2_5").value = params.get("s2_5_isa");
                        self.options.s2_5_ShelvingStatus = params.get("s2_5_ss");

                        var retrievedHeightArrString2_5 = params.get('is_2_5_A');
                        var retrievedHeightArr2_5 = JSON.parse(retrievedHeightArrString2_5);
                        
                        createInternalShelving_sect2_5();

                        for (let i = 1; i <= retrievedHeightArr2_5.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+i).position.y = retrievedHeightArr2_5[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = params.get("pf_is1_s2_5");
                        document.getElementById("PositionField_InternalShelving2_S2_5").innerHTML = params.get("pf_is2_s2_5");

                        self.options.heigh0Shelf2_5 = params.get("h0S2_5");
                        self.options.heigh1Shelf2_5 = params.get("h1S2_5");
                        self.options.heigh2Shelf2_5 = params.get("h2S2_5");

                    } else if (params.get("s2_5_iss") == 1 && params.get("s2_5_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S2_5").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S2_5").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect2_5").value = params.get("s2_5_isa");
                        self.options.s2_5_ShelvingStatus = params.get("s2_5_ss");

                        var retrievedHeightArrString2_5 = params.get('is_2_5_A');
                        var retrievedHeightArr2_5 = JSON.parse(retrievedHeightArrString2_5);
                        
                        createShoeShelving_sect2_5();

                        for (let i = 1; i <= retrievedHeightArr2_5.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+i).position.y = retrievedHeightArr2_5[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML = params.get("pf_is1_s2_5");
                        document.getElementById("PositionField_InternalShelving2_S2_5").innerHTML = params.get("pf_is2_s2_5");

                        self.options.heigh0Shelf2_5 = params.get("h0S2_5");
                        self.options.heigh1Shelf2_5 = params.get("h1S2_5");
                        self.options.heigh2Shelf2_5 = params.get("h2S2_5");

                    } else {}
                }
                if (params.has('s2_6_iss')) {
                    if (params.get("s2_6_iss") == 1 && params.get("s2_6_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S2_6").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S2_6").style.display = 'flex';
                        document.getElementById("internalShelving_sect2_6").value = params.get("s2_6_isa");
                        self.options.s2_6_ShelvingStatus = params.get("s2_6_ss");

                        var retrievedHeightArrString2_6 = params.get('is_2_6_A');
                        var retrievedHeightArr2_6 = JSON.parse(retrievedHeightArrString2_6);
                        
                        createInternalShelving_sect2_6();

                        for (let i = 1; i <= retrievedHeightArr2_6.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_6_'+'shelf'+i).position.y = retrievedHeightArr2_6[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML = params.get("pf_is1_s2_6");

                        self.options.heigh0Shelf2_6 = params.get("h0S2_6");
                        self.options.heigh1Shelf2_6 = params.get("h1S2_6");

                    } else if (params.get("s2_6_iss") == 1 && params.get("s2_6_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S2_6").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S2_6").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect2_6").value = params.get("s2_6_isa");
                        self.options.s2_6_ShelvingStatus = params.get("s2_6_ss");

                        var retrievedHeightArrString2_6 = params.get('is_2_6_A');
                        var retrievedHeightArr2_6 = JSON.parse(retrievedHeightArrString2_6);
                        
                        createShoeShelving_sect2_6();

                        for (let i = 1; i <= retrievedHeightArr2_6.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_2_6_'+'shelf'+i).position.y = retrievedHeightArr2_6[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML = params.get("pf_is1_s2_6");

                        self.options.heigh0Shelf2_6 = params.get("h0S2_6");
                        self.options.heigh1Shelf2_6 = params.get("h1S2_6");

                    } else {}
                }

                //s3_1
                if (params.has('s3_iss')) {
                    if (params.get("s3_iss") == 1 && params.get("s3_ss") == 'Wood' ) {

                        document.getElementById("InternalShelving_S3_1").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S3_1").style.display = 'flex';
                        document.getElementById("internalShelving_sect3_1").value = params.get("s3_isa");
                        self.options.s3_ShelvingStatus = params.get("s3_ss");

                        var retrievedHeightArrString3_1 = params.get('is_3_1_A');
                        var retrievedHeightArr3_1 = JSON.parse(retrievedHeightArrString3_1);
                    
                        createInternalShelving_sect3_1();

                        for (let i = 1; i <= retrievedHeightArr3_1.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+i).position.y = retrievedHeightArr3_1[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = params.get("pf_is1_s3_1");
                        document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = params.get("pf_is2_s3_1");
                        document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = params.get("pf_is3_s3_1");
                        document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = params.get("pf_is4_s3_1");
                        document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = params.get("pf_is5_s3_1");
                        document.getElementById("PositionField_InternalShelving6_S3_1").innerHTML = params.get("pf_is6_s3_1");


                        self.options.heigh0Shelf3_1 = params.get("h0S3_1");
                        self.options.heigh1Shelf3_1 = params.get("h1S3_1");
                        self.options.heigh2Shelf3_1 = params.get("h2S3_1");
                        self.options.heigh3Shelf3_1 = params.get("h3S3_1");
                        self.options.heigh4Shelf3_1 = params.get("h4S3_1");        
                        self.options.heigh5Shelf3_1 = params.get("h5S3_1");        
                        self.options.heigh6Shelf3_1 = params.get("h6S3_1");

                    }else if (params.get("s3_iss") == 1 && params.get("s3_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S3_1").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S3_1").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect3_1").value = params.get("s3_isa");
                        self.options.s3_ShelvingStatus = params.get("s3_ss");

                        var retrievedHeightArrString3_1 = params.get('is_3_1_A');
                        var retrievedHeightArr3_1 = JSON.parse(retrievedHeightArrString3_1);
                    
                        createShoeShelving_sect3_1();

                        for (let i = 1; i <= retrievedHeightArr3_1.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+i).position.y = retrievedHeightArr3_1[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML = params.get("pf_is1_s3_1");
                        document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML = params.get("pf_is2_s3_1");
                        document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML = params.get("pf_is3_s3_1");
                        document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML = params.get("pf_is4_s3_1");
                        document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML = params.get("pf_is5_s3_1");
                        document.getElementById("PositionField_InternalShelving6_S3_1").innerHTML = params.get("pf_is6_s3_1");

                        self.options.heigh0Shelf3_1 = params.get("h0S3_1");
                        self.options.heigh1Shelf3_1 = params.get("h1S3_1");
                        self.options.heigh2Shelf3_1 = params.get("h2S3_1");
                        self.options.heigh3Shelf3_1 = params.get("h3S3_1");
                        self.options.heigh4Shelf3_1 = params.get("h4S3_1");        
                        self.options.heigh5Shelf3_1 = params.get("h5S3_1");        
                        self.options.heigh6Shelf3_1 = params.get("h6S3_1");

                    } else {}
                }
                if (params.has('s3_2_iss')) {
                    if (params.get("s3_2_iss") == 1 && params.get("s3_2_ss") == 'Wood' ) {
    
                        document.getElementById("InternalShelving_S3_2").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S3_2").style.display = 'flex';
                        document.getElementById("internalShelving_sect3_2").value = params.get("s3_2_isa");
                        self.options.s3_2_ShelvingStatus = params.get("s3_2_ss");

                        var retrievedHeightArrString3_2 = params.get('is_3_2_A');
                        var retrievedHeightArr3_2 = JSON.parse(retrievedHeightArrString3_2);
                        
                        createInternalShelving_sect3_2();

                        for (let i = 1; i <= retrievedHeightArr3_2.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+i).position.y = retrievedHeightArr3_2[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = params.get("pf_is1_s3_2");
                        document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = params.get("pf_is2_s3_2");
                        document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = params.get("pf_is3_s3_2");
                        document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = params.get("pf_is4_s3_2");
                        document.getElementById("PositionField_InternalShelving5_S3_2").innerHTML = params.get("pf_is5_s3_2");

                        self.options.heigh0Shelf3_2 = params.get("h0S3_2");
                        self.options.heigh1Shelf3_2 = params.get("h1S3_2");
                        self.options.heigh2Shelf3_2 = params.get("h2S3_2");
                        self.options.heigh3Shelf3_2 = params.get("h3S3_2");
                        self.options.heigh4Shelf3_2 = params.get("h4S3_2");
                        self.options.heigh5Shelf3_2 = params.get("h5S3_2");

                    } else if (params.get("s3_2_iss") == 1 && params.get("s3_2_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S3_2").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S3_2").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect3_2").value = params.get("s3_2_isa");
                        self.options.s3_2_ShelvingStatus = params.get("s3_2_ss");

                        var retrievedHeightArrString3_2 = params.get('is_3_2_A');
                        var retrievedHeightArr3_2 = JSON.parse(retrievedHeightArrString3_2);
                        
                        createShoeShelving_sect3_2();

                        for (let i = 1; i <= retrievedHeightArr3_2.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+i).position.y = retrievedHeightArr3_2[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML = params.get("pf_is1_s3_2");
                        document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML = params.get("pf_is2_s3_2");
                        document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML = params.get("pf_is3_s3_2");
                        document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML = params.get("pf_is4_s3_2");
                        document.getElementById("PositionField_InternalShelving5_S3_2").innerHTML = params.get("pf_is5_s3_2");

                        self.options.heigh0Shelf3_2 = params.get("h0S3_2");
                        self.options.heigh1Shelf3_2 = params.get("h1S3_2");
                        self.options.heigh2Shelf3_2 = params.get("h2S3_2");
                        self.options.heigh3Shelf3_2 = params.get("h3S3_2");
                        self.options.heigh4Shelf3_2 = params.get("h4S3_2");
                        self.options.heigh5Shelf3_2 = params.get("h5S3_2");

                    } else {}

                }
                if (params.has('s3_3_iss')) {
                    if (params.get("s3_3_iss") == 1 && params.get("s3_3_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S3_3").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S3_3").style.display = 'flex';
                        document.getElementById("internalShelving_sect3_3").value = params.get("s3_3_isa");
                        self.options.s3_3_ShelvingStatus = params.get("s3_3_ss");

                        var retrievedHeightArrString3_3 = params.get('is_3_3_A');
                        var retrievedHeightArr3_3 = JSON.parse(retrievedHeightArrString3_3);
                        
                        createInternalShelving_sect3_3();

                        for (let i = 1; i <= retrievedHeightArr3_3.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+i).position.y = retrievedHeightArr3_3[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = params.get("pf_is1_s3_3");
                        document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = params.get("pf_is2_s3_3");
                        document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = params.get("pf_is3_s3_3");
                        document.getElementById("PositionField_InternalShelving4_S3_3").innerHTML = params.get("pf_is4_s3_3");

                        self.options.heigh0Shelf3_3 = params.get("h0S3_3");
                        self.options.heigh1Shelf3_3 = params.get("h1S3_3");
                        self.options.heigh2Shelf3_3 = params.get("h2S3_3");
                        self.options.heigh3Shelf3_3 = params.get("h3S3_3");
                        self.options.heigh4Shelf3_3 = params.get("h4S3_3");

                    } else if (params.get("s1_3_iss") == 1 && params.get("s1_3_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S3_3").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S3_3").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect3_3").value = params.get("s3_3_isa");
                        self.options.s3_3_ShelvingStatus = params.get("s3_3_ss");

                        var retrievedHeightArrString3_3 = params.get('is_3_3_A');
                        var retrievedHeightArr3_3 = JSON.parse(retrievedHeightArrString3_3);
                        
                        createShoeShelving_sect3_3();

                        for (let i = 1; i <= retrievedHeightArr3_3.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+i).position.y = retrievedHeightArr3_3[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML = params.get("pf_is1_s3_3");
                        document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML = params.get("pf_is2_s3_3");
                        document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML = params.get("pf_is3_s3_3");
                        document.getElementById("PositionField_InternalShelving4_S3_3").innerHTML = params.get("pf_is4_s3_3");

                        self.options.heigh0Shelf3_3 = params.get("h0S3_3");
                        self.options.heigh1Shelf3_3 = params.get("h1S3_3");
                        self.options.heigh2Shelf3_3 = params.get("h2S3_3");
                        self.options.heigh3Shelf3_3 = params.get("h3S3_3");
                        self.options.heigh4Shelf3_3 = params.get("h4S3_3");

                    } else {}
                }
                if (params.has('s3_4_iss')) {
                    if (params.get("s3_4_iss") == 1 && params.get("s3_4_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S3_4").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S3_4").style.display = 'flex';
                        document.getElementById("internalShelving_sect3_4").value = params.get("s3_4_isa");
                        self.options.s3_4_ShelvingStatus = params.get("s3_4_ss");

                        var retrievedHeightArrString3_4 = params.get('is_3_4_A');
                        var retrievedHeightArr3_4 = JSON.parse(retrievedHeightArrString3_4);
                        
                        createInternalShelving_sect3_4();

                        for (let i = 1; i <= retrievedHeightArr3_4.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+i).position.y = retrievedHeightArr3_4[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = params.get("pf_is1_s3_4");
                        document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = params.get("pf_is2_s3_4");
                        document.getElementById("PositionField_InternalShelving3_S3_4").innerHTML = params.get("pf_is3_s3_4");

                        self.options.heigh0Shelf3_4 = params.get("h0S3_4");
                        self.options.heigh1Shelf3_4 = params.get("h1S3_4");
                        self.options.heigh2Shelf3_4 = params.get("h2S3_4");
                        self.options.heigh3Shelf3_4 = params.get("h3S3_4");

                    } else if (params.get("s3_4_iss") == 1 && params.get("s3_4_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S3_4").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S3_4").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect3_4").value = params.get("s3_4_isa");
                        self.options.s3_4_ShelvingStatus = params.get("s3_4_ss");

                        var retrievedHeightArrString3_4 = params.get('is_3_4_A');
                        var retrievedHeightArr3_4 = JSON.parse(retrievedHeightArrString3_4);
                        
                        createShoeShelving_sect3_4();

                        for (let i = 1; i <= retrievedHeightArr3_4.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+i).position.y = retrievedHeightArr3_4[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML = params.get("pf_is1_s3_4");
                        document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML = params.get("pf_is2_s3_4");
                        document.getElementById("PositionField_InternalShelving3_S3_4").innerHTML = params.get("pf_is3_s3_4");

                        self.options.heigh0Shelf3_4 = params.get("h0S3_4");
                        self.options.heigh1Shelf3_4 = params.get("h1S3_4");
                        self.options.heigh2Shelf3_4 = params.get("h2S3_4");
                        self.options.heigh3Shelf3_4 = params.get("h3S3_4");

                    } else {}
                }
                if (params.has('s3_5_iss')) {
                    if (params.get("s3_5_iss") == 1 && params.get("s3_5_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S3_5").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S3_5").style.display = 'flex';
                        document.getElementById("internalShelving_sect3_5").value = params.get("s3_5_isa");
                        self.options.s3_5_ShelvingStatus = params.get("s3_5_ss");

                        var retrievedHeightArrString3_5 = params.get('is_3_5_A');
                        var retrievedHeightArr3_5 = JSON.parse(retrievedHeightArrString3_5);
                        
                        createInternalShelving_sect3_5();

                        for (let i = 1; i <= retrievedHeightArr3_5.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+i).position.y = retrievedHeightArr3_5[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = params.get("pf_is1_s3_5");
                        document.getElementById("PositionField_InternalShelving2_S3_5").innerHTML = params.get("pf_is2_s3_5");

                        self.options.heigh0Shelf3_5 = params.get("h0S3_5");
                        self.options.heigh1Shelf3_5 = params.get("h1S3_5");
                        self.options.heigh2Shelf3_5 = params.get("h2S3_5");

                    } else if (params.get("s3_5_iss") == 1 && params.get("s3_5_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S3_5").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S3_5").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect3_5").value = params.get("s3_5_isa");
                        self.options.s3_5_ShelvingStatus = params.get("s3_5_ss");

                        var retrievedHeightArrString3_5 = params.get('is_3_5_A');
                        var retrievedHeightArr3_5 = JSON.parse(retrievedHeightArrString3_5);
                        
                        createShoeShelving_sect3_5();

                        for (let i = 1; i <= retrievedHeightArr3_5.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+i).position.y = retrievedHeightArr3_5[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML = params.get("pf_is1_s3_5");
                        document.getElementById("PositionField_InternalShelving2_S3_5").innerHTML = params.get("pf_is2_s3_5");

                        self.options.heigh0Shelf3_5 = params.get("h0S3_5");
                        self.options.heigh1Shelf3_5 = params.get("h1S3_5");
                        self.options.heigh2Shelf3_5 = params.get("h2S3_5");

                    } else {}
                }
                if (params.has('s3_6_iss')) {
                    if (params.get("s3_6_iss") == 1 && params.get("s3_6_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S3_6").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S3_6").style.display = 'flex';
                        document.getElementById("internalShelving_sect3_6").value = params.get("s3_6_isa");
                        self.options.s3_6_ShelvingStatus = params.get("s3_6_ss");

                        var retrievedHeightArrString3_6 = params.get('is_3_6_A');
                        var retrievedHeightArr3_6 = JSON.parse(retrievedHeightArrString3_6);
                        
                        createInternalShelving_sect3_6();

                        for (let i = 1; i <= retrievedHeightArr3_6.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_6_'+'shelf'+i).position.y = retrievedHeightArr3_6[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML = params.get("pf_is1_s3_6");

                        self.options.heigh0Shelf3_6 = params.get("h0S3_6");
                        self.options.heigh1Shelf3_6 = params.get("h1S3_6");

                    } else if (params.get("s3_6_iss") == 1 && params.get("s3_6_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S3_6").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S3_6").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect3_6").value = params.get("s3_6_isa");
                        self.options.s3_6_ShelvingStatus = params.get("s3_6_ss");

                        var retrievedHeightArrString3_6 = params.get('is_3_6_A');
                        var retrievedHeightArr3_6 = JSON.parse(retrievedHeightArrString3_6);
                        
                        createShoeShelving_sect3_6();

                        for (let i = 1; i <= retrievedHeightArr3_6.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_3_6_'+'shelf'+i).position.y = retrievedHeightArr3_6[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML = params.get("pf_is1_s3_6");

                        self.options.heigh0Shelf3_6 = params.get("h0S3_6");
                        self.options.heigh1Shelf3_6 = params.get("h1S3_6");

                    } else {}
                }

                //s4_1
                if (params.has('s4_iss')) {
                    if (params.get("s4_iss") == 1 && params.get("s4_ss") == 'Wood' ) {

                        document.getElementById("InternalShelving_S4_1").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S4_1").style.display = 'flex';
                        document.getElementById("internalShelving_sect4_1").value = params.get("s4_isa");
                        self.options.s4_ShelvingStatus = params.get("s4_ss");

                        var retrievedHeightArrString4_1 = params.get('is_4_1_A');
                        var retrievedHeightArr4_1 = JSON.parse(retrievedHeightArrString4_1);
                    
                        createInternalShelving_sect4_1();

                        for (let i = 1; i <= retrievedHeightArr4_1.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+i).position.y = retrievedHeightArr4_1[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = params.get("pf_is1_s4_1");
                        document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = params.get("pf_is2_s4_1");
                        document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = params.get("pf_is3_s4_1");
                        document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = params.get("pf_is4_s4_1");
                        document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = params.get("pf_is5_s4_1");
                        document.getElementById("PositionField_InternalShelving6_S4_1").innerHTML = params.get("pf_is6_s4_1");

                        self.options.heigh0Shelf4_1 = params.get("h0S4_1");
                        self.options.heigh1Shelf4_1 = params.get("h1S4_1");
                        self.options.heigh2Shelf4_1 = params.get("h2S4_1");
                        self.options.heigh3Shelf4_1 = params.get("h3S4_1");
                        self.options.heigh4Shelf4_1 = params.get("h4S4_1");   
                        self.options.heigh5Shelf4_1 = params.get("h5S4_1");   
                        self.options.heigh6Shelf4_1 = params.get("h6S4_1");   
                     
                    }else if (params.get("s4_iss") == 1 && params.get("s4_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S4_1").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S4_1").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect4_1").value = params.get("s4_isa");
                        self.options.s4_ShelvingStatus = params.get("s4_ss");

                        var retrievedHeightArrString4_1 = params.get('is_4_1_A');
                        var retrievedHeightArr4_1 = JSON.parse(retrievedHeightArrString4_1);
                    
                        createShoeShelving_sect4_1();

                        for (let i = 1; i <= retrievedHeightArr4_1.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+i).position.y = retrievedHeightArr4_1[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML = params.get("pf_is1_s4_1");
                        document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML = params.get("pf_is2_s4_1");
                        document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML = params.get("pf_is3_s4_1");
                        document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML = params.get("pf_is4_s4_1");
                        document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML = params.get("pf_is5_s4_1");
                        document.getElementById("PositionField_InternalShelving6_S4_1").innerHTML = params.get("pf_is6_s4_1");

                        self.options.heigh0Shelf4_1 = params.get("h0S4_1");
                        self.options.heigh1Shelf4_1 = params.get("h1S4_1");
                        self.options.heigh2Shelf4_1 = params.get("h2S4_1");
                        self.options.heigh3Shelf4_1 = params.get("h3S4_1");
                        self.options.heigh4Shelf4_1 = params.get("h4S4_1");   
                        self.options.heigh5Shelf4_1 = params.get("h5S4_1");   
                        self.options.heigh6Shelf4_1 = params.get("h6S4_1"); 

                    } else {}
                }
                if (params.has('s4_2_iss')) {
                    if (params.get("s4_2_iss") == 1 && params.get("s4_2_ss") == 'Wood' ) {
    
                        document.getElementById("InternalShelving_S4_2").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S4_2").style.display = 'flex';
                        document.getElementById("internalShelving_sect4_2").value = params.get("s4_2_isa");
                        self.options.s4_2_ShelvingStatus = params.get("s4_2_ss");

                        var retrievedHeightArrString4_2 = params.get('is_4_2_A');
                        var retrievedHeightArr4_2 = JSON.parse(retrievedHeightArrString4_2);
                        
                        createInternalShelving_sect4_2();

                        for (let i = 1; i <= retrievedHeightArr4_2.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+i).position.y = retrievedHeightArr4_2[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = params.get("pf_is1_s4_2");
                        document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = params.get("pf_is2_s4_2");
                        document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = params.get("pf_is3_s4_2");
                        document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = params.get("pf_is4_s4_2");
                        document.getElementById("PositionField_InternalShelving5_S4_2").innerHTML = params.get("pf_is5_s4_2");

                        self.options.heigh0Shelf4_2 = params.get("h0S4_2");
                        self.options.heigh1Shelf4_2 = params.get("h1S4_2");
                        self.options.heigh2Shelf4_2 = params.get("h2S4_2");
                        self.options.heigh3Shelf4_2 = params.get("h3S4_2");
                        self.options.heigh4Shelf4_2 = params.get("h4S4_2");
                        self.options.heigh5Shelf4_2 = params.get("h5S4_2");

                    } else if (params.get("s4_2_iss") == 1 && params.get("s4_2_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S4_2").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S4_2").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect4_2").value = params.get("s4_2_isa");
                        self.options.s4_2_ShelvingStatus = params.get("s4_2_ss");

                        var retrievedHeightArrString4_2 = params.get('is_4_2_A');
                        var retrievedHeightArr4_2 = JSON.parse(retrievedHeightArrString4_2);
                        
                        createShoeShelving_sect4_2();

                        for (let i = 1; i <= retrievedHeightArr4_2.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+i).position.y = retrievedHeightArr4_2[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML = params.get("pf_is1_s4_2");
                        document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML = params.get("pf_is2_s4_2");
                        document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML = params.get("pf_is3_s4_2");
                        document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML = params.get("pf_is4_s4_2");
                        document.getElementById("PositionField_InternalShelving5_S4_2").innerHTML = params.get("pf_is5_s4_2");

                        self.options.heigh0Shelf4_2 = params.get("h0S4_2");
                        self.options.heigh1Shelf4_2 = params.get("h1S4_2");
                        self.options.heigh2Shelf4_2 = params.get("h2S4_2");
                        self.options.heigh3Shelf4_2 = params.get("h3S4_2");
                        self.options.heigh4Shelf4_2 = params.get("h4S4_2");
                        self.options.heigh5Shelf4_2 = params.get("h5S4_2");

                    } else {}

                }
                if (params.has('s4_3_iss')) {
                    if (params.get("s4_3_iss") == 1 && params.get("s4_3_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S4_3").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S4_3").style.display = 'flex';
                        document.getElementById("internalShelving_sect4_3").value = params.get("s4_3_isa");
                        self.options.s4_3_ShelvingStatus = params.get("s4_3_ss");
                        
                        var retrievedHeightArrString4_3 = params.get('is_4_3_A');
                        var retrievedHeightArr4_3 = JSON.parse(retrievedHeightArrString4_3);
                        
                        createInternalShelving_sect4_3();

                        for (let i = 1; i <= retrievedHeightArr4_3.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+i).position.y = retrievedHeightArr4_3[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = params.get("pf_is1_s4_3");
                        document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = params.get("pf_is2_s4_3");
                        document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = params.get("pf_is3_s4_3");
                        document.getElementById("PositionField_InternalShelving4_S4_3").innerHTML = params.get("pf_is4_s4_3");

                        self.options.heigh0Shelf4_3 = params.get("h0S4_3");
                        self.options.heigh1Shelf4_3 = params.get("h1S4_3");
                        self.options.heigh2Shelf4_3 = params.get("h2S4_3");
                        self.options.heigh3Shelf4_3 = params.get("h3S4_3");
                        self.options.heigh4Shelf4_3 = params.get("h4S4_3");

                    } else if (params.get("s1_3_iss") == 1 && params.get("s1_3_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S4_3").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S4_3").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect4_3").value = params.get("s4_3_isa");
                        self.options.s4_3_ShelvingStatus = params.get("s4_3_ss");
                        
                        var retrievedHeightArrString4_3 = params.get('is_4_3_A');
                        var retrievedHeightArr4_3 = JSON.parse(retrievedHeightArrString4_3);
                        
                        createShoeShelving_sect4_3();

                        for (let i = 1; i <= retrievedHeightArr4_3.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+i).position.y = retrievedHeightArr4_3[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML = params.get("pf_is1_s4_3");
                        document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML = params.get("pf_is2_s4_3");
                        document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML = params.get("pf_is3_s4_3");
                        document.getElementById("PositionField_InternalShelving4_S4_3").innerHTML = params.get("pf_is4_s4_3");

                        self.options.heigh0Shelf4_3 = params.get("h0S4_3");
                        self.options.heigh1Shelf4_3 = params.get("h1S4_3");
                        self.options.heigh2Shelf4_3 = params.get("h2S4_3");
                        self.options.heigh3Shelf4_3 = params.get("h3S4_3");
                        self.options.heigh4Shelf4_3 = params.get("h4S4_3");

                    } else {}
                }
                if (params.has('s4_4_iss')) {
                    if (params.get("s4_4_iss") == 1 && params.get("s4_4_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S4_4").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S4_4").style.display = 'flex';
                        document.getElementById("internalShelving_sect4_4").value = params.get("s4_4_isa");
                        self.options.s4_4_ShelvingStatus = params.get("s4_4_ss");

                        var retrievedHeightArrString4_4 = params.get('is_4_4_A');
                        var retrievedHeightArr4_4 = JSON.parse(retrievedHeightArrString4_4);
                        
                        createInternalShelving_sect4_4();

                        for (let i = 1; i <= retrievedHeightArr4_4.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+i).position.y = retrievedHeightArr4_4[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = params.get("pf_is1_s4_4");
                        document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = params.get("pf_is2_s4_4");
                        document.getElementById("PositionField_InternalShelving3_S4_4").innerHTML = params.get("pf_is3_s4_4");

                        self.options.heigh0Shelf4_4 = params.get("h0S4_4");
                        self.options.heigh1Shelf4_4 = params.get("h1S4_4");
                        self.options.heigh2Shelf4_4 = params.get("h2S4_4");
                        self.options.heigh3Shelf4_4 = params.get("h3S4_4");
                    
                    } else if (params.get("s4_4_iss") == 1 && params.get("s4_4_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S4_4").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S4_4").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect4_4").value = params.get("s4_4_isa");
                        self.options.s4_4_ShelvingStatus = params.get("s4_4_ss");

                        var retrievedHeightArrString4_4 = params.get('is_4_4_A');
                        var retrievedHeightArr4_4 = JSON.parse(retrievedHeightArrString4_4);
                        
                        createShoeShelving_sect4_4();

                        for (let i = 1; i <= retrievedHeightArr4_4.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+i).position.y = retrievedHeightArr4_4[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML = params.get("pf_is1_s4_4");
                        document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML = params.get("pf_is2_s4_4");
                        document.getElementById("PositionField_InternalShelving3_S4_4").innerHTML = params.get("pf_is3_s4_4");

                        self.options.heigh0Shelf4_4 = params.get("h0S4_4");
                        self.options.heigh1Shelf4_4 = params.get("h1S4_4");
                        self.options.heigh2Shelf4_4 = params.get("h2S4_4");
                        self.options.heigh3Shelf4_4 = params.get("h3S4_4");

                    } else {}
                }  
                if (params.has('s4_5_iss')) {
                    if (params.get("s4_5_iss") == 1 && params.get("s4_5_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S4_5").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S4_5").style.display = 'flex';
                        document.getElementById("internalShelving_sect4_5").value = params.get("s4_5_isa");
                        self.options.s4_5_ShelvingStatus = params.get("s4_5_ss");

                        var retrievedHeightArrString4_5 = params.get('is_4_5_A');
                        var retrievedHeightArr4_5 = JSON.parse(retrievedHeightArrString4_5);
                        
                        createInternalShelving_sect4_5();

                        for (let i = 1; i <= retrievedHeightArr4_5.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+i).position.y = retrievedHeightArr4_5[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = params.get("pf_is1_s4_5");
                        document.getElementById("PositionField_InternalShelving2_S4_5").innerHTML = params.get("pf_is2_s4_5");

                        self.options.heigh0Shelf4_5 = params.get("h0S4_5");
                        self.options.heigh1Shelf4_5 = params.get("h1S4_5");
                        self.options.heigh2Shelf4_5 = params.get("h2S4_5");
                    
                    } else if (params.get("s4_5_iss") == 1 && params.get("s4_5_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S4_5").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S4_5").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect4_5").value = params.get("s4_5_isa");
                        self.options.s4_5_ShelvingStatus = params.get("s4_5_ss");

                        var retrievedHeightArrString4_5 = params.get('is_4_5_A');
                        var retrievedHeightArr4_5 = JSON.parse(retrievedHeightArrString4_5);
                        
                        createShoeShelving_sect4_5();

                        for (let i = 1; i <= retrievedHeightArr4_5.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+i).position.y = retrievedHeightArr4_5[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML = params.get("pf_is1_s4_5");
                        document.getElementById("PositionField_InternalShelving2_S4_5").innerHTML = params.get("pf_is2_s4_5");

                        self.options.heigh0Shelf4_5 = params.get("h0S4_5");
                        self.options.heigh1Shelf4_5 = params.get("h1S4_5");
                        self.options.heigh2Shelf4_5 = params.get("h2S4_5");

                    } else {}
                }
                if (params.has('s4_6_iss')) {
                    if (params.get("s4_6_iss") == 1 && params.get("s4_6_ss") == 'Wood' ) {
        
                        document.getElementById("InternalShelving_S4_6").checked = true;
                        document.getElementById("sectionMoveInternalShelving_S4_6").style.display = 'flex';
                        document.getElementById("internalShelving_sect4_6").value = params.get("s4_6_isa");
                        self.options.s4_6_ShelvingStatus = params.get("s4_6_ss");

                        var retrievedHeightArrString4_6 = params.get('is_4_6_A');
                        var retrievedHeightArr4_6 = JSON.parse(retrievedHeightArrString4_6);
                        
                        createInternalShelving_sect4_6();

                        for (let i = 1; i <= retrievedHeightArr4_6.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_6_'+'shelf'+i).position.y = retrievedHeightArr4_6[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML = params.get("pf_is1_s4_6");

                        self.options.heigh0Shelf4_6 = params.get("h0S4_6");
                        self.options.heigh1Shelf4_6 = params.get("h1S4_6");
                    
                    } else if (params.get("s4_6_iss") == 1 && params.get("s4_6_ss") == 'Shoe' ) {

                        document.getElementById("ShoeShelving_S4_6").checked = true;
                        document.getElementById("sectionAmountShoeShelving_S4_6").style.display = 'flex';
                        document.getElementById("ShoeShelving_sect4_6").value = params.get("s4_6_isa");
                        self.options.s4_6_ShelvingStatus = params.get("s4_6_ss");

                        var retrievedHeightArrString4_6 = params.get('is_4_6_A');
                        var retrievedHeightArr4_6 = JSON.parse(retrievedHeightArrString4_6);
                        
                        createShoeShelving_sect4_6();

                        for (let i = 1; i <= retrievedHeightArr4_6.length - 1 ; i++) {
                            self.scene.getObjectByName('internalShelf_4_6_'+'shelf'+i).position.y = retrievedHeightArr4_6[i]
                        }

                        document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML = params.get("pf_is1_s4_6");

                        self.options.heigh0Shelf4_6 = params.get("h0S4_6");
                        self.options.heigh1Shelf4_6 = params.get("h1S4_6");

                    } else {}
                }
    
    
               //handles
               if (params.has('HH')) {
                    document.getElementById("hideHandles").checked = params.get('HH') === 'true';
                    setTimeout(function() {
                        hideHandles()
                    }, 1200);
                }  



                self.defaultLeftMenu(); 


            }
            //ð´
 
            function saveStateToURL() {
    
                const params = new URLSearchParams();
            
                // Suppose your state includes the x, y, z position of a cube
                params.set('w', parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10));
                params.set('h', parseInt(document.getElementById("subdomainHeightCabinet_Dimensions").value, 10));
                params.set('d', parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10));
    
                params.set('f', self.options.statusLegs);
                
                //verticals 
                params.set('v', parseInt(document.getElementById("subdomainNumberElementCorpus_Cabinet_Dimensionsz").value, 10));

                try{   
                    params.set('V1_pX', self.scene.getObjectByName( "pillar1", true ).position.x ); 
                    params.set('s1L', self.options.section1Length); 
                    params.set('s2L', self.options.section2Length); 

                    params.set('V2_pX', self.scene.getObjectByName( "pillar2", true ).position.x ); 
                    params.set('s3L', self.options.section3Length); 

                    params.set('V3_pX', self.scene.getObjectByName( "pillar3", true ).position.x ); 
                    params.set('s4L', self.options.section4Length); 
    
                }catch(e){       
                    console.clear();
                }; 
    
                //colors
                params.set('DC', self.options.doors.texture);
                params.set('PC', self.options.pillar.texture);
                params.set('FC', self.options.shelf.texture);

                params.set('cC', document.getElementById("choosenColor_Carcass").innerHTML);
                params.set('iC', document.getElementById("choosenColor_CarcassIcon").style.backgroundColor);
                params.set('ihC', document.getElementById("choosenColor_CarcassIcon").innerHTML);

                params.set('cF', document.getElementById("choosenColor_Door").innerHTML);
                params.set('iF', document.getElementById("choosenColor_DoorIcon").style.backgroundColor);
                params.set('ihF', document.getElementById("choosenColor_DoorIcon").innerHTML);
    
                //s1 horizontals
                params.set('RCS1_1_pY', self.scene.getObjectByName( "RayCastRecieverSection1_1").position.y ); 
                params.set('WRS1_1_pY', parseInt(self.scene.getObjectByName( "section1_WireframeMesh1_1").position.y) ); 
                params.set('H_S1_1', self.options.sectionHeight_1_1); 
                params.set("ovHHP_S1_1", parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) );
                params.set('s1_AHD', self.options.s1_AmountOfHorDividers); 

    
                if (self.scene.getObjectByName( "RayCastRecieverSection1_2") ) {
                    params.set('RCS1_2_pY', self.scene.getObjectByName( "RayCastRecieverSection1_2").position.y ); 
                    params.set('WRS1_2_pY', parseInt(self.scene.getObjectByName( "section1_WireframeMesh1_2").position.y) ); 
                    params.set('s1_hDS', self.options.s1_horizDividStatus);
                    params.set('hDS1_1', self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y ); 
                    params.set("ovHHP_S1_2", parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S1_2', self.options.sectionHeight_1_2); 
                }          
                if (self.scene.getObjectByName( "RayCastRecieverSection1_3")) {
                    params.set('RCS1_3_pY', self.scene.getObjectByName( "RayCastRecieverSection1_3").position.y ); 
                    params.set('WRS1_3_pY', parseInt(self.scene.getObjectByName( "section1_WireframeMesh1_3").position.y) ); 
                    params.set('s1_2_hDS', self.options.s1_2_horizDividStatus);
                    params.set('hDS1_2', self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y ); 
                    params.set("ovHHP_S1_3", parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S1_3', self.options.sectionHeight_1_3);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection1_4")) {
                    params.set('RCS1_4_pY', self.scene.getObjectByName( "RayCastRecieverSection1_4").position.y ); 
                    params.set('WRS1_4_pY', parseInt(self.scene.getObjectByName( "section1_WireframeMesh1_4").position.y) ); 
                    params.set('s1_3_hDS', self.options.s1_3_horizDividStatus);
                    params.set('hDS1_3', self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y ); 
                    params.set("ovHHP_S1_4", parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S1_4', self.options.sectionHeight_1_4);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection1_5")) {
                    params.set('RCS1_5_pY', self.scene.getObjectByName( "RayCastRecieverSection1_5").position.y ); 
                    params.set('WRS1_5_pY', parseInt(self.scene.getObjectByName( "section1_WireframeMesh1_5").position.y) ); 
                    params.set('s1_4_hDS', self.options.s1_4_horizDividStatus);
                    params.set('hDS1_4', self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y ); 
                    params.set("ovHHP_S1_5", parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S1_5', self.options.sectionHeight_1_5);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection1_6")) {
                    params.set('RCS1_6_pY', self.scene.getObjectByName( "RayCastRecieverSection1_6").position.y ); 
                    params.set('WRS1_6_pY', parseInt(self.scene.getObjectByName( "section1_WireframeMesh1_6").position.y) ); 
                    params.set('s1_5_hDS', self.options.s1_5_horizDividStatus);
                    params.set('hDS1_5', self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y ); 
                    params.set("ovHHP_S1_6", parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S1_6', self.options.sectionHeight_1_6);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection1_7")) {
                    params.set('RCS1_7_pY', self.scene.getObjectByName( "RayCastRecieverSection1_7").position.y ); 
                    params.set('WRS1_7_pY', parseInt(self.scene.getObjectByName( "section1_WireframeMesh1_7").position.y) ); 
                    params.set('s1_6_hDS', self.options.s1_6_horizDividStatus);
                    params.set('hDS1_6', self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y ); 
                    params.set("ovHHP_S1_7", parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S1_7', self.options.sectionHeight_1_7);
                }
                
    
                //s2 horizontals
                if (self.scene.getObjectByName( "RayCastRecieverSection2_1")) {

                    params.set('RCS2_1_pY', self.scene.getObjectByName( "RayCastRecieverSection2_1").position.y ); 
                    params.set('WRS2_1_pY', parseInt(self.scene.getObjectByName( "section2_WireframeMesh2_1").position.y) ); 
                    params.set('H_S2_1', self.options.sectionHeight_2_1); 
                    params.set("ovHHP_S2_1", parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('s2_AHD', self.options.s2_AmountOfHorDividers);

                }
                if (self.scene.getObjectByName( "RayCastRecieverSection2_2") ) {
                    params.set('RCS2_2_pY', self.scene.getObjectByName( "RayCastRecieverSection2_2").position.y ); 
                    params.set('WRS2_2_pY', parseInt(self.scene.getObjectByName( "section2_WireframeMesh2_2").position.y) ); 
                    params.set('s2_hDS', self.options.s2_horizDividStatus);
                    params.set('hDS2_1', self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y ); 
                    params.set("ovHHP_S2_2", parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S2_2', self.options.sectionHeight_2_2); 
                } 
                if (self.scene.getObjectByName( "RayCastRecieverSection2_3")) {
                    params.set('RCS2_3_pY', self.scene.getObjectByName( "RayCastRecieverSection2_3").position.y ); 
                    params.set('WRS2_3_pY', parseInt(self.scene.getObjectByName( "section2_WireframeMesh2_3").position.y) ); 
                    params.set('s2_2_hDS', self.options.s2_2_horizDividStatus);
                    params.set('hDS2_2', self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y ); 
                    params.set("ovHHP_S2_3", parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S2_3', self.options.sectionHeight_2_3);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection2_4")) {
                    params.set('RCS2_4_pY', self.scene.getObjectByName( "RayCastRecieverSection2_4").position.y ); 
                    params.set('WRS2_4_pY', parseInt(self.scene.getObjectByName( "section2_WireframeMesh2_4").position.y) ); 
                    params.set('s2_3_hDS', self.options.s2_3_horizDividStatus);
                    params.set('hDS2_3', self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y ); 
                    params.set("ovHHP_S2_4", parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S2_4', self.options.sectionHeight_2_4);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection2_5")) {
                    params.set('RCS2_5_pY', self.scene.getObjectByName( "RayCastRecieverSection2_5").position.y ); 
                    params.set('WRS2_5_pY', parseInt(self.scene.getObjectByName( "section2_WireframeMesh2_5").position.y) ); 
                    params.set('s2_4_hDS', self.options.s2_4_horizDividStatus);
                    params.set('hDS2_4', self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y ); 
                    params.set("ovHHP_S2_5", parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S2_5', self.options.sectionHeight_2_5);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection2_6")) {
                    params.set('RCS2_6_pY', self.scene.getObjectByName( "RayCastRecieverSection2_6").position.y ); 
                    params.set('WRS2_6_pY', parseInt(self.scene.getObjectByName( "section2_WireframeMesh2_6").position.y) ); 
                    params.set('s2_5_hDS', self.options.s2_5_horizDividStatus);
                    params.set('hDS2_5', self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y ); 
                    params.set("ovHHP_S2_6", parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S2_6', self.options.sectionHeight_2_6);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection2_7")) {
                    params.set('RCS2_7_pY', self.scene.getObjectByName( "RayCastRecieverSection2_7").position.y ); 
                    params.set('WRS2_7_pY', parseInt(self.scene.getObjectByName( "section2_WireframeMesh2_7").position.y) ); 
                    params.set('s2_6_hDS', self.options.s2_6_horizDividStatus);
                    params.set('hDS2_6', self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y ); 
                    params.set("ovHHP_S2_7", parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S2_7', self.options.sectionHeight_2_7);
                }
                
                //s3 horizontals
                if (self.scene.getObjectByName( "RayCastRecieverSection3_1")) {
                    params.set('RCS3_1_pY', self.scene.getObjectByName( "RayCastRecieverSection3_1").position.y ); 
                    params.set('WRS3_1_pY', parseInt(self.scene.getObjectByName( "section3_WireframeMesh3_1").position.y) ); 
                    params.set('H_S3_1', self.options.sectionHeight_3_1); 
                    params.set("ovHHP_S3_1", parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('s3_AHD', self.options.s3_AmountOfHorDividers);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection3_2") ) {
                    params.set('RCS3_2_pY', self.scene.getObjectByName( "RayCastRecieverSection3_2").position.y ); 
                    params.set('WRS3_2_pY', parseInt(self.scene.getObjectByName( "section3_WireframeMesh3_2").position.y) ); 
                    params.set('s3_hDS', self.options.s3_horizDividStatus);
                    params.set('hDS3_1', self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y ); 
                    params.set("ovHHP_S3_2", parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S3_2', self.options.sectionHeight_3_2); 
                } 
                if (self.scene.getObjectByName( "RayCastRecieverSection3_3")) {
                    params.set('RCS3_3_pY', self.scene.getObjectByName( "RayCastRecieverSection3_3").position.y ); 
                    params.set('WRS3_3_pY', parseInt(self.scene.getObjectByName( "section3_WireframeMesh3_3").position.y) ); 
                    params.set('s3_2_hDS', self.options.s3_2_horizDividStatus);
                    params.set('hDS3_2', self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y ); 
                    params.set("ovHHP_S3_3", parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S3_3', self.options.sectionHeight_3_3);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection3_4")) {
                    params.set('RCS3_4_pY', self.scene.getObjectByName( "RayCastRecieverSection3_4").position.y ); 
                    params.set('WRS3_4_pY', parseInt(self.scene.getObjectByName( "section3_WireframeMesh3_4").position.y) ); 
                    params.set('s3_3_hDS', self.options.s3_3_horizDividStatus);
                    params.set('hDS3_3', self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y ); 
                    params.set("ovHHP_S3_4", parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S3_4', self.options.sectionHeight_3_4);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection3_5")) {
                    params.set('RCS3_5_pY', self.scene.getObjectByName( "RayCastRecieverSection3_5").position.y ); 
                    params.set('WRS3_5_pY', parseInt(self.scene.getObjectByName( "section3_WireframeMesh3_5").position.y) ); 
                    params.set('s3_4_hDS', self.options.s3_4_horizDividStatus);
                    params.set('hDS3_4', self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y ); 
                    params.set("ovHHP_S3_5", parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S3_5', self.options.sectionHeight_3_5);
                } 
                if (self.scene.getObjectByName( "RayCastRecieverSection3_6")) {
                    params.set('RCS3_6_pY', self.scene.getObjectByName( "RayCastRecieverSection3_6").position.y ); 
                    params.set('WRS3_6_pY', parseInt(self.scene.getObjectByName( "section3_WireframeMesh3_6").position.y) ); 
                    params.set('s3_5_hDS', self.options.s3_5_horizDividStatus);
                    params.set('hDS3_5', self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y ); 
                    params.set("ovHHP_S3_6", parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S3_6', self.options.sectionHeight_3_6);
                }   
                if (self.scene.getObjectByName( "RayCastRecieverSection3_7")) {
                    params.set('RCS3_7_pY', self.scene.getObjectByName( "RayCastRecieverSection3_7").position.y ); 
                    params.set('WRS3_7_pY', parseInt(self.scene.getObjectByName( "section3_WireframeMesh3_7").position.y) ); 
                    params.set('s3_6_hDS', self.options.s3_6_horizDividStatus);
                    params.set('hDS3_6', self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y ); 
                    params.set("ovHHP_S3_7", parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S3_7', self.options.sectionHeight_3_7);
                }   


                //s4 horizontals
                if (self.scene.getObjectByName( "RayCastRecieverSection4_1")) {
                    params.set('RCS4_1_pY', self.scene.getObjectByName( "RayCastRecieverSection4_1").position.y ); 
                    params.set('WRS4_1_pY', parseInt(self.scene.getObjectByName( "section4_WireframeMesh4_1").position.y) ); 
                    params.set('H_S4_1', self.options.sectionHeight_4_1); 
                    params.set("ovHHP_S4_1", parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('s4_AHD', self.options.s4_AmountOfHorDividers);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection4_2") ) {
                    params.set('RCS4_2_pY', self.scene.getObjectByName( "RayCastRecieverSection4_2").position.y ); 
                    params.set('WRS4_2_pY', parseInt(self.scene.getObjectByName( "section4_WireframeMesh4_2").position.y) ); 
                    params.set('s4_hDS', self.options.s4_horizDividStatus);
                    params.set('hDS4_1', self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y ); 
                    params.set("ovHHP_S4_2", parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S4_2', self.options.sectionHeight_4_2); 
                } 
                if (self.scene.getObjectByName( "RayCastRecieverSection4_3")) {
                    params.set('RCS4_4_pY', self.scene.getObjectByName( "RayCastRecieverSection4_3").position.y ); 
                    params.set('WRS4_3_pY', parseInt(self.scene.getObjectByName( "section4_WireframeMesh4_3").position.y) ); 
                    params.set('s4_2_hDS', self.options.s4_2_horizDividStatus);
                    params.set('hDS4_2', self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y ); 
                    params.set("ovHHP_S4_3", parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S4_3', self.options.sectionHeight_4_3);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection4_4")) {
                    params.set('RCS4_4_pY', self.scene.getObjectByName( "RayCastRecieverSection4_4").position.y ); 
                    params.set('WRS4_4_pY', parseInt(self.scene.getObjectByName( "section4_WireframeMesh4_4").position.y) ); 
                    params.set('s4_3_hDS', self.options.s4_3_horizDividStatus);
                    params.set('hDS4_3', self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y ); 
                    params.set("ovHHP_S4_4", parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S4_4', self.options.sectionHeight_4_4);
                }
                if (self.scene.getObjectByName( "RayCastRecieverSection4_5")) {
                    params.set('RCS4_5_pY', self.scene.getObjectByName( "RayCastRecieverSection4_5").position.y ); 
                    params.set('WRS4_5_pY', parseInt(self.scene.getObjectByName( "section4_WireframeMesh4_5").position.y) ); 
                    params.set('s4_4_hDS', self.options.s4_4_horizDividStatus);
                    params.set('hDS4_4', self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y ); 
                    params.set("ovHHP_S4_5", parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S4_5', self.options.sectionHeight_4_5);
                } 
                if (self.scene.getObjectByName( "RayCastRecieverSection4_6")) {
                    params.set('RCS4_6_pY', self.scene.getObjectByName( "RayCastRecieverSection4_6").position.y ); 
                    params.set('WRS4_6_pY', parseInt(self.scene.getObjectByName( "section4_WireframeMesh4_6").position.y) ); 
                    params.set('s4_5_hDS', self.options.s4_5_horizDividStatus);
                    params.set('hDS4_5', self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y ); 
                    params.set("ovHHP_S4_6", parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S4_6', self.options.sectionHeight_4_6);
                }   
                if (self.scene.getObjectByName( "RayCastRecieverSection4_7")) {
                    params.set('RCS4_7_pY', self.scene.getObjectByName( "RayCastRecieverSection4_7").position.y ); 
                    params.set('WRS4_7_pY', parseInt(self.scene.getObjectByName( "section4_WireframeMesh4_7").position.y) ); 
                    params.set('s4_6_hDS', self.options.s4_6_horizDividStatus);
                    params.set('hDS4_6', self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y ); 
                    params.set("ovHHP_S4_7", parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) );
                    params.set('H_S4_7', self.options.sectionHeight_4_7);
                }  
                       
                
                
                //doors
                params.set("s1_d", self.options.s1_doorStatus);
                params.set("s1_2_d", self.options.s1_2_doorStatus);
                params.set("s1_3_d", self.options.s1_3_doorStatus);
                params.set("s1_4_d", self.options.s1_4_doorStatus);
                params.set("s1_5_d", self.options.s1_5_doorStatus);
                params.set("s1_6_d", self.options.s1_6_doorStatus);
                params.set("s1_7_d", self.options.s1_7_doorStatus);
            
                params.set("s2_d", self.options.s2_doorStatus);
                params.set("s2_2_d", self.options.s2_2_doorStatus);
                params.set("s2_3_d", self.options.s2_3_doorStatus);
                params.set("s2_4_d", self.options.s2_4_doorStatus);
                params.set("s2_5_d", self.options.s2_5_doorStatus);
                params.set("s2_6_d", self.options.s2_6_doorStatus);
                params.set("s2_7_d", self.options.s2_7_doorStatus);   

                params.set("s3_d", self.options.s3_doorStatus);
                params.set("s3_2_d", self.options.s3_2_doorStatus);
                params.set("s3_3_d", self.options.s3_3_doorStatus);
                params.set("s3_4_d", self.options.s3_4_doorStatus);
                params.set("s3_5_d", self.options.s3_5_doorStatus);
                params.set("s3_6_d", self.options.s3_6_doorStatus);
                params.set("s3_7_d", self.options.s3_7_doorStatus);     

                params.set("s4_d", self.options.s4_doorStatus);
                params.set("s4_2_d", self.options.s4_2_doorStatus);
                params.set("s4_3_d", self.options.s4_3_doorStatus);
                params.set("s4_4_d", self.options.s4_4_doorStatus);
                params.set("s4_5_d", self.options.s4_5_doorStatus);
                params.set("s4_6_d", self.options.s4_6_doorStatus);
                params.set("s4_7_d", self.options.s4_7_doorStatus);
                

                //shelving
                //s1_1
                if ( self.options.shelvesCounterSection1_1 != 0 ) {
                    params.set("s1_ss", self.options.s1_ShelvingStatus);
                    params.set("s1_iss", self.options.s1_internlShelvinStatus);
                    params.set("s1_isa", document.getElementById("internalShelving_sect1_1").value);
                    params.set("s1_ssa", document.getElementById("ShoeShelving_sect1_1").value);
                    params.set("pf_is1_s1_1", document.getElementById("PositionField_InternalShelving1_S1_1").innerHTML);
                    params.set("pf_is2_s1_1", document.getElementById("PositionField_InternalShelving2_S1_1").innerHTML);
                    params.set("pf_is3_s1_1", document.getElementById("PositionField_InternalShelving3_S1_1").innerHTML);
                    params.set("pf_is4_s1_1", document.getElementById("PositionField_InternalShelving4_S1_1").innerHTML);
                    params.set("pf_is5_s1_1", document.getElementById("PositionField_InternalShelving5_S1_1").innerHTML);
                    params.set("pf_is5_s1_1", document.getElementById("PositionField_InternalShelving6_S1_1").innerHTML);
                    var heigh1Shelf1_1 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection1_1; i++) {

                        heigh1Shelf1_1[i] = self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+i).position.y
                        try {
                            params.set("h0S1_1", self.options.heigh0Shelf1_1 );
                            params.set("h1S1_1", self.options.heigh1Shelf1_1 );
                            params.set("h2S1_1", self.options.heigh2Shelf1_1 );
                            params.set("h3S1_1", self.options.heigh3Shelf1_1 );
                            params.set("h4S1_1", self.options.heigh4Shelf1_1 );
                            params.set("h5S1_1", self.options.heigh5Shelf1_1 );
                            params.set("h6S1_1", self.options.heigh6Shelf1_1 );

                            heigh1Shelf1_1[i] = self.scene.getObjectByName('internalShelf_1_1_'+'shelf'+i).position.y

                        } catch(e){}
                    }
                    console.log( JSON.stringify(heigh1Shelf1_1) );
                    var heigh1Shelf1_1_String = JSON.stringify(heigh1Shelf1_1);
                    params.set('is_1_1_A',  heigh1Shelf1_1_String);

                } else {}

                //s1_2
                if ( self.options.shelvesCounterSection1_2 != 0 ) {
                    params.set("s1_2_ss", self.options.s1_2_ShelvingStatus);
                    params.set("s1_2_iss", self.options.s1_2_internlShelvinStatus);
                    params.set("s1_2_isa",  document.getElementById("internalShelving_sect1_2").value);
                    params.set("s1_2_ssa", document.getElementById("ShoeShelving_sect1_2").value);
                    params.set("pf_is1_s1_2", document.getElementById("PositionField_InternalShelving1_S1_2").innerHTML);
                    params.set("pf_is2_s1_2", document.getElementById("PositionField_InternalShelving2_S1_2").innerHTML);
                    params.set("pf_is3_s1_2", document.getElementById("PositionField_InternalShelving3_S1_2").innerHTML);
                    params.set("pf_is4_s1_2", document.getElementById("PositionField_InternalShelving4_S1_2").innerHTML);
                    params.set("pf_is5_s1_2", document.getElementById("PositionField_InternalShelving5_S1_2").innerHTML);
                    var heigh1Shelf1_2 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection1_2; i++) {
                
                        heigh1Shelf1_2[i] = self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+i).position.y
                        try {
                            params.set("h0S1_2", self.options.heigh0Shelf1_2 );
                            params.set("h1S1_2", self.options.heigh1Shelf1_2 );
                            params.set("h2S1_2", self.options.heigh2Shelf1_2 );
                            params.set("h3S1_2", self.options.heigh3Shelf1_2 );
                            params.set("h4S1_2", self.options.heigh4Shelf1_2 );
                            params.set("h5S1_2", self.options.heigh5Shelf1_2 );

                            heigh1Shelf1_2[i] = self.scene.getObjectByName('internalShelf_1_2_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf1_2_String = JSON.stringify(heigh1Shelf1_2);
                    params.set('is_1_2_A',  heigh1Shelf1_2_String);
    
                } else {}

                //s1_3
                if ( self.options.shelvesCounterSection1_3 != 0 ) {
                    params.set("s1_3_ss", self.options.s1_3_ShelvingStatus);
                    params.set("s1_3_iss", self.options.s1_3_internlShelvinStatus);
                    params.set("s1_3_isa",  document.getElementById("internalShelving_sect1_3").value);
                    params.set("s1_3_ssa", document.getElementById("ShoeShelving_sect1_3").value);
                    params.set("pf_is1_s1_3", document.getElementById("PositionField_InternalShelving1_S1_3").innerHTML);
                    params.set("pf_is2_s1_3", document.getElementById("PositionField_InternalShelving2_S1_3").innerHTML);
                    params.set("pf_is3_s1_3", document.getElementById("PositionField_InternalShelving3_S1_3").innerHTML);
                    params.set("pf_is4_s1_3", document.getElementById("PositionField_InternalShelving4_S1_3").innerHTML);

                    var heigh1Shelf1_3 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection1_3; i++) {
                    heigh1Shelf1_3[i] = self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+i).position.y
                        try {
                            params.set("h0S1_3", self.options.heigh0Shelf1_3 );
                            params.set("h1S1_3", self.options.heigh1Shelf1_3 );
                            params.set("h2S1_3", self.options.heigh2Shelf1_3 );
                            params.set("h3S1_3", self.options.heigh3Shelf1_3 );
                            params.set("h4S1_3", self.options.heigh4Shelf1_3 );

                            heigh1Shelf1_3[i] = self.scene.getObjectByName('internalShelf_1_3_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf1_3_String = JSON.stringify(heigh1Shelf1_3);
                    params.set('is_1_3_A',  heigh1Shelf1_3_String);

                } else {}


                //s1_4
                if ( self.options.shelvesCounterSection1_4 != 0 ) {
                    params.set("s1_4_ss", self.options.s1_4_ShelvingStatus);
                    params.set("s1_4_iss", self.options.s1_4_internlShelvinStatus);
                    params.set("s1_4_isa",  document.getElementById("internalShelving_sect1_4").value);
                    params.set("s1_4_ssa", document.getElementById("ShoeShelving_sect1_4").value);
                    params.set("pf_is1_s1_4", document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML);
                    params.set("pf_is2_s1_4", document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML);
                    params.set("pf_is3_s1_4", document.getElementById("PositionField_InternalShelving1_S1_4").innerHTML);
                    
                    var heigh1Shelf1_4 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection1_4; i++) {
                    heigh1Shelf1_4[i] = self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+i).position.y
                        try {
                            params.set("h0S1_4", self.options.heigh0Shelf1_4 );
                            params.set("h1S1_4", self.options.heigh1Shelf1_4 );
                            params.set("h2S1_4", self.options.heigh2Shelf1_4 );
                            params.set("h3S1_4", self.options.heigh3Shelf1_4 );

                            heigh1Shelf1_4[i] = self.scene.getObjectByName('internalShelf_1_4_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf1_4_String = JSON.stringify(heigh1Shelf1_4);
                    params.set('is_1_4_A',  heigh1Shelf1_4_String);

                } else {}


                //s1_5
                if ( self.options.shelvesCounterSection1_5 != 0 ) {
                    params.set("s1_5_ss", self.options.s1_5_ShelvingStatus);
                    params.set("s1_5_iss", self.options.s1_5_internlShelvinStatus);
                    params.set("s1_5_isa",  document.getElementById("internalShelving_sect1_5").value);
                    params.set("s1_5_ssa", document.getElementById("ShoeShelving_sect1_5").value);
                    params.set("pf_is1_s1_5", document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML);
                    params.set("pf_is2_s1_5", document.getElementById("PositionField_InternalShelving1_S1_5").innerHTML);
                    
                    var heigh1Shelf1_5 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection1_5; i++) {
                    heigh1Shelf1_5[i] = self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+i).position.y
                        try {
                            params.set("h0S1_5", self.options.heigh0Shelf1_5 );
                            params.set("h1S1_5", self.options.heigh1Shelf1_5 );
                            params.set("h2S1_5", self.options.heigh2Shelf1_5 );

                            heigh1Shelf1_5[i] = self.scene.getObjectByName('internalShelf_1_5_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf1_5_String = JSON.stringify(heigh1Shelf1_5);
                    params.set('is_1_5_A',  heigh1Shelf1_5_String);

                } else {}

                //s1_6
                if ( self.options.shelvesCounterSection1_6 != 0 ) {
                    params.set("s1_6_ss", self.options.s1_6_ShelvingStatus);
                    params.set("s1_6_iss", self.options.s1_6_internlShelvinStatus);
                    params.set("s1_6_isa",  document.getElementById("internalShelving_sect1_6").value);
                    params.set("s1_6_ssa", document.getElementById("ShoeShelving_sect1_6").value);
                    params.set("pf_is1_s1_6", document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML);
                    params.set("pf_is2_s1_6", document.getElementById("PositionField_InternalShelving1_S1_6").innerHTML);
                    
                    var heigh1Shelf1_6 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection1_6; i++) {
                    heigh1Shelf1_6[i] = self.scene.getObjectByName('internalShelf_1_6_'+'shelf'+i).position.y
                        try {
                            params.set("h0S1_6", self.options.heigh0Shelf1_6 );
                            params.set("h1S1_6", self.options.heigh1Shelf1_5 );

                            heigh1Shelf1_6[i] = self.scene.getObjectByName('internalShelf_1_6_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf1_6_String = JSON.stringify(heigh1Shelf1_6);
                    params.set('is_1_6_A',  heigh1Shelf1_6_String);

                } else {}


                //s2_1
                if ( self.options.shelvesCounterSection2_1 != 0 ) {
                    params.set("s2_ss", self.options.s2_ShelvingStatus);
                    params.set("s2_iss", self.options.s2_internlShelvinStatus);
                    params.set("s2_isa", document.getElementById("internalShelving_sect2_1").value);
                    params.set("s2_ssa", document.getElementById("ShoeShelving_sect2_1").value);
                    params.set("pf_is1_s2_1", document.getElementById("PositionField_InternalShelving1_S2_1").innerHTML);
                    params.set("pf_is2_s2_1", document.getElementById("PositionField_InternalShelving2_S2_1").innerHTML);
                    params.set("pf_is3_s2_1", document.getElementById("PositionField_InternalShelving3_S2_1").innerHTML);
                    params.set("pf_is4_s2_1", document.getElementById("PositionField_InternalShelving4_S2_1").innerHTML);
                    params.set("pf_is5_s2_1", document.getElementById("PositionField_InternalShelving5_S2_1").innerHTML);
                    params.set("pf_is6_s2_1", document.getElementById("PositionField_InternalShelving6_S2_1").innerHTML);

                    var heigh1Shelf2_1 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection2_1; i++) {

                        heigh1Shelf2_1[i] = self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+i).position.y
                        try {
                            params.set("h0S2_1", self.options.heigh0Shelf2_1 );
                            params.set("h1S2_1", self.options.heigh1Shelf2_1 );
                            params.set("h2S2_1", self.options.heigh2Shelf2_1 );
                            params.set("h3S2_1", self.options.heigh3Shelf2_1 );
                            params.set("h4S2_1", self.options.heigh4Shelf2_1 );
                            params.set("h5S2_1", self.options.heigh5Shelf2_1 );
                            params.set("h6S2_1", self.options.heigh6Shelf2_1 );


                            heigh1Shelf2_1[i] = self.scene.getObjectByName('internalShelf_2_1_'+'shelf'+i).position.y

                        } catch(e){}
                    }
                    var heigh1Shelf2_1_String = JSON.stringify(heigh1Shelf2_1);
                    params.set('is_2_1_A',  heigh1Shelf2_1_String);

                } else {}


                //s2_2
                if ( self.options.shelvesCounterSection2_2 != 0 ) {
                    params.set("s2_1_ss", self.options.s2_1_ShelvingStatus);
                    params.set("s2_2_iss", self.options.s2_2_internlShelvinStatus);
                    params.set("s2_2_isa",  document.getElementById("internalShelving_sect2_2").value);
                    params.set("s2_2_ssa", document.getElementById("ShoeShelving_sect2_2").value);
                    params.set("pf_is1_s2_2", document.getElementById("PositionField_InternalShelving1_S2_2").innerHTML);
                    params.set("pf_is2_s2_2", document.getElementById("PositionField_InternalShelving2_S2_2").innerHTML);
                    params.set("pf_is3_s2_2", document.getElementById("PositionField_InternalShelving3_S2_2").innerHTML);
                    params.set("pf_is4_s2_2", document.getElementById("PositionField_InternalShelving4_S2_2").innerHTML);
                    params.set("pf_is5_s2_2", document.getElementById("PositionField_InternalShelving5_S2_2").innerHTML);
                    var heigh1Shelf2_2 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection2_2; i++) {
                
                        heigh1Shelf2_2[i] = self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+i).position.y
                        try {
                            params.set("h0S2_2", self.options.heigh0Shelf2_2 );
                            params.set("h1S2_2", self.options.heigh1Shelf2_2 );
                            params.set("h2S2_2", self.options.heigh2Shelf2_2 );
                            params.set("h3S2_2", self.options.heigh3Shelf2_2 );
                            params.set("h4S2_2", self.options.heigh4Shelf2_2 );
                            params.set("h5S2_2", self.options.heigh5Shelf2_2 );
                

                            heigh1Shelf2_2[i] = self.scene.getObjectByName('internalShelf_2_2_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf2_2_String = JSON.stringify(heigh1Shelf2_2);
                    params.set('is_2_2_A',  heigh1Shelf2_2_String);

                } else {}

                //s2_3
                if ( self.options.shelvesCounterSection2_3 != 0 ) {
                    params.set("s2_3_ss", self.options.s2_3_ShelvingStatus);
                    params.set("s2_3_iss", self.options.s2_3_internlShelvinStatus);
                    params.set("s2_3_isa",  document.getElementById("internalShelving_sect2_3").value);
                    params.set("s2_3_ssa", document.getElementById("ShoeShelving_sect2_3").value);
                    params.set("pf_is1_s2_3", document.getElementById("PositionField_InternalShelving1_S2_3").innerHTML);
                    params.set("pf_is2_s2_3", document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML);
                    params.set("pf_is3_s2_3", document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML);
                    params.set("pf_is4_s2_3", document.getElementById("PositionField_InternalShelving2_S2_3").innerHTML);
                    var heigh1Shelf2_3 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection2_3; i++) {
                    heigh1Shelf2_3[i] = self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+i).position.y
                        try {
                            params.set("h0S2_3", self.options.heigh0Shelf2_3 );
                            params.set("h1S2_3", self.options.heigh1Shelf2_3 );
                            params.set("h2S2_3", self.options.heigh2Shelf2_3 );
                            params.set("h3S2_3", self.options.heigh3Shelf2_3 );
                            params.set("h4S2_3", self.options.heigh4Shelf2_3 );


                            heigh1Shelf2_3[i] = self.scene.getObjectByName('internalShelf_2_3_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf2_3_String = JSON.stringify(heigh1Shelf2_3);
                    params.set('is_2_3_A',  heigh1Shelf2_3_String);

                } else {}

                //s2_4
                if ( self.options.shelvesCounterSection2_4 != 0 ) {
                    params.set("s2_4_ss", self.options.s2_4_ShelvingStatus);
                    params.set("s2_4_iss", self.options.s2_4_internlShelvinStatus);
                    params.set("s2_4_isa",  document.getElementById("internalShelving_sect2_4").value);
                    params.set("s2_4_ssa", document.getElementById("ShoeShelving_sect2_4").value);
                    params.set("pf_is1_s2_4", document.getElementById("PositionField_InternalShelving1_S2_4").innerHTML);
                    params.set("pf_is2_s2_4", document.getElementById("PositionField_InternalShelving2_S2_4").innerHTML);
                    params.set("pf_is3_s2_4", document.getElementById("PositionField_InternalShelving3_S2_4").innerHTML);
                    var heigh1Shelf2_4 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection2_4; i++) {
                    heigh1Shelf2_4[i] = self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+i).position.y
                        try {
                            params.set("h0S2_4", self.options.heigh0Shelf2_4 );
                            params.set("h1S2_4", self.options.heigh1Shelf2_4 );
                            params.set("h2S2_4", self.options.heigh2Shelf2_4 );
                            params.set("h3S2_4", self.options.heigh3Shelf2_4 );

                            heigh1Shelf2_4[i] = self.scene.getObjectByName('internalShelf_2_4_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf2_4_String = JSON.stringify(heigh1Shelf2_4);
                    params.set('is_2_4_A',  heigh1Shelf2_4_String);
                } else {}

                //s2_5
                if ( self.options.shelvesCounterSection2_5 != 0 ) {
                    params.set("s2_5_ss", self.options.s2_5_ShelvingStatus);
                    params.set("s2_5_iss", self.options.s2_5_internlShelvinStatus);
                    params.set("s2_5_isa",  document.getElementById("internalShelving_sect2_5").value);
                    params.set("s2_5_ssa", document.getElementById("ShoeShelving_sect2_5").value);
                    params.set("pf_is1_s2_5", document.getElementById("PositionField_InternalShelving1_S2_5").innerHTML);
                    params.set("pf_is2_s2_5", document.getElementById("PositionField_InternalShelving2_S2_5").innerHTML);
                    var heigh1Shelf2_5 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection2_5; i++) {
                    heigh1Shelf2_5[i] = self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+i).position.y
                        try {
                            params.set("h0S2_5", self.options.heigh0Shelf2_5 );
                            params.set("h1S2_5", self.options.heigh1Shelf2_5 );
                            params.set("h2S2_5", self.options.heigh2Shelf2_5 );
                            params.set("h3S2_5", self.options.heigh3Shelf2_5 );

                            heigh1Shelf2_5[i] = self.scene.getObjectByName('internalShelf_2_5_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf2_5_String = JSON.stringify(heigh1Shelf2_5);
                    params.set('is_2_5_A',  heigh1Shelf2_5_String);
                } else {}

                //s2_6
                if ( self.options.shelvesCounterSection2_6 != 0 ) {
                    params.set("s2_6_ss", self.options.s2_6_ShelvingStatus);
                    params.set("s2_6_iss", self.options.s2_6_internlShelvinStatus);
                    params.set("s2_6_isa",  document.getElementById("internalShelving_sect2_6").value);
                    params.set("s2_6_ssa", document.getElementById("ShoeShelving_sect2_6").value);
                    params.set("pf_is1_s2_6", document.getElementById("PositionField_InternalShelving1_S2_6").innerHTML);
                    var heigh1Shelf2_6 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection2_6; i++) {
                    heigh1Shelf2_6[i] = self.scene.getObjectByName('internalShelf_2_6_'+'shelf'+i).position.y
                        try {
                            params.set("h0S2_6", self.options.heigh0Shelf2_6 );
                            params.set("h1S2_6", self.options.heigh1Shelf2_6 );

                            heigh1Shelf2_6[i] = self.scene.getObjectByName('internalShelf_2_6_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf2_6_String = JSON.stringify(heigh1Shelf2_6);
                    params.set('is_2_6_A',  heigh1Shelf2_6_String);
                } else {}


                //s3_1
                if ( self.options.shelvesCounterSection3_1 != 0 ) {
                    params.set("s3_ss", self.options.s3_ShelvingStatus);
                    params.set("s3_iss", self.options.s3_internlShelvinStatus);
                    params.set("s3_isa", document.getElementById("internalShelving_sect3_1").value);
                    params.set("s3_ssa", document.getElementById("ShoeShelving_sect3_1").value);
                    params.set("pf_is1_s3_1", document.getElementById("PositionField_InternalShelving1_S3_1").innerHTML);
                    params.set("pf_is2_s3_1", document.getElementById("PositionField_InternalShelving2_S3_1").innerHTML);
                    params.set("pf_is3_s3_1", document.getElementById("PositionField_InternalShelving3_S3_1").innerHTML);
                    params.set("pf_is4_s3_1", document.getElementById("PositionField_InternalShelving4_S3_1").innerHTML);
                    params.set("pf_is5_s3_1", document.getElementById("PositionField_InternalShelving5_S3_1").innerHTML);
                    params.set("pf_is6_s3_1", document.getElementById("PositionField_InternalShelving6_S3_1").innerHTML);
                    var heigh1Shelf3_1 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection3_1; i++) {

                        heigh1Shelf3_1[i] = self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+i).position.y
                        try {
                            params.set("h0S3_1", self.options.heigh0Shelf3_1 );
                            params.set("h1S3_1", self.options.heigh1Shelf3_1 );
                            params.set("h2S3_1", self.options.heigh2Shelf3_1 );
                            params.set("h3S3_1", self.options.heigh3Shelf3_1 );
                            params.set("h4S3_1", self.options.heigh4Shelf3_1 );
                            params.set("h5S3_1", self.options.heigh5Shelf3_1 );
                            params.set("h6S3_1", self.options.heigh6Shelf3_1 );


                            heigh1Shelf3_1[i] = self.scene.getObjectByName('internalShelf_3_1_'+'shelf'+i).position.y

                        } catch(e){}
                    }
                    var heigh1Shelf3_1_String = JSON.stringify(heigh1Shelf3_1);
                    params.set('is_3_1_A',  heigh1Shelf3_1_String);
                } else {}

                //s3_2
                if ( self.options.shelvesCounterSection3_2 != 0 ) {
                    params.set("s3_2_ss", self.options.s3_2_ShelvingStatus);
                    params.set("s3_2_iss", self.options.s3_2_internlShelvinStatus);
                    params.set("s3_2_isa",  document.getElementById("internalShelving_sect3_2").value);
                    params.set("s3_2_ssa", document.getElementById("ShoeShelving_sect3_2").value);
                    params.set("pf_is1_s3_2", document.getElementById("PositionField_InternalShelving1_S3_2").innerHTML);
                    params.set("pf_is2_s3_2", document.getElementById("PositionField_InternalShelving2_S3_2").innerHTML);
                    params.set("pf_is3_s3_2", document.getElementById("PositionField_InternalShelving3_S3_2").innerHTML);
                    params.set("pf_is4_s3_2", document.getElementById("PositionField_InternalShelving4_S3_2").innerHTML);
                    params.set("pf_is5_s3_2", document.getElementById("PositionField_InternalShelving5_S3_2").innerHTML);
                    var heigh1Shelf3_2 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection3_2; i++) {
                
                        heigh1Shelf3_2[i] = self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+i).position.y
                        try {
                            params.set("h0S3_2", self.options.heigh0Shelf3_2 );
                            params.set("h1S3_2", self.options.heigh1Shelf3_2 );
                            params.set("h2S3_2", self.options.heigh2Shelf3_2 );
                            params.set("h3S3_2", self.options.heigh3Shelf3_2 );
                            params.set("h4S3_2", self.options.heigh4Shelf3_2 );
                            params.set("h5S3_2", self.options.heigh5Shelf3_2 );

                            heigh1Shelf3_2[i] = self.scene.getObjectByName('internalShelf_3_2_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf3_2_String = JSON.stringify(heigh1Shelf3_2);
                    params.set('is_3_2_A',  heigh1Shelf3_2_String);
                } else {}

                //s3_3
                if ( self.options.shelvesCounterSection3_3 != 0 ) {
                    params.set("s3_3_ss", self.options.s3_3_ShelvingStatus);
                    params.set("s3_3_iss", self.options.s3_3_internlShelvinStatus);
                    params.set("s3_3_isa",  document.getElementById("internalShelving_sect3_3").value);
                    params.set("s3_3_ssa", document.getElementById("ShoeShelving_sect3_3").value);
                    params.set("pf_is1_s3_3", document.getElementById("PositionField_InternalShelving1_S3_3").innerHTML);
                    params.set("pf_is2_s3_3", document.getElementById("PositionField_InternalShelving2_S3_3").innerHTML);
                    params.set("pf_is3_s3_3", document.getElementById("PositionField_InternalShelving3_S3_3").innerHTML);
                    params.set("pf_is4_s3_3", document.getElementById("PositionField_InternalShelving4_S3_3").innerHTML);
                    var heigh1Shelf3_3 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection3_3; i++) {
                    heigh1Shelf3_3[i] = self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+i).position.y
                        try {
                            params.set("h0S3_3", self.options.heigh0Shelf3_3 );
                            params.set("h1S3_3", self.options.heigh1Shelf3_3 );
                            params.set("h2S3_3", self.options.heigh2Shelf3_3 );
                            params.set("h3S3_3", self.options.heigh3Shelf3_3 );
                            params.set("h4S3_3", self.options.heigh4Shelf3_3 );
                            
                            heigh1Shelf3_3[i] = self.scene.getObjectByName('internalShelf_3_3_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf3_3_String = JSON.stringify(heigh1Shelf3_3);
                    params.set('is_3_3_A',  heigh1Shelf3_3_String);
                } else {}

                //s3_4
                if ( self.options.shelvesCounterSection3_4 != 0 ) {
                    params.set("s3_4_ss", self.options.s3_4_ShelvingStatus);
                    params.set("s3_4_iss", self.options.s3_4_internlShelvinStatus);
                    params.set("s3_4_isa",  document.getElementById("internalShelving_sect3_4").value);
                    params.set("s3_4_ssa", document.getElementById("ShoeShelving_sect3_4").value);
                    params.set("pf_is1_s3_4", document.getElementById("PositionField_InternalShelving1_S3_4").innerHTML);
                    params.set("pf_is2_s3_4", document.getElementById("PositionField_InternalShelving2_S3_4").innerHTML);
                    params.set("pf_is3_s3_4", document.getElementById("PositionField_InternalShelving3_S3_4").innerHTML);
                    var heigh1Shelf3_4 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection3_4; i++) {
                    heigh1Shelf3_4[i] = self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+i).position.y
                        try {
                            params.set("h0S3_4", self.options.heigh0Shelf3_4 );
                            params.set("h1S3_4", self.options.heigh1Shelf3_4 );
                            params.set("h2S3_4", self.options.heigh2Shelf3_4 );
                            params.set("h3S3_4", self.options.heigh3Shelf3_4 );

                            heigh1Shelf3_4[i] = self.scene.getObjectByName('internalShelf_3_4_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf3_4_String = JSON.stringify(heigh1Shelf3_4);
                    params.set('is_3_4_A',  heigh1Shelf3_4_String);
                } else {}

                //s3_5
                if ( self.options.shelvesCounterSection3_5 != 0 ) {
                    params.set("s3_5_ss", self.options.s3_5_ShelvingStatus);
                    params.set("s3_5_iss", self.options.s3_5_internlShelvinStatus);
                    params.set("s3_5_isa",  document.getElementById("internalShelving_sect3_5").value);
                    params.set("s3_5_ssa", document.getElementById("ShoeShelving_sect3_5").value);
                    params.set("pf_is1_s3_5", document.getElementById("PositionField_InternalShelving1_S3_5").innerHTML);
                    params.set("pf_is2_s3_5", document.getElementById("PositionField_InternalShelving2_S3_5").innerHTML);
                    var heigh1Shelf3_5 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection3_5; i++) {
                    heigh1Shelf3_5[i] = self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+i).position.y
                        try {
                            params.set("h0S3_5", self.options.heigh0Shelf3_5 );
                            params.set("h1S3_5", self.options.heigh1Shelf3_5 );
                            params.set("h2S3_5", self.options.heigh2Shelf3_5 );

                            heigh1Shelf3_5[i] = self.scene.getObjectByName('internalShelf_3_5_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf3_5_String = JSON.stringify(heigh1Shelf3_5);
                    params.set('is_3_5_A',  heigh1Shelf3_5_String);
                } else {}

                //s3_6
                if ( self.options.shelvesCounterSection3_6 != 0 ) {
                    params.set("s3_6_ss", self.options.s3_6_ShelvingStatus);
                    params.set("s3_6_iss", self.options.s3_6_internlShelvinStatus);
                    params.set("s3_6_isa",  document.getElementById("internalShelving_sect3_6").value);
                    params.set("s3_6_ssa", document.getElementById("ShoeShelving_sect3_6").value);
                    params.set("pf_is1_s3_6", document.getElementById("PositionField_InternalShelving1_S3_6").innerHTML);
                    var heigh1Shelf3_6 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection3_6; i++) {
                    heigh1Shelf3_6[i] = self.scene.getObjectByName('internalShelf_3_6_'+'shelf'+i).position.y
                        try {
                            params.set("h0S3_6", self.options.heigh0Shelf3_6 );
                            params.set("h1S3_6", self.options.heigh1Shelf3_6 );

                            heigh1Shelf3_6[i] = self.scene.getObjectByName('internalShelf_3_6_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf3_6_String = JSON.stringify(heigh1Shelf3_6);
                    params.set('is_3_6_A',  heigh1Shelf3_6_String);
                } else {}


                //s4_1
                if ( self.options.shelvesCounterSection4_1 != 0 ) {
                    params.set("s4_ss", self.options.s4_ShelvingStatus);
                    params.set("s4_iss", self.options.s4_internlShelvinStatus);
                    params.set("s4_isa", document.getElementById("internalShelving_sect4_1").value);
                    params.set("s4_ssa", document.getElementById("ShoeShelving_sect4_1").value);
                    params.set("pf_is1_s4_1", document.getElementById("PositionField_InternalShelving1_S4_1").innerHTML);
                    params.set("pf_is2_s4_1", document.getElementById("PositionField_InternalShelving2_S4_1").innerHTML);
                    params.set("pf_is3_s4_1", document.getElementById("PositionField_InternalShelving3_S4_1").innerHTML);
                    params.set("pf_is4_s4_1", document.getElementById("PositionField_InternalShelving4_S4_1").innerHTML);
                    params.set("pf_is5_s4_1", document.getElementById("PositionField_InternalShelving5_S4_1").innerHTML);
                    params.set("pf_is6_s4_1", document.getElementById("PositionField_InternalShelving6_S4_1").innerHTML);

                    var heigh1Shelf4_1 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection4_1; i++) {

                        heigh1Shelf4_1[i] = self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+i).position.y
                        try {
                            params.set("h0S4_1", self.options.heigh0Shelf4_1 );
                            params.set("h1S4_1", self.options.heigh1Shelf4_1 );
                            params.set("h2S4_1", self.options.heigh2Shelf4_1 );
                            params.set("h3S4_1", self.options.heigh3Shelf4_1 );
                            params.set("h4S4_1", self.options.heigh4Shelf4_1 );
                            params.set("h5S4_1", self.options.heigh5Shelf4_1 );
                            params.set("h6S4_1", self.options.heigh6Shelf4_1 );

                            heigh1Shelf4_1[i] = self.scene.getObjectByName('internalShelf_4_1_'+'shelf'+i).position.y

                        } catch(e){}
                    }
                    var heigh1Shelf4_1_String = JSON.stringify(heigh1Shelf4_1);
                    params.set('is_4_1_A',  heigh1Shelf4_1_String);
                } else {}

                //s4_2
                if ( self.options.shelvesCounterSection4_2 != 0 ) {
                    params.set("s4_2_ss", self.options.s4_2_ShelvingStatus);
                    params.set("s4_2_iss", self.options.s4_2_internlShelvinStatus);
                    params.set("s4_2_isa",  document.getElementById("internalShelving_sect4_2").value);
                    params.set("s4_2_ssa", document.getElementById("ShoeShelving_sect4_2").value);
                    params.set("pf_is1_s4_2", document.getElementById("PositionField_InternalShelving1_S4_2").innerHTML);
                    params.set("pf_is2_s4_2", document.getElementById("PositionField_InternalShelving2_S4_2").innerHTML);
                    params.set("pf_is3_s4_2", document.getElementById("PositionField_InternalShelving3_S4_2").innerHTML);
                    params.set("pf_is4_s4_2", document.getElementById("PositionField_InternalShelving4_S4_2").innerHTML);
                    params.set("pf_is5_s4_2", document.getElementById("PositionField_InternalShelving5_S4_2").innerHTML);
                    var heigh1Shelf4_2 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection4_2; i++) {
                
                        heigh1Shelf4_2[i] = self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+i).position.y
                        try {
                            params.set("h0S4_2", self.options.heigh0Shelf4_2 );
                            params.set("h1S4_2", self.options.heigh1Shelf4_2 );
                            params.set("h2S4_2", self.options.heigh2Shelf4_2 );
                            params.set("h3S4_2", self.options.heigh3Shelf4_2 );
                            params.set("h4S4_2", self.options.heigh4Shelf4_2 );
                            params.set("h5S4_2", self.options.heigh5Shelf4_2 );

                            heigh1Shelf4_2[i] = self.scene.getObjectByName('internalShelf_4_2_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf4_2_String = JSON.stringify(heigh1Shelf4_2);
                    params.set('is_4_2_A',  heigh1Shelf4_2_String);
                } else {}
        
                //s4_3
                if ( self.options.shelvesCounterSection4_3 != 0 ) {
                    params.set("s4_3_ss", self.options.s4_3_ShelvingStatus);
                    params.set("s4_3_iss", self.options.s4_3_internlShelvinStatus);
                    params.set("s4_3_isa",  document.getElementById("internalShelving_sect4_3").value);
                    params.set("s4_3_ssa", document.getElementById("ShoeShelving_sect4_3").value);
                    params.set("pf_is1_s4_3", document.getElementById("PositionField_InternalShelving1_S4_3").innerHTML);
                    params.set("pf_is2_s4_3", document.getElementById("PositionField_InternalShelving2_S4_3").innerHTML);
                    params.set("pf_is3_s4_3", document.getElementById("PositionField_InternalShelving3_S4_3").innerHTML);
                    params.set("pf_is4_s4_3", document.getElementById("PositionField_InternalShelving4_S4_3").innerHTML);
                    var heigh1Shelf4_3 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection4_3; i++) {
                    heigh1Shelf4_3[i] = self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+i).position.y
                        try {
                            params.set("h0S4_3", self.options.heigh0Shelf4_3 );
                            params.set("h1S4_3", self.options.heigh1Shelf4_3 );
                            params.set("h2S4_3", self.options.heigh2Shelf4_3 );
                            params.set("h3S4_3", self.options.heigh3Shelf4_3 );
                            params.set("h4S4_3", self.options.heigh4Shelf4_3 );

                            heigh1Shelf4_3[i] = self.scene.getObjectByName('internalShelf_4_3_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf4_3_String = JSON.stringify(heigh1Shelf4_3);
                    params.set('is_4_3_A',  heigh1Shelf4_3_String);
                } else {}

                //s4_4
                if ( self.options.shelvesCounterSection4_4 != 0 ) {
                    params.set("s4_4_ss", self.options.s4_4_ShelvingStatus);
                    params.set("s4_4_iss", self.options.s4_4_internlShelvinStatus);
                    params.set("s4_4_isa",  document.getElementById("internalShelving_sect4_4").value);
                    params.set("s4_4_ssa", document.getElementById("ShoeShelving_sect4_4").value);
                    params.set("pf_is1_s4_4", document.getElementById("PositionField_InternalShelving1_S4_4").innerHTML);
                    params.set("pf_is2_s4_4", document.getElementById("PositionField_InternalShelving2_S4_4").innerHTML);
                    params.set("pf_is3_s4_4", document.getElementById("PositionField_InternalShelving3_S4_4").innerHTML);
                    var heigh1Shelf4_4 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection4_4; i++) {
                    heigh1Shelf4_4[i] = self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+i).position.y
                        try {
                            params.set("h0S4_4", self.options.heigh0Shelf4_4 );
                            params.set("h1S4_4", self.options.heigh1Shelf4_4 );
                            params.set("h2S4_4", self.options.heigh2Shelf4_4 );
                            params.set("h3S4_4", self.options.heigh3Shelf4_4 );

                            heigh1Shelf4_4[i] = self.scene.getObjectByName('internalShelf_4_4_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf4_4_String = JSON.stringify(heigh1Shelf4_4);
                    params.set('is_4_4_A',  heigh1Shelf4_4_String);
                } else {}

                //s4_5
                if ( self.options.shelvesCounterSection4_5 != 0 ) {
                    params.set("s4_5_ss", self.options.s4_5_ShelvingStatus);
                    params.set("s4_5_iss", self.options.s4_5_internlShelvinStatus);
                    params.set("s4_5_isa",  document.getElementById("internalShelving_sect4_5").value);
                    params.set("s4_5_ssa", document.getElementById("ShoeShelving_sect4_5").value);
                    params.set("pf_is1_s4_5", document.getElementById("PositionField_InternalShelving1_S4_5").innerHTML);
                    params.set("pf_is2_s4_5", document.getElementById("PositionField_InternalShelving2_S4_5").innerHTML);
                    var heigh1Shelf4_5 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection4_5; i++) {
                    heigh1Shelf4_5[i] = self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+i).position.y
                        try {
                            params.set("h0S4_5", self.options.heigh0Shelf4_5 );
                            params.set("h1S4_5", self.options.heigh1Shelf4_5 );
                            params.set("h2S4_5", self.options.heigh2Shelf4_5 );

                            heigh1Shelf4_5[i] = self.scene.getObjectByName('internalShelf_4_5_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf4_5_String = JSON.stringify(heigh1Shelf4_5);
                    params.set('is_4_5_A',  heigh1Shelf4_5_String);
                } else {}

                //s4_6
                if ( self.options.shelvesCounterSection4_6 != 0 ) {
                    params.set("s4_6_ss", self.options.s4_6_ShelvingStatus);
                    params.set("s4_6_iss", self.options.s4_6_internlShelvinStatus);
                    params.set("s4_6_isa",  document.getElementById("internalShelving_sect4_6").value);
                    params.set("s4_6_ssa", document.getElementById("ShoeShelving_sect4_6").value);
                    params.set("pf_is1_s4_6", document.getElementById("PositionField_InternalShelving1_S4_6").innerHTML);
                    var heigh1Shelf4_6 = [];
                    for (let i = 1; i <= self.options.shelvesCounterSection4_6; i++) {
                    heigh1Shelf4_6[i] = self.scene.getObjectByName('internalShelf_4_6_'+'shelf'+i).position.y
                        try {
                            params.set("h0S4_6", self.options.heigh0Shelf4_6 );
                            params.set("h1S4_6", self.options.heigh1Shelf4_6 );

                            heigh1Shelf4_6[i] = self.scene.getObjectByName('internalShelf_4_6_'+'shelf'+i).position.y
                
                        } catch(e){}
                        
                    }
                    var heigh1Shelf4_6_String = JSON.stringify(heigh1Shelf4_6);
                    params.set('is_4_6_A',  heigh1Shelf4_6_String);
                } else {}

  

                //handles
                params.set("HH",  document.getElementById("hideHandles").checked);


                self.options.URLParamsUsed = true
                params.set("URLpu", self.options.URLParamsUsed);

    
                // Update the URL without causing a page refresh
                window.history.replaceState({}, '', '/EntranceUnit_ActualVersion/' + '?' + params.toString());
                const updatedURL = window.location.href;
                this.updatedURLString  = updatedURL;

                return window.location.href;

            }

            

            let buttonPressed = null;
            document.getElementById("save_Favorites").addEventListener('click', function() {
                buttonPressed = 'save_Favorites';
                checkLoginStatus();
            });

            document.getElementById("Logo").addEventListener('click', async function() {
                buttonPressed = 'Logo';
                checkLoginStatusLogo();
            });

            function checkLoginStatus() {

                fetch('/wp-admin/admin-ajax.php', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: 'action=check_login_status',
                })
                .then(response => response.json())
                .then(data => {
                    if (data.loggedIn) {
                        // User is logged in
                        executeFunctionForLoggedInUser();

                    } else {
                        // User is not logged in
                        executeFunctionForNonLoggedInUser();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }


            function checkLoginStatusLogo() {

                fetch('/wp-admin/admin-ajax.php', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: 'action=check_login_status',
                })
                .then(response => response.json())
                .then(data => {
                    if (data.loggedIn) {
                        // User is logged in
                        document.getElementById('popupRemaidersForFavorites').style.display = 'flex';

                        setTimeout(function() {
                            document.getElementById('popupRemaidersForFavorites').style.opacity = "0";
                    
                            setTimeout(function() {
                                document.getElementById('popupRemaidersForFavorites').style.display = "none";
                                document.getElementById('popupRemaidersForFavorites').style.opacity = "1"; 
                                
                                if (buttonPressed === 'Logo') {
                                    window.location.href = "https://sallux.mt";
                                }
                    
                            }, 4000);
                        }, 4000);


                    } else {
                        // User is not logged in
                        executeFunctionForNonLoggedInUser();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }

            async function executeFunctionForLoggedInUser(event) {
                
                let updatedURL = saveStateToURL();
                let price = String(parseFloat(document.getElementById('productPrice').textContent.match(/\d+(\.\d+)?/)[0]))


                var size = 512;
                self.engine.setSize(size, size);

                self.wall.visible = false
                self.wall2.visible = false
                self.wall3.visible = false
                self.floor.visible = false
                self.human.visible = false
                let imgSrc = new Image();
                self.engine.render(self.scene, self.camera2);
                imgSrc.src = self.engine.domElement.toDataURL();

                self.engine.setSize(window.innerWidth, window.innerHeight, true);
                self.wall.visible = true
                self.wall2.visible = true
                self.wall3.visible = true
                self.human.visible = true
                self.floor.visible = true


                let response = await fetch('https://sallux.mt/wp-json/custom_namespace/custom_endpoint', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ image: imgSrc.src })
                });
                let result = await response.json();
                let uploadedImageUrl = result.url; // The URL of the uploaded image.

                // Data of the product to be created
                let data = {
                    name: "Your Entrance Unit", 
                    type: "simple", 
                    regular_price: price, 
                    meta_data: [
                        {
                            key: 'custom2_permalink',
                            value: updatedURL
                        },
                        {
                            key: '_exclude_from_shop',
                            value: 'yes'
                        }
                    ],

                    images: [
                        {
                            src: uploadedImageUrl
                        }
                    ]

                };

                // Create a Product using WooCommerce REST API
                fetch('https://sallux.mt/wp-json/wc/v3/products', {
                    method: 'POST',

                    headers: {
                        'Content-Type': 'application/json',
                        // Replace with your consumer key and secret
                        'Authorization': 'Basic ' + btoa('ck_9f8779caa0244afdb9536fb51fde7fc148f4e6c7:cs_fced9cd0754d5eeb5fec0ea5f5ac210b83a18243') 
                    },
                    body: JSON.stringify(data)
                }).then(response => response.json())
                .then(product => {
                    // If Product is created successfully, Add the product to the cart
                    if(product.id) {
                        addToWishlist(product.id); // Pass the created product ID to addToWishlist function
                    } else {
                        console.error('Error creating product', product);
                    }
                })
                .catch(error => console.error('Error creating product', error));


                document.getElementById('popupFavorites').style.display = 'flex';

                setTimeout(function() {
                    document.getElementById('popupFavorites').style.opacity = "0";
            
                    // Wait for another 5 seconds for animation to complete then hide the div
                    setTimeout(function() {
                        document.getElementById('popupFavorites').style.display = "none";
                        document.getElementById('popupFavorites').style.opacity = "1"; 
                        
                        if (buttonPressed === 'Logo') {
                            window.location.href = "https://sallux.mt";
                        }
            
                    }, 4000);
                }, 4000);
                

            }

            // Function to add the product to the wishlist
            function addToWishlist(productId) {
                fetch('/wp-admin/admin-ajax.php', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: 'action=add_product_to_wishlist&product_id=' + productId,
                })
                .then(response => response.json())
                .then(data => {
                    // Handle the response if needed
                    console.log('Product added to wishlist:', data);
                })
                .catch(error => {
                    console.error('Error adding product to wishlist:', error);
                });
            }

            // Example function for non-logged-in users
            function executeFunctionForNonLoggedInUser() {
                saveStateToURL(),
                document.getElementById('popupEmailContainer').style.display = 'block';
                console.log('User is not logged in.');
            }


            //Send Email            
            document.getElementById("emailForm").addEventListener("submit", function(event) {
                event.preventDefault();
                console.log('default prevented');

                
                let recipientEmail = document.getElementById("recipientEmail").value;
                let productLink = window.location.href;
                
                let data = new URLSearchParams();
                data.append('action', 'send_custom_email');
                data.append('recipient_email', recipientEmail);
                data.append('product_link', productLink);
                
                fetch('https://sallux.mt/wp-admin/admin-ajax.php', { 
                    method: 'POST',
                    body: data,
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Email status:', data);
                    document.getElementById('popupEmailContainer').style.display = 'none';

                    document.getElementById('popupEmailSent').style.display = 'flex';
                    setTimeout(function() {
                        document.getElementById('popupEmailSent').style.opacity = "0";
                        setTimeout(function() {
                            document.getElementById('popupEmailSent').style.display = "none";
                            document.getElementById('popupEmailSent').style.opacity = "1"; 
                        }, 1000);
                    }, 1000);

                })
                .catch((error) => {
                    console.error('Error:', error);
                });

                if (buttonPressed === 'Logo') {
                    window.location.href = "https://sallux.mt";
                }
            });
            
            document.getElementById("closeEmailContainer").addEventListener('click', function() {
                document.getElementById('popupEmailContainer').style.display = 'none';


                if (buttonPressed === 'Logo') {
                    ignoreNextTrigger = false; 
                    window.location.href = "https://sallux.mt";
                }

            });

            
            
            document.getElementById("Save").addEventListener("click", async function(event) {

                ignoreNextTrigger = true; // Ensure we bypass the custom logic

                let updatedURL = saveStateToURL();
                let price = String(parseFloat(document.getElementById('productPrice').textContent.match(/\d+(\.\d+)?/)[0]))


                var size = 512;
                self.engine.setSize(size, size);

                self.wall.visible = false
                self.wall2.visible = false
                self.wall3.visible = false
                self.floor.visible = false
                self.human.visible = false
                let imgSrc = new Image();
                self.engine.render(self.scene, self.camera2);
                imgSrc.src = self.engine.domElement.toDataURL();

                self.engine.setSize(window.innerWidth, window.innerHeight, true);
                self.wall.visible = true
                self.wall2.visible = true
                self.wall3.visible = true
                self.human.visible = true
                self.floor.visible = true




                let response = await fetch('https://sallux.mt/wp-json/custom_namespace/custom_endpoint', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ image: imgSrc.src })
                });
                let result = await response.json();
                let uploadedImageUrl = result.url; // The URL of the uploaded image.

                // Data of the product to be created
                let data = {
                    name: "Your Entrance Unit", 
                    type: "simple", 
                    regular_price: price, 
                    meta_data: [
                        {
                            key: 'custom2_permalink',
                            value: updatedURL
                        },
                        {
                            key: '_exclude_from_shop',
                            value: 'yes'
                        }
                    ],

                    images: [
                        {
                            src: uploadedImageUrl
                        }
                    ]

                };

                // Create a Product using WooCommerce REST API
                fetch('https://sallux.mt/wp-json/wc/v3/products', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        // Replace with your consumer key and secret
                        'Authorization': 'Basic ' + btoa('ck_9f8779caa0244afdb9536fb51fde7fc148f4e6c7:cs_fced9cd0754d5eeb5fec0ea5f5ac210b83a18243') 
                    },
                    body: JSON.stringify(data)
                }).then(response => response.json())
                .then(product => {
                    // If Product is created successfully, Add the product to the cart
                    if(product.id) {
                        location.href = `https://sallux.mt/cart/?add-to-cart=${product.id}&quantity=1`;
                    } else {
                        console.error('Error creating product', product);
                    }
                })
                .catch(error => console.error('Error creating product', error));

            });

            
            let ignoreNextTrigger = false;
            function confirmLeave(event) {
                if (ignoreNextTrigger) {
                    return;
                }
                
                event.preventDefault();
                event.returnValue = ''; // This is necessary for older browsers
                return 'Are you sure you want to leave this page? Changes can be lost';
            }
            
            // Attach the confirmation message to the beforeunload event
            window.addEventListener('beforeunload', confirmLeave);
            window.addEventListener('resize', function() {

                self.engine.setSize(window.innerWidth, window.innerHeight, true);
                self.camera.aspect = window.innerWidth / window.innerHeight;
                self.camera.updateProjectionMatrix();
            });

            function hideLoader() {
                const loader = document.getElementById('loader');
                loader.style.display = 'none';
            }
            
            // Function to load your state
            function loadState() {
                loadStateFromURL();
                
                const params = new URLSearchParams(window.location.search);

                if (params.has('URLpu')) {
                    setTimeout(function() {
                        hideLoader()
                    }, 1250);
                } else {
                    hideLoader()
                }

                Info.style.animation = 'beat .50s infinite alternate, changeColor 1s infinite alternate';
                showHintPanel("Welcome to Sallux Configurator!");

            }
            
            // Use window.onload to ensure the page is fully loaded
            window.onload = function () {
                const loader = document.getElementById('loader');
                loader.style.display = 'block';
                document.getElementById("typeFeet").value = 'Slider';            
                setTimeout(loadState, 1000);
            };
    
    
    


    
            function setUpStartColorsURL() {
                self.options.pillar.texture = +self.params.get('PC');
                //
                self.options.shelf.texture = +self.params.get('FC');
    
                //top
                self.scene.traverse(function(child) {
                    if (child.name.includes('topPlane')) {
                        child.material.map = self.textures[+self.params.get('FC')].map;
                    }
                });
    
                //+doors
                self.scene.traverse(function(child) {
                    if (child.name.includes('door')) {
                        child.material.map = self.textures[+self.params.get('DC')].map;
                    }
                });
    
                //colorize bonus shelving too
                self.scene.traverse(function(child) {
                    if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {                            
                        child.material.map = self.textures[+self.params.get('FC')].map;
                    }   
                });
    
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        if (child.name.includes('shelf')) {
                            child.material.map = self.textures[+self.params.get('FC')].map;
                        }
                    }
                });

                var currentFC = parseInt(self.params.get('FC'));
                var newFC = currentFC + 1;

                if ( self.options.shelf.texture > 13 ) {
                    self.scene.traverse(function(child) {
                        if (child.name.includes('plinthLeg2') || child.name.includes('plinthLeg1')) {

                            child.material.map = self.textures[newFC].map;
                            child.material.map.repeat.y = 0.09;
                            child.material.map.repeat.x = 0.9;
                            child.material.map.center.y = 1;
                        }
                    }); 
                } else {
                    self.scene.traverse(function(child) {
                        if (child.name.includes('plinthLeg2') || child.name.includes('plinthLeg1')) {
                            child.material.map = self.textures[currentFC].map;
                        }
                    });
                }
                self.scene.traverse(function(child) {
                    if (child.name.includes('plinthLeg3')) {
                        child.material.map = self.textures[currentFC].map;
                    }
                });
                
                self.changeShelfTexture();
                self.changePillarTexture();    
            };
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            //DOORS S1
            document.getElementById("DoorLeft_S1").addEventListener('click', function() { 
                if (self.options.LeftDoor_S1_status == true) {
                    createDoorLeft_S1()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  

            });
    
            function createDoorLeft_S1()  {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_1Group'))
                if (self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined) {
                    self.scene.remove(self.scene.getObjectByName('drawerSection1_1Group'))
                }
    
                if (self.options.amountOfSections === 1 ) {
                    createDoor('doorSection1_1Group', 
                    self.doorSection1_1Group, 
                    self.options.sectionHeight_1_1, 
                    self.options.section1Length, 
                    'doorType1Section1_1', 
                    self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y, 
                    'handle_doorsection1_1', 
                    self.options.sectionHeight_1_1 / 2 - 8, 
                    self.options.section1Length - self.options.shelf.thickness * 2 - 2.)
                } else{
                    createDoor('doorSection1_1Group', 
                    self.doorSection1_1Group, 
                    self.options.sectionHeight_1_1, 
                    self.options.section1Length - 0.5, 
                    'doorType1Section1_1', 
                    self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y, 
                    'handle_doorsection1_1', 
                    self.options.sectionHeight_1_1 / 2 - 8, 
                    self.options.section1Length - self.options.shelf.thickness * 2 - 2.6)  
                } 
    
                self.calculateOutput();
                
                self.options.s1_1_doorStatus = 2; 
                self.updateDoorButtons();
    
            };


            document.getElementById("DoorRight_S1").addEventListener('click', function() { 
                if (self.options.RightDoor_S1_status == true) {
                    createDoorRight_S1()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            
            });
    
            function createDoorRight_S1() {
                self.scene.remove(self.scene.getObjectByName('doorSection1_1Group'))
                if (self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined) {
                    self.scene.remove(self.scene.getObjectByName('drawerSection1_1Group'))
                }
    
                if (self.options.amountOfSections === 1 ) {
                    createDoor(
                    'doorSection1_1Group', 
                    self.doorSection1_1Group, 
                    self.options.sectionHeight_1_1, 
                    self.options.section1Length + self.options.pillar.thickness/2, 
                    'doorType1Section1_1', 
                    self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y, 
                    'handle_doorsection1_1', 
                    self.options.sectionHeight_1_1 / 2 - 8, 
                    6
                    )
                }else {
                    createDoor(
                        'doorSection1_1Group', 
                        self.doorSection1_1Group, 
                        self.options.sectionHeight_1_1, 
                        self.options.section1Length, 
                        'doorType1Section1_1', 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y, 
                        'handle_doorsection1_1', 
                        self.options.sectionHeight_1_1 / 2 - 8, 
                        6
                    )
                }
                    
                self.calculateOutput();
    
                self.options.s1_1_doorStatus = 3; //for restoringð¥
                self.updateDoorButtons();
    
    
            };

            document.getElementById("DoubleDoor_Section1").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S1_status == true) {
                    createDoubleDoor_S1()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                } 
            } );
    
            function createDoubleDoor_S1() {
    
                if (self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined) {
                    self.scene.remove(self.scene.getObjectByName('doorSection1_1Group'))
                }
                self.scene.remove(self.scene.getObjectByName('drawerSection1_1Group'))
    
                if (self.options.amountOfSections === 1 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_1Group', 
                        self.doorSection1_1Group, 
    
                        // doorHeight_1, doorWidth_1, doorName_1  
                        self.options.sectionHeight_1_1, 
                        self.options.section1Length + self.options.pillar.thickness/2, 
                        'doorType3LeftSection1_1', 
    
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y, 
    
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_1', 
                        self.options.sectionHeight_1_1 / 2 - 8, 
                        self.options.section1Length / 2 + 5.7,
    
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_1 , 
                        self.options.section1Length + self.options.pillar.thickness/2,
                        'doorType3RightSection1_1', 
    
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_1', 
                        self.options.sectionHeight_1_1 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }else {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_1Group', 
                        self.doorSection1_1Group, 
    
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_1_1, 
                        self.options.section1Length , 
                        'doorType3LeftSection1_1', 
    
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y, 
    
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_1', 
                        self.options.sectionHeight_1_1 / 2 - 8, 
                        self.options.section1Length / 2 + 4.8,
    
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_1, 
                        self.options.section1Length , 
                        'doorType3RightSection1_1', 
    
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_1', 
                        self.options.sectionHeight_1_1 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }
    
                self.options.statusHideBackPlate = 1;

                self.calculateOutput();
                self.options.s1_1_doorStatus = 4; //for restoringð¥
                self.updateDoorButtons();
            };
            

            document.getElementById("Drawer_S1").addEventListener('click', function() {      
                if (self.options.Drawer_S1_status == true) {
                    createDrawer_S1();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                }   
            });    
            function createDrawer_S1() {
    
                if (self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined) {
                    self.scene.remove(self.scene.getObjectByName('doorSection1_1Group'))
                }
                self.scene.remove(self.scene.getObjectByName('drawerSection1_1Group'))
    

                if (self.options.amountOfSections === 1 ) {
                    createDoor(
                    'drawerSection1_1Group', 
                    self.drawerSection1_1Group, 
                    self.options.sectionHeight_1_1 , 
                    self.options.section1Length +0.5, 
                    'doorSection1_1', 
                    self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y, 
                    'handle_doordoorDrawer_section1_1', 
                    self.options.sectionHeight_1_1 / 2 - 8, 
                    self.options.section1Length / 2 - 0.5
                    )
                }else {
                    createDoor(
                        'drawerSection1_1Group', 
                        self.drawerSection1_1Group, 
                        self.options.sectionHeight_1_1, 
                        self.options.section1Length, 
                        'doorSection1_1', 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y, 
                        'handle_doordoorDrawer_section1_1', 
                        self.options.sectionHeight_1_1 / 2 - 8, 
                        self.options.section1Length / 2 - 0.5
                        )
                }
    
                document.getElementById("MainInternalShelving_S1_1").style.display = "none";
                document.getElementById("MainShoeShelving_S1_1").style.display = "none";

                self.calculateOutput();
                self.options.s1_doorStatus = 5; //for restoringð¥
                self.updateDoorButtons();

            };
    
    
            //remove/empty door S1
            document.getElementById("DoorEmpty_Section1").addEventListener('click', function() { createEmpty_S1() });
    
            function createEmpty_S1() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_1Group'))
    

                self.calculateOutput();
    
                self.options.s1_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
            //DOORS S1_2
            document.getElementById("DoorLeft_S1_2").addEventListener('click', function() { 
                if (self.options.LeftDoor_S1_2_status == true) {
                    createDoorLeft_S1_2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
    
            function createDoorLeft_S1_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
    
                if (self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined) {
                    self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
                } else {}
    
                createDoor('doorSection1_2Group', 
                self.doorSection1_2Group, 
                self.options.sectionHeight_1_2, 
                self.options.section1Length, 
                'doorType1Section1_2', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.options.sectionHeight_1_2 / 2 - 1, 
                'handle_doorsection1_2', 
                self.options.sectionHeight_1_2 / 2 - 8, 
                self.options.section1Length - self.options.shelf.thickness * 2 - 2.6)
    
 
                self.calculateOutput();
    
                self.options.s1_2_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_S1_2").addEventListener('click', function() { 
                if (self.options.RightDoor_S1_2_status == true) {
                    createDoorRight_S1_2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorRight_S1_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
                if (self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined) {
                    self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
                }
    
                createDoor(
                    'doorSection1_2Group', 
                    self.doorSection1_2Group, 
                    self.options.sectionHeight_1_2, 
                    self.options.section1Length, 
                    'doorType1Section1_2', 
                    self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                    self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.options.sectionHeight_1_2 / 2 - 1,
                    'handle_doorsection1_2', 
                    self.options.sectionHeight_1_2 / 2 - 8, 
                    6
                )
    
 
                self.calculateOutput();
    
                self.options.s1_2_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S1_2").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S1_2_status == true) {
                    createDoubleDoor_S1_2()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                } 
            });
    
            function createDoubleDoor_S1_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
                if (self.options.amountOfSections === 1 ) {
    
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_2Group', 
                        self.doorSection1_2Group, 
                        // doorHeight_1, doorWidth_1, doorName_1  
                        self.options.sectionHeight_1_2, 
                        self.options.section1Length + self.options.pillar.thickness/2, 
                        'doorType3LeftSection1_2', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.options.sectionHeight_1_2 / 2 - 1,
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_2', 
                        self.options.sectionHeight_1_2 / 2 - 8, 
                        self.options.section1Length / 2 + 5.7,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_2 , 
                        self.options.section1Length + self.options.pillar.thickness/2,
                        'doorType3RightSection1_2', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_2', 
                        self.options.sectionHeight_1_2 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }else {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_2Group', 
                        self.doorSection1_2Group, 
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_1_2, 
                        self.options.section1Length , 
                        'doorType3LeftSection1_2', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.options.sectionHeight_1_2 / 2 - 1,
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_2', 
                        self.options.sectionHeight_1_2 / 2 - 8, 
                        self.options.section1Length / 2 + 4.8,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_2, 
                        self.options.section1Length , 
                        'doorType3RightSection1_2', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_2', 
                        self.options.sectionHeight_1_2 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }
    
 
                self.calculateOutput();
                self.options.s1_2_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_S1_2").addEventListener('click', function() {
                if (self.options.Drawer_S1_2_status == true) {
                    createDrawer_S1_2();
                    console.log('1');
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });    
            function createDrawer_S1_2() {
    
                console.log('2');

                if (self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined) {
                    self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
                }
                self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
    
                createDoor(
                'drawerSection1_2Group', 
                self.drawerSection1_2Group, 
                self.options.sectionHeight_1_2, 
                self.options.section1Length, 
                'doorSection1_2', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.options.sectionHeight_1_2 / 2 - 1, 
                'handle_doordoorDrawer_section1_2', 
                self.options.sectionHeight_1_2 / 2 - 8, 
                self.options.section1Length / 2 - 0.5
                )
    
                self.calculateOutput();
    
                document.getElementById("MainInternalShelving_S1_2").style.display = "none";
                document.getElementById("MainShoeShelving_S1_2").style.display = "none";

                self.options.s1_2_doorStatus = 5;
                self.updateDoorButtons();
    
                
            };
    
            //remove/empty door S1_2
            document.getElementById("DoorEmpty_Section1_S1_2").addEventListener('click', function() { createEmpty_S1_2() });
    
            function createEmpty_S1_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
    
                self.calculateOutput();
    
                self.options.s1_2_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
            //DOORS S1_3
            document.getElementById("DoorLeft_SectionS1_3").addEventListener('click', function() { 
                if (self.options.LeftDoor_S1_3_status == true) {
                    createDoorLeft_S1_3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
    
            function createDoorLeft_S1_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
    
                createDoor('doorSection1_3Group', 
                self.doorSection1_3Group, 
                self.options.sectionHeight_1_3, 
                self.options.section1Length, 
                'doorType1Section1_3', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.options.sectionHeight_1_3 / 2 - 1, 
                'handle_doorsection1_3', 
                self.options.sectionHeight_1_3 / 2 - 8, 
                self.options.section1Length - self.options.shelf.thickness * 2 - 2.6)
    

                self.calculateOutput();
    
                self.options.s1_3_doorStatus = 2;
                self.updateDoorButtons();
    
    
            };

            document.getElementById("DoorRight_SectionS1_3").addEventListener('click', function() { 
                if (self.options.RightDoor_S1_3_status == true) {
                    createDoorRight_S1_3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorRight_S1_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
    
                createDoor(
                'doorSection1_3Group', 
                self.doorSection1_3Group, 
                self.options.sectionHeight_1_3, 
                self.options.section1Length, 
                'doorType1Section1_3', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.options.sectionHeight_1_3 / 2 - 1,
                'handle_doorsection1_3', 
                self.options.sectionHeight_1_3 / 2 - 8, 
                 6
                )
    

                self.calculateOutput();
    
                self.options.s1_3_doorStatus = 3;
                self.updateDoorButtons();
    
    
            };

            document.getElementById("DoubleDoor_S1_3").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S1_3_status == true) {
                    createDoubleDoor_S1_3()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
    
            function createDoubleDoor_S1_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
                
                if (self.options.amountOfSections === 1 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_3Group', 
                        self.doorSection1_3Group, 
                        // doorHeight_1, doorWidth_1, doorName_1  
                        self.options.sectionHeight_1_3, 
                        self.options.section1Length + self.options.pillar.thickness/2, 
                        'doorType3LeftSection1_3', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.options.sectionHeight_1_3 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_3', 
                        self.options.sectionHeight_1_3 / 2 - 8, 
                        self.options.section1Length / 2 + 5.7,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_3 , 
                        self.options.section1Length + self.options.pillar.thickness/2,
                        'doorType3RightSection1_3', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_3', 
                        self.options.sectionHeight_1_3 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }else {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_3Group', 
                        self.doorSection1_3Group, 
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_1_3, 
                        self.options.section1Length , 
                        'doorType3LeftSection1_3', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.options.sectionHeight_1_3 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_3', 
                        self.options.sectionHeight_1_3 / 2 - 8, 
                        self.options.section1Length / 2 + 4.8,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_3, 
                        self.options.section1Length , 
                        'doorType3RightSection1_3', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_3', 
                        self.options.sectionHeight_1_3 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }
    
    
                self.calculateOutput();
    
                self.options.s1_3_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS1_3").addEventListener('click', function() { 
                if (self.options.Drawer_S1_3_status == true) {
                    createDrawer_S1_3();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });     
            function createDrawer_S1_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
    
                createDoor(
                'drawerSection1_3Group', 
                self.drawerSection1_3Group, 
                self.options.sectionHeight_1_3, 
                self.options.section1Length, 
                'doorSection1_3', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.options.sectionHeight_1_3 / 2 - 1, 
                'handle_doordoorDrawer_section1_3', 
                self.options.sectionHeight_1_3 / 2 - 8, 
                self.options.section1Length / 2 - 0.5
                )
    

                self.calculateOutput(); 
    
                document.getElementById("MainInternalShelving_S1_3").style.display = "none";
                document.getElementById("MainShoeShelving_S1_3").style.display = "none";


                self.options.s1_3_doorStatus = 5;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S1_3
            document.getElementById("DoorEmpty_SectionS1_3").addEventListener('click', function() { createEmpty_S1_3() });
    
            function createEmpty_S1_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
    
                self.calculateOutput();
    
                self.options.s1_3_doorStatus = 1;
                self.updateDoorButtons();
    
    
            };
    
    
            //DOORS S1_4
            document.getElementById("DoorLeft_SectionS1_4").addEventListener('click', function() { 
                if (self.options.LeftDoor_S1_4_status == true) {
                    createDoorLeft_S1_4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorLeft_S1_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
    
                createDoor('doorSection1_4Group', 
                self.doorSection1_4Group, 
                self.options.sectionHeight_1_4, 
                self.options.section1Length, 
                'doorType1Section1_4', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.options.sectionHeight_1_4 / 2 - 1, 
                'handle_doorsection1_4', 
                self.options.sectionHeight_1_4 / 2 - 8, 
                self.options.section1Length - self.options.shelf.thickness * 2 - 2.6)
    

                self.calculateOutput(); 
    
                self.options.s1_4_doorStatus = 2;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoorRight_SectionS1_4").addEventListener('click', function() { 
                if (self.options.RightDoor_S1_4_status == true) {
                    createDoorRight_S1_4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorRight_S1_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
    
                createDoor(
                'doorSection1_4Group', 
                self.doorSection1_4Group, 
                self.options.sectionHeight_1_4, 
                self.options.section1Length, 
                'doorType1Section1_4', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.options.sectionHeight_1_4 / 2 - 1,
                'handle_doorsection1_4', 
                self.options.sectionHeight_1_4 / 2 - 8, 
                 6
                    )

                self.calculateOutput();
    
                self.options.s1_4_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S1_4").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S1_4_status == true) {
                    createDoubleDoor_S1_4()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
    
            function createDoubleDoor_S1_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
                
                if (self.options.amountOfSections === 1 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_4Group', 
                        self.doorSection1_4Group, 
                        // doorHeight_1, doorWidth_1, doorName_1  
                        self.options.sectionHeight_1_4, 
                        self.options.section1Length + self.options.pillar.thickness/2, 
                        'doorType3LeftSection1_4', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.options.sectionHeight_1_4 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_4', 
                        self.options.sectionHeight_1_4 / 2 - 8, 
                        self.options.section1Length / 2 + 5.7,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_4 , 
                        self.options.section1Length + self.options.pillar.thickness/2,
                        'doorType3RightSection1_4', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_4', 
                        self.options.sectionHeight_1_4 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }else {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_4Group', 
                        self.doorSection1_4Group, 
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_1_4, 
                        self.options.section1Length , 
                        'doorType3LeftSection1_4', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.options.sectionHeight_1_4 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_4', 
                        self.options.sectionHeight_1_4 / 2 - 8, 
                        self.options.section1Length / 2 + 4.8,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_4, 
                        self.options.section1Length , 
                        'doorType3RightSection1_4', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_4', 
                        self.options.sectionHeight_1_4 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }
    
                self.calculateOutput();
    
                self.options.s1_4_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            
            document.getElementById("Drawer_SectionS1_4").addEventListener('click', function() { 
                if (self.options.Drawer_S1_4_status == true) {
                    createDrawer_S1_4();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                }             
            });     
            function createDrawer_S1_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
    
                createDoor(
                'drawerSection1_4Group', 
                self.drawerSection1_4Group, 
                self.options.sectionHeight_1_4, 
                self.options.section1Length, 
                'doorSection1_4', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.options.sectionHeight_1_4 / 2 - 1, 
                'handle_doordoorDrawer_section1_4', 
                self.options.sectionHeight_1_4 / 2 - 8, 
                self.options.section1Length / 2 - 0.5
                )

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S1_4").style.display = "none";
                document.getElementById("MainShoeShelving_S1_4").style.display = "none";
    
                self.options.s1_4_doorStatus = 5;
                self.updateDoorButtons();
    
            };

            //remove/empty door S1_4
            document.getElementById("DoorEmpty_SectionS1_4").addEventListener('click', function() { createEmpty_S1_4() });
    
            function createEmpty_S1_4() {
                
                self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
    
                self.calculateOutput();
    
                self.options.s1_4_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    

            //DOORS S1_5
            document.getElementById("DoorLeft_SectionS1_5").addEventListener('click', function() { 
                if (self.options.LeftDoor_S1_5_status == true) {
                    createDoorLeft_S1_5()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorLeft_S1_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
    
                createDoor('doorSection1_5Group', 
                self.doorSection1_5Group, 
                self.options.sectionHeight_1_5, 
                self.options.section1Length, 
                'doorType1Section1_5', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.options.sectionHeight_1_5 / 2 - 1, 
                'handle_doorsection1_5', 
                self.options.sectionHeight_1_5 / 2 - 8, 
                self.options.section1Length - self.options.shelf.thickness * 2 - 2.6)
    

                self.calculateOutput(); 
    
                self.options.s1_5_doorStatus = 2;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoorRight_SectionS1_5").addEventListener('click', function() { 
                if (self.options.RightDoor_S1_5_status == true) {
                    createDoorRight_S1_5()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorRight_S1_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
    
                createDoor(
                'doorSection1_5Group', 
                self.doorSection1_5Group, 
                self.options.sectionHeight_1_5, 
                self.options.section1Length, 
                'doorType1Section1_5', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.options.sectionHeight_1_5 / 2 - 1,
                'handle_doorsection1_5', 
                self.options.sectionHeight_1_5 / 2 - 8, 
                 6
                    )

                self.calculateOutput();
    
                self.options.s1_5_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S1_5").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S1_5_status == true) {
                    createDoubleDoor_S1_5()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            
            });
    
            function createDoubleDoor_S1_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
                
                if (self.options.amountOfSections === 1 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_5Group', 
                        self.doorSection1_5Group, 
                        // doorHeight_1, doorWidth_1, doorName_1  
                        self.options.sectionHeight_1_5, 
                        self.options.section1Length + self.options.pillar.thickness/2, 
                        'doorType3LeftSection1_5', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.options.sectionHeight_1_5 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_5', 
                        self.options.sectionHeight_1_5 / 2 - 8, 
                        self.options.section1Length / 2 + 5.7,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_5 , 
                        self.options.section1Length + self.options.pillar.thickness/2,
                        'doorType3RightSection1_5', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_5', 
                        self.options.sectionHeight_1_5 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }else {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_5Group', 
                        self.doorSection1_5Group, 
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_1_5, 
                        self.options.section1Length , 
                        'doorType3LeftSection1_5', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.options.sectionHeight_1_5 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_5', 
                        self.options.sectionHeight_1_5 / 2 - 8, 
                        self.options.section1Length / 2 + 4.8,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_5, 
                        self.options.section1Length , 
                        'doorType3RightSection1_5', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_5', 
                        self.options.sectionHeight_1_5 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }
    
                self.calculateOutput();
    
                self.options.s1_5_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS1_5").addEventListener('click', function() { 
                if (self.options.Drawer_S1_5_status == true) {
                    createDrawer_S1_5();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });   
            function createDrawer_S1_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
    
                createDoor(
                'drawerSection1_5Group', 
                self.drawerSection1_5Group, 
                self.options.sectionHeight_1_5, 
                self.options.section1Length, 
                'doorSection1_5', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.options.sectionHeight_1_5 / 2 - 1, 
                'handle_doordoorDrawer_section1_5', 
                self.options.sectionHeight_1_5 / 2 - 8, 
                self.options.section1Length / 2 - 0.5
                )

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S1_5").style.display = "none";
                document.getElementById("MainShoeShelving_S1_5").style.display = "none";
    
                self.options.s1_5_doorStatus = 5;
                self.updateDoorButtons();

    
            };

            //remove/empty door S1_5
            document.getElementById("DoorEmpty_SectionS1_5").addEventListener('click', function() { createEmpty_S1_5() });
    
            function createEmpty_S1_5() {
                
                self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
    
                self.calculateOutput();
    
                self.options.s1_5_doorStatus = 1;
                self.updateDoorButtons();
    
            };


            //DOORS S1_6
            document.getElementById("DoorLeft_S1_6").addEventListener('click', function() { 
                
                if (self.options.LeftDoor_S1_6_status == true) {
                    createDoorLeft_S1_6()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorLeft_S1_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
    
                createDoor('doorSection1_6Group', 
                self.doorSection1_6Group, 
                self.options.sectionHeight_1_6, 
                self.options.section1Length, 
                'doorType1Section1_6', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + self.options.sectionHeight_1_6 / 2 - 1, 
                'handle_doorsection1_6', 
                self.options.sectionHeight_1_6 / 2 - 8, 
                self.options.section1Length - self.options.shelf.thickness * 2 - 2.6)
    

                self.calculateOutput(); 
    
                self.options.s1_6_doorStatus = 2;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoorRight_SectionS1_6").addEventListener('click', function() { 
                if (self.options.RightDoor_S1_6_status == true) {
                    createDoorRight_S1_6()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorRight_S1_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
    
                createDoor(
                'doorSection1_6Group', 
                self.doorSection1_6Group, 
                self.options.sectionHeight_1_6, 
                self.options.section1Length, 
                'doorType1Section1_6', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + self.options.sectionHeight_1_6 / 2 - 1,
                'handle_doorsection1_6', 
                self.options.sectionHeight_1_6 / 2 - 8, 
                 6
                    )

                self.calculateOutput();
    
                self.options.s1_6_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S1_6").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S1_6_status == true) {
                    createDoubleDoor_S1_6()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            
            });
    
            function createDoubleDoor_S1_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
                
                if (self.options.amountOfSections === 1 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_6Group', 
                        self.doorSection1_6Group, 
                        // doorHeight_1, doorWidth_1, doorName_1  
                        self.options.sectionHeight_1_6, 
                        self.options.section1Length + self.options.pillar.thickness/2, 
                        'doorType3LeftSection1_6', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + self.options.sectionHeight_1_6 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_6', 
                        self.options.sectionHeight_1_6 / 2 - 8, 
                        self.options.section1Length / 2 + 5.7,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_6 , 
                        self.options.section1Length + self.options.pillar.thickness/2,
                        'doorType3RightSection1_6', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_6', 
                        self.options.sectionHeight_1_6 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }else {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_6Group', 
                        self.doorSection1_6Group, 
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_1_6, 
                        self.options.section1Length , 
                        'doorType3LeftSection1_6', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + self.options.sectionHeight_1_6 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_6', 
                        self.options.sectionHeight_1_6 / 2 - 8, 
                        self.options.section1Length / 2 + 4.8,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_6, 
                        self.options.section1Length , 
                        'doorType3RightSection1_6', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_6', 
                        self.options.sectionHeight_1_6 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }
    
                self.calculateOutput();
    
                self.options.s1_6_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            document.getElementById("Drawer_SectionS1_6").addEventListener('click', function() { 
                if (self.options.Drawer_S1_6_status == true) {
                    createDrawer_S1_6();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });  
    
            function createDrawer_S1_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
    
                createDoor(
                'drawerSection1_6Group', 
                self.drawerSection1_6Group, 
                self.options.sectionHeight_1_6, 
                self.options.section1Length, 
                'doorSection1_6', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + self.options.sectionHeight_1_6 / 2 - 1, 
                'handle_doordoorDrawer_section1_6', 
                self.options.sectionHeight_1_6 / 2 - 8, 
                self.options.section1Length / 2 - 0.5
                )

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S1_6").style.display = "none";
                document.getElementById("MainShoeShelving_S1_6").style.display = "none";
    
                self.options.s1_6_doorStatus = 5;
                self.updateDoorButtons();

    
            };

            //remove/empty door S1_6
            document.getElementById("DoorEmpty_SectionS1_6").addEventListener('click', function() { createEmpty_S1_6() });
    
            function createEmpty_S1_6() {
                
                self.scene.remove(self.scene.getObjectByName('doorSection1_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
    
                self.calculateOutput();
    
                self.options.s1_6_doorStatus = 1;
                self.updateDoorButtons();
    
            };


            //DOORS S1_7
            document.getElementById("DoorLeft_S1_7").addEventListener('click', function() { 
                
                if (self.options.LeftDoor_S1_7_status == true) {
                    createDoorLeft_S1_7()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorLeft_S1_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_7Group'))
    
                createDoor('doorSection1_7Group', 
                self.doorSection1_7Group, 
                self.options.sectionHeight_1_7, 
                self.options.section1Length, 
                'doorType1Section1_7', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y + self.options.sectionHeight_1_7 / 2 - 1, 
                'handle_doorsection1_7', 
                self.options.sectionHeight_1_7 / 2 - 8, 
                self.options.section1Length - self.options.shelf.thickness * 2 - 2.6)
    

                self.calculateOutput(); 
    
                self.options.s1_7_doorStatus = 2;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoorRight_SectionS1_7").addEventListener('click', function() { 
                if (self.options.RightDoor_S1_7_status == true) {
                    createDoorRight_S1_7()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorRight_S1_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_7Group'))
    
                createDoor(
                'doorSection1_7Group', 
                self.doorSection1_7Group, 
                self.options.sectionHeight_1_7, 
                self.options.section1Length, 
                'doorType1Section1_7', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y + self.options.sectionHeight_1_7 / 2 - 1,
                'handle_doorsection1_7', 
                self.options.sectionHeight_1_7 / 2 - 8, 
                 6
                    )

                self.calculateOutput();
    
                self.options.s1_7_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S1_7").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S1_7_status == true) {
                    createDoubleDoor_S1_7()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            
            });
    
            function createDoubleDoor_S1_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_7Group'))
                
                if (self.options.amountOfSections === 1 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_7Group', 
                        self.doorSection1_7Group, 
                        // doorHeight_1, doorWidth_1, doorName_1  
                        self.options.sectionHeight_1_7, 
                        self.options.section1Length + self.options.pillar.thickness/2, 
                        'doorType3LeftSection1_7', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y + self.options.sectionHeight_1_7 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_7', 
                        self.options.sectionHeight_1_7 / 2 - 8, 
                        self.options.section1Length / 2 + 5.7,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_7 , 
                        self.options.section1Length + self.options.pillar.thickness/2,
                        'doorType3RightSection1_7', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_7', 
                        self.options.sectionHeight_1_7 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }else {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection1_7Group', 
                        self.doorSection1_7Group, 
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_1_7, 
                        self.options.section1Length , 
                        'doorType3LeftSection1_7', 
                        // groupPositionX, groupPositionY, 
                        self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                        self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y + self.options.sectionHeight_1_7 / 2 - 1, 
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section1_7', 
                        self.options.sectionHeight_1_7 / 2 - 8, 
                        self.options.section1Length / 2 + 4.8,
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_1_7, 
                        self.options.section1Length , 
                        'doorType3RightSection1_7', 
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section1_7', 
                        self.options.sectionHeight_1_7 / 2 - 8,  
                        self.options.section1Length /2 - 5,
                    )
                }
    
                self.calculateOutput();
    
                self.options.s1_7_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            document.getElementById("Drawer_SectionS1_7").addEventListener('click', function() { 
                if (self.options.Drawer_S1_7_status == true) {
                    createDrawer_S1_7();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });      
            function createDrawer_S1_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection1_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_7Group'))
    
                createDoor(
                'drawerSection1_7Group', 
                self.drawerSection1_7Group, 
                self.options.sectionHeight_1_7, 
                self.options.section1Length, 
                'doorSection1_7', 
                self.shelving.getObjectByName( "pillar_0", true ).position.x + 0.5, 
                self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y + self.options.sectionHeight_1_7 / 2 - 1, 
                'handle_doordoorDrawer_section1_7', 
                self.options.sectionHeight_1_7 / 2 - 8, 
                self.options.section1Length / 2 - 0.5
                )

                self.calculateOutput();

                self.options.s1_7_doorStatus = 5;
                self.updateDoorButtons();

    
            };

            //remove/empty door S1_7
            document.getElementById("Drawer_SectionS1_7").addEventListener('click', function() { 
                if (self.options.Drawer_S1_7_status == true) {
                    createDrawer_S1_7();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });      
            function createEmpty_S1_7() {
                
                self.scene.remove(self.scene.getObjectByName('doorSection1_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection1_7Group'))
    
                self.calculateOutput();
    
                self.options.s1_7_doorStatus = 1;
                self.updateDoorButtons();
    
            };

           
    
    
    
            //DOORS S2
            document.getElementById("DoorLeft_S2").addEventListener('click', function() {
                if (self.options.LeftDoor_S2_status == true) {
                    createDoorLeft_S2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
    
            function createDoorLeft_S2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_1Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor('doorSection2_1Group', 
                    self.doorSection2_1Group, 
                    self.options.sectionHeight_2_1, 
                    self.options.section2Length, 
                    'doorType1Section2_1', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y, 
                    'handle_doorsection2_1', 
                    self.options.sectionHeight_2_1 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection2_1Group', 
                    self.doorSection2_1Group, 
                    self.options.sectionHeight_2_1, 
                    self.options.section2Length - self.options.pillar.thickness, 
                    'doorType1Section2_1', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y, 
                    'handle_doorsection2_1', 
                    self.options.sectionHeight_2_1 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)    
                } 
    
    
                self.calculateOutput();
    
                self.options.s2_1_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
    
            document.getElementById("DoorRight_S2").addEventListener('click', function() { 
                if (self.options.RightDoor_S2_status == true) {
                    createDoorRight_S2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorRight_S2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_1Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'doorSection2_1Group', 
                        self.doorSection2_1Group, 
                        self.options.sectionHeight_2_1, 
                        self.options.section2Length, 
                        'doorType1Section2_1', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y, 
                        'handle_doorsection2_1', 
                        self.options.sectionHeight_2_1 / 2 - 8, 
                        6
                        )
                } else{
                    createDoor(
                        'doorSection2_1Group', 
                        self.doorSection2_1Group, 
                        self.options.sectionHeight_2_1, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType1Section2_1', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y, 
                        'handle_doorsection2_1', 
                        self.options.sectionHeight_2_1 / 2 - 8, 
                        6
                        )
                } 
    

                self.calculateOutput();
    
                self.options.s2_1_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_Section2").addEventListener('click',  function() { 
                if (self.options.DoubleDoor_S2_status == true) {
                    createDoubleDoor_S2()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
    
            function createDoubleDoor_S2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_1Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_1Group', 
                        self.doorSection2_1Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_1, 
                        self.options.section2Length, 
                        'doorType3LeftSection2_1', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_1', 
                        self.options.sectionHeight_2_1 / 2 - 8, 
                        self.options.section2Length / 2 + 5.7,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_1, 
                        self.options.section2Length,
                        'doorType3RightSection2_1', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_1', 
                        self.options.sectionHeight_2_1 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                } else{           
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_1Group', 
                        self.doorSection2_1Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_1, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType3LeftSection2_1', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_1', 
                        self.options.sectionHeight_2_1 / 2 - 8, 
                        self.options.section2Length / 2 + 4.8,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_1, 
                        self.options.section2Length - self.options.pillar.thickness,
                        'doorType3RightSection2_1', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_1', 
                        self.options.sectionHeight_2_1 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                } 
    
                self.calculateOutput();
    
                self.options.s2_1_doorStatus = 4;
                self.updateDoorButtons();
            };
    
            document.getElementById("Drawer_S2").addEventListener('click', function() { 
                if (self.options.Drawer_S2_status == true) {
                    createDrawer_S2();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });       
            function createDrawer_S2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_1Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'drawerSection2_1Group', 
                        self.drawerSection2_1Group, 
                        self.options.sectionHeight_2_1, 
                        self.options.section2Length, 
                        'doorSection2_1', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y, 
                        'handle_doordoorDrawer_section2_1', 
                        self.options.sectionHeight_2_1 / 2 - 8, 
                        self.options.section2Length / 2- 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection2_1Group', 
                        self.drawerSection2_1Group, 
                        self.options.sectionHeight_2_1, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_1', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y, 
                        'handle_doordoorDrawer_section2_1', 
                        self.options.sectionHeight_2_1 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )
                } 
    
    
                document.getElementById("MainInternalShelving_S2_1").style.display = "none";    
                document.getElementById("MainShoeShelving_S2_1").style.display = "none";

                self.calculateOutput();
    
                self.options.s2_doorStatus = 5;
                self.updateDoorButtons();
    
            };
    
    
            //remove/empty door S2
            document.getElementById("DoorEmpty_Section2").addEventListener('click', function() { createEmpty_S2() });
    
            function createEmpty_S2() {
                self.scene.remove(self.scene.getObjectByName('doorSection2_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_1Group'))
    

                self.calculateOutput();
    
                self.options.s2_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
            //DOORS S2_2
            document.getElementById("DoorLeft_S2_2").addEventListener('click', function() { 
                if (self.options.LeftDoor_S2_2_status == true) {
                    createDoorLeft_S2_2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
            function createDoorLeft_S2_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor('doorSection2_2Group', 
                    self.doorSection2_2Group, 
                    self.options.sectionHeight_2_2, 
                    self.options.section2Length, 
                    'doorType1Section2_2', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 / 2 - 1, 
                    'handle_doorsection2_2', 
                    self.options.sectionHeight_2_2 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)  
                } else{
                    createDoor('doorSection2_2Group', 
                    self.doorSection2_2Group, 
                    self.options.sectionHeight_2_2, 
                    self.options.section2Length - self.options.pillar.thickness, 
                    'doorType1Section2_2', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 / 2 - 1, 
                    'handle_doorsection2_2', 
                    self.options.sectionHeight_2_2 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)   
                } 
    
    
                self.calculateOutput(); 
    
                self.options.s2_2_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_S2_2").addEventListener('click', function() { 
                if (self.options.RightDoor_S2_2_status == true) {
                    createDoorRight_S2_2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorRight_S2_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'doorSection2_2Group', 
                        self.doorSection2_2Group, 
                        self.options.sectionHeight_2_2, 
                        self.options.section2Length, 
                        'doorType1Section2_2', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 / 2 - 1,
                        'handle_doorsection2_2', 
                        self.options.sectionHeight_2_2 / 2 - 8, 
                        6
                    ) 
                } else{
                    createDoor(
                        'doorSection2_2Group', 
                        self.doorSection2_2Group, 
                        self.options.sectionHeight_2_2, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType1Section2_2', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 / 2 - 1,
                        'handle_doorsection2_2', 
                        self.options.sectionHeight_2_2 / 2 - 8, 
                        6
                    )  
                } 
    

                self.calculateOutput();
    
                self.options.s2_2_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S2_2").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S2_2_status == true) {
                    createDoubleDoor_S2_2()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S2_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
                
                if (self.options.amountOfSections === 2 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_2Group', 
                        self.doorSection2_2Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_2, 
                        self.options.section2Length, 
                        'doorType3LeftSection2_2', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_2', 
                        self.options.sectionHeight_2_2 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_2, 
                        self.options.section2Length,
                        'doorType3RightSection2_2', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_2', 
                        self.options.sectionHeight_2_2 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_2Group', 
                        self.doorSection2_2Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_2, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType3LeftSection2_2', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_2', 
                        self.options.sectionHeight_2_2 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_2, 
                        self.options.section2Length - self.options.pillar.thickness,
                        'doorType3RightSection2_2', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_2', 
                        self.options.sectionHeight_2_2 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                }
    
    

                self.calculateOutput();
    
                self.options.s2_2_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_S2_2").addEventListener('click', function() { 
                if (self.options.Drawer_S2_2_status == true) {
                    createDrawer_S2_2();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });     
            function createDrawer_S2_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'drawerSection2_2Group', 
                        self.drawerSection2_2Group, 
                        self.options.sectionHeight_2_2, 
                        self.options.section2Length, 
                        'doorSection2_2', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 / 2 - 1, 
                        'handle_doordoorDrawer_section2_2', 
                        self.options.sectionHeight_2_2 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection2_2Group', 
                        self.drawerSection2_2Group, 
                        self.options.sectionHeight_2_2, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_2', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 / 2 - 1, 
                        'handle_doordoorDrawer_section2_2', 
                        self.options.sectionHeight_2_2 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    ) 
                } 
    
                document.getElementById("MainInternalShelving_S2_2").style.display = "none";
                document.getElementById("MainShoeShelving_S2_2").style.display = "none";

                self.calculateOutput();
    
                self.options.s2_2_doorStatus = 5;
                self.updateDoorButtons();
 
            };
    
            //remove/empty door S2_2
            document.getElementById("DoorEmpty_SectionS2_2").addEventListener('click', function() { createEmpty_S2_2() });
            function createEmpty_S2_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
    
                self.calculateOutput();
                
                self.options.s2_2_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
            //DOORS S2_3
            document.getElementById("DoorLeft_SectionS2_3").addEventListener('click', function() { 
                if (self.options.LeftDoor_S2_3_status == true) {
                    createDoorLeft_S2_3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
    
            function createDoorLeft_S2_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor('doorSection2_3Group', 
                    self.doorSection2_3Group, 
                    self.options.sectionHeight_2_3, 
                    self.options.section2Length, 
                    'doorSection2_3', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 / 2 - 1, 
                    'handle_doorsection2_3', 
                    self.options.sectionHeight_2_3 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection2_3Group', 
                    self.doorSection2_3Group, 
                    self.options.sectionHeight_2_3, 
                    self.options.section2Length - self.options.pillar.thickness, 
                    'doorType1Section2_3', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 / 2 - 1, 
                    'handle_doorsection2_3', 
                    self.options.sectionHeight_2_3 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)
                } 
    
    
 
                self.calculateOutput();
    
                self.options.s2_3_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS2_3").addEventListener('click', function() { 
                if (self.options.RightDoor_S2_3_status == true) {
                    createDoorRight_S2_3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
    
            function createDoorRight_S2_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
    
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'doorSection2_3Group', 
                        self.doorSection2_3Group, 
                        self.options.sectionHeight_2_3, 
                        self.options.section2Length, 
                        'doorType1Section2_3', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 / 2 - 1,
                        'handle_doorsection2_3', 
                        self.options.sectionHeight_2_3 / 2 - 8, 
                        6
                        )
                } else{
                    createDoor(
                        'doorSection2_3Group', 
                        self.doorSection2_3Group, 
                        self.options.sectionHeight_2_3, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType1Section2_3', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 / 2 - 1,
                        'handle_doorsection2_3', 
                        self.options.sectionHeight_2_3 / 2 - 8, 
                        6
                    )
                } 
    
    

                self.calculateOutput();
    
                self.options.s2_3_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S2_3").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S2_3_status == true) {
                    createDoubleDoor_S2_3()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S2_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
                
                if (self.options.amountOfSections === 2 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_3Group', 
                        self.doorSection2_3Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_3, 
                        self.options.section2Length, 
                        'doorType3LeftSection2_3', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_3', 
                        self.options.sectionHeight_2_3 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_3, 
                        self.options.section2Length,
                        'doorType3RightSection2_3', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_3', 
                        self.options.sectionHeight_2_3 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_3Group', 
                        self.doorSection2_3Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_3, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType3LeftSection2_3', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_3', 
                        self.options.sectionHeight_2_3 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_3, 
                        self.options.section2Length - self.options.pillar.thickness,
                        'doorType3RightSection2_3', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_3', 
                        self.options.sectionHeight_2_3 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )  
                } 
               
    

                self.calculateOutput();
    
                self.options.s2_3_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS2_3").addEventListener('click', function() { 
                if (self.options.Drawer_S2_3_status == true) {
                    createDrawer_S2_3();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });     
            function createDrawer_S2_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'drawerSection2_3Group', 
                        self.drawerSection2_3Group, 
                        self.options.sectionHeight_2_3, 
                        self.options.section2Length, 
                        'doorSection2_3', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 / 2 - 1, 
                        'handle_doordoorDrawer_section2_3', 
                        self.options.sectionHeight_2_3 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection2_3Group', 
                        self.drawerSection2_3Group, 
                        self.options.sectionHeight_2_3, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_3', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 / 2 - 1, 
                        'handle_doordoorDrawer_section2_3', 
                        self.options.sectionHeight_2_3 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )
                } 
    
                document.getElementById("MainInternalShelving_S2_3").style.display = "none";
                document.getElementById("MainShoeShelving_S2_3").style.display = "none";

 
                self.calculateOutput();  
                
                self.options.s2_3_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            //remove/empty door S2_3
            document.getElementById("DoorEmpty_SectionS2_3").addEventListener('click', function() { createEmpty_S2_3() });
    
            function createEmpty_S2_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
    
                self.calculateOutput();
    
                self.options.s2_3_doorStatus = 1;
                self.updateDoorButtons();
    
            };

    
            //DOORS S2_4
            document.getElementById("DoorLeft_SectionS2_4").addEventListener('click', function() { 
                if (self.options.LeftDoor_S2_4_status == true) {
                    createDoorLeft_S2_4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });  
            function createDoorLeft_S2_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor('doorSection2_4Group', 
                    self.doorSection2_4Group, 
                    self.options.sectionHeight_2_4, 
                    self.options.section2Length, 
                    'doorType1Section2_4', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 / 2 - 1, 
                    'handle_doorsection2_4', 
                    self.options.sectionHeight_2_4 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection2_4Group', 
                    self.doorSection2_4Group, 
                    self.options.sectionHeight_2_4, 
                    self.options.section2Length - self.options.pillar.thickness, 
                    'doorType1Section2_4', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 / 2 - 1, 
                    'handle_doorsection2_4', 
                    self.options.sectionHeight_2_4 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)  
                } 
                

                self.calculateOutput();
    
                self.options.s2_4_doorStatus = 2;
                self.updateDoorButtons();
    
            };
     
            document.getElementById("DoorRight_SectionS2_4").addEventListener('click', function() {
                if (self.options.RightDoor_S2_4_status == true) {
                    createDoorRight_S2_4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S2_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'doorSection2_4Group', 
                        self.doorSection2_4Group, 
                        self.options.sectionHeight_2_4, 
                        self.options.section2Length, 
                        'doorSection2_4', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 / 2 - 1,
                        'handle_doorsection2_4', 
                        self.options.sectionHeight_2_4 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection2_4Group', 
                        self.doorSection2_4Group, 
                        self.options.sectionHeight_2_4, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_4', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 / 2 - 1,
                        'handle_doorsection2_4', 
                        self.options.sectionHeight_2_4 / 2 - 8, 
                        6
                    )   
                } 
                
                self.calculateOutput();
    
                self.options.s2_4_doorStatus = 2;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S2_4").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S2_4_status == true) {
                    createDoubleDoor_S2_4()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S2_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
                
                if (self.options.amountOfSections === 2 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_4Group', 
                        self.doorSection2_4Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_4, 
                        self.options.section2Length, 
                        'doorType3LeftSection2_4', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_4', 
                        self.options.sectionHeight_2_4 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_4, 
                        self.options.section2Length,
                        'doorType3RightSection2_4', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_4', 
                        self.options.sectionHeight_2_4 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_4Group', 
                        self.doorSection2_4Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_4, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType3LeftSection2_4', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_4', 
                        self.options.sectionHeight_2_4 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_4, 
                        self.options.section2Length - self.options.pillar.thickness,
                        'doorType3RightSection2_4', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_4', 
                        self.options.sectionHeight_2_4 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )   
                } 

                self.calculateOutput();
    
                self.options.s2_4_doorStatus = 4;
                self.updateDoorButtons();
    
            };   
    
            document.getElementById("Drawer_SectionS2_4").addEventListener('click', function() { 
                if (self.options.Drawer_S2_4_status == true) {
                    createDrawer_S2_4();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });       
            function createDrawer_S2_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'drawerSection2_4Group', 
                        self.drawerSection2_4Group, 
                        self.options.sectionHeight_2_4, 
                        self.options.section2Length, 
                        'doorSection2_4', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 / 2 - 1, 
                        'handle_doordoorDrawer_section2_4', 
                        self.options.sectionHeight_2_4 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection2_4Group', 
                        self.drawerSection2_4Group, 
                        self.options.sectionHeight_2_4, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_4', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 / 2 - 1, 
                        'handle_doordoorDrawer_section2_4', 
                        self.options.sectionHeight_2_4 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )   
                } 
    

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S2_4").style.display = "none";
                document.getElementById("MainShoeShelving_S2_4").style.display = "none";
    
                self.options.s2_4_doorStatus = 5;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S2_4
            document.getElementById("DoorEmpty_SectionS2_4").addEventListener('click', function() { createEmpty_S2_4() });
            function createEmpty_S2_4() {    
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
    
                self.calculateOutput();
    
                self.options.s2_4_doorStatus = 1;
                self.updateDoorButtons();
    
            };


            //DOORS S2_5
            document.getElementById("DoorLeft_SectionS2_5").addEventListener('click', function() { 
                if (self.options.LeftDoor_S2_5_status == true) {
                    createDoorLeft_S2_5()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
            function createDoorLeft_S2_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor('doorSection2_5Group', 
                    self.doorSection2_5Group, 
                    self.options.sectionHeight_2_5, 
                    self.options.section2Length, 
                    'doorType1Section2_5', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 / 2 - 1, 
                    'handle_doorsection2_5', 
                    self.options.sectionHeight_2_5 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection2_5Group', 
                    self.doorSection2_5Group, 
                    self.options.sectionHeight_2_5, 
                    self.options.section2Length - self.options.pillar.thickness, 
                    'doorType1Section2_5', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 / 2 - 1, 
                    'handle_doorsection2_5', 
                    self.options.sectionHeight_2_5 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)  
                } 
                

                self.calculateOutput();
    
                self.options.s2_5_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS2_5").addEventListener('click', function() { 
                if (self.options.RightDoor_S2_5_status == true) {
                    createDoorRight_S2_5()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S2_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'doorSection2_5Group', 
                        self.doorSection2_5Group, 
                        self.options.sectionHeight_2_5, 
                        self.options.section2Length, 
                        'doorSection2_5', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 / 2 - 1,
                        'handle_doorsection2_5', 
                        self.options.sectionHeight_2_5 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection2_5Group', 
                        self.doorSection2_5Group, 
                        self.options.sectionHeight_2_5, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_5', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 / 2 - 1,
                        'handle_doorsection2_5', 
                        self.options.sectionHeight_2_5 / 2 - 8, 
                        6
                    )   
                } 
                
                self.calculateOutput();
    
                self.options.s2_5_doorStatus = 2;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S2_5").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S2_5_status == true) {
                    createDoubleDoor_S2_5()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S2_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
                
                if (self.options.amountOfSections === 2 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_5Group', 
                        self.doorSection2_5Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_5, 
                        self.options.section2Length, 
                        'doorType3LeftSection2_5', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_5', 
                        self.options.sectionHeight_2_5 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_5, 
                        self.options.section2Length,
                        'doorType3RightSection2_5', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_5', 
                        self.options.sectionHeight_2_5 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_5Group', 
                        self.doorSection2_5Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_5, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType3LeftSection2_5', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_5', 
                        self.options.sectionHeight_2_5 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_5, 
                        self.options.section2Length - self.options.pillar.thickness,
                        'doorType3RightSection2_5', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_5', 
                        self.options.sectionHeight_2_5 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )   
                } 

                self.calculateOutput();
    
                self.options.s2_5_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS2_5").addEventListener('click', function() { 
                if (self.options.Drawer_S2_5_status == true) {
                    createDrawer_S2_5();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });     
            function createDrawer_S2_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'drawerSection2_5Group', 
                        self.drawerSection2_5Group, 
                        self.options.sectionHeight_2_5, 
                        self.options.section2Length, 
                        'doorSection2_5', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 / 2 - 1, 
                        'handle_doordoorDrawer_section2_5', 
                        self.options.sectionHeight_2_5 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection2_5Group', 
                        self.drawerSection2_5Group, 
                        self.options.sectionHeight_2_5, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_5', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 / 2 - 1, 
                        'handle_doordoorDrawer_section2_5', 
                        self.options.sectionHeight_2_5 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )   
                } 
    

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S2_5").style.display = "none";
                document.getElementById("MainShoeShelving_S2_5").style.display = "none";
    
                self.options.s2_5_doorStatus = 5;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S2_5
            document.getElementById("DoorEmpty_SectionS2_5").addEventListener('click', function() { createEmpty_S2_5() });
    
            function createEmpty_S2_5() {    
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
    
                self.calculateOutput();
    
                self.options.s2_5_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
    
            //DOORS S2_6
            document.getElementById("DoorLeft_SectionS2_6").addEventListener('click', function() { 
                if (self.options.LeftDoor_S2_6_status == true) {
                    createDoorLeft_S2_6()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
            function createDoorLeft_S2_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor('doorSection2_6Group', 
                    self.doorSection2_6Group, 
                    self.options.sectionHeight_2_6, 
                    self.options.section2Length, 
                    'doorType1Section2_6', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 / 2 - 1, 
                    'handle_doorsection2_6', 
                    self.options.sectionHeight_2_6 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection2_6Group', 
                    self.doorSection2_6Group, 
                    self.options.sectionHeight_2_6, 
                    self.options.section2Length - self.options.pillar.thickness, 
                    'doorType1Section2_6', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 / 2 - 1, 
                    'handle_doorsection2_6', 
                    self.options.sectionHeight_2_6 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)  
                } 
                

                self.calculateOutput();
    
                self.options.s2_6_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS2_6").addEventListener('click', function() { 
                if (self.options.RightDoor_S2_6_status == true) {
                    createDoorRight_S2_6()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S2_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'doorSection2_6Group', 
                        self.doorSection2_6Group, 
                        self.options.sectionHeight_2_6, 
                        self.options.section2Length, 
                        'doorSection2_6', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 / 2 - 1,
                        'handle_doorsection2_6', 
                        self.options.sectionHeight_2_6 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection2_6Group', 
                        self.doorSection2_6Group, 
                        self.options.sectionHeight_2_6, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_6', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 / 2 - 1,
                        'handle_doorsection2_6', 
                        self.options.sectionHeight_2_6 / 2 - 8, 
                        6
                    )   
                } 
                
                self.calculateOutput();
    
                self.options.s2_6_doorStatus = 2;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S2_6").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S2_6_status == true) {
                    createDoubleDoor_S2_6()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S2_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
                
                if (self.options.amountOfSections === 2 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_6Group', 
                        self.doorSection2_6Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_6, 
                        self.options.section2Length, 
                        'doorType3LeftSection2_6', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_6', 
                        self.options.sectionHeight_2_6 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_6, 
                        self.options.section2Length,
                        'doorType3RightSection2_6', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_6', 
                        self.options.sectionHeight_2_6 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_6Group', 
                        self.doorSection2_6Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_6, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType3LeftSection2_6', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_6', 
                        self.options.sectionHeight_2_6 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_6, 
                        self.options.section2Length - self.options.pillar.thickness,
                        'doorType3RightSection2_6', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_6', 
                        self.options.sectionHeight_2_6 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )   
                } 

                self.calculateOutput();
    
                self.options.s2_6_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            document.getElementById("Drawer_SectionS2_6").addEventListener('click', function() { 
                if (self.options.Drawer_S2_6_status == true) {
                    createDrawer_S2_6();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });      
            function createDrawer_S2_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'drawerSection2_6Group', 
                        self.drawerSection2_6Group, 
                        self.options.sectionHeight_2_6, 
                        self.options.section2Length, 
                        'doorSection2_6', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 / 2 - 1, 
                        'handle_doordoorDrawer_section2_6', 
                        self.options.sectionHeight_2_6 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection2_6Group', 
                        self.drawerSection2_6Group, 
                        self.options.sectionHeight_2_6, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_6', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 / 2 - 1, 
                        'handle_doordoorDrawer_section2_6', 
                        self.options.sectionHeight_2_6 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )   
                } 
    

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S2_6").style.display = "none";
                document.getElementById("MainShoeShelving_S2_6").style.display = "none";
    
                self.options.s2_6_doorStatus = 5;
                self.updateDoorButtons();
    
            };
            //remove/empty door S2_6
            document.getElementById("DoorEmpty_SectionS2_6").addEventListener('click', function() { createEmpty_S2_6() });
    
            function createEmpty_S2_6() {    
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
    
                self.calculateOutput();
    
                self.options.s2_6_doorStatus = 1;
                self.updateDoorButtons();
    
            };


            //DOORS S2_7
            document.getElementById("DoorLeft_SectionS2_7").addEventListener('click', function() { 
                if (self.options.LeftDoor_S2_7_status == true) {
                    createDoorLeft_S2_7()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
            function createDoorLeft_S2_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_7Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor('doorSection2_7Group', 
                    self.doorSection2_7Group, 
                    self.options.sectionHeight_2_7, 
                    self.options.section2Length, 
                    'doorType1Section2_7', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 / 2 - 1, 
                    'handle_doorsection2_7', 
                    self.options.sectionHeight_2_7 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection2_7Group', 
                    self.doorSection2_7Group, 
                    self.options.sectionHeight_2_7, 
                    self.options.section2Length - self.options.pillar.thickness, 
                    'doorType1Section2_7', 
                    self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 / 2 - 1, 
                    'handle_doorsection2_7', 
                    self.options.sectionHeight_2_7 / 2 - 8, 
                    self.options.section2Length - self.options.shelf.thickness * 2 - 2.6)  
                } 
                

                self.calculateOutput();
    
                self.options.s2_7_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS2_7").addEventListener('click', function() { 
                if (self.options.RightDoor_S2_7_status == true) {
                    createDoorRight_S2_7()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S2_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_7Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'doorSection2_7Group', 
                        self.doorSection2_7Group, 
                        self.options.sectionHeight_2_7, 
                        self.options.section2Length, 
                        'doorSection2_7', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 / 2 - 1,
                        'handle_doorsection2_7', 
                        self.options.sectionHeight_2_7 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection2_7Group', 
                        self.doorSection2_7Group, 
                        self.options.sectionHeight_2_7, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_7', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 / 2 - 1,
                        'handle_doorsection2_7', 
                        self.options.sectionHeight_2_7 / 2 - 8, 
                        6
                    )   
                } 
                
                self.calculateOutput();
    
                self.options.s2_7_doorStatus = 2;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S2_7").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S2_7_status == true) {
                    createDoubleDoor_S2_7()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S2_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_7Group'))
                
                if (self.options.amountOfSections === 2 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_7Group', 
                        self.doorSection2_7Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_7, 
                        self.options.section2Length, 
                        'doorType3LeftSection2_7', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_7', 
                        self.options.sectionHeight_2_7 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_7, 
                        self.options.section2Length,
                        'doorType3RightSection2_7', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_7', 
                        self.options.sectionHeight_2_7 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection2_7Group', 
                        self.doorSection2_7Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_2_7, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorType3LeftSection2_7', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section2_7', 
                        self.options.sectionHeight_2_7 / 2 - 8, 
                        self.options.section2Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_2_7, 
                        self.options.section2Length - self.options.pillar.thickness,
                        'doorType3RightSection2_7', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section2_7', 
                        self.options.sectionHeight_2_7 / 2 - 8,  
                        self.options.section2Length /2 - 5,
                    )   
                } 

                self.calculateOutput();
    
                self.options.s2_7_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            document.getElementById("Drawer_SectionS2_7").addEventListener('click', function() { 
                if (self.options.Drawer_S2_7_status == true) {
                    createDrawer_S2_7();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });      
            function createDrawer_S2_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_7Group'))
    
                if (self.options.amountOfSections === 2 ) {
                    createDoor(
                        'drawerSection2_7Group', 
                        self.drawerSection2_7Group, 
                        self.options.sectionHeight_2_7, 
                        self.options.section2Length, 
                        'doorSection2_7', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 / 2 - 1, 
                        'handle_doordoorDrawer_section2_7', 
                        self.options.sectionHeight_2_7 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection2_7Group', 
                        self.drawerSection2_7Group, 
                        self.options.sectionHeight_2_7, 
                        self.options.section2Length - self.options.pillar.thickness, 
                        'doorSection2_7', 
                        self.scene.getObjectByName( "pillar1", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 / 2 - 1, 
                        'handle_doordoorDrawer_section2_7', 
                        self.options.sectionHeight_2_7 / 2 - 8, 
                        self.options.section2Length / 2 - 1.5
                    )   
                } 
    

                self.calculateOutput();

                self.options.s2_7_doorStatus = 5;
                self.updateDoorButtons();
    
            };
            //remove/empty door S2_7
            document.getElementById("DoorEmpty_SectionS2_7").addEventListener('click', function() { createEmpty_S2_7() });
    
            function createEmpty_S2_7() {    
    
                self.scene.remove(self.scene.getObjectByName('doorSection2_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection2_7Group'))
    
                self.calculateOutput();
    
                self.options.s2_7_doorStatus = 1;
                self.updateDoorButtons();
    
            };


            
    
    
    
    
    
            //DOORS S3
            document.getElementById("DoorLeft_S3_1").addEventListener('click', function() { 
                if (self.options.LeftDoor_S3_status == true) {
                    createDoorLeft_S3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
            function createDoorLeft_S3() {  
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_1Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor('doorSection3_1Group', 
                    self.doorSection3_1Group, 
                    self.options.sectionHeight_3_1, 
                    self.options.section3Length, 
                    'doorType1Section3_1', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y, 
                    'handle_doorsection3_1', 
                    self.options.sectionHeight_3_1 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection3_1Group', 
                    self.doorSection3_1Group, 
                    self.options.sectionHeight_3_1, 
                    self.options.section3Length - self.options.pillar.thickness, 
                    'doorType1Section3_1', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y, 
                    'handle_doorsection3_1', 
                    self.options.sectionHeight_3_1 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } 
    
    
                self.calculateOutput();
    
                self.options.s3_1_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_S3_1").addEventListener('click', function() { 
                if (self.options.RightDoor_S3_status == true) {
                    createDoorRight_S3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            }); 
            function createDoorRight_S3() {  
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_1Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'doorSection3_1Group', 
                        self.doorSection3_1Group, 
                        self.options.sectionHeight_3_1, 
                        self.options.section3Length, 
                        'doorType1Section3_1', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y, 
                        'handle_doorsection3_1', 
                        self.options.sectionHeight_3_1 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection3_1Group', 
                        self.doorSection3_1Group, 
                        self.options.sectionHeight_3_1, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType1Section3_1', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y, 
                        'handle_doorsection3_1', 
                        self.options.sectionHeight_3_1 / 2 - 8, 
                        6
                    )
                } 
    

                self.calculateOutput();
    
                self.options.s3_1_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_Section3_1").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S3_status == true) {
                    createDoubleDoor_S3()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S3() {  
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_1Group'))
    
    
                if (self.options.amountOfSections === 3 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_1Group', 
                        self.doorSection3_1Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_1, 
                        self.options.section3Length, 
                        'doorType3LeftSection3_1', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_1', 
                        self.options.sectionHeight_3_1 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_1, 
                        self.options.section3Length,
                        'doorType3RightSection3_1', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_1', 
                        self.options.sectionHeight_3_1 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_1Group', 
                        self.doorSection3_1Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_1, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType3LeftSection3_1', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_1', 
                        self.options.sectionHeight_3_1 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_1, 
                        self.options.section3Length - self.options.pillar.thickness,
                        'doorType3RightSection3_1', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_1', 
                        self.options.sectionHeight_3_1 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                } 
    
      
                self.calculateOutput();
    
                self.options.s3_1_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_S3_1").addEventListener('click', function() { 
                if (self.options.Drawer_S3_status == true) {
                    createDrawer_S3();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });    
            function createDrawer_S3() {  
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_1Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'drawerSection3_1Group', 
                        self.drawerSection3_1Group, 
                        self.options.sectionHeight_3_1, 
                        self.options.section3Length, 
                        'doorSection3_1', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y, 
                        'handle_doordoorDrawer_section3_1', 
                        self.options.sectionHeight_3_1 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection3_1Group', 
                        self.drawerSection3_1Group, 
                        self.options.sectionHeight_3_1, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorSection3_1', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y, 
                        'handle_doordoorDrawer_section3_1', 
                        self.options.sectionHeight_3_1 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                } 
    
                document.getElementById("MainInternalShelving_S3_1").style.display = "none";  
                document.getElementById("MainShoeShelving_S3_1").style.display = "none";          

                self.calculateOutput();
    
                self.options.s3_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            //remove/empty door S3
            document.getElementById("DoorEmpty_Section3_1").addEventListener('click', function() { createEmpty_S3() });
    
            function createEmpty_S3() { 
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_1Group'))
    
                self.calculateOutput();
    
                self.options.s3_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
    
    
            //DOORS S3_2
            document.getElementById("DoorLeft_S3_2").addEventListener('click', function() { 
                if (self.options.LeftDoor_S3_2_status == true) {
                    createDoorLeft_S3_2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
            function createDoorLeft_S3_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor('doorSection3_2Group', 
                    self.doorSection3_2Group, 
                    self.options.sectionHeight_3_2, 
                    self.options.section3Length, 
                    'doorType1Section3_2', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 / 2 - 1, 
                    'handle_doorsection3_2', 
                    self.options.sectionHeight_3_2 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection3_2Group', 
                    self.doorSection3_2Group, 
                    self.options.sectionHeight_3_2, 
                    self.options.section3Length - self.options.pillar.thickness, 
                    'doorType1Section3_2', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 / 2 - 1, 
                    'handle_doorsection3_2', 
                    self.options.sectionHeight_3_2 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)  
                } 
    

                self.calculateOutput();
    
                self.options.s3_2_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_S3_2").addEventListener('click', function() { 
                if (self.options.RightDoor_S3_2_status == true) {
                    createDoorRight_S3_2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });   
            function createDoorRight_S3_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'doorSection3_2Group', 
                        self.doorSection3_2Group, 
                        self.options.sectionHeight_3_2, 
                        self.options.section3Length, 
                        'doorType1Section3_2', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 / 2 - 1,
                        'handle_doorsection3_2', 
                        self.options.sectionHeight_3_2 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection3_2Group', 
                        self.doorSection3_2Group, 
                        self.options.sectionHeight_3_2, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType1Section3_2', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 / 2 - 1,
                        'handle_doorsection3_2', 
                        self.options.sectionHeight_3_2 / 2 - 8, 
                        6
                    ) 
                } 
    

                self.calculateOutput();
    
                self.options.s3_2_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S3_2").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S3_2_status == true) {
                    createDoubleDoor_S3_2()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
    
            function createDoubleDoor_S3_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
                
                if (self.options.amountOfSections === 3 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_2Group', 
                        self.doorSection3_2Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_2, 
                        self.options.section3Length, 
                        'doorType3LeftSection3_2', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_2', 
                        self.options.sectionHeight_3_2 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_2, 
                        self.options.section3Length,
                        'doorType3RightSection3_2', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_2', 
                        self.options.sectionHeight_3_2 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_2Group', 
                        self.doorSection3_2Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_2, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType3LeftSection3_2', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_2', 
                        self.options.sectionHeight_3_2 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_2, 
                        self.options.section3Length - self.options.pillar.thickness,
                        'doorType3RightSection3_2', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_2', 
                        self.options.sectionHeight_3_2 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                }
    

                self.calculateOutput();
    
                self.options.s3_2_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_S3_2").addEventListener('click', function() { 
                if (self.options.Drawer_S3_2_status == true) {
                    createDrawer_S3_2();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });    
            function createDrawer_S3_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'drawerSection3_2Group', 
                        self.drawerSection3_2Group, 
                        self.options.sectionHeight_3_2, 
                        self.options.section3Length, 
                        'doorSection3_2', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 / 2 - 1, 
                        'handle_doordoorDrawer_section3_2', 
                        self.options.sectionHeight_3_2 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection3_2Group', 
                        self.drawerSection3_2Group, 
                        self.options.sectionHeight_3_2, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorSection3_2', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 / 2 - 1, 
                        'handle_doordoorDrawer_section3_2', 
                        self.options.sectionHeight_3_2 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                }
    
                document.getElementById("MainInternalShelving_S3_2").style.display = "none";  
                document.getElementById("MainShoeShelving_S3_2").style.display = "none";  

                self.calculateOutput();
    
                self.options.s3_2_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            //remove/empty door S3_2
            document.getElementById("DoorEmpty_SectionS3_2").addEventListener('click', function() { createEmpty_S3_2() });
    
            function createEmpty_S3_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
    

                self.calculateOutput();
    
                self.options.s3_2_doorStatus = 1;
                self.updateDoorButtons();
    
    
            };
     
           
    
    
            //DOORS S3_3
            document.getElementById("DoorLeft_SectionS3_3").addEventListener('click', function() { 
                if (self.options.LeftDoor_S3_3_status == true) {
                    createDoorLeft_S3_3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
            function createDoorLeft_S3_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor('doorSection3_3Group', 
                    self.doorSection3_3Group, 
                    self.options.sectionHeight_3_3, 
                    self.options.section3Length, 
                    'doorType1Section3_3', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 / 2 - 1, 
                    'handle_doorsection3_3', 
                    self.options.sectionHeight_3_3 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection3_3Group', 
                    self.doorSection3_3Group, 
                    self.options.sectionHeight_3_3, 
                    self.options.section3Length - self.options.pillar.thickness, 
                    'doorType1Section3_3', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 / 2 - 1, 
                    'handle_doorsection3_3', 
                    self.options.sectionHeight_3_3 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                }
    

                self.calculateOutput();
    
                self.options.s3_3_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS3_3").addEventListener('click', function() { 
                if (self.options.RightDoor_S3_3_status == true) {
                    createDoorRight_S3_3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S3_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'doorSection3_3Group', 
                        self.doorSection3_3Group, 
                        self.options.sectionHeight_3_3, 
                        self.options.section3Length, 
                        'doorType1Section3_3', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 / 2 - 1,
                        'handle_doorsection3_3', 
                        self.options.sectionHeight_3_3 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection3_3Group', 
                        self.doorSection3_3Group, 
                        self.options.sectionHeight_3_3, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType1Section3_3', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 / 2 - 1,
                        'handle_doorsection3_3', 
                        self.options.sectionHeight_3_3 / 2 - 8, 
                        6
                    )
                }
    

                self.calculateOutput();
    
                self.options.s3_3_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S3_3").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S3_3_status == true) {
                    createDoubleDoor_S3_3()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S3_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_3Group', 
                        self.doorSection3_3Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_3, 
                        self.options.section3Length, 
                        'doorType3LeftSection3_3', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_3', 
                        self.options.sectionHeight_3_3 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_3, 
                        self.options.section3Length,
                        'doorType3RightSection3_3', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_3', 
                        self.options.sectionHeight_3_3 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_3Group', 
                        self.doorSection3_3Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_3, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType3LeftSection3_3', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_3', 
                        self.options.sectionHeight_3_3 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_3, 
                        self.options.section3Length - self.options.pillar.thickness,
                        'doorType3RightSection3_3', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_3', 
                        self.options.sectionHeight_3_3 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                }
    
    
                self.calculateOutput();
    
                self.options.s3_3_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            document.getElementById("Drawer_SectionS3_3").addEventListener('click', function() { 
                if (self.options.Drawer_S3_3_status == true) {
                    createDrawer_S3_3();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });    
            function createDrawer_S3_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'drawerSection3_3Group', 
                        self.drawerSection3_3Group, 
                        self.options.sectionHeight_3_3, 
                        self.options.section3Length, 
                        'doorSection3_3', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 / 2 - 1, 
                        'handle_doordoorDrawer_section3_3', 
                        self.options.sectionHeight_3_3 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection3_3Group', 
                        self.drawerSection3_3Group, 
                        self.options.sectionHeight_3_3, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorSection3_3', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 / 2 - 1, 
                        'handle_doordoorDrawer_section3_3', 
                        self.options.sectionHeight_3_3 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                }
    
                document.getElementById("MainInternalShelving_S3_2").style.display = "none";  
                document.getElementById("MainShoeShelving_S3_2").style.display = "none";    

                self.calculateOutput();
    

                self.options.s3_3_doorStatus = 5;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S3_3
            document.getElementById("DoorEmpty_SectionS3_3").addEventListener('click', function() { createEmpty_S3_3() });
    
            function createEmpty_S3_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
    
                self.calculateOutput();
    
                self.options.s3_3_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    

    
    
            //DOORS S3_4
            document.getElementById("DoorLeft_SectionS3_4").addEventListener('click', function() { 
                if (self.options.LeftDoor_S3_4_status == true) {
                    createDoorLeft_S3_4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });   
            function createDoorLeft_S3_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor('doorSection3_4Group', 
                    self.doorSection3_4Group, 
                    self.options.sectionHeight_3_4, 
                    self.options.section3Length, 
                    'doorType1Section3_4', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 / 2 - 1, 
                    'handle_doorsection3_4', 
                    self.options.sectionHeight_3_4 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection3_4Group', 
                    self.doorSection3_4Group, 
                    self.options.sectionHeight_3_4, 
                    self.options.section3Length - self.options.pillar.thickness, 
                    'doorType1Section3_4', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 / 2 - 1, 
                    'handle_doorsection3_4', 
                    self.options.sectionHeight_3_4 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } 
                

                self.calculateOutput();
    
                self.options.s3_4_doorStatus = 2;
                self.updateDoorButtons();
    
            };
     
            document.getElementById("DoorRight_SectionS3_4").addEventListener('click', function() { 
                if (self.options.RightDoor_S3_4_status == true) {
                    createDoorRight_S3_4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            }); 
            function createDoorRight_S3_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'doorSection3_4Group', 
                        self.doorSection3_4Group, 
                        self.options.sectionHeight_3_4, 
                        self.options.section3Length, 
                        'doorType1Section3_4', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 / 2 - 1,
                        'handle_doorsection3_4', 
                        self.options.sectionHeight_3_4 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection3_4Group', 
                        self.doorSection3_4Group, 
                        self.options.sectionHeight_3_4, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType1Section3_4', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 / 2 - 1,
                        'handle_doorsection3_4', 
                        self.options.sectionHeight_3_4 / 2 - 8, 
                        6
                    )
                } 
    

                self.calculateOutput();
    
                self.options.s3_4_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S3_4").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S3_4_status == true) {
                    createDoubleDoor_S3_4()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });  
            function createDoubleDoor_S3_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_4Group', 
                        self.doorSection3_4Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_4, 
                        self.options.section3Length, 
                        'doorType3LeftSection3_4', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_4', 
                        self.options.sectionHeight_3_4 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_4, 
                        self.options.section3Length,
                        'doorType3RightSection3_4', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_4', 
                        self.options.sectionHeight_3_4 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_4Group', 
                        self.doorSection3_4Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_4, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType3LeftSection3_4', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_4', 
                        self.options.sectionHeight_3_4 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_4, 
                        self.options.section3Length - self.options.pillar.thickness,
                        'doorType3RightSection3_4', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_4', 
                        self.options.sectionHeight_3_4 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                }
    
            
                self.calculateOutput();
    
                self.options.s3_4_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS3_4").addEventListener('click', function() { 
                if (self.options.Drawer_S3_4_status == true) {
                    createDrawer_S3_4();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });    
            function createDrawer_S3_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'drawerSection3_4Group', 
                        self.drawerSection3_4Group, 
                        self.options.sectionHeight_3_4, 
                        self.options.section3Length, 
                        'doorSection3_4', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 / 2 - 1, 
                        'handle_doordoorDrawer_section3_4', 
                        self.options.sectionHeight_3_4 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection3_4Group', 
                        self.drawerSection3_4Group, 
                        self.options.sectionHeight_3_4, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorSection3_4', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 / 2 - 1, 
                        'handle_doordoorDrawer_section3_4', 
                        self.options.sectionHeight_3_4 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                }
    
                self.calculateOutput();

                document.getElementById("MainInternalShelving_S3_4").style.display = "none";  
                document.getElementById("MainShoeShelving_S3_4").style.display = "none";  
    
                self.options.s3_4_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            //remove/empty door S3_4
            document.getElementById("DoorEmpty_SectionS3_4").addEventListener('click', function() { createEmpty_S3_4() });
    
            function createEmpty_S3_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
    

                self.calculateOutput();
    
                self.options.s3_4_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    

    
            //DOORS S3_5
            document.getElementById("DoorLeft_SectionS3_5").addEventListener('click', function() { 
                if (self.options.LeftDoor_S3_5_status == true) {
                    createDoorLeft_S3_5()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });    
            function createDoorLeft_S3_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor('doorSection3_5Group', 
                    self.doorSection3_5Group, 
                    self.options.sectionHeight_3_5, 
                    self.options.section3Length, 
                    'doorType1Section3_5', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 / 2 - 1, 
                    'handle_doorsection3_5', 
                    self.options.sectionHeight_3_5 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection3_5Group', 
                    self.doorSection3_5Group, 
                    self.options.sectionHeight_3_5, 
                    self.options.section3Length - self.options.pillar.thickness, 
                    'doorType1Section3_5', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 / 2 - 1, 
                    'handle_doorsection3_5', 
                    self.options.sectionHeight_3_5 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } 
                

                self.calculateOutput();
    
                self.options.s3_5_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS3_5").addEventListener('click', function() { 
                if (self.options.RightDoor_S3_5_status == true) {
                    createDoorRight_S3_5()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });   
            function createDoorRight_S3_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'doorSection3_5Group', 
                        self.doorSection3_5Group, 
                        self.options.sectionHeight_3_5, 
                        self.options.section3Length, 
                        'doorType1Section3_5', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 / 2 - 1,
                        'handle_doorsection3_5', 
                        self.options.sectionHeight_3_5 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection3_5Group', 
                        self.doorSection3_5Group, 
                        self.options.sectionHeight_3_5, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType1Section3_5', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 / 2 - 1,
                        'handle_doorsection3_5', 
                        self.options.sectionHeight_3_5 / 2 - 8, 
                        6
                    )
                } 
    

                self.calculateOutput();
    
                self.options.s3_5_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S3_5").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S3_5_status == true) {
                    createDoubleDoor_S3_5()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });   
            function createDoubleDoor_S3_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_5Group', 
                        self.doorSection3_5Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_5, 
                        self.options.section3Length, 
                        'doorType3LeftSection3_5', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_5', 
                        self.options.sectionHeight_3_5 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_5, 
                        self.options.section3Length,
                        'doorType3RightSection3_5', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_5', 
                        self.options.sectionHeight_3_5 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_5Group', 
                        self.doorSection3_5Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_5, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType3LeftSection3_5', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_5', 
                        self.options.sectionHeight_3_5 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_5, 
                        self.options.section3Length - self.options.pillar.thickness,
                        'doorType3RightSection3_5', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_5', 
                        self.options.sectionHeight_3_5 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                }
    
            
                self.calculateOutput();
    
                self.options.s3_5_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            document.getElementById("Drawer_SectionS3_5").addEventListener('click', function() { 
                if (self.options.Drawer_S3_5_status == true) {
                    createDrawer_S3_5();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });    
            function createDrawer_S3_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'drawerSection3_5Group', 
                        self.drawerSection3_5Group, 
                        self.options.sectionHeight_3_5, 
                        self.options.section3Length, 
                        'doorSection3_5', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 / 2 - 1, 
                        'handle_doordoorDrawer_section3_5', 
                        self.options.sectionHeight_3_5 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection3_5Group', 
                        self.drawerSection3_5Group, 
                        self.options.sectionHeight_3_5, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorSection3_5', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 / 2 - 1, 
                        'handle_doordoorDrawer_section3_5', 
                        self.options.sectionHeight_3_5 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                }
    
                self.calculateOutput();

                document.getElementById("MainInternalShelving_S3_5").style.display = "none";  
                document.getElementById("MainShoeShelving_S3_5").style.display = "none";  
    
                self.options.s3_5_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            //remove/empty door S3_5
            document.getElementById("DoorEmpty_SectionS3_5").addEventListener('click', function() { createEmpty_S3_5() });
    
            function createEmpty_S3_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
    

                self.calculateOutput();
    
                self.options.s3_5_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    

            //DOORS S3_6
            document.getElementById("DoorLeft_SectionS3_6").addEventListener('click', function() { 
                if (self.options.LeftDoor_S3_6_status == true) {
                    createDoorLeft_S3_6()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });    
            function createDoorLeft_S3_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor('doorSection3_6Group', 
                    self.doorSection3_6Group, 
                    self.options.sectionHeight_3_6, 
                    self.options.section3Length, 
                    'doorType1Section3_6', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 / 2 - 1, 
                    'handle_doorsection3_6', 
                    self.options.sectionHeight_3_6 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection3_6Group', 
                    self.doorSection3_6Group, 
                    self.options.sectionHeight_3_6, 
                    self.options.section3Length - self.options.pillar.thickness, 
                    'doorType1Section3_6', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 / 2 - 1, 
                    'handle_doorsection3_6', 
                    self.options.sectionHeight_3_6 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } 
                

                self.calculateOutput();
    
                self.options.s3_6_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS3_6").addEventListener('click', function() { 
                if (self.options.RightDoor_S3_6_status == true) {
                    createDoorRight_S3_6()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });   
            function createDoorRight_S3_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'doorSection3_6Group', 
                        self.doorSection3_6Group, 
                        self.options.sectionHeight_3_6, 
                        self.options.section3Length, 
                        'doorType1Section3_6', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 / 2 - 1,
                        'handle_doorsection3_6', 
                        self.options.sectionHeight_3_6 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection3_6Group', 
                        self.doorSection3_6Group, 
                        self.options.sectionHeight_3_6, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType1Section3_6', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 / 2 - 1,
                        'handle_doorsection3_6', 
                        self.options.sectionHeight_3_6 / 2 - 8, 
                        6
                    )
                } 
    

                self.calculateOutput();
    
                self.options.s3_6_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S3_6").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S3_6_status == true) {
                    createDoubleDoor_S3_6()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });   
            function createDoubleDoor_S3_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_6Group', 
                        self.doorSection3_6Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_6, 
                        self.options.section3Length, 
                        'doorType3LeftSection3_6', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_6', 
                        self.options.sectionHeight_3_6 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_6, 
                        self.options.section3Length,
                        'doorType3RightSection3_6', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_6', 
                        self.options.sectionHeight_3_6 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_6Group', 
                        self.doorSection3_6Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_6, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType3LeftSection3_6', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_6', 
                        self.options.sectionHeight_3_6 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_6, 
                        self.options.section3Length - self.options.pillar.thickness,
                        'doorType3RightSection3_6', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_6', 
                        self.options.sectionHeight_3_6 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                }
    
            
                self.calculateOutput();
    
                self.options.s3_6_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            document.getElementById("Drawer_SectionS3_6").addEventListener('click', function() { 
                if (self.options.Drawer_S3_6_status == true) {
                    createDrawer_S3_6();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            }); 
            function createDrawer_S3_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'drawerSection3_6Group', 
                        self.drawerSection3_6Group, 
                        self.options.sectionHeight_3_6, 
                        self.options.section3Length, 
                        'doorSection3_6', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 / 2 - 1, 
                        'handle_doordoorDrawer_section3_6', 
                        self.options.sectionHeight_3_6 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection3_6Group', 
                        self.drawerSection3_6Group, 
                        self.options.sectionHeight_3_6, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorSection3_6', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 / 2 - 1, 
                        'handle_doordoorDrawer_section3_6', 
                        self.options.sectionHeight_3_6 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                }
    
                self.calculateOutput();

                document.getElementById("MainInternalShelving_S3_6").style.display = "none";  
                document.getElementById("MainShoeShelving_S3_6").style.display = "none";  

                self.options.s3_6_doorStatus = 5;
                self.updateDoorButtons();
    
            };
            //remove/empty door S3_6
            document.getElementById("DoorEmpty_SectionS3_6").addEventListener('click', function() { createEmpty_S3_6() });
    
            function createEmpty_S3_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
    
                self.calculateOutput();
                self.options.s3_6_doorStatus = 1;
                self.updateDoorButtons();
    
            };


            //DOORS S3_7
            document.getElementById("DoorLeft_SectionS3_7").addEventListener('click', function() { 
                if (self.options.LeftDoor_S3_7_status == true) {
                    createDoorLeft_S3_7()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });    
            function createDoorLeft_S3_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_7Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor('doorSection3_7Group', 
                    self.doorSection3_7Group, 
                    self.options.sectionHeight_3_7, 
                    self.options.section3Length, 
                    'doorType1Section3_7', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 / 2 - 1, 
                    'handle_doorsection3_7', 
                    self.options.sectionHeight_3_7 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } else{
                    createDoor('doorSection3_7Group', 
                    self.doorSection3_7Group, 
                    self.options.sectionHeight_3_7, 
                    self.options.section3Length - self.options.pillar.thickness, 
                    'doorType1Section3_7', 
                    self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 / 2 - 1, 
                    'handle_doorsection3_7', 
                    self.options.sectionHeight_3_7 / 2 - 8, 
                    self.options.section3Length - self.options.shelf.thickness * 2 - 2.6)
                } 
                

                self.calculateOutput();
    
                self.options.s3_7_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS3_7").addEventListener('click', function() { 
                if (self.options.RightDoor_S3_7_status == true) {
                    createDoorRight_S3_7()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });   
            function createDoorRight_S3_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_7Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'doorSection3_7Group', 
                        self.doorSection3_7Group, 
                        self.options.sectionHeight_3_7, 
                        self.options.section3Length, 
                        'doorType1Section3_7', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 / 2 - 1,
                        'handle_doorsection3_7', 
                        self.options.sectionHeight_3_7 / 2 - 8, 
                        6
                    )
                } else{
                    createDoor(
                        'doorSection3_7Group', 
                        self.doorSection3_7Group, 
                        self.options.sectionHeight_3_7, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType1Section3_7', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 / 2 - 1,
                        'handle_doorsection3_7', 
                        self.options.sectionHeight_3_7 / 2 - 8, 
                        6
                    )
                } 
    

                self.calculateOutput();
    
                self.options.s3_7_doorStatus = 3;
                self.updateDoorButtons();
    
            };

            document.getElementById("DoubleDoor_S3_7").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S3_7_status == true) {
                    createDoubleDoor_S3_7()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });   
            function createDoubleDoor_S3_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_7Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_7Group', 
                        self.doorSection3_7Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_7, 
                        self.options.section3Length, 
                        'doorType3LeftSection3_7', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_7', 
                        self.options.sectionHeight_3_7 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_7, 
                        self.options.section3Length,
                        'doorType3RightSection3_7', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_7', 
                        self.options.sectionHeight_3_7 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                } else{
                    createDoubleDoor(
                        //groupid, groupname
                        'doorSection3_7Group', 
                        self.doorSection3_7Group, 
        
                        // doorHeight_1, doorWidth_1, doorName_1                
                        self.options.sectionHeight_3_7, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorType3LeftSection3_7', 
        
                        // groupPositionX, groupPositionY, 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1, 
                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 / 2 - 1, 
        
                        //handleName_1, handlePosTop_1, handlePosSides_1,
                        'handle_doorLeft_section3_7', 
                        self.options.sectionHeight_3_7 / 2 - 8, 
                        self.options.section3Length / 2 + 5,
        
                        //doorHeight_2, doorWidth_2, doorName_2
                        self.options.sectionHeight_3_7, 
                        self.options.section3Length - self.options.pillar.thickness,
                        'doorType3RightSection3_7', 
        
                        //handleName_2, handlePosTop_2, handlePosSides_2
                        'handle_doorRight_section3_7', 
                        self.options.sectionHeight_3_7 / 2 - 8,  
                        self.options.section3Length /2 - 5,
                    )
                }
    
            
                self.calculateOutput();
    
                self.options.s3_7_doorStatus = 4;
                self.updateDoorButtons();
    
            };

            document.getElementById("Drawer_SectionS3_7").addEventListener('click', function() { 
                if (self.options.Drawer_S3_7_status == true) {
                    createDrawer_S3_7();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            }); 
            function createDrawer_S3_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_7Group'))
    
                if (self.options.amountOfSections === 3 ) {
                    createDoor(
                        'drawerSection3_7Group', 
                        self.drawerSection3_7Group, 
                        self.options.sectionHeight_3_7, 
                        self.options.section3Length, 
                        'doorSection3_7', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 / 2 - 1, 
                        'handle_doordoorDrawer_section3_7', 
                        self.options.sectionHeight_3_7 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                } else{
                    createDoor(
                        'drawerSection3_7Group', 
                        self.drawerSection3_7Group, 
                        self.options.sectionHeight_3_7, 
                        self.options.section3Length - self.options.pillar.thickness, 
                        'doorSection3_7', 
                        self.scene.getObjectByName( "pillar2", true ).position.x + 1,
                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 / 2 - 1, 
                        'handle_doordoorDrawer_section3_7', 
                        self.options.sectionHeight_3_7 / 2 - 8, 
                        self.options.section3Length / 2 - 1.5
                    )
                }
    
                self.calculateOutput();

                self.options.s3_7_doorStatus = 5;
                self.updateDoorButtons();
    
            };
            
            //remove/empty door S3_7
            document.getElementById("DoorEmpty_SectionS3_7").addEventListener('click', function() { createEmpty_S3_7() });
    
            function createEmpty_S3_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection3_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection3_7Group'))
    
                self.calculateOutput();
                self.options.s3_7_doorStatus = 1;
                self.updateDoorButtons();
    
            };


            
    

    
            //DOORS S4
            document.getElementById("DoorLeft_S4_1").addEventListener('click', function() { 
                if (self.options.LeftDoor_S4_status == true) {
                    createDoorLeft_S4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                }  
            });
            function createDoorLeft_S4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_1Group'))
    
                createDoor('doorSection4_1Group', 
                self.doorSection4_1Group, 
                self.options.sectionHeight_4_1, 
                self.options.section4Length, 
                'doorType1Section4_1', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y, 
                'handle_doorsection4_1', 
                self.options.sectionHeight_4_1 / 2 - 8, 
                self.options.section4Length - self.options.shelf.thickness * 2 - 2.6)
    

                self.calculateOutput();
    
                self.options.s4_1_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_S4_1").addEventListener('click', function() { 
                if (self.options.RightDoor_S4_status == true) {
                    createDoorRight_S4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorRight_S4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_1Group'))
    
                createDoor(
                'doorSection4_1Group', 
                self.doorSection4_1Group, 
                self.options.sectionHeight_4_1, 
                self.options.section4Length, 
                'doorType1Section4_1', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y, 
                'handle_doorsection4_1', 
                self.options.sectionHeight_4_1 / 2 - 8, 
                 6
                )
    
    
                self.calculateOutput();
    
                self.options.s4_1_doorStatus = 3;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_S4_1").addEventListener('click', function() { 
                if (self.options.Drawer_S4_status == true) {
                    createDrawer_S4();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });
            function createDrawer_S4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_1Group'))
    
                createDoor(
                'drawerSection4_1Group', 
                self.drawerSection4_1Group, 
                self.options.sectionHeight_4_1, 
                self.options.section4Length, 
                'doorSection4_1', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y, 
                'handle_doordoorDrawer_section4_1', 
                self.options.sectionHeight_4_1 / 2 - 8, 
                self.options.section4Length / 2 - 1.5
                )
    

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S4_1").style.display = "none";  
                document.getElementById("MainShoeShelving_S4_1").style.display = "none"; 
    
                self.options.s4_1_doorStatus = 5;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoubleDoor_Section4_1").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S4_status == true) {
                    createDoubleDoor_S4()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            }); 
            function createDoubleDoor_S4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_1Group'))
    
                createDoubleDoor(
                    //groupid, groupname
                    'doorSection4_1Group', 
                    self.doorSection4_1Group, 
    
                    // doorHeight_1, doorWidth_1, doorName_1                
                    self.options.sectionHeight_4_1, 
                    self.options.section4Length, 
                    'doorType3LeftSection4_1', 
    
                    // groupPositionX, groupPositionY, 
                    self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                    self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y, 
    
                    //handleName_1, handlePosTop_1, handlePosSides_1,
                    'handle_doorLeft_section4_1', 
                    self.options.sectionHeight_4_1 / 2 - 8, 
                    self.options.section4Length / 2 + 5,
    
                    //doorHeight_2, doorWidth_2, doorName_2
                    self.options.sectionHeight_4_1, 
                    self.options.section4Length,
                    'doorType3RightSection4_1', 
    
                    //handleName_2, handlePosTop_2, handlePosSides_2
                    'handle_doorRight_section4_1', 
                    self.options.sectionHeight_4_1 / 2 - 8,  
                    self.options.section4Length /2 - 5,
                )
    

                self.calculateOutput();
    
                self.options.s4_1_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S4
            document.getElementById("DoorEmpty_Section4_1").addEventListener('click', function() { createEmpty_S4() });
            function createEmpty_S4() {
    
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_1Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_1Group'))
    
                self.calculateOutput();
    
                self.options.s4_1_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    

    
            //DOORS S4_2
            document.getElementById("DoorLeft_S4_2").addEventListener('click', function() { 
                if (self.options.LeftDoor_S4_2_status == true) {
                    createDoorLeft_S4_2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorLeft_S4_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
    
                createDoor('doorSection4_2Group', 
                self.doorSection4_2Group, 
                self.options.sectionHeight_4_2, 
                self.options.section4Length, 
                'doorType1Section4_2', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.options.sectionHeight_4_2 / 2 - 1, 
                'handle_doorsection4_2', 
                self.options.sectionHeight_4_2 / 2 - 8, 
                self.options.section4Length - self.options.shelf.thickness * 2 - 2.6)
    
    
                self.calculateOutput();
    
                self.options.s4_2_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_S4_2").addEventListener('click', function() { 
                if (self.options.RightDoor_S4_2_status == true) {
                    createDoorRight_S4_2()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            }); 
            function createDoorRight_S4_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
    
                createDoor(
                'doorSection4_2Group', 
                self.doorSection4_2Group, 
                self.options.sectionHeight_4_2, 
                self.options.section4Length, 
                'doorType1Section4_2', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.options.sectionHeight_4_2 / 2 - 1,
                'handle_doorsection4_2', 
                self.options.sectionHeight_4_2 / 2 - 8, 
                 6
                )
    

                self.calculateOutput();
    
                self.options.s4_2_doorStatus = 3;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_S4_2").addEventListener('click', function() { 
                if (self.options.Drawer_S4_2_status == true) {
                    createDrawer_S4_2();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });
            function createDrawer_S4_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
    
                createDoor(
                'drawerSection4_2Group', 
                self.drawerSection4_2Group, 
                self.options.sectionHeight_4_2, 
                self.options.section4Length, 
                'doorSection4_2', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.options.sectionHeight_4_2 / 2 - 1, 
                'handle_doordoorDrawer_section4_2', 
                self.options.sectionHeight_4_2 / 2 - 8, 
                self.options.section4Length / 2 - 1.5
                )
    

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S4_2").style.display = "none";  
                document.getElementById("MainShoeShelving_S4_2").style.display = "none";
    
                self.options.s4_2_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            document.getElementById("DoubleDoor_S4_2").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S4_2_status == true) {
                    createDoubleDoor_S4_2()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S4_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
    
                createDoubleDoor(
                    //groupid, groupname
                    'doorSection4_2Group', 
                    self.doorSection4_2Group, 
    
                    // doorHeight_1, doorWidth_1, doorName_1                
                    self.options.sectionHeight_4_2, 
                    self.options.section4Length, 
                    'doorType4LeftSection4_2', 
    
                    // groupPositionX, groupPositionY, 
                    self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                    self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.options.sectionHeight_4_2 / 2 - 1, 
    
                    //handleName_1, handlePosTop_1, handlePosSides_1,
                    'handle_doorLeft_section4_2', 
                    self.options.sectionHeight_4_2 / 2 - 8, 
                    self.options.section4Length / 2 + 5,
    
                    //doorHeight_2, doorWidth_2, doorName_2
                    self.options.sectionHeight_4_2, 
                    self.options.section4Length,
                    'doorType4RightSection4_2', 
    
                    //handleName_2, handlePosTop_2, handlePosSides_2
                    'handle_doorRight_section4_2', 
                    self.options.sectionHeight_4_2 / 2 - 8,  
                    self.options.section4Length /2 - 5,
                )
    
    

                self.calculateOutput();
    
                self.options.s4_2_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S4_2
            document.getElementById("DoorEmpty_SectionS4_2").addEventListener('click', function() { createEmpty_S4_2() });
            function createEmpty_S4_2() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
    

                self.calculateOutput();
    
                self.options.s4_2_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
            //DOORS S4_3
            document.getElementById("DoorLeft_SectionS4_3").addEventListener('click', function() { 
                if (self.options.LeftDoor_S4_3_status == true) {
                    createDoorLeft_S4_3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorLeft_S4_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
    
                createDoor('doorSection4_3Group', 
                self.doorSection4_3Group, 
                self.options.sectionHeight_4_3, 
                self.options.section4Length, 
                'doorType1Section4_3', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.options.sectionHeight_4_3 / 2 - 1, 
                'handle_doorsection4_3', 
                self.options.sectionHeight_4_3 / 2 - 8, 
                self.options.section4Length - self.options.shelf.thickness * 2 - 2.6)
    

                self.calculateOutput();
    
                self.options.s4_3_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS4_3").addEventListener('click', function() { 
                if (self.options.RightDoor_S4_3_status == true) {
                    createDoorRight_S4_3()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S4_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
    
                createDoor(
                'doorSection4_3Group', 
                self.doorSection4_3Group, 
                self.options.sectionHeight_4_3, 
                self.options.section4Length, 
                'doorType1Section4_3', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.options.sectionHeight_4_3 / 2 - 1,
                'handle_doorsection4_3', 
                self.options.sectionHeight_4_3 / 2 - 8, 
                 6
                )
    

                self.calculateOutput();
    
                self.options.s4_3_doorStatus = 3;
                self.updateDoorButtons();
    
            };
    
    
            document.getElementById("Drawer_SectionS4_3").addEventListener('click', function() { 
                if (self.options.Drawer_S4_3_status == true) {
                    createDrawer_S4_3();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });
            function createDrawer_S4_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
    
                createDoor(
                'drawerSection4_3Group', 
                self.drawerSection4_3Group, 
                self.options.sectionHeight_4_3, 
                self.options.section4Length, 
                'doorSection4_3', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.options.sectionHeight_4_3 / 2 - 1, 
                'handle_doordoorDrawer_section4_3', 
                self.options.sectionHeight_4_3 / 2 - 8, 
                self.options.section4Length / 2 - 1.5
                )

                self.calculateOutput();
    
                document.getElementById("MainInternalShelving_S4_3").style.display = "none";  
                document.getElementById("MainShoeShelving_S4_3").style.display = "none";

                self.options.s4_3_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            document.getElementById("DoubleDoor_S4_3").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S4_3_status == true) {
                    createDoubleDoor_S4_3()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });   
            function createDoubleDoor_S4_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
    
                createDoubleDoor(
                    //groupid, groupname
                    'doorSection4_3Group', 
                    self.doorSection4_3Group, 
    
                    // doorHeight_1, doorWidth_1, doorName_1                
                    self.options.sectionHeight_4_3, 
                    self.options.section4Length, 
                    'doorType4LeftSection4_3', 
    
                    // groupPositionX, groupPositionY, 
                    self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                    self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.options.sectionHeight_4_3 / 2 - 1, 
    
                    //handleName_1, handlePosTop_1, handlePosSides_1,
                    'handle_doorLeft_section4_3', 
                    self.options.sectionHeight_4_3 / 2 - 8, 
                    self.options.section4Length / 2 + 5,
    
                    //doorHeight_2, doorWidth_2, doorName_2
                    self.options.sectionHeight_4_3, 
                    self.options.section4Length,
                    'doorType4RightSection4_3', 
    
                    //handleName_2, handlePosTop_2, handlePosSides_2
                    'handle_doorRight_section4_3', 
                    self.options.sectionHeight_4_3 / 2 - 8,  
                    self.options.section4Length /2 - 5,
                )
    

                self.calculateOutput();
    
                self.options.s4_3_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S4_3
            document.getElementById("DoorEmpty_SectionS4_3").addEventListener('click', function() { createEmpty_S4_3() });
            function createEmpty_S4_3() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
    

                self.calculateOutput();
    
                self.options.s4_3_doorStatus = 1;
                self.updateDoorButtons();
    
            };

    
    
            //DOORS S4_4
            document.getElementById("DoorLeft_SectionS4_4").addEventListener('click', function() { 
                if (self.options.LeftDoor_S4_4_status == true) {
                    createDoorLeft_S4_4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorLeft_S4_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
    
                createDoor('doorSection4_4Group', 
                self.doorSection4_4Group, 
                self.options.sectionHeight_4_4, 
                self.options.section4Length, 
                'doorType1Section4_4', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.options.sectionHeight_4_4 / 2 - 1, 
                'handle_doorsection4_4', 
                self.options.sectionHeight_4_4 / 2 - 8, 
                self.options.section4Length - self.options.shelf.thickness * 2 - 2.6)
                

                self.calculateOutput();
    
                self.options.s4_4_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS4_4").addEventListener('click', function() { 
                if (self.options.RightDoor_S4_4_status == true) {
                    createDoorRight_S4_4()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorRight_S4_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
    
                createDoor(
                'doorSection4_4Group', 
                self.doorSection4_4Group, 
                self.options.sectionHeight_4_4, 
                self.options.section4Length, 
                'doorType1Section4_4', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.options.sectionHeight_4_4 / 2 - 1,
                'handle_doorsection4_4', 
                self.options.sectionHeight_4_4 / 2 - 8, 
                 6
                )

                self.calculateOutput();
    
                self.options.s4_4_doorStatus = 3;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS4_4").addEventListener('click', function() { 
                if (self.options.Drawer_S4_4_status == true) {
                    createDrawer_S4_4();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });  
            function createDrawer_S4_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
    
                createDoor(
                'drawerSection4_4Group', 
                self.drawerSection4_4Group, 
                self.options.sectionHeight_4_4, 
                self.options.section4Length, 
                'doorSection4_4', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.options.sectionHeight_4_4 / 2 - 1, 
                'handle_doordoorDrawer_section4_4', 
                self.options.sectionHeight_4_4 / 2 - 8, 
                self.options.section4Length / 2 - 1.5
                )

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S4_4").style.display = "none";  
                document.getElementById("MainShoeShelving_S4_4").style.display = "none";
    
                self.options.s4_4_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            document.getElementById("DoubleDoor_S4_4").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S4_4_status == true) {
                    createDoubleDoor_S4_4()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            });
            function createDoubleDoor_S4_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
    
                createDoubleDoor(
                    //groupid, groupname
                    'doorSection4_4Group', 
                    self.doorSection4_4Group, 
    
                    // doorHeight_1, doorWidth_1, doorName_1                
                    self.options.sectionHeight_4_4, 
                    self.options.section4Length, 
                    'doorType4LeftSection4_4', 
    
                    // groupPositionX, groupPositionY, 
                    self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.options.sectionHeight_4_4 / 2 - 1, 
    
                    //handleName_1, handlePosTop_1, handlePosSides_1,
                    'handle_doorLeft_section4_4', 
                    self.options.sectionHeight_4_4 / 2 - 8, 
                    self.options.section4Length / 2 + 5,
    
                    //doorHeight_2, doorWidth_2, doorName_2
                    self.options.sectionHeight_4_4, 
                    self.options.section4Length,
                    'doorType4RightSection4_4', 
    
                    //handleName_2, handlePosTop_2, handlePosSides_2
                    'handle_doorRight_section4_4', 
                    self.options.sectionHeight_4_4 / 2 - 8,  
                    self.options.section4Length /2 - 5,
                )

                self.calculateOutput();
    
                self.options.s4_4_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S4_4
            document.getElementById("DoorEmpty_SectionS4_4").addEventListener('click', function() { createEmpty_S4_4() });
            function createEmpty_S4_4() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
    

                self.calculateOutput();
    
                self.options.s4_4_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
            //DOORS S4_5
            document.getElementById("DoorLeft_SectionS4_5").addEventListener('click', function() {
                if (self.options.LeftDoor_S4_5_status == true) {
                    createDoorLeft_S4_5()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorLeft_S4_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
    
                createDoor('doorSection4_5Group', 
                self.doorSection4_5Group, 
                self.options.sectionHeight_4_5, 
                self.options.section4Length, 
                'doorType1Section4_5', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + self.options.sectionHeight_4_5 / 2 - 1, 
                'handle_doorsection4_5', 
                self.options.sectionHeight_4_5 / 2 - 8, 
                self.options.section4Length - self.options.shelf.thickness * 2 - 2.6)
                

                self.calculateOutput();
    
                self.options.s4_5_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS4_5").addEventListener('click', function() { 
                if (self.options.RightDoor_S4_5_status == true) {
                    createDoorRight_S4_5()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S4_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
    
                createDoor(
                'doorSection4_5Group', 
                self.doorSection4_5Group, 
                self.options.sectionHeight_4_5, 
                self.options.section4Length, 
                'doorType1Section4_5', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + self.options.sectionHeight_4_5 / 2 - 1,
                'handle_doorsection4_5', 
                self.options.sectionHeight_4_5 / 2 - 8, 
                 6
                )

                self.calculateOutput();
    
                self.options.s4_5_doorStatus = 3;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS4_5").addEventListener('click', function() { 
                if (self.options.Drawer_S4_5_status == true) {
                    createDrawer_S4_5();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });
            function createDrawer_S4_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
    
                createDoor(
                'drawerSection4_5Group', 
                self.drawerSection4_5Group, 
                self.options.sectionHeight_4_5, 
                self.options.section4Length, 
                'doorSection4_5', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + self.options.sectionHeight_4_5 / 2 - 1, 
                'handle_doordoorDrawer_section4_5', 
                self.options.sectionHeight_4_5 / 2 - 8, 
                self.options.section4Length / 2 - 1.5
                )

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S4_5").style.display = "none";  
                document.getElementById("MainShoeShelving_S4_5").style.display = "none";
    
                self.options.s4_5_doorStatus = 5;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoubleDoor_S4_5").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S4_5_status == true) {
                    createDoubleDoor_S4_5()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            }); 
            function createDoubleDoor_S4_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
    
                createDoubleDoor(
                    //groupid, groupname
                    'doorSection4_5Group', 
                    self.doorSection4_5Group, 
    
                    // doorHeight_1, doorWidth_1, doorName_1                
                    self.options.sectionHeight_4_5, 
                    self.options.section4Length, 
                    'doorType4LeftSection4_5', 
    
                    // groupPositionX, groupPositionY, 
                    self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + self.options.sectionHeight_4_5 / 2 - 1, 
    
                    //handleName_1, handlePosTop_1, handlePosSides_1,
                    'handle_doorLeft_section4_5', 
                    self.options.sectionHeight_4_5 / 2 - 8, 
                    self.options.section4Length / 2 + 5,
    
                    //doorHeight_2, doorWidth_2, doorName_2
                    self.options.sectionHeight_4_5, 
                    self.options.section4Length,
                    'doorType4RightSection4_5', 
    
                    //handleName_2, handlePosTop_2, handlePosSides_2
                    'handle_doorRight_section4_5', 
                    self.options.sectionHeight_4_5 / 2 - 8,  
                    self.options.section4Length /2 - 5,
                )

                self.calculateOutput();
    
                self.options.s4_5_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S4_5
            document.getElementById("DoorEmpty_SectionS4_5").addEventListener('click', function() { createEmpty_S4_5() });
            function createEmpty_S4_5() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
    

                self.calculateOutput();
    
                self.options.s4_5_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
            //DOORS S4_6
            document.getElementById("DoorLeft_SectionS4_6").addEventListener('click', function() {
                if (self.options.LeftDoor_S4_6_status == true) {
                    createDoorLeft_S4_6()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorLeft_S4_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
    
                createDoor('doorSection4_6Group', 
                self.doorSection4_6Group, 
                self.options.sectionHeight_4_6, 
                self.options.section4Length, 
                'doorType1Section4_6', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + self.options.sectionHeight_4_6 / 2 - 1, 
                'handle_doorsection4_6', 
                self.options.sectionHeight_4_6 / 2 - 8, 
                self.options.section4Length - self.options.shelf.thickness * 2 - 2.6)
                

                self.calculateOutput();
    
                self.options.s4_6_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS4_6").addEventListener('click', function() { 
                if (self.options.RightDoor_S4_6_status == true) {
                    createDoorRight_S4_6()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S4_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
    
                createDoor(
                'doorSection4_6Group', 
                self.doorSection4_6Group, 
                self.options.sectionHeight_4_6, 
                self.options.section4Length, 
                'doorType1Section4_6', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + self.options.sectionHeight_4_6 / 2 - 1,
                'handle_doorsection4_6', 
                self.options.sectionHeight_4_6 / 2 - 8, 
                 6
                )

                self.calculateOutput();
    
                self.options.s4_6_doorStatus = 3;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS4_6").addEventListener('click', function() { 
                if (self.options.Drawer_S4_6_status == true) {
                    createDrawer_S4_6();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });
            function createDrawer_S4_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
    
                createDoor(
                'drawerSection4_6Group', 
                self.drawerSection4_6Group, 
                self.options.sectionHeight_4_6, 
                self.options.section4Length, 
                'doorSection4_6', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + self.options.sectionHeight_4_6 / 2 - 1, 
                'handle_doordoorDrawer_section4_6', 
                self.options.sectionHeight_4_6 / 2 - 8, 
                self.options.section4Length / 2 - 1.5
                )

                self.calculateOutput();

                document.getElementById("MainInternalShelving_S4_6").style.display = "none";  
                document.getElementById("MainShoeShelving_S4_6").style.display = "none";
    
                self.options.s4_6_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            document.getElementById("DoubleDoor_S4_6").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S4_6_status == true) {
                    createDoubleDoor_S4_6()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            }); 
            function createDoubleDoor_S4_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
    
                createDoubleDoor(
                    //groupid, groupname
                    'doorSection4_6Group', 
                    self.doorSection4_6Group, 
    
                    // doorHeight_1, doorWidth_1, doorName_1                
                    self.options.sectionHeight_4_6, 
                    self.options.section4Length, 
                    'doorType4LeftSection4_6', 
    
                    // groupPositionX, groupPositionY, 
                    self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + self.options.sectionHeight_4_6 / 2 - 1, 
    
                    //handleName_1, handlePosTop_1, handlePosSides_1,
                    'handle_doorLeft_section4_6', 
                    self.options.sectionHeight_4_6 / 2 - 8, 
                    self.options.section4Length / 2 + 5,
    
                    //doorHeight_2, doorWidth_2, doorName_2
                    self.options.sectionHeight_4_6, 
                    self.options.section4Length,
                    'doorType4RightSection4_6', 
    
                    //handleName_2, handlePosTop_2, handlePosSides_2
                    'handle_doorRight_section4_6', 
                    self.options.sectionHeight_4_6 / 2 - 8,  
                    self.options.section4Length /2 - 5,
                )

                self.calculateOutput();
    
                self.options.s4_6_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S4_6
            document.getElementById("DoorEmpty_SectionS4_6").addEventListener('click', function() { createEmpty_S4_6() });
            function createEmpty_S4_6() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_6Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
    

                self.calculateOutput();
    
                self.options.s4_6_doorStatus = 1;
                self.updateDoorButtons();
    
            };


            //DOORS S4_7
            document.getElementById("DoorLeft_SectionS4_7").addEventListener('click', function() {
                if (self.options.LeftDoor_S4_7_status == true) {
                    createDoorLeft_S4_7()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });
            function createDoorLeft_S4_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_7Group'))
    
                createDoor('doorSection4_7Group', 
                self.doorSection4_7Group, 
                self.options.sectionHeight_4_7, 
                self.options.section4Length, 
                'doorType1Section4_7', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y + self.options.sectionHeight_4_7 / 2 - 1, 
                'handle_doorsection4_7', 
                self.options.sectionHeight_4_7 / 2 - 8, 
                self.options.section4Length - self.options.shelf.thickness * 2 - 2.6)
                

                self.calculateOutput();
    
                self.options.s4_7_doorStatus = 2;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("DoorRight_SectionS4_7").addEventListener('click', function() { 
                if (self.options.RightDoor_S4_7_status == true) {
                    createDoorRight_S4_7()
                }
                else {
                    showHintPanel("Single door:<br>Width 26cm â 60cm<br>Depth 25cm â 45cm<br>Height 27cm â 90cm<br>Single doors can only be in inserted at maximum height to width ratio of 1 : 1.2. <br>Example, if height is 50cm, maximum width possible is 60cm.");
                } 
            });  
            function createDoorRight_S4_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_7Group'))
    
                createDoor(
                'doorSection4_7Group', 
                self.doorSection4_7Group, 
                self.options.sectionHeight_4_7, 
                self.options.section4Length, 
                'doorType1Section4_7', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y + self.options.sectionHeight_4_7 / 2 - 1,
                'handle_doorsection4_7', 
                self.options.sectionHeight_4_7 / 2 - 8, 
                 6
                )

                self.calculateOutput();
    
                self.options.s4_7_doorStatus = 3;
                self.updateDoorButtons();
    
            };
    
            document.getElementById("Drawer_SectionS4_7").addEventListener('click', function() { 
                if (self.options.Drawer_S4_7_status == true) {
                    createDrawer_S4_7();
                }
                else {
                    showHintPanel("Drawer: <br>Width 26cm â 79cm  <br>Depth 38cm â 45cm  <br>Height 15cm â 45cm");
                } 
            });
            function createDrawer_S4_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_7Group'))
    
                createDoor(
                'drawerSection4_7Group', 
                self.drawerSection4_7Group, 
                self.options.sectionHeight_4_7, 
                self.options.section4Length, 
                'doorSection4_7', 
                self.scene.getObjectByName( "pillar3", true ).position.x + 1,
                self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y + self.options.sectionHeight_4_7 / 2 - 1, 
                'handle_doordoorDrawer_section4_7', 
                self.options.sectionHeight_4_7 / 2 - 8, 
                self.options.section4Length / 2 - 1.5
                )

                self.calculateOutput();
    
                self.options.s4_7_doorStatus = 5;
                self.updateDoorButtons();

    
            };
    
            document.getElementById("DoubleDoor_S4_7").addEventListener('click', function() { 
                if (self.options.DoubleDoor_S4_7_status == true) {
                    createDoubleDoor_S4_7()
                }
                else {
                    showHintPanel("Double doors:<br>Width 40cm â 79cm <br>Depth 25cm â 45cm <br>Height 35cm â 90cm<br>Double doors can only be in inserted at maximum height to width ratio of 1 : 2.4. <br>Example, if height is 50cm, maximum width possible is 120cm.");
                }
            }); 
            function createDoubleDoor_S4_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_7Group'))
    
                createDoubleDoor(
                    //groupid, groupname
                    'doorSection4_7Group', 
                    self.doorSection4_7Group, 
    
                    // doorHeight_1, doorWidth_1, doorName_1                
                    self.options.sectionHeight_4_7, 
                    self.options.section4Length, 
                    'doorType4LeftSection4_7', 
    
                    // groupPositionX, groupPositionY, 
                    self.scene.getObjectByName( "pillar3", true ).position.x + 1, 
                    self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y + self.options.sectionHeight_4_7 / 2 - 1, 
    
                    //handleName_1, handlePosTop_1, handlePosSides_1,
                    'handle_doorLeft_section4_7', 
                    self.options.sectionHeight_4_7 / 2 - 8, 
                    self.options.section4Length / 2 + 5,
    
                    //doorHeight_2, doorWidth_2, doorName_2
                    self.options.sectionHeight_4_7, 
                    self.options.section4Length,
                    'doorType4RightSection4_7', 
    
                    //handleName_2, handlePosTop_2, handlePosSides_2
                    'handle_doorRight_section4_7', 
                    self.options.sectionHeight_4_7 / 2 - 8,  
                    self.options.section4Length /2 - 5,
                )

                self.calculateOutput();
    
                self.options.s4_7_doorStatus = 4;
                self.updateDoorButtons();
    
            };
    
            //remove/empty door S4_7
            document.getElementById("DoorEmpty_SectionS4_7").addEventListener('click', function() { createEmpty_S4_7() });
            function createEmpty_S4_7() {
    
                self.scene.remove(self.scene.getObjectByName('doorSection4_7Group'))
                self.scene.remove(self.scene.getObjectByName('drawerSection4_7Group'))
    

                self.calculateOutput();
    
                self.options.s4_7_doorStatus = 1;
                self.updateDoorButtons();
    
            };
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            //ð¥ there were a mist prived here 
            //functions and interface elements on top right side
    
            document.getElementById("hideDoors").addEventListener('click', function() {
                
                if (self.options.statusHideDoor == 0) {
                    self.scene.traverse(function(child) {
                            if (child instanceof THREE.Mesh) {
                                if (child.name.includes('door') || child.name.includes('Handle')) {
                                    child.visible = false
                                }
                            }
                        }
                    );
                    self.options.statusHideDoor = 1;
                    document.getElementById("hideDoorsIcon").src = "icons/doorsOff.png"
                    document.getElementsByClassName('c-button-round')[2].style.backgroundColor = "#fff"
                } else {
                    self.scene.traverse(function(child) {
                        if (child instanceof THREE.Mesh) {
                            if (child.name.includes('door') || child.name.includes('Handle')) {
                                child.visible = true
                            }
                        }
                    });
                    self.options.statusHideDoor = 0;
                    document.getElementById("hideDoorsIcon").src = "icons/doorsOn.png"
                    document.getElementsByClassName('c-button-round')[2].style.backgroundColor = "#356b4d"
                }
    
            });
    
    
    
            document.getElementById("hideRoom").addEventListener('click', function() {
            
                if (self.options.statusHideRoom == 0) {
                    self.wall.visible = false
                    self.wall2.visible = false
                    self.wall3.visible = false
                    self.floor.visible = false
                    self.human.visible = false
                    self.options.statusHideRoom = 1;
                    document.getElementById("hideRoomIcon").src = "icons/roomOff.png"
                    document.getElementsByClassName('c-button-round')[3].style.backgroundColor = "#fff"
                } else {
                    self.wall.visible = true
                    self.wall2.visible = true
                    self.wall3.visible = true
                    self.human.visible = true
                    self.floor.visible = true
                    self.options.statusHideRoom = 0;
                    document.getElementById("hideRoomIcon").src = "icons/roomon.png"
                    document.getElementsByClassName('c-button-round')[3].style.backgroundColor = "#356b4d"
                }
        
            });
    
    
            document.getElementById("hideHint").addEventListener('click', function() {
            
                if (self.options.statusHideHint === 1) {
                    HintPanel.style.display = "none";
                    self.options.statusHideHint = 0;
                    document.getElementById("hintIcon").src = "icons/hintOff.png"
                    document.getElementsByClassName('c-button-round')[4].style.backgroundColor = "#fff"
                } else {
                    HintPanel.style.display = "block";
                    self.options.statusHideHint = 1;
                    document.getElementById("hintIcon").src = "icons/hintOn.png"
                    document.getElementsByClassName('c-button-round')[4].style.backgroundColor = "#356b4d"
                }
        
            });
    
    
    
    
    
    
            document.getElementById("showDimensions").addEventListener('click', function() {
                
                if (self.options.statusShowDimensions == 0) {
                    self.createDimensions();
                    self.options.statusShowDimensions = 1;
                    document.getElementById("dimensionsIcon").src = "icons/rulerOn.png"
                    document.getElementsByClassName('c-button-round')[1].style.backgroundColor = "#356b4d"
                } else {
                    self.scene.remove(self.scene.getObjectByName('dimensionsFontGroup'));
                    self.options.statusShowDimensions = 0;
                    document.getElementById("dimensionsIcon").src = "icons/rulerOff.png"
                    document.getElementsByClassName('c-button-round')[1].style.backgroundColor = "#fff"
                } 
    
            });
    
    
    
    
    
    
            document.getElementById("resetIcon").addEventListener('click', function() {
    
                if (confirm('Are you sure you want to reset saved state and reload the app?')) {
                    self.options.shelvesCounterSection1_1 
    
    
                    location.reload();
                  return false;
                }
    
            });
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            
    
    
    
    
    
    
    
            //doors colors...
    
            document.getElementById("AntraciteGrey_Door").addEventListener('click', function() {

                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Antracite Grey";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#282d33";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 0;


                        if (child.name.includes('door')) {
                            child.material.map = self.textures[0].map;
                        }
                    }
                });
            });
            document.getElementById("Cashmere_Door").addEventListener('click', function() {

                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Cashmere";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#c1bbab";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';
                        
                        self.options.doors.texture = 1;

                        if (child.name.includes('door')) {
                            child.material.map = self.textures[1].map;
                        }
                    }
                });
            });
            document.getElementById("RoyalWhite_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Royal White";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#fbfaf8";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';
    
                        self.options.doors.texture = 2;

                        if (child.name.includes('door')) {
                            child.material.map = self.textures[2].map;
                        }
                    }
                });
            });
            document.getElementById("CubaLibre_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Cuba Libre";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#b69c8d";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';
    
                        self.options.doors.texture = 3;

                        if (child.name.includes('door')) {
                            child.material.map = self.textures[3].map;
                        }
                    }
                });
            });
            document.getElementById("Sage_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Sage";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#B6C1B0";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 4;

                        if (child.name.includes('door')) {
                            child.material.map = self.textures[4].map;
                        }
                    }
                });
            });
            document.getElementById("ZincYellow_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Zinc Yellow";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#F9E900";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 5;
                        if (child.name.includes('door')) {
                            child.material.map = self.textures[5].map;
                        }
                    }
                });
            });
            document.getElementById("RoyalBlue_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Royal Blue";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#332D37";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';
    
                        self.options.doors.texture = 6;
                        if (child.name.includes('door')) {
                            child.material.map = self.textures[6].map;
                        }
                    }
                });
            });
            document.getElementById("VulcanoBlack_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Vulcano Black";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#41403E";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 7;
                        if (child.name.includes('door')) {
                            child.material.map = self.textures[7].map;
                        }
                    }
                });
            });
            document.getElementById("Mimosa_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Mimosa";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#EBCDD5";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 8;
                        if (child.name.includes('door')) {
                            child.material.map = self.textures[8].map;
                        }
                    }
                });
            });
            document.getElementById("LightGrey_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Light Grey";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#CECDC9";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 9; 
                        if (child.name.includes('door')) {
                            child.material.map = self.textures[9].map;
                        }
                    }
                });
            });
            document.getElementById("Lagoon_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Lagoon";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#AAC0BE";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';
    
                        self.options.doors.texture = 10;

                        if (child.name.includes('door')) {
                            child.material.map = self.textures[10].map;
                        }
                    }
                });
            });
            document.getElementById("Fjord_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Fjord";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#5D686A";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 11;
                        if (child.name.includes('door')) {
                            child.material.map = self.textures[11].map;
                        }
                    }
                });
            });
            document.getElementById("Labrador_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Labrador";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#36483A";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 12;
                        
                        if (child.name.includes('door')) {
                            child.material.map = self.textures[12].map;
                        }   
                    }
                });
            });
            document.getElementById("FirenzeOvatta_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Firenze Ovatta";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#ea835f";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 13;
                        if (child.name.includes('door')) {
                            child.material.map = self.textures[13].map;
                        }
                    }
                });
            });
            document.getElementById("BiancoVanguard_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Bianco Vanguard";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/BiancoVanguard.jpg" style="width:150%; height:150%;">';
                        
                        self.options.doors.texture = 16;

                        if (child.name.includes('door')) {
                            child.material.map = self.textures[16].map.clone();

                            var doorBox = new THREE.Box3().setFromObject(child);
                            var doorWidth = doorBox.max.x - doorBox.min.x;
                            var doorHeight = doorBox.max.y - doorBox.min.y;
                            var texture = child.material.map;

                            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                            texture.repeat.x = doorWidth / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1);
                            texture.repeat.y =  doorHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
                            
                            if ( doorWidth > doorHeight) {
                                texture.rotation = THREE.MathUtils.degToRad(90);  
                            } else {
                                texture.rotation = 0;
                            }
                            child.material.needsUpdate = true;

                        }
                    }
                });
            });
            document.getElementById("CementoArtstone_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Cemento Artstone";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/CementoArtstone.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 19;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[19].map;
                            }
                        }
                    }
                );
            });  
            document.getElementById("MattoneArtstone_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Mattone Artstone";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/MattoneArtstone.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 22;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[22].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("RedOvatta_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Red Ovatta";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#95252F";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 25;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[25].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("RomeOvatta_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Rome Ovatta";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#EBB635";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 28;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[28].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("LipariOvatta_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Lipari Ovatta";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#3A373B";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 31;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[31].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("CortinaOvatta_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Cortina Ovatta";
                        document.getElementById("choosenColor_DoorIcon").style.backgroundColor = "#005173";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '';

                        self.options.doors.texture = 34;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[34].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("MilanoOak_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Milano Oak";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/MilanoOak.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 37;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[37].map.clone();
    
                                var doorBox = new THREE.Box3().setFromObject(child);
                                var doorWidth = doorBox.max.x - doorBox.min.x;
                                var doorHeight = doorBox.max.y - doorBox.min.y;
                                var texture = child.material.map;
    
                                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                                texture.repeat.x = doorWidth / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1);
                                texture.repeat.y =  doorHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
    
                                if ( doorWidth > doorHeight) {
                                    texture.rotation = THREE.MathUtils.degToRad(90);  
                                } else {
                                    texture.rotation = 0;
                                }
                                child.material.needsUpdate = true;
                            }
                        }
                    }
                );
            });
            document.getElementById("AmbassadorNoce_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Ambassador Noce";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/AmbassadorNoce.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 40;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[40].map.clone();
    
                                var doorBox = new THREE.Box3().setFromObject(child);
                                var doorWidth = doorBox.max.x - doorBox.min.x;
                                var doorHeight = doorBox.max.y - doorBox.min.y;
                                var texture = child.material.map;
    
                                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                                texture.repeat.x = doorWidth / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1);
                                texture.repeat.y =  doorHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
                                
                                if ( doorWidth > doorHeight) {
                                    texture.rotation = THREE.MathUtils.degToRad(90);  
                                } else {
                                    texture.rotation = 0;
                                }
                                child.material.needsUpdate = true;
                            }
                        }
                    }
                );
            });
            document.getElementById("ChiaroVanguard_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {

                        document.getElementById("choosenColor_Door").innerHTML = "Chiaro Vanguard ";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/ChiaroVanguard.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 43;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[43].map.clone();
    
                                var doorBox = new THREE.Box3().setFromObject(child);
                                var doorWidth = doorBox.max.x - doorBox.min.x;
                                var doorHeight = doorBox.max.y - doorBox.min.y;
                                var texture = child.material.map;
    
                                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                                texture.repeat.x = doorWidth / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1);
                                texture.repeat.y =  doorHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
                                
                                if ( doorWidth > doorHeight) {
                                    texture.rotation = THREE.MathUtils.degToRad(90);  
                                } else {
                                    texture.rotation = 0;
                                }
                                child.material.needsUpdate = true;
                            }
                        }
                    }
                );
            });
            document.getElementById("UvaVanguard_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Uva Vanguard";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/UvaVanguard.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 46;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[46].map.clone();
    
                                var doorBox = new THREE.Box3().setFromObject(child);
                                var doorWidth = doorBox.max.x - doorBox.min.x;
                                var doorHeight = doorBox.max.y - doorBox.min.y;
                                var texture = child.material.map;
    
                                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                                texture.repeat.x = doorWidth / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1);
                                texture.repeat.y =  doorHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
                                
                                if ( doorWidth > doorHeight) {
                                    texture.rotation = THREE.MathUtils.degToRad(90);  
                                } else {
                                    texture.rotation = 0;
                                }
                                child.material.needsUpdate = true;
                            }
                        }
                    }
                );
            });
            document.getElementById("SailsburyElm_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Sailsbury Elm";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/SailsburyElm.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 49;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[49].map.clone();
    
                                var doorBox = new THREE.Box3().setFromObject(child);
                                var doorWidth = doorBox.max.x - doorBox.min.x;
                                var doorHeight = doorBox.max.y - doorBox.min.y;
                                var texture = child.material.map;
    
                                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                                texture.repeat.x = doorWidth / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1);
                                texture.repeat.y =  doorHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
                                
                                if ( doorWidth > doorHeight) {
                                    texture.rotation = THREE.MathUtils.degToRad(90);  
                                } else {
                                    texture.rotation = 0;
                                }
                                child.material.needsUpdate = true;
                            }
                        }
                    }
                );
            });
            document.getElementById("NeroSherwood_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Nero Sherwood";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/NeroSherwood.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 52;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[52].map.clone();
    
                                var doorBox = new THREE.Box3().setFromObject(child);
                                var doorWidth = doorBox.max.x - doorBox.min.x;
                                var doorHeight = doorBox.max.y - doorBox.min.y;
                                var texture = child.material.map;
    
                                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                                texture.repeat.x = doorWidth / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1);
                                texture.repeat.y =  doorHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
                                
                                if ( doorWidth > doorHeight) {
                                    texture.rotation = THREE.MathUtils.degToRad(90);  
                                } else {
                                    texture.rotation = 0;
                                }
                                child.material.needsUpdate = true;
                            }
                        }
                    }
                );
            });
            document.getElementById("BiancoSherwood_Door").addEventListener('click', function() {
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                        document.getElementById("choosenColor_Door").innerHTML = "Bianco Sherwood";
                        document.getElementById("choosenColor_DoorIcon").innerHTML = '<img src="icons/BiancoSherwood.jpg" style="width:150%; height:150%;">';

                        self.options.doors.texture = 55;
                            if (child.name.includes('door')) {
                                child.material.map = self.textures[55].map.clone();
    
                                var doorBox = new THREE.Box3().setFromObject(child);
                                var doorWidth = doorBox.max.x - doorBox.min.x;
                                var doorHeight = doorBox.max.y - doorBox.min.y;
                                var texture = child.material.map;
    
                                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                                texture.repeat.x = doorWidth / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1);
                                texture.repeat.y =  doorHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
                                
                                if ( doorWidth > doorHeight) {
                                    texture.rotation = THREE.MathUtils.degToRad(90);  
                                } else {
                                    texture.rotation = 0;
                                }
                                child.material.needsUpdate = true;
                            }
                        }
                    }
                );
            });
    
    

    
            //carcass colors...  modified for shelving too
            document.getElementById("AntraciteGrey").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Antracite Grey";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#282d33";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 0;
                self.options.shelf.texture = 0;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[0].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[0].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[0].map;
                            }
                        }
                    }
                );

            });
            document.getElementById("Cashmere").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Cashmere";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#c1bbab";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 1;
                self.options.shelf.texture = 1;
                self.changeShelfTexture();
                self.changePillarTexture();
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[1].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[1].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[1].map;
                            }
                        }
                    }
                );
            });    
            document.getElementById("RoyalWhite").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Royal White";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#fbfaf8";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 2;
                self.options.shelf.texture = 2;
                self.changeShelfTexture();
                self.changePillarTexture();
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[2].map;
                            }
                        }
                    }
                    
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[2].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[2].map;
                            }
                        }
                    }
                );
            });   
            document.getElementById("CubaLibre").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Cuba Libre";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#b69c8d";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 3;
                self.options.shelf.texture = 3;
                self.changeShelfTexture();
                self.changePillarTexture();
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[3].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[3].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[3].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("Sage").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Sage";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#B6C1B0";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 4;
                self.options.shelf.texture = 4;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[4].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[4].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[4].map;
                            }
                        }
                    }
                );
    
            });
            document.getElementById("ZincYellow").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Zinc Yellow";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#F9E900";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 5;
                self.options.shelf.texture = 5;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[5].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[5].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[5].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("RoyalBlue").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Royal Blue";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#332D37";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 6;
                self.options.shelf.texture = 6;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[6].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[6].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[6].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("VulcanoBlack").addEventListener('click', function() {
                document.getElementById("choosenColor_Carcass").innerHTML = "Vulcano Black";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#41403E";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 7;
                self.options.shelf.texture = 7;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[7].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[7].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[7].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("Mimosa").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Mimosa";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#EBCDD5";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 8;
                self.options.shelf.texture = 8;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[8].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[8].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[8].map;
                            }
                        }
                    }
                );      
            });
            document.getElementById("LightGrey").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Light Grey";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#CECDC9";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 9;
                self.options.shelf.texture = 9;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[9].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[9].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[9].map;
                            }
                        }
                    }
                );
            });    
            document.getElementById("Lagoon").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Lagoon";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#AAC0BE";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 10;
                self.options.shelf.texture = 10;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[10].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[10].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[10].map;
                            }
                        }
                    }
                );
            });             
            document.getElementById("Fjord").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Fjord";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#5D686A";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 11;
                self.options.shelf.texture = 11;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[11].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[11].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[11].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("Labrador").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Labrador";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#36483A";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 12;
                self.options.shelf.texture = 12;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[12].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[12].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[12].map;
                            }
                        }
                    }
                );
            });
            document.getElementById("FirenzeOvatta").addEventListener('click', function() {
                document.getElementById("choosenColor_Carcass").innerHTML = "Firenze Ovatta";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#ea835f";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 13;
                self.options.shelf.texture = 14;
                self.changeShelfTexture();
                self.changePillarTexture();
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[14].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[15].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[14].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[14].map;
                            }
                        }
                    }
                );
    
            });   
            document.getElementById("BiancoVanguard").addEventListener('click', function() {
                document.getElementById("choosenColor_Carcass").innerHTML = "Bianco Vanguard";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/BiancoVanguard.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 16;
                self.options.shelf.texture = 17;
                self.changeShelfTexture();
                self.changePillarTexture();
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[17].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[18].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[17].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[17].map;
                            }
                        }
                    }
                );
    
    
            });     
            document.getElementById("CementoArtstone").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Cemento Artstone";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/CementoArtstone.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 19;
                self.options.shelf.texture = 20;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[20].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[21].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[20].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[20].map;
                            }
                        }
                    }
                );
            });                      
            document.getElementById("MattoneArtstone").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Mattone Artstone";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/MattoneArtstone.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 22;
                self.options.shelf.texture = 23;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[23].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[24].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[23].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[23].map;
                            }
                        }
                    }
                );
            });                      
            document.getElementById("RedOvatta").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Red Ovatta";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#95252F";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 25;
                self.options.shelf.texture = 26;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[26].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[27].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[26].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[26].map;
                            }
                        }
                    }
                );
            });                      
            document.getElementById("RomeOvatta").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Rome Ovatta";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#EBB635";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 28;
                self.options.shelf.texture = 29;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[29].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[30].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[29].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[29].map;
                            }
                        }
                    }
                );
            });                   
            document.getElementById("LipariOvatta").addEventListener('click', function() {
                document.getElementById("choosenColor_Carcass").innerHTML = "Lipari Ovatta";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#3A373B";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 31;
                self.options.shelf.texture = 32;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[32].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[33].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[32].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[32].map;
                            }
                        }
                    }
                );
            });                 
            document.getElementById("CortinaOvatta").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Cortina Ovatta";
                document.getElementById("choosenColor_CarcassIcon").style.backgroundColor = "#005173";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '';

                self.options.pillar.texture = 34;
                self.options.shelf.texture = 35;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[35].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[36].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[35].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[35].map;
                            }
                        }
                    }
                );
            });                  
            document.getElementById("MilanoOak").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Milano Oak";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/MilanoOak.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 37;
                self.options.shelf.texture = 38;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[38].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[39].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[38].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[38].map;
                            }
                        }
                    }
                );
            });                  
            document.getElementById("AmbassadorNoce").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Ambassador Noce";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/AmbassadorNoce.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 40;
                self.options.shelf.texture = 41;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[41].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[42].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[41].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[41].map;
                            }
                        }
                    }
                );
            });                 
            document.getElementById("ChiaroVanguard").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Chiaro Vanguard";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/ChiaroVanguard.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 43;
                self.options.shelf.texture = 44;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[44].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[45].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[44].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[44].map;
                            }
                        }
                    }
                );
            });               
            document.getElementById("UvaVanguard").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Uva Vanguard";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/UvaVanguard.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 46;
                self.options.shelf.texture = 47;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[47].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[48].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[47].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[47].map;
                            }
                        }
                    }
                );
            });                 
            document.getElementById("SailsburyElm").addEventListener('click', function() {
                document.getElementById("choosenColor_Carcass").innerHTML = "Sailsbury Elm";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/SailsburyElm.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 49;
                self.options.shelf.texture = 50;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[50].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[51].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[50].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[50].map;
                            }
                        }
                    }
                );
            });                         
            document.getElementById("NeroSherwood").addEventListener('click', function() {
                document.getElementById("choosenColor_Carcass").innerHTML = "Nero Sherwood";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/NeroSherwood.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 52;
                self.options.shelf.texture = 53;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[53].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[54].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[53].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[53].map;
                            }
                        }
                    }
                );
            });                         
            document.getElementById("BiancoSherwood").addEventListener('click', function() {

                document.getElementById("choosenColor_Carcass").innerHTML = "Bianco Sherwood";
                document.getElementById("choosenColor_CarcassIcon").innerHTML = '<img src="icons/BiancoSherwood.jpg" style="width:150%; height:150%;">';

                self.options.pillar.texture = 55;
                self.options.shelf.texture = 56;
                self.changeShelfTexture();
                self.changePillarTexture();
                //colorize internal shelving too
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('internalShelf') && child.material.map != self.textures[58].map) {
                                child.material.map = self.textures[56].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg')) {
                                child.material.map = self.textures[57].map;
                                child.material.map.repeat.y = 0.09;
                                child.material.map.repeat.x = self.options.shelf.width / self.boardTextureStep * self.boardTextureRepeatXPerStep;
                                child.material.map.center.y = 1;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('plinthLeg3')) {
                                child.material.map = self.textures[56].map;
                            }
                        }
                    }
                );
                self.scene.traverse(function(child) {
                    if (child instanceof THREE.Mesh) {
                            if (child.name.includes('topPlane')) {
                                child.material.map = self.textures[56].map;
                            }
                        }
                    }
                );
            });
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            this.fontLoader = new THREE.FontLoader(this.loader);
            this.fontColor = new THREE.MeshBasicMaterial({color:0x000000, side: THREE.FontSide});
    
    
            var loader = new THREE.LoadingManager();
            this.loader = loader;
            loader.onError = function(url) {
                //self.notifier.notify('There was an error loading ' + url, Notifier.Level.Error);
            };
            loader.onLoad = function() {
                self.onAssetsLoaded();
            };
            


            this.textureLoader = new THREE.TextureLoader(this.loader);

            this.loadModels();
            this.loadTextures();
    

            this.createShelving();
        
            
            this.createFloor();
            this.createWall();
            this.createShadow();
            this.createShadowWall();
            this.createHuman();
            this.createTopPlane();
            this.createPillar1();
    
    
            self.createWireframeBack_section1_1();
            self.createRayCastRecieverSection1_1();
            self.createWireframeBack_section2_1();
            self.createRayCastRecieverSection2_1();
    
            this.createBackPlate();

    
            this.calculateOutput();
            this.run();
    
    
            var pillarPositionS1 = Math.floor(self.options.section1Length - 1.8 * 2) + "cm";
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
            }

            var pillarPositionS2 = Math.floor(self.options.section2Length - 1.8 * 2) + "cm";
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
            }
                    
    
            var pillarPositionS3 = Math.floor(self.options.section3Length - ((1.8 * 2 + 1.8 * (self.options.amountOfSections - 1)) / self.options.amountOfSections)) + "cm";
            for (let i = 1; i <= 7; i++) {
                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
            }

    
            document.getElementById("pillar4PositionField_S4_1").innerHTML = Math.floor( self.options.section4Length - ((1.8*2 + 1.8 * (self.options.amountOfSections-1) ) / self.options.amountOfSections)) +"cm";
            var pillarPositionS4 = Math.floor(self.options.section4Length - ((1.8 * 2 + 1.8 * (self.options.amountOfSections - 1)) / self.options.amountOfSections)) + "cm";
            for (let i = 1; i <= 5; i++) {
                document.getElementById(`pillar4PositionField_S4_${i}`).innerHTML = pillarPositionS4;
            }
    
            return this;
    
    
    
            },
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        loadModels: function() {
    
            var self = this;
            this.models = {};
    
            for (var name in this.objectsOptions) {
    
                var params = this.objectsOptions[name];
                var mtlLoader = new THREE.MTLLoader(this.loader);
        
    
                mtlLoader.setPath(this.assetsPath + params.path);
    
                mtlLoader.load(name + '.mtl', function(name, params) {
                    return function(materials) {
                        //materials.preload();
                        lambert = new THREE.MeshStandardMaterial({color: 0xfafefe, metalness: 0.5, roughness: 0.3,});
    
                        var objLoader = new THREE.OBJLoader(self.loader);
                        objLoader.setMaterials(materials);
                        objLoader.setPath(self.assetsPath + params.path);
                        objLoader.load(name + '.obj', function(object) {
    
                            object.traverse(function(child) {
                                if (child instanceof THREE.Mesh) {
                                    child.material = new THREE.MeshStandardMaterial({color: 0x282d33, metalness: 0.4, roughness: 0.3, /* envMap: textureCube, */});
                                }
                            });
            
                            
                            self.onLoadModel(name, object, params);
    
                            var box = new THREE.Box3().setFromObject( object );
                        });
                    }
                } (name, params));
            }
        },
    
    
    
    
        placeMetallegs: function() {
            
            this.scene.remove(this.models);
    
            for (var name in this.models) {
                var object = this.models[name];
                var params = this.objectsOptions[name];
                
                if (name === 'metalleg') {
                    object.position.y = this.options.distanceFromFloor + this.options.shelf.thickness + params.offset[1]- 17.5;
                    object.position.z = -986;
                    object.position.x = - this.options.shelf.length / 2 - this.options.pillar.thickness / 2 +12;
                    
                }
                if (name === 'metalleg2') {
                    object.position.y = this.options.distanceFromFloor + this.options.shelf.thickness + params.offset[1]- 17.5;
                    object.position.z = -this.options.room.width / 2 + this.options.shelf.width  + params.offset[2] - 10;
                    object.position.x = - this.options.shelf.length / 2 - this.options.pillar.thickness / 2 +12;
                    
                }
                if (name === 'metalleg3') {
                    object.position.y = this.options.distanceFromFloor + this.options.shelf.thickness + params.offset[1]- 17.5;
                    object.position.z = -986;
                    object.position.x = (this.options.shelf.length + this.options.pillar.thickness) - this.options.shelf.length / 2 - this.options.pillar.thickness / 2 -12;
                    
                }
                if (name === 'metalleg4') {
                    object.position.y = this.options.distanceFromFloor + this.options.shelf.thickness + params.offset[1]- 17.5;
                    object.position.z = -this.options.room.width / 2 + this.options.shelf.width  + params.offset[2] - 10;
                    object.position.x = (this.options.shelf.length + this.options.pillar.thickness) - this.options.shelf.length / 2 - this.options.pillar.thickness / 2 -12;
                    
                }
                
            }
        },
    
    
    

        placeSliders: function() {
        
            this.scene.remove(this.models);
    
            for (var name in this.models) {
                var object = this.models[name];
                var params = this.objectsOptions[name];
                
                
                if (name === 'sliders1') {
                    object.position.y = this.options.distanceFromFloor + this.options.shelf.thickness + params.offset[1] -3;
                    object.position.z = -1000;
                    object.position.x = - this.options.shelf.length / 2 - this.options.pillar.thickness / 2 -0.5;
                    
                }
                if (name === 'sliders2') {
                    object.position.y = this.options.distanceFromFloor + this.options.shelf.thickness + params.offset[1] -3;
                    object.position.z = -this.options.room.width / 2 + this.options.shelf.width  + params.offset[2] - 4;
                    object.position.x = - this.options.shelf.length / 2 - this.options.pillar.thickness / 2 -0.5;
                    
                }
                if (name === 'sliders3') {
                    object.position.y = this.options.distanceFromFloor + this.options.shelf.thickness + params.offset[1] -3;
                    object.position.z = -1000;
                    object.position.x = (this.options.shelf.length + this.options.pillar.thickness) - this.options.shelf.length / 2 - this.options.pillar.thickness / 2 -0.5;
                    
                }
                if (name === 'sliders4') {
                    object.position.y = this.options.distanceFromFloor + this.options.shelf.thickness + params.offset[1] -3;
                    object.position.z = -this.options.room.width / 2 + this.options.shelf.width  + params.offset[2] - 4;
                    object.position.x = (this.options.shelf.length + this.options.pillar.thickness) - this.options.shelf.length / 2 - this.options.pillar.thickness / 2 -0.5;
                    
                }
            }
        },
    
    
    
    
    
    
        onLoadModel: function(name, object, params) {
            object.name = name;
            object.visible = params.visible;
            object.scale.set(params.scale[0], params.scale[0], params.scale[0]);
            object.position.set(params.offset[0], params.offset[1], params.offset[2]);
            object.rotation.set(params.rotation[0], params.rotation[1], params.rotation[2]);
            this.models[name] = object;
            this.scene.add(object); 
    
        },
    
    
    
    
    
    
    
    
        loadTextures: function() {
            var self = this;
    
            this.textures.forEach(function(params) {
                self.textureLoader.load(self.assetsPath + params.src, function(texture) {
                    params.map = texture;
                });
            });
        },
    
    
        onAssetsLoaded: function() {
            this.changePillarTexture();
            this.changeShelfTexture();
            this.placeSliders();
        },
    
    
        changePillarTexture: function() {
            if (this.textures[this.options.pillar.texture]) {
                this.pillarProto.material.map = this.textures[this.options.pillar.texture].map;
                this.updatePillarProtoMaterial();
            }
        },
    
        
        changeShelfTexture: function() {
            if (this.textures[this.options.shelf.texture]) {
                this.shelfProto.material.map = this.textures[this.options.shelf.texture].map;
    
                try{
                    this.BackPlate.material.map = this.textures[this.options.shelf.texture].map;
                }catch(e){       
                    //console.clear();
                };
    
    
    
    
    
                if ( this.scene.getObjectByName( "horizontalDividerSection1_1", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection1_1", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
    
                if ( this.scene.getObjectByName( "horizontalDividerSection1_2", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection1_2", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
    
                if ( this.scene.getObjectByName( "horizontalDividerSection1_3", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection1_3", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
    
                if ( this.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection1_4", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection1_5", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection1_5", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection1_6", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                
    
                if ( this.scene.getObjectByName( "horizontalDividerSection2_1", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection2_1", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection2_2", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection2_3", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection2_4", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection2_5", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection2_5", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection2_6", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                
                if ( this.scene.getObjectByName( "horizontalDividerSection3_1", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection3_1", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection3_2", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection3_3", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection3_4", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection3_5", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection3_5", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection3_6", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                
    
    
                if ( this.scene.getObjectByName( "horizontalDividerSection4_1", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection4_1", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection4_2", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection4_2", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection4_3", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection4_3", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection4_4", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection4_5", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection4_5", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
                if ( this.scene.getObjectByName( "horizontalDividerSection4_6", true ) != undefined) {
                    this.scene.getObjectByName( "horizontalDividerSection4_6", true ).material.map = this.textures[this.options.shelf.texture].map;
                }
    
    
    
    
                this.updateShelfProtoMaterial();
    
               
            }
        },
        
    
    
    
    
    
    
        
    
    
    
    
    
        createShadow: function() {
            var self = this;
            this.scene.remove(this.shadow);

            var geometry = new THREE.PlaneGeometry(this.options.shelf.length + this.options.shelf.length/2.9, this.options.shelf.width);
            var material = new THREE.MeshBasicMaterial({color: this.options.shadow.color, transparent: true, opacity: 0.2,   side: THREE.DoubleSide, });
    
            var shadow = new THREE.Mesh(geometry, material);
            shadow.name = 'shadow';
    
            shadow.position.z = this.shelving.position.z;

            switch (document.getElementById("typeFeet").value) {
                case "Slider":
                    shadow.position.y = -0.8;
                break;
                case "MetalLegs":
                    shadow.position.y = -14.5;
                break;
                case "Plinth":
                    shadow.position.y = -5.9;
                break;
            }

            shadow.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x + 1;
            shadow.geometry.translate( (this.options.shelf.length + this.options.shelf.length/2.9 )/2 -1, 0, 0 );
    
            shadow.rotation.x = -Utils.PI_HALF;
    
            this.textureLoader.load(this.assetsPath + this.options.shadow.texture, function(texture) {
                shadow.material.needsUpdate = true;
                shadow.material.map = texture;
            });
    
            shadow.visible = true;
            this.shadow = shadow;
            this.scene.add(shadow);

        },

        createShadowWall: function() {
            var self = this;
            this.scene.remove(this.shadowWall);
    
            var shelfPositionY = self.shelving.getObjectByName("shelf_0_1", true).position.y;


            switch (document.getElementById("typeFeet").value) {
                case "Slider":
                    var geometry = new THREE.PlaneGeometry(this.options.shelf.length + this.options.shelf.length / 2.9, shelfPositionY + 2);

                break;
                case "MetalLegs":
                    var geometry = new THREE.PlaneGeometry(this.options.shelf.length + this.options.shelf.length / 2.9, shelfPositionY + 2 + 14);

                break;
                case "Plinth":
                    var geometry = new THREE.PlaneGeometry(this.options.shelf.length + this.options.shelf.length / 2.9, shelfPositionY + 2 + 6);

                break;
            }

            var material = new THREE.MeshBasicMaterial({color: this.options.shadowWall.color, transparent: true, opacity: 0.3, side: THREE.DoubleSide, });
    
            var shadowWall = new THREE.Mesh(geometry, material);
            shadowWall.name = 'shadowWall';
    
            shadowWall.position.z = this.shelving.position.z - self.options.shelf.width / 2 + 0.1 ;

            switch (document.getElementById("typeFeet").value) {
                case "Slider":
                    shadowWall.scale.y = 1;
                    shadowWall.position.y = self.shelving.getObjectByName( "shelf_0_1", true ).position.y  - self.shelving.getObjectByName( "shelf_0_1", true ).position.y  /2 ;
                break;
                case "MetalLegs":
                    shadowWall.position.y = self.shelving.getObjectByName( "shelf_0_1", true ).position.y  - self.shelving.getObjectByName( "shelf_0_1", true ).position.y  /2 - 6.6; 
                break;
                case "Plinth":
                    shadowWall.position.y = self.shelving.getObjectByName( "shelf_0_1", true ).position.y  - self.shelving.getObjectByName( "shelf_0_1", true ).position.y  /2 - 2.2;
                break;
            }


            shadowWall.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x;
            shadowWall.geometry.translate( (this.options.shelf.length + this.options.shelf.length/2.9 )/2, 0, 0 );
    
            //shadowWall.rotation.x = -Utils.PI_HALF;
      
            this.textureLoader.load(this.assetsPath + this.options.shadowWall.texture, function(texture) {
                shadowWall.material.needsUpdate = true;
                shadowWall.material.map = texture;

            });
    
            shadowWall.visible = true;
            this.shadowWall = shadowWall;
            this.scene.add(shadowWall);
        },
    
    
        createWall: function() {
            var self = this;
    
            var geometry = new THREE.PlaneGeometry(1500, 500);
            var material = new THREE.MeshBasicMaterial({color: 0xFFFFFF, transparent: false, /* emissive : 0xDFDEDA */});
            var wall = new THREE.Mesh(geometry, material);
            wall.castShadow = true
            wall.receiveShadow = true
            wall.material.side = THREE.FrontSide;
            wall.position.y = 200
            wall.position.z = -this.options.room.width / 2;
    
    
    
            this.textureLoader.load(this.assetsPath + this.options.wall.texture, function(texture) {
                wall.material.needsUpdate = true;
                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                texture.repeat.x = 1;
                texture.offset.x = 0.2;
                texture.repeat.y = 1;
                
                wall.material.map = texture;
            });
            
    
            var geometry2 = new THREE.PlaneGeometry(500, 500);
            var material2 = new THREE.MeshBasicMaterial({color: 0xFFFFFF, transparent: false, /* emissive : 0xDFDEDA */});
            var wall2 = new THREE.Mesh(geometry2, material2);
            wall2.castShadow = true
            wall2.receiveShadow = true
            wall2.material.side = THREE.FrontSide;
            wall2.position.y = 200
            wall2.position.x = 300
            wall2.position.z = -this.options.room.width / 2;
            wall2.rotation.set(0,300,0);
    
            this.textureLoader.load(this.assetsPath + this.options.wall.texture, function(texture) {
                wall2.material.needsUpdate = true;
                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                texture.repeat.x = 1;
                texture.offset.x = 0.2;
                texture.repeat.y = 1;
                wall2.material.map = texture;
            });
            this.scene.add(wall2);
    
    
            var geometry3 = new THREE.PlaneGeometry(500, 500);
            var material3 = new THREE.MeshBasicMaterial({color: 0xFFFFFF, transparent: false, /* emissive : 0xDFDEDA */});
            var wall3 = new THREE.Mesh(geometry3, material3);
            wall3.castShadow = true
            wall3.receiveShadow = true
            wall3.position.y = 200
            wall3.position.x = -300
            wall3.position.z = -this.options.room.width / 2;
            wall3.rotation.set(0,-300,0);
    
            this.textureLoader.load(this.assetsPath + this.options.wall.texture, function(texture) {
                wall3.material.needsUpdate = true;
                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                texture.repeat.x = 1;
                texture.offset.x = 0.2;
                texture.repeat.y = 1;
                wall3.material.map = texture;
            });
            this.scene.add(wall3);
    
    
    
            wall.name = 'wall';
            wall2.name = 'wall2';
            wall3.name = 'wall3';
            wall.visible = true;
            wall2.visible = true;
            wall3.visible = true;
            wall.renderOrder = 55
            this.wall = wall;
            this.wall2 = wall2;
            this.wall3 = wall3;
            this.scene.add(wall);
            this.scene.add(wall2);
            this.scene.add(wall3);
        },
    
    
    
        createHuman: function() {
            var self = this;
            var geometry = new THREE.PlaneGeometry(84, 160);
            var material = new THREE.MeshStandardMaterial({color: this.options.shadow.color, transparent: true, opacity: 0.2,   side: THREE.DoubleSide,});
    
            var human = new THREE.Mesh(geometry, material);
            
            human.castShadow = true
            human.receiveShadow = true
    
            human.position.y = self.floor.position.y * -79;
            human.position.z = -998;
            human.position.x = -80;
    
            this.textureLoader.load(this.assetsPath + this.options.human.texture, function(texture) {
                human.material.needsUpdate = true;
                human.material.map = texture;
                
            });
            //human.material.side = THREE.FrontSide;
    
    
            human.name = 'human';
            human.visible = true;
            human.renderOrder = 54
            this.human = human;
            this.scene.add(human);
        },
    
        closeLeftMenu: function() {
    
            if ( VerticalSection1_2.style.transform = "translateX(-0%)" ) {
                VerticalSection1_2.style.transform = "translateX(-150%)";
                VerticalSection1_2.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection1_1.style.transform = "translateX(-0%)" ) {
                VerticalSection1_1.style.transform = "translateX(-150%)";
                VerticalSection1_1.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection1_3.style.transform = "translateX(-0%)" ) {
                VerticalSection1_3.style.transform = "translateX(-150%)";
                VerticalSection1_3.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection1_4.style.transform === "translateX(-0%)") {
                VerticalSection1_4.style.transform = "translateX(-150%)";
                VerticalSection1_4.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection1_5.style.transform === "translateX(-0%)") {
                VerticalSection1_5.style.transform = "translateX(-150%)";
                VerticalSection1_5.style.animation = 'animHideFromLeft 0.4s';
            }
    
    
            if ( VerticalSection2_1.style.transform = "translateX(-0%)" ) {
                VerticalSection2_1.style.transform = "translateX(-150%)";
                VerticalSection2_1.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection2_2.style.transform = "translateX(-0%)" ) {
                VerticalSection2_2.style.transform = "translateX(-150%)";
                VerticalSection2_2.style.animation = 'animHideFromLeft 0.4s';
            }    
            if ( VerticalSection2_3.style.transform = "translateX(-0%)" ) {
                VerticalSection2_3.style.transform = "translateX(-150%)";
                VerticalSection2_3.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection2_4.style.transform === "translateX(-0%)") {
                VerticalSection2_4.style.transform = "translateX(-150%)";
                VerticalSection2_4.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection2_5.style.transform === "translateX(-0%)") {
                VerticalSection2_5.style.transform = "translateX(-150%)";
                VerticalSection2_5.style.animation = 'animHideFromLeft 0.4s';
            }
    
    
    
            if ( VerticalSection3_1.style.transform = "translateX(-0%)" ) {
                VerticalSection3_1.style.transform = "translateX(-150%)";
                VerticalSection3_1.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection3_2.style.transform = "translateX(-0%)" ) {
                VerticalSection3_2.style.transform = "translateX(-150%)";
                VerticalSection3_2.style.animation = 'animHideFromLeft 0.4s';
            }    
            if ( VerticalSection3_3.style.transform = "translateX(-0%)" ) {
                VerticalSection3_3.style.transform = "translateX(-150%)";
                VerticalSection3_3.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection3_4.style.transform === "translateX(-0%)") {
                VerticalSection3_4.style.transform = "translateX(-150%)";
                VerticalSection3_4.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection3_5.style.transform === "translateX(-0%)") {
                VerticalSection3_5.style.transform = "translateX(-150%)";
                VerticalSection3_5.style.animation = 'animHideFromLeft 0.4s';
            }
    
    
            if ( VerticalSection4_1.style.transform = "translateX(-0%)" ) {
                VerticalSection4_1.style.transform = "translateX(-150%)";
                VerticalSection4_1.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection4_2.style.transform = "translateX(-0%)" ) {
                VerticalSection4_2.style.transform = "translateX(-150%)";
                VerticalSection4_2.style.animation = 'animHideFromLeft 0.4s';
            }    
            if ( VerticalSection4_3.style.transform = "translateX(-0%)" ) {
                VerticalSection4_3.style.transform = "translateX(-150%)";
                VerticalSection4_3.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection4_4.style.transform === "translateX(-0%)") {
                VerticalSection4_4.style.transform = "translateX(-150%)";
                VerticalSection4_4.style.animation = 'animHideFromLeft 0.4s';
            }
            if ( VerticalSection4_5.style.transform === "translateX(-0%)") {
                VerticalSection4_5.style.transform = "translateX(-150%)";
                VerticalSection4_5.style.animation = 'animHideFromLeft 0.4s';
            }
    
        },
    
        defaultLeftMenu: function() {
    
            VerticalSection1_1.style.transform = "translateX(-150%)";
            VerticalSection1_2.style.transform = "translateX(-150%)";
            VerticalSection1_3.style.transform = "translateX(-150%)";
            VerticalSection1_4.style.transform = "translateX(-150%)";
            VerticalSection1_5.style.transform = "translateX(-150%)";
    
    
            VerticalSection2_1.style.transform = "translateX(-150%)";
            VerticalSection2_2.style.transform = "translateX(-150%)";
            VerticalSection2_3.style.transform = "translateX(-150%)";
            VerticalSection2_4.style.transform = "translateX(-150%)";
            VerticalSection2_5.style.transform = "translateX(-150%)";
    
    
            VerticalSection3_1.style.transform = "translateX(-150%)";
            VerticalSection3_2.style.transform = "translateX(-150%)";
            VerticalSection3_3.style.transform = "translateX(-150%)";
            VerticalSection3_4.style.transform = "translateX(-150%)";
            VerticalSection3_5.style.transform = "translateX(-150%)";
    
    
            VerticalSection4_1.style.transform = "translateX(-150%)";
            VerticalSection4_2.style.transform = "translateX(-150%)";
            VerticalSection4_3.style.transform = "translateX(-150%)";
            VerticalSection4_4.style.transform = "translateX(-150%)";
            VerticalSection4_5.style.transform = "translateX(-150%)";
    
    
        },
    


        updateDoorButtons: function() {
    
            var self = this;

            if (self.options.s1_AmountOfHorDividers == 0 ) {
                document.getElementById("moveHorizontalPartition_S1_1").style.display = "none";
            } else {
                document.getElementById("moveHorizontalPartition_S1_1").style.display = "flex";
            }

            if (self.options.s1_AmountOfHorDividers > 1 ) {
                document.getElementById("moveHorizontalPartition1_2_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition1_2_Upper").style.display = "none";
            }


            if (self.options.s1_AmountOfHorDividers > 2 ) {
                document.getElementById("moveHorizontalPartition1_3_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition1_3_Upper").style.display = "none";
            }

            if (self.options.s1_AmountOfHorDividers > 3 ) {
                document.getElementById("moveHorizontalPartition1_4_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition1_4_Upper").style.display = "none";
            }

            if (self.options.s1_AmountOfHorDividers > 4 ) {
                document.getElementById("moveHorizontalPartition1_5_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition1_5_Upper").style.display = "none";
            }

            if (self.options.s1_AmountOfHorDividers > 5 ) {
                document.getElementById("moveHorizontalPartition1_6_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition1_6_Upper").style.display = "none";
            }


            //2section
            if (self.options.s2_AmountOfHorDividers == 0 ) {
                document.getElementById("moveHorizontalPartition_S2_1").style.display = "none";
            } else {
                document.getElementById("moveHorizontalPartition_S2_1").style.display = "flex";
            }

            if (self.options.s2_AmountOfHorDividers > 1 ) {
                document.getElementById("moveHorizontalPartition2_2_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition2_2_Upper").style.display = "none";
            }


            if (self.options.s2_AmountOfHorDividers > 2 ) {
                document.getElementById("moveHorizontalPartition2_3_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition2_3_Upper").style.display = "none";
            }


            if (self.options.s2_AmountOfHorDividers > 3 ) {
                document.getElementById("moveHorizontalPartition2_4_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition2_4_Upper").style.display = "none";
            }

            if (self.options.s2_AmountOfHorDividers > 4 ) {
                document.getElementById("moveHorizontalPartition2_5_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition2_5_Upper").style.display = "none";
            }

            if (self.options.s2_AmountOfHorDividers > 5 ) {
                document.getElementById("moveHorizontalPartition2_6_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition2_6_Upper").style.display = "none";
            }


            //3section
            if (self.options.s3_AmountOfHorDividers == 0 ) {
                document.getElementById("moveHorizontalPartition_S3_1").style.display = "none";
            } else {
                document.getElementById("moveHorizontalPartition_S3_1").style.display = "flex";
            }


            if (self.options.s3_AmountOfHorDividers > 1 ) {
                document.getElementById("moveHorizontalPartition3_2_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition3_2_Upper").style.display = "none";
            }

            if (self.options.s3_AmountOfHorDividers > 2 ) {
                document.getElementById("moveHorizontalPartition3_3_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition3_3_Upper").style.display = "none";
            }

            if (self.options.s3_AmountOfHorDividers > 3 ) {
                document.getElementById("moveHorizontalPartition3_4_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition3_4_Upper").style.display = "none";
            }

            if (self.options.s3_AmountOfHorDividers > 4 ) {
                document.getElementById("moveHorizontalPartition3_5_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition3_5_Upper").style.display = "none";
            }

            if (self.options.s3_AmountOfHorDividers > 5 ) {
                document.getElementById("moveHorizontalPartition3_6_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition3_6_Upper").style.display = "none";
            }



            //4section
            if (self.options.s4_AmountOfHorDividers == 0 ) {
                document.getElementById("moveHorizontalPartition_S4_1").style.display = "none";
            } else {
                document.getElementById("moveHorizontalPartition_S4_1").style.display = "flex";
            }

            if (self.options.s4_AmountOfHorDividers > 1 ) {
                document.getElementById("moveHorizontalPartition4_2_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition4_2_Upper").style.display = "none";
            }

            if (self.options.s4_AmountOfHorDividers > 2 ) {
                document.getElementById("moveHorizontalPartition4_3_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition4_3_Upper").style.display = "none";
            }

            if (self.options.s4_AmountOfHorDividers > 3 ) {
                document.getElementById("moveHorizontalPartition4_4_Upper").style.display = "flex";
            } else {
                document.getElementById("moveHorizontalPartition4_4_Upper").style.display = "none";
            }


            //1section shelving
            //1_1
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
             
                if ( self.options.s1_AmountOfHorDividers === 0 ) {
                    document.getElementById("MainHorizontalPartition_S1_1").style.display = "flex";
                }

            } else {
                if ( self.options.s1_AmountOfHorDividers === 0 ) {
                    document.getElementById("MainHorizontalPartition_S1_1").style.display = "none";
                }

            }
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s1_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S1_1").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S1_1").style.display = "none";
            }
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                if ( self.options.s1_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S1_1").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S1_1").style.display = "none";
            }
            //1_2 
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s1_2_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S1_2").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S1_2").style.display = "none";
            }
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {   
                if ( self.options.s1_2_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S1_2").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S1_2").style.display = "none";
            }      
            //1_3
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s1_3_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S1_3").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S1_3").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s1_3_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S1_3").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S1_3").style.display = "none";
            }
            //1_4
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s1_4_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S1_4").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S1_4").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s1_4_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S1_4").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S1_4").style.display = "none";
            }
            //1_5
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s1_5_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S1_5").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S1_5").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s1_5_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S1_5").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S1_5").style.display = "none";
            }
            //1_6
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s1_6_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S1_6").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S1_6").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s1_6_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S1_6").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S1_6").style.display = "none";
            }

            //2section
            //2_1
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
             
                if ( self.options.s2_AmountOfHorDividers === 0 ) {
                    document.getElementById("MainHorizontalPartition_S2_1").style.display = "flex";
                }

            } else {
                if ( self.options.s2_AmountOfHorDividers === 0 ) {
                    document.getElementById("MainHorizontalPartition_S2_1").style.display = "none";
                }

            }
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s2_1_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S2_1").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S2_1").style.display = "none";
            }
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                if ( self.options.s2_1_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S2_1").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S2_1").style.display = "none";
            }
            //2_2 
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s2_2_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S2_2").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S2_2").style.display = "none";
            }
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {   
                if ( self.options.s2_2_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S2_2").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S2_2").style.display = "none";
            }      
            //2_3
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s2_3_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S2_3").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S2_3").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s2_3_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S2_3").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S2_3").style.display = "none";
            }
            //2_4
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s2_4_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S2_4").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S2_4").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s2_4_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S2_4").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S2_4").style.display = "none";
            }
            //2_5
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s2_5_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S2_5").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S2_5").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s2_5_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S2_5").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S2_5").style.display = "none";
            }
            //2_6
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s2_6_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S2_6").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S2_6").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s2_6_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S2_6").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S2_6").style.display = "none";
            }

            //3section
            //3_1
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
             
                if ( self.options.s3_AmountOfHorDividers === 0 ) {
                    document.getElementById("MainHorizontalPartition_S3_1").style.display = "flex";
                }

            } else {
                if ( self.options.s3_AmountOfHorDividers === 0 ) {
                    document.getElementById("MainHorizontalPartition_S3_1").style.display = "none";
                }

            }
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s3_1_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S3_1").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S3_1").style.display = "none";
            }
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                if ( self.options.s3_1_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S3_1").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S3_1").style.display = "none";
            }
            //3_2 
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s3_2_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S3_2").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S3_2").style.display = "none";
            }
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {   
                if ( self.options.s3_2_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S3_2").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S3_2").style.display = "none";
            }      
            //3_3
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s3_3_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S3_3").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S3_3").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s3_3_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S3_3").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S3_3").style.display = "none";
            }
            //3_4
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s3_4_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S3_4").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S3_4").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s3_4_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S3_4").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S3_4").style.display = "none";
            }
            //3_5
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s3_5_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S3_5").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S3_5").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s3_5_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S3_5").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S3_5").style.display = "none";
            }
            //3_6
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s3_6_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S3_6").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S3_6").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s3_6_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S3_6").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S3_6").style.display = "none";
            }
    
            //4section
            //4_1
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
             
                if ( self.options.s4_AmountOfHorDividers === 0 ) {
                    document.getElementById("MainHorizontalPartition_S4_1").style.display = "flex";
                }

            } else {
                if ( self.options.s4_AmountOfHorDividers === 0 ) {
                    document.getElementById("MainHorizontalPartition_S4_1").style.display = "none";
                }

            }
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s4_1_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S4_1").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S4_1").style.display = "none";
            }
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {
                if ( self.options.s4_1_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S4_1").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S4_1").style.display = "none";
            }
            //4_2 
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s4_2_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S4_2").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S4_2").style.display = "none";
            }
            if (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) >= 22) {   
                if ( self.options.s4_2_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S4_2").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S4_2").style.display = "none";
            }      
            //4_3
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s4_3_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S4_3").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S4_3").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s4_3_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S4_3").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S4_3").style.display = "none";
            }
            //4_4
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s4_4_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S4_4").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S4_4").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s4_4_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S4_4").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S4_4").style.display = "none";
            }
            //4_5
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s4_5_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S4_5").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S4_5").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s4_5_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S4_5").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S4_5").style.display = "none";
            }
            //4_6
            if (parseInt(document.getElementById("subdomainDepth_Cabinet_Dimensionsz").value, 10) >= 39 && parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) >= 20) {
                if ( self.options.s4_6_doorStatus !== 5 ) {
                    document.getElementById("MainShoeShelving_S4_6").style.display = "flex";
                }
            } else{
                document.getElementById("MainShoeShelving_S4_6").style.display = "none";
            }
            if ( parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0])  >= 22 ) {    
                if ( self.options.s4_6_doorStatus !== 5 ) {
                    document.getElementById("MainInternalShelving_S4_6").style.display = "flex";
                }
            } else {
                document.getElementById("MainInternalShelving_S4_6").style.display = "none";
            }



    
            //doors
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2  || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S1_status = false;
                document.getElementById("DoorLeft_S1").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S1_status = false;
                document.getElementById("DoorRight_S1").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S1_status = true;
                document.getElementById("DoorLeft_S1").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S1_status = true;
                document.getElementById("DoorRight_S1").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S1_status == true) {
                document.getElementById("DoorLeft_S1").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S1").onmouseout = function() {
                    document.getElementById("DoorLeft_S1").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S1").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S1").onmouseout = function() {
                    document.getElementById("DoorLeft_S1").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S1_status == true) {
                document.getElementById("DoorRight_S1").onmouseover = function() { 
                    document.getElementById("DoorRight_S1").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S1").onmouseout = function() {
                    document.getElementById("DoorRight_S1").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S1").onmouseover = function() { 
                    document.getElementById("DoorRight_S1").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S1").onmouseout = function() {
                    document.getElementById("DoorRight_S1").src="icons/DoorRight_Disable.jpg";
                };
            }
    

            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4  || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S1_status = false;
                document.getElementById("DoubleDoor_S1").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S1_status = true;
                document.getElementById("DoubleDoor_S1").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S1_status == true) {
                document.getElementById("DoubleDoor_S1").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S1").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S1").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S1").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1").src="icons/DoubleDoor_Disable.jpg";
                };
            }

            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0])  > 45 || document.getElementById("internalShelving_sect1_1").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value  < 38 ) {
                self.options.Drawer_S1_status = false;
                document.getElementById("Drawer_S1").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S1_status = true;
                document.getElementById("Drawer_S1").src="icons/Drawer_Close.jpg";  
            }

            if (self.options.Drawer_S1_status == true) {
                document.getElementById("Drawer_S1").onmouseover = function() { 
                    document.getElementById("Drawer_S1").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S1").onmouseout = function() {
                    document.getElementById("Drawer_S1").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S1").onmouseover = function() { 
                    document.getElementById("Drawer_S1").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S1").onmouseout = function() {
                    document.getElementById("Drawer_S1").src="icons/Drawer_Disable.jpg";
                };
            }
    

            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S1_2_status = false;
                document.getElementById("DoorLeft_S1_2").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S1_2_status = false;
                document.getElementById("DoorRight_S1_2").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S1_2_status = true;
                document.getElementById("DoorLeft_S1_2").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S1_2_status = true;
                document.getElementById("DoorRight_S1_2").src="icons/DoorRight_Close.jpg";
            }

            if (self.options.LeftDoor_S1_2_status == true) {
                document.getElementById("DoorLeft_S1_2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_2").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S1_2").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_2").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S1_2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_2").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S1_2").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_2").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S1_2_2_status == true) {
                document.getElementById("DoorRight_S1_2").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_2").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S1_2").onmouseout = function() {
                    document.getElementById("DoorRight_S1_2").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S1_2").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_2").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S1_2").onmouseout = function() {
                    document.getElementById("DoorRight_S1_2").src="icons/DoorRight_Disable.jpg";
                };
            }

            if ( self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S1_2_status = false;
                document.getElementById("DoubleDoor_S1_2").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S1_2_status = true;
                document.getElementById("DoubleDoor_S1_2").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S1_2_status == true) {
                document.getElementById("DoubleDoor_S1_2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_2").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S1_2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_2").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S1_2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_2").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S1_2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_2").src="icons/DoubleDoor_Disable.jpg";
                };
            }

            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect1_2").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value  < 38 ){
                self.options.Drawer_S1_2_status = false;
                document.getElementById("Drawer_S1_2").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S1_2_status = true;
                document.getElementById("Drawer_S1_2").src="icons/Drawer_Close.jpg";
            }

            if (self.options.Drawer_S1_2_status == true) {
                document.getElementById("Drawer_S1_2").onmouseover = function() { 
                    document.getElementById("Drawer_S1_2").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S1_2").onmouseout = function() {
                    document.getElementById("Drawer_S1_2").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S1_2").onmouseover = function() { 
                    document.getElementById("Drawer_S1_2").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S1_2").onmouseout = function() {
                    document.getElementById("Drawer_S1_2").src="icons/Drawer_Disable.jpg";
                };
            }
    
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S1_3_status = false;
                document.getElementById("DoorLeft_S1_3").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S1_3_status = false;
                document.getElementById("DoorRight_S1_3").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S1_3_status = true;
                document.getElementById("DoorLeft_S1_3").src="icons/DoorLeft_Close.jpg";

                self.options.RightDoor_S1_3_status = true;
                document.getElementById("DoorRight_S1_3").src="icons/DoorRight_Close.jpg";
            }

            if (self.options.LeftDoor_S1_3_status == true) {
                document.getElementById("DoorLeft_S1_3").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_3").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S1_3").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_3").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S1_3").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_3").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S1_3").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_3").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S1_3_status == true) {
                document.getElementById("DoorRight_S1_3").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_3").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S1_3").onmouseout = function() {
                    document.getElementById("DoorRight_S1_3").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S1_3").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_3").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S1_3").onmouseout = function() {
                    document.getElementById("DoorRight_S1_3").src="icons/DoorRight_Disable.jpg";
                };
            }
            
            if ( self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S1_3_status = false;
                document.getElementById("DoubleDoor_S1_3").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S1_3_status = true;
                document.getElementById("DoubleDoor_S1_3").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S1_3_status == true) {
                document.getElementById("DoubleDoor_S1_3").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_3").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S1_3").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_3").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S1_3").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_3").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S1_3").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_3").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect1_3").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S1_3_status = false;
                document.getElementById("Drawer_S1_3").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S1_3_status = true;
                document.getElementById("Drawer_S1_3").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S1_3_status == true) {
                document.getElementById("Drawer_S1_3").onmouseover = function() { 
                    document.getElementById("Drawer_S1_3").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S1_3").onmouseout = function() {
                    document.getElementById("Drawer_S1_3").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S1_3").onmouseover = function() { 
                    document.getElementById("Drawer_S1_3").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S1_3").onmouseout = function() {
                    document.getElementById("Drawer_S1_3").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S1_4_status = false;
                document.getElementById("DoorLeft_S1_4").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S1_4_status = false;
                document.getElementById("DoorRight_S1_4").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S1_4_status = true;
                document.getElementById("DoorLeft_S1_4").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S1_4_status = true;
                document.getElementById("DoorRight_S1_4").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S1_4_status == true) {
                document.getElementById("DoorLeft_S1_4").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_4").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S1_4").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_4").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S1_4").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_4").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S1_4").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_4").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S1_4_status == true) {
                document.getElementById("DoorRight_S1_4").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_4").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S1_4").onmouseout = function() {
                    document.getElementById("DoorRight_S1_4").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S1_4").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_4").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S1_4").onmouseout = function() {
                    document.getElementById("DoorRight_S1_4").src="icons/DoorRight_Disable.jpg";
                };
            }
  

            if ( self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S1_4_status = false;
                document.getElementById("DoubleDoor_S1_4").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S1_4_status = true;
                document.getElementById("DoubleDoor_S1_4").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S1_4_status == true) {
                document.getElementById("DoubleDoor_S1_4").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_4").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S1_4").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_4").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S1_4").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_4").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S1_4").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_4").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect1_4").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S1_4_status = false;
                document.getElementById("Drawer_S1_4").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S1_4_status = true;
                document.getElementById("Drawer_S1_4").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S1_4_status == true) {
                document.getElementById("Drawer_S1_4").onmouseover = function() { 
                    document.getElementById("Drawer_S1_4").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S1_4").onmouseout = function() {
                    document.getElementById("Drawer_S1_4").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S1_4").onmouseover = function() { 
                    document.getElementById("Drawer_S1_4").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S1_4").onmouseout = function() {
                    document.getElementById("Drawer_S1_4").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S1_5_status = false;
                document.getElementById("DoorLeft_S1_5").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S1_5_status = false;
                document.getElementById("DoorRight_S1_5").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S1_5_status = true;
                document.getElementById("DoorLeft_S1_5").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S1_5_status = true;
                document.getElementById("DoorRight_S1_5").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S1_5_status == true) {
                document.getElementById("DoorLeft_S1_5").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_5").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S1_5").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_5").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S1_5").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_5").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S1_5").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_5").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S1_5_status == true) {
                document.getElementById("DoorRight_S1_5").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_5").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S1_5").onmouseout = function() {
                    document.getElementById("DoorRight_S1_5").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S1_5").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_5").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S1_5").onmouseout = function() {
                    document.getElementById("DoorRight_S1_5").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S1_5_status = false;
                document.getElementById("DoubleDoor_S1_5").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S1_5_status = true;
                document.getElementById("DoubleDoor_S1_5").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S1_5_status == true) {
                document.getElementById("DoubleDoor_S1_5").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_5").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S1_5").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_5").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S1_5").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_5").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S1_5").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_5").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S1_5_status = true;
                document.getElementById("Drawer_S1_5").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S1_5_status = true;
                document.getElementById("Drawer_S1_5").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S1_5_status == true) {
                document.getElementById("Drawer_S1_5").onmouseover = function() { 
                    document.getElementById("Drawer_S1_5").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S1_5").onmouseout = function() {
                    document.getElementById("Drawer_S1_5").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S1_5").onmouseover = function() { 
                    document.getElementById("Drawer_S1_5").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S1_5").onmouseout = function() {
                    document.getElementById("Drawer_S1_5").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S1_6_status = false;
                document.getElementById("DoorLeft_S1_6").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S1_6_status = false;
                document.getElementById("DoorRight_S1_6").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S1_6_status = true;
                document.getElementById("DoorLeft_S1_6").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S1_6_status = true;
                document.getElementById("DoorRight_S1_6").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S1_6_status == true) {
                document.getElementById("DoorLeft_S1_6").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_6").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S1_6").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_6").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S1_6").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_6").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S1_6").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_6").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S1_6_status == true) {
                document.getElementById("DoorRight_S1_6").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_6").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S1_6").onmouseout = function() {
                    document.getElementById("DoorRight_S1_6").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S1_6").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_6").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S1_6").onmouseout = function() {
                    document.getElementById("DoorRight_S1_6").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S1_6_status = false;
                document.getElementById("DoubleDoor_S1_6").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S1_6_status = true;
                document.getElementById("DoubleDoor_S1_6").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S1_6_status == true) {
                document.getElementById("DoubleDoor_S1_6").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_6").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S1_6").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_6").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S1_6").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_6").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S1_6").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_6").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S1_6_status = true;
                document.getElementById("Drawer_S1_6").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S1_6_status = true;
                document.getElementById("Drawer_S1_6").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S1_6_status == true) {
                document.getElementById("Drawer_S1_6").onmouseover = function() { 
                    document.getElementById("Drawer_S1_6").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S1_6").onmouseout = function() {
                    document.getElementById("Drawer_S1_6").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S1_6").onmouseover = function() { 
                    document.getElementById("Drawer_S1_6").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S1_6").onmouseout = function() {
                    document.getElementById("Drawer_S1_6").src="icons/Drawer_Disable.jpg";
                };
            }


            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S1_7_status = false;
                document.getElementById("DoorLeft_S1_7").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S1_7_status = false;
                document.getElementById("DoorRight_S1_7").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S1_7_status = true;
                document.getElementById("DoorLeft_S1_7").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S1_7_status = true;
                document.getElementById("DoorRight_S1_7").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S1_7_status == true) {
                document.getElementById("DoorLeft_S1_7").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_7").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S1_7").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_7").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S1_7").onmouseover = function() { 
                    document.getElementById("DoorLeft_S1_7").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S1_7").onmouseout = function() {
                    document.getElementById("DoorLeft_S1_7").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S1_7_status == true) {
                document.getElementById("DoorRight_S1_7").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_7").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S1_7").onmouseout = function() {
                    document.getElementById("DoorRight_S1_7").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S1_7").onmouseover = function() { 
                    document.getElementById("DoorRight_S1_7").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S1_7").onmouseout = function() {
                    document.getElementById("DoorRight_S1_7").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S1_7_status = false;
                document.getElementById("DoubleDoor_S1_7").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S1_7_status = true;
                document.getElementById("DoubleDoor_S1_7").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S1_7_status == true) {
                document.getElementById("DoubleDoor_S1_7").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_7").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S1_7").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_7").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S1_7").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S1_7").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S1_7").onmouseout = function() {
                    document.getElementById("DoubleDoor_S1_7").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section1Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S1_7_status = true;
                document.getElementById("Drawer_S1_7").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S1_7_status = true;
                document.getElementById("Drawer_S1_7").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S1_7_status == true) {
                document.getElementById("Drawer_S1_7").onmouseover = function() { 
                    document.getElementById("Drawer_S1_7").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S1_7").onmouseout = function() {
                    document.getElementById("Drawer_S1_7").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S1_7").onmouseover = function() { 
                    document.getElementById("Drawer_S1_7").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S1_7").onmouseout = function() {
                    document.getElementById("Drawer_S1_7").src="icons/Drawer_Disable.jpg";
                };
            }

    
            
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2  || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S2_status = false;
                document.getElementById("DoorLeft_S2").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S2_status = false;
                document.getElementById("DoorRight_S2").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S2_status = true;
                document.getElementById("DoorLeft_S2").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S2_status = true;
                document.getElementById("DoorRight_S2").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S2_status == true) {
                document.getElementById("DoorLeft_S2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S2").onmouseout = function() {
                    document.getElementById("DoorLeft_S2").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S2").onmouseout = function() {
                    document.getElementById("DoorLeft_S2").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S2_status == true) {
                document.getElementById("DoorRight_S2").onmouseover = function() { 
                    document.getElementById("DoorRight_S2").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S2").onmouseout = function() {
                    document.getElementById("DoorRight_S2").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S2").onmouseover = function() { 
                    document.getElementById("DoorRight_S2").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S2").onmouseout = function() {
                    document.getElementById("DoorRight_S2").src="icons/DoorRight_Disable.jpg";
                };
            }
    
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4  || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S2_status = false;
                document.getElementById("DoubleDoor_S2").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S2_status = true;
                document.getElementById("DoubleDoor_S2").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S2_status == true) {
                document.getElementById("DoubleDoor_S2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2").src="icons/DoubleDoor_Disable.jpg";
                };
            }
    
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0])  > 45 || document.getElementById("internalShelving_sect2_1").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value  < 38 ) {
                self.options.Drawer_S2_status = false;
                document.getElementById("Drawer_S2").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S2_status = true;
                document.getElementById("Drawer_S2").src="icons/Drawer_Close.jpg";  
            }
            if (self.options.Drawer_S2_status == true) {
                document.getElementById("Drawer_S2").onmouseover = function() { 
                    document.getElementById("Drawer_S2").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S2").onmouseout = function() {
                    document.getElementById("Drawer_S2").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S2").onmouseover = function() { 
                    document.getElementById("Drawer_S2").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S2").onmouseout = function() {
                    document.getElementById("Drawer_S2").src="icons/Drawer_Disable.jpg";
                };
            }

            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S2_2_status = false;
                document.getElementById("DoorLeft_S2_2").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S2_2_status = false;
                document.getElementById("DoorRight_S2_2").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S2_2_status = true;
                document.getElementById("DoorLeft_S2_2").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S2_2_status = true;
                document.getElementById("DoorRight_S2_2").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S2_2_status == true) {
                document.getElementById("DoorLeft_S2_2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_2").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S2_2").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_2").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S2_2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_2").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S2_2").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_2").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S2_2_status == true) {
                document.getElementById("DoorRight_S2_2").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_2").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S2_2").onmouseout = function() {
                    document.getElementById("DoorRight_S2_2").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S2_2").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_2").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S2_2").onmouseout = function() {
                    document.getElementById("DoorRight_S2_2").src="icons/DoorRight_Disable.jpg";
                };
            }

            if ( self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S2_2_status = false;
                document.getElementById("DoubleDoor_S2_2").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S2_2_status = true;
                document.getElementById("DoubleDoor_S2_2").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S2_2_status == true) {
                document.getElementById("DoubleDoor_S2_2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_2").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S2_2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_2").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S2_2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_2").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S2_2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_2").src="icons/DoubleDoor_Disable.jpg";
                };
            }

            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect2_2").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value  < 38 ){
                self.options.Drawer_S2_2_status = false;
                document.getElementById("Drawer_S2_2").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S2_2_status = true;
                document.getElementById("Drawer_S2_2").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S2_2_status == true) {
                document.getElementById("Drawer_S2_2").onmouseover = function() { 
                    document.getElementById("Drawer_S2_2").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S2_2").onmouseout = function() {
                    document.getElementById("Drawer_S2_2").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S2_2").onmouseover = function() { 
                    document.getElementById("Drawer_S2_2").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S2_2").onmouseout = function() {
                    document.getElementById("Drawer_S2_2").src="icons/Drawer_Disable.jpg";
                };
            }
    
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S2_3_status = false;
                document.getElementById("DoorLeft_S2_3").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S2_3_status = false;
                document.getElementById("DoorRight_S2_3").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S2_3_status = true;
                document.getElementById("DoorLeft_S2_3").src="icons/DoorLeft_Close.jpg";

                self.options.RightDoor_S2_3_status = true;
                document.getElementById("DoorRight_S2_3").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S2_3_status == true) {
                document.getElementById("DoorLeft_S2_3").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_3").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S2_3").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_3").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S2_3").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_3").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S2_3").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_3").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S2_3_status == true) {
                document.getElementById("DoorRight_S2_3").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_3").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S2_3").onmouseout = function() {
                    document.getElementById("DoorRight_S2_3").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S2_3").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_3").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S2_3").onmouseout = function() {
                    document.getElementById("DoorRight_S2_3").src="icons/DoorRight_Disable.jpg";
                };
            }
            
            if ( self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S2_3_status = false;
                document.getElementById("DoubleDoor_S2_3").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S2_3_status = true;
                document.getElementById("DoubleDoor_S2_3").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S2_3_status == true) {
                document.getElementById("DoubleDoor_S2_3").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_3").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S2_3").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_3").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S2_3").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_3").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S2_3").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_3").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect2_3").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S2_3_status = false;
                document.getElementById("Drawer_S2_3").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S2_3_status = true;
                document.getElementById("Drawer_S2_3").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S2_3_status == true) {
                document.getElementById("Drawer_S2_3").onmouseover = function() { 
                    document.getElementById("Drawer_S2_3").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S2_3").onmouseout = function() {
                    document.getElementById("Drawer_S2_3").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S2_3").onmouseover = function() { 
                    document.getElementById("Drawer_S2_3").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S2_3").onmouseout = function() {
                    document.getElementById("Drawer_S2_3").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S2_4_status = false;
                document.getElementById("DoorLeft_S2_4").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S2_4_status = false;
                document.getElementById("DoorRight_S2_4").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S2_4_status = true;
                document.getElementById("DoorLeft_S2_4").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S2_4_status = true;
                document.getElementById("DoorRight_S2_4").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S2_4_status == true) {
                document.getElementById("DoorLeft_S2_4").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_4").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S2_4").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_4").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S2_4").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_4").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S2_4").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_4").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S2_4_status == true) {
                document.getElementById("DoorRight_S2_4").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_4").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S2_4").onmouseout = function() {
                    document.getElementById("DoorRight_S2_4").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S2_4").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_4").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S2_4").onmouseout = function() {
                    document.getElementById("DoorRight_S2_4").src="icons/DoorRight_Disable.jpg";
                };
            }
  

            if ( self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S2_4_status = false;
                document.getElementById("DoubleDoor_S2_4").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S2_4_status = true;
                document.getElementById("DoubleDoor_S2_4").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S2_4_status == true) {
                document.getElementById("DoubleDoor_S2_4").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_4").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S2_4").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_4").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S2_4").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_4").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S2_4").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_4").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect2_4").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S2_4_status = false;
                document.getElementById("Drawer_S2_4").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S2_4_status = true;
                document.getElementById("Drawer_S2_4").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S2_4_status == true) {
                document.getElementById("Drawer_S2_4").onmouseover = function() { 
                    document.getElementById("Drawer_S2_4").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S2_4").onmouseout = function() {
                    document.getElementById("Drawer_S2_4").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S2_4").onmouseover = function() { 
                    document.getElementById("Drawer_S2_4").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S2_4").onmouseout = function() {
                    document.getElementById("Drawer_S2_4").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S2_5_status = false;
                document.getElementById("DoorLeft_S2_5").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S2_5_status = false;
                document.getElementById("DoorRight_S2_5").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S2_5_status = true;
                document.getElementById("DoorLeft_S2_5").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S2_5_status = true;
                document.getElementById("DoorRight_S2_5").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S2_5_status == true) {
                document.getElementById("DoorLeft_S2_5").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_5").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S2_5").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_5").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S2_5").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_5").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S2_5").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_5").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S2_5_status == true) {
                document.getElementById("DoorRight_S2_5").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_5").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S2_5").onmouseout = function() {
                    document.getElementById("DoorRight_S2_5").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S2_5").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_5").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S2_5").onmouseout = function() {
                    document.getElementById("DoorRight_S2_5").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S2_5_status = false;
                document.getElementById("DoubleDoor_S2_5").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S2_5_status = true;
                document.getElementById("DoubleDoor_S2_5").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S2_5_status == true) {
                document.getElementById("DoubleDoor_S2_5").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_5").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S2_5").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_5").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S2_5").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_5").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S2_5").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_5").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S2_5_status = true;
                document.getElementById("Drawer_S2_5").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S2_5_status = true;
                document.getElementById("Drawer_S2_5").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S2_5_status == true) {
                document.getElementById("Drawer_S2_5").onmouseover = function() { 
                    document.getElementById("Drawer_S2_5").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S2_5").onmouseout = function() {
                    document.getElementById("Drawer_S2_5").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S2_5").onmouseover = function() { 
                    document.getElementById("Drawer_S2_5").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S2_5").onmouseout = function() {
                    document.getElementById("Drawer_S2_5").src="icons/Drawer_Disable.jpg";
                };
            }       
    

            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S2_6_status = false;
                document.getElementById("DoorLeft_S2_6").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S2_6_status = false;
                document.getElementById("DoorRight_S2_6").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S2_6_status = true;
                document.getElementById("DoorLeft_S2_6").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S2_6_status = true;
                document.getElementById("DoorRight_S2_6").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S2_6_status == true) {
                document.getElementById("DoorLeft_S2_6").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_6").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S2_6").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_6").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S2_6").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_6").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S2_6").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_6").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S2_6_status == true) {
                document.getElementById("DoorRight_S2_6").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_6").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S2_6").onmouseout = function() {
                    document.getElementById("DoorRight_S2_6").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S2_6").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_6").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S2_6").onmouseout = function() {
                    document.getElementById("DoorRight_S2_6").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S2_6_status = false;
                document.getElementById("DoubleDoor_S2_6").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S2_6_status = true;
                document.getElementById("DoubleDoor_S2_6").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S2_6_status == true) {
                document.getElementById("DoubleDoor_S2_6").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_6").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S2_6").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_6").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S2_6").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_6").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S2_6").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_6").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S2_6_status = true;
                document.getElementById("Drawer_S2_6").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S2_6_status = true;
                document.getElementById("Drawer_S2_6").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S2_6_status == true) {
                document.getElementById("Drawer_S2_6").onmouseover = function() { 
                    document.getElementById("Drawer_S2_6").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S2_6").onmouseout = function() {
                    document.getElementById("Drawer_S2_6").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S2_6").onmouseover = function() { 
                    document.getElementById("Drawer_S2_6").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S2_6").onmouseout = function() {
                    document.getElementById("Drawer_S2_6").src="icons/Drawer_Disable.jpg";
                };
            }    
    

            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S2_7_status = false;
                document.getElementById("DoorLeft_S2_7").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S2_7_status = false;
                document.getElementById("DoorRight_S2_7").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S2_7_status = true;
                document.getElementById("DoorLeft_S2_7").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S2_7_status = true;
                document.getElementById("DoorRight_S2_7").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S2_7_status == true) {
                document.getElementById("DoorLeft_S2_7").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_7").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S2_7").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_7").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S2_7").onmouseover = function() { 
                    document.getElementById("DoorLeft_S2_7").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S2_7").onmouseout = function() {
                    document.getElementById("DoorLeft_S2_7").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S2_7_status == true) {
                document.getElementById("DoorRight_S2_7").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_7").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S2_7").onmouseout = function() {
                    document.getElementById("DoorRight_S2_7").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S2_7").onmouseover = function() { 
                    document.getElementById("DoorRight_S2_7").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S2_7").onmouseout = function() {
                    document.getElementById("DoorRight_S2_7").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S2_7_status = false;
                document.getElementById("DoubleDoor_S2_7").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S2_7_status = true;
                document.getElementById("DoubleDoor_S2_7").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S2_7_status == true) {
                document.getElementById("DoubleDoor_S2_7").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_7").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S2_7").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_7").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S2_7").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S2_7").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S2_7").onmouseout = function() {
                    document.getElementById("DoubleDoor_S2_7").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section2Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S2_7_status = true;
                document.getElementById("Drawer_S2_7").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S2_7_status = true;
                document.getElementById("Drawer_S2_7").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S2_7_status == true) {
                document.getElementById("Drawer_S2_7").onmouseover = function() { 
                    document.getElementById("Drawer_S2_7").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S2_7").onmouseout = function() {
                    document.getElementById("Drawer_S2_7").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S2_7").onmouseover = function() { 
                    document.getElementById("Drawer_S2_7").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S2_7").onmouseout = function() {
                    document.getElementById("Drawer_S2_7").src="icons/Drawer_Disable.jpg";
                };
            }    
    
    
            //3_1
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2  || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S3_status = false;
                document.getElementById("DoorLeft_S3_1").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S3_status = false;
                document.getElementById("DoorRight_S3_1").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S3_status = true;
                document.getElementById("DoorLeft_S3_1").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S3_status = true;
                document.getElementById("DoorRight_S3_1").src="icons/DoorRight_Close.jpg";
            }

            if (self.options.LeftDoor_S3_status == true) {
                document.getElementById("DoorLeft_S3_1").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_1").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S3_1").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_1").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S3_1").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_1").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S3_1").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_1").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S3_status == true) {
                document.getElementById("DoorRight_S3_1").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_1").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S3_1").onmouseout = function() {
                    document.getElementById("DoorRight_S3_1").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S3_1").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_1").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S3_1").onmouseout = function() {
                    document.getElementById("DoorRight_S3_1").src="icons/DoorRight_Disable.jpg";
                };
            }
    
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4  || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S3_status = false;
                document.getElementById("DoubleDoor_S3_1").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S3_status = true;
                document.getElementById("DoubleDoor_S3_1").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S3_status == true) {
                document.getElementById("DoubleDoor_S3_1").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_1").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S3_1").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_1").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S3_1").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_1").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S3_1").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_1").src="icons/DoubleDoor_Disable.jpg";
                };
            }
    
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0])  > 45 || document.getElementById("internalShelving_sect3_1").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value  < 38 ) {
                self.options.Drawer_S3_status = false;
                document.getElementById("Drawer_S3_1").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S3_status = true;
                document.getElementById("Drawer_S3_1").src="icons/Drawer_Close.jpg";  
            }

            if (self.options.Drawer_S3_status == true) {
                document.getElementById("Drawer_S3_1").onmouseover = function() { 
                    document.getElementById("Drawer_S3_1").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S3_1").onmouseout = function() {
                    document.getElementById("Drawer_S3_1").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S3_1").onmouseover = function() { 
                    document.getElementById("Drawer_S3_1").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S3_1").onmouseout = function() {
                    document.getElementById("Drawer_S3_1").src="icons/Drawer_Disable.jpg";
                };
            }

            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S3_2_status = false;
                document.getElementById("DoorLeft_S3_2").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S3_2_status = false;
                document.getElementById("DoorRight_S3_2").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S3_2_status = true;
                document.getElementById("DoorLeft_S3_2").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S3_2_status = true;
                document.getElementById("DoorRight_S3_2").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S3_2_status == true) {
                document.getElementById("DoorLeft_S3_2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_2").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S3_2").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_2").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S3_2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_2").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S3_2").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_2").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S3_2_status == true) {
                document.getElementById("DoorRight_S3_2").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_2").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S3_2").onmouseout = function() {
                    document.getElementById("DoorRight_S3_2").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S3_2").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_2").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S3_2").onmouseout = function() {
                    document.getElementById("DoorRight_S3_2").src="icons/DoorRight_Disable.jpg";
                };
            }

            if ( self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S3_2_status = false;
                document.getElementById("DoubleDoor_S3_2").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S3_2_status = true;
                document.getElementById("DoubleDoor_S3_2").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S3_2_status == true) {
                document.getElementById("DoubleDoor_S3_2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_2").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S3_2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_2").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S3_2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_2").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S3_2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_2").src="icons/DoubleDoor_Disable.jpg";
                };
            }

            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect3_2").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value  < 38 ){
                self.options.Drawer_S3_2_status = false;
                document.getElementById("Drawer_S3_2").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S3_2_status = true;
                document.getElementById("Drawer_S3_2").src="icons/Drawer_Close.jpg";
            }

            if (self.options.Drawer_S3_2_status == true) {
                document.getElementById("Drawer_S3_2").onmouseover = function() { 
                    document.getElementById("Drawer_S3_2").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S3_2").onmouseout = function() {
                    document.getElementById("Drawer_S3_2").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S3_2").onmouseover = function() { 
                    document.getElementById("Drawer_S3_2").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S3_2").onmouseout = function() {
                    document.getElementById("Drawer_S3_2").src="icons/Drawer_Disable.jpg";
                };
            }
    
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S3_3_status = false;
                document.getElementById("DoorLeft_S3_3").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S3_3_status = false;
                document.getElementById("DoorRight_S3_3").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S3_3_status = true;
                document.getElementById("DoorLeft_S3_3").src="icons/DoorLeft_Close.jpg";

                self.options.RightDoor_S3_3_status = true;
                document.getElementById("DoorRight_S3_3").src="icons/DoorRight_Close.jpg";
            }

            if (self.options.LeftDoor_S3_3_status == true) {
                document.getElementById("DoorLeft_S3_3").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_3").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S3_3").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_3").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S3_3").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_3").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S3_3").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_3").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S3_3_status == true) {
                document.getElementById("DoorRight_S3_3").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_3").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S3_3").onmouseout = function() {
                    document.getElementById("DoorRight_S3_3").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S3_3").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_3").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S3_3").onmouseout = function() {
                    document.getElementById("DoorRight_S3_3").src="icons/DoorRight_Disable.jpg";
                };
            }
            
            if ( self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S3_3_status = false;
                document.getElementById("DoubleDoor_S3_3").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S3_3_status = true;
                document.getElementById("DoubleDoor_S3_3").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S3_3_status == true) {
                document.getElementById("DoubleDoor_S3_3").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_3").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S3_3").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_3").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S3_3").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_3").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S3_3").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_3").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect3_3").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S3_3_status = false;
                document.getElementById("Drawer_S3_3").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S3_3_status = true;
                document.getElementById("Drawer_S3_3").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S3_3_status == true) {
                document.getElementById("Drawer_S3_3").onmouseover = function() { 
                    document.getElementById("Drawer_S3_3").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S3_3").onmouseout = function() {
                    document.getElementById("Drawer_S3_3").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S3_3").onmouseover = function() { 
                    document.getElementById("Drawer_S3_3").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S3_3").onmouseout = function() {
                    document.getElementById("Drawer_S3_3").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S3_4_status = false;
                document.getElementById("DoorLeft_S3_4").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S3_4_status = false;
                document.getElementById("DoorRight_S3_4").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S3_4_status = true;
                document.getElementById("DoorLeft_S3_4").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S3_4_status = true;
                document.getElementById("DoorRight_S3_4").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S3_4_status == true) {
                document.getElementById("DoorLeft_S3_4").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_4").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S3_4").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_4").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S3_4").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_4").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S3_4").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_4").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S3_4_status == true) {
                document.getElementById("DoorRight_S3_4").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_4").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S3_4").onmouseout = function() {
                    document.getElementById("DoorRight_S3_4").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S3_4").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_4").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S3_4").onmouseout = function() {
                    document.getElementById("DoorRight_S3_4").src="icons/DoorRight_Disable.jpg";
                };
            }
  

            if ( self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S3_4_status = false;
                document.getElementById("DoubleDoor_S3_4").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S3_4_status = true;
                document.getElementById("DoubleDoor_S3_4").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S3_4_status == true) {
                document.getElementById("DoubleDoor_S3_4").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_4").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S3_4").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_4").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S3_4").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_4").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S3_4").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_4").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect3_4").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S3_4_status = false;
                document.getElementById("Drawer_S3_4").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S3_4_status = true;
                document.getElementById("Drawer_S3_4").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S3_4_status == true) {
                document.getElementById("Drawer_S3_4").onmouseover = function() { 
                    document.getElementById("Drawer_S3_4").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S3_4").onmouseout = function() {
                    document.getElementById("Drawer_S3_4").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S3_4").onmouseover = function() { 
                    document.getElementById("Drawer_S3_4").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S3_4").onmouseout = function() {
                    document.getElementById("Drawer_S3_4").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S3_5_status = false;
                document.getElementById("DoorLeft_S3_5").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S3_5_status = false;
                document.getElementById("DoorRight_S3_5").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S3_5_status = true;
                document.getElementById("DoorLeft_S3_5").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S3_5_status = true;
                document.getElementById("DoorRight_S3_5").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S3_5_status == true) {
                document.getElementById("DoorLeft_S3_5").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_5").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S3_5").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_5").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S3_5").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_5").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S3_5").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_5").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S3_5_status == true) {
                document.getElementById("DoorRight_S3_5").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_5").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S3_5").onmouseout = function() {
                    document.getElementById("DoorRight_S3_5").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S3_5").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_5").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S3_5").onmouseout = function() {
                    document.getElementById("DoorRight_S3_5").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S3_5_status = false;
                document.getElementById("DoubleDoor_S3_5").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S3_5_status = true;
                document.getElementById("DoubleDoor_S3_5").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S3_5_status == true) {
                document.getElementById("DoubleDoor_S3_5").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_5").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S3_5").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_5").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S3_5").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_5").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S3_5").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_5").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S3_5_status = true;
                document.getElementById("Drawer_S3_5").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S3_5_status = true;
                document.getElementById("Drawer_S3_5").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S3_5_status == true) {
                document.getElementById("Drawer_S3_5").onmouseover = function() { 
                    document.getElementById("Drawer_S3_5").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S3_5").onmouseout = function() {
                    document.getElementById("Drawer_S3_5").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S3_5").onmouseover = function() { 
                    document.getElementById("Drawer_S3_5").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S3_5").onmouseout = function() {
                    document.getElementById("Drawer_S3_5").src="icons/Drawer_Disable.jpg";
                };
            } 
            

            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S3_6_status = false;
                document.getElementById("DoorLeft_S3_6").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S3_6_status = false;
                document.getElementById("DoorRight_S3_6").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S3_6_status = true;
                document.getElementById("DoorLeft_S3_6").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S3_6_status = true;
                document.getElementById("DoorRight_S3_6").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S3_6_status == true) {
                document.getElementById("DoorLeft_S3_6").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_6").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S3_6").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_6").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S3_6").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_6").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S3_6").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_6").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S3_6_status == true) {
                document.getElementById("DoorRight_S3_6").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_6").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S3_6").onmouseout = function() {
                    document.getElementById("DoorRight_S3_6").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S3_6").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_6").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S3_6").onmouseout = function() {
                    document.getElementById("DoorRight_S3_6").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S3_6_status = false;
                document.getElementById("DoubleDoor_S3_6").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S3_6_status = true;
                document.getElementById("DoubleDoor_S3_6").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S3_6_status == true) {
                document.getElementById("DoubleDoor_S3_6").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_6").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S3_6").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_6").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S3_6").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_6").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S3_6").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_6").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S3_6_status = true;
                document.getElementById("Drawer_S3_6").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S3_6_status = true;
                document.getElementById("Drawer_S3_6").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S3_6_status == true) {
                document.getElementById("Drawer_S3_6").onmouseover = function() { 
                    document.getElementById("Drawer_S3_6").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S3_6").onmouseout = function() {
                    document.getElementById("Drawer_S3_6").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S3_6").onmouseover = function() { 
                    document.getElementById("Drawer_S3_6").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S3_6").onmouseout = function() {
                    document.getElementById("Drawer_S3_6").src="icons/Drawer_Disable.jpg";
                };
            } 


            
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S3_7_status = false;
                document.getElementById("DoorLeft_S3_7").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S3_7_status = false;
                document.getElementById("DoorRight_S3_7").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S3_7_status = true;
                document.getElementById("DoorLeft_S3_7").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S3_7_status = true;
                document.getElementById("DoorRight_S3_7").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S3_7_status == true) {
                document.getElementById("DoorLeft_S3_7").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_7").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S3_7").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_7").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S3_7").onmouseover = function() { 
                    document.getElementById("DoorLeft_S3_7").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S3_7").onmouseout = function() {
                    document.getElementById("DoorLeft_S3_7").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S3_7_status == true) {
                document.getElementById("DoorRight_S3_7").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_7").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S3_7").onmouseout = function() {
                    document.getElementById("DoorRight_S3_7").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S3_7").onmouseover = function() { 
                    document.getElementById("DoorRight_S3_7").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S3_7").onmouseout = function() {
                    document.getElementById("DoorRight_S3_7").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S3_7_status = false;
                document.getElementById("DoubleDoor_S3_7").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S3_7_status = true;
                document.getElementById("DoubleDoor_S3_7").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S3_7_status == true) {
                document.getElementById("DoubleDoor_S3_7").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_7").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S3_7").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_7").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S3_7").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S3_7").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S3_7").onmouseout = function() {
                    document.getElementById("DoubleDoor_S3_7").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section3Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S3_7_status = true;
                document.getElementById("Drawer_S3_7").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S3_7_status = true;
                document.getElementById("Drawer_S3_7").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S3_7_status == true) {
                document.getElementById("Drawer_S3_7").onmouseover = function() { 
                    document.getElementById("Drawer_S3_7").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S3_7").onmouseout = function() {
                    document.getElementById("Drawer_S3_7").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S3_7").onmouseover = function() { 
                    document.getElementById("Drawer_S3_7").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S3_7").onmouseout = function() {
                    document.getElementById("Drawer_S3_7").src="icons/Drawer_Disable.jpg";
                };
            } 

    


            //4_1
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2  || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S4_status = false;
                document.getElementById("DoorLeft_S4_1").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S4_status = false;
                document.getElementById("DoorRight_S4_1").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S4_status = true;
                document.getElementById("DoorLeft_S4_1").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S4_status = true;
                document.getElementById("DoorRight_S4_1").src="icons/DoorRight_Close.jpg";
            }

            if (self.options.LeftDoor_S4_status == true) {
                document.getElementById("DoorLeft_S4_1").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_1").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S4_1").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_1").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S4_1").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_1").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S4_1").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_1").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S4_status == true) {
                document.getElementById("DoorRight_S4_1").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_1").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S4_1").onmouseout = function() {
                    document.getElementById("DoorRight_S4_1").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S4_1").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_1").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S4_1").onmouseout = function() {
                    document.getElementById("DoorRight_S4_1").src="icons/DoorRight_Disable.jpg";
                };
            }
    
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4  || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S4_status = false;
                document.getElementById("DoubleDoor_S4_1").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S4_status = true;
                document.getElementById("DoubleDoor_S4_1").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S4_status == true) {
                document.getElementById("DoubleDoor_S4_1").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_1").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S4_1").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_1").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S4_1").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_1").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S4_1").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_1").src="icons/DoubleDoor_Disable.jpg";
                };
            }
    
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0])  > 45 || document.getElementById("internalShelving_sect4_1").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value  < 38 ) {
                self.options.Drawer_S4_status = false;
                document.getElementById("Drawer_S4_1").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S4_status = true;
                document.getElementById("Drawer_S4_1").src="icons/Drawer_Close.jpg";  
            }

            if (self.options.Drawer_S4_status == true) {
                document.getElementById("Drawer_S4_1").onmouseover = function() { 
                    document.getElementById("Drawer_S4_1").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S4_1").onmouseout = function() {
                    document.getElementById("Drawer_S4_1").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S4_1").onmouseover = function() { 
                    document.getElementById("Drawer_S4_1").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S4_1").onmouseout = function() {
                    document.getElementById("Drawer_S4_1").src="icons/Drawer_Disable.jpg";
                };
            }

            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S4_2_status = false;
                document.getElementById("DoorLeft_S4_2").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S4_2_status = false;
                document.getElementById("DoorRight_S4_2").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S4_2_status = true;
                document.getElementById("DoorLeft_S4_2").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S4_2_status = true;
                document.getElementById("DoorRight_S4_2").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S4_2_status == true) {
                document.getElementById("DoorLeft_S4_2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_2").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S4_2").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_2").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S4_2").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_2").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S4_2").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_2").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S4_2_status == true) {
                document.getElementById("DoorRight_S4_2").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_2").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S4_2").onmouseout = function() {
                    document.getElementById("DoorRight_S4_2").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S4_2").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_2").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S4_2").onmouseout = function() {
                    document.getElementById("DoorRight_S4_2").src="icons/DoorRight_Disable.jpg";
                };
            }

            if ( self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S4_2_status = false;
                document.getElementById("DoubleDoor_S4_2").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S4_2_status = true;
                document.getElementById("DoubleDoor_S4_2").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S4_2_status == true) {
                document.getElementById("DoubleDoor_S4_2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_2").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S4_2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_2").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S4_2").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_2").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S4_2").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_2").src="icons/DoubleDoor_Disable.jpg";
                };
            }

            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect4_2").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value  < 38 ){
                self.options.Drawer_S4_2_status = false;
                document.getElementById("Drawer_S4_2").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S4_2_status = true;
                document.getElementById("Drawer_S4_2").src="icons/Drawer_Close.jpg";
            }

            if (self.options.Drawer_S4_2_status == true) {
                document.getElementById("Drawer_S4_2").onmouseover = function() { 
                    document.getElementById("Drawer_S4_2").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S4_2").onmouseout = function() {
                    document.getElementById("Drawer_S4_2").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S4_2").onmouseover = function() { 
                    document.getElementById("Drawer_S4_2").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S4_2").onmouseout = function() {
                    document.getElementById("Drawer_S4_2").src="icons/Drawer_Disable.jpg";
                };
            }
    
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) * 1.2 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S4_3_status = false;
                document.getElementById("DoorLeft_S4_3").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S4_3_status = false;
                document.getElementById("DoorRight_S4_3").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S4_3_status = true;
                document.getElementById("DoorLeft_S4_3").src="icons/DoorLeft_Close.jpg";

                self.options.RightDoor_S4_3_status = true;
                document.getElementById("DoorRight_S4_3").src="icons/DoorRight_Close.jpg";
            }

            if (self.options.LeftDoor_S4_3_status == true) {
                document.getElementById("DoorLeft_S4_3").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_3").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S4_3").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_3").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S4_3").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_3").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S4_3").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_3").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S4_3_status == true) {
                document.getElementById("DoorRight_S4_3").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_3").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S4_3").onmouseout = function() {
                    document.getElementById("DoorRight_S4_3").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S4_3").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_3").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S4_3").onmouseout = function() {
                    document.getElementById("DoorRight_S4_3").src="icons/DoorRight_Disable.jpg";
                };
            }
            
            if ( self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S4_3_status = false;
                document.getElementById("DoubleDoor_S4_3").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S4_3_status = true;
                document.getElementById("DoubleDoor_S4_3").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S4_3_status == true) {
                document.getElementById("DoubleDoor_S4_3").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_3").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S4_3").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_3").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S4_3").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_3").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S4_3").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_3").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect4_3").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S4_3_status = false;
                document.getElementById("Drawer_S4_3").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S4_3_status = true;
                document.getElementById("Drawer_S4_3").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S4_3_status == true) {
                document.getElementById("Drawer_S4_3").onmouseover = function() { 
                    document.getElementById("Drawer_S4_3").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S4_3").onmouseout = function() {
                    document.getElementById("Drawer_S4_3").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S4_3").onmouseover = function() { 
                    document.getElementById("Drawer_S4_3").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S4_3").onmouseout = function() {
                    document.getElementById("Drawer_S4_3").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S4_4_status = false;
                document.getElementById("DoorLeft_S4_4").src="icons/DoorLeft_Disable.jpg";
    
                self.options.RightDoor_S4_4_status = false;
                document.getElementById("DoorRight_S4_4").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S4_4_status = true;
                document.getElementById("DoorLeft_S4_4").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S4_4_status = true;
                document.getElementById("DoorRight_S4_4").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S4_4_status == true) {
                document.getElementById("DoorLeft_S4_4").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_4").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S4_4").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_4").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S4_4").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_4").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S4_4").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_4").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S4_4_status == true) {
                document.getElementById("DoorRight_S4_4").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_4").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S4_4").onmouseout = function() {
                    document.getElementById("DoorRight_S4_4").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S4_4").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_4").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S4_4").onmouseout = function() {
                    document.getElementById("DoorRight_S4_4").src="icons/DoorRight_Disable.jpg";
                };
            }
  

            if ( self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S4_4_status = false;
                document.getElementById("DoubleDoor_S4_4").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S4_4_status = true;
                document.getElementById("DoubleDoor_S4_4").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S4_4_status == true) {
                document.getElementById("DoubleDoor_S4_4").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_4").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S4_4").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_4").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S4_4").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_4").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S4_4").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_4").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById("internalShelving_sect4_4").value != 0 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S4_4_status = false;
                document.getElementById("Drawer_S4_4").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S4_4_status = true;
                document.getElementById("Drawer_S4_4").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S4_4_status == true) {
                document.getElementById("Drawer_S4_4").onmouseover = function() { 
                    document.getElementById("Drawer_S4_4").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S4_4").onmouseout = function() {
                    document.getElementById("Drawer_S4_4").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S4_4").onmouseover = function() { 
                    document.getElementById("Drawer_S4_4").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S4_4").onmouseout = function() {
                    document.getElementById("Drawer_S4_4").src="icons/Drawer_Disable.jpg";
                };
            }
    
    
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S4_5_status = false;
                document.getElementById("DoorLeft_S4_5").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S4_5_status = false;
                document.getElementById("DoorRight_S4_5").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S4_5_status = true;
                document.getElementById("DoorLeft_S4_5").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S4_5_status = true;
                document.getElementById("DoorRight_S4_5").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S4_5_status == true) {
                document.getElementById("DoorLeft_S4_5").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_5").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S4_5").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_5").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S4_5").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_5").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S4_5").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_5").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S4_5_status == true) {
                document.getElementById("DoorRight_S4_5").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_5").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S4_5").onmouseout = function() {
                    document.getElementById("DoorRight_S4_5").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S4_5").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_5").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S4_5").onmouseout = function() {
                    document.getElementById("DoorRight_S4_5").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S4_5_status = false;
                document.getElementById("DoubleDoor_S4_5").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S4_5_status = true;
                document.getElementById("DoubleDoor_S4_5").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S4_5_status == true) {
                document.getElementById("DoubleDoor_S4_5").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_5").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S4_5").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_5").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S4_5").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_5").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S4_5").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_5").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S4_5_status = true;
                document.getElementById("Drawer_S4_5").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S4_5_status = true;
                document.getElementById("Drawer_S4_5").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S4_5_status == true) {
                document.getElementById("Drawer_S4_5").onmouseover = function() { 
                    document.getElementById("Drawer_S4_5").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S4_5").onmouseout = function() {
                    document.getElementById("Drawer_S4_5").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S4_5").onmouseover = function() { 
                    document.getElementById("Drawer_S4_5").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S4_5").onmouseout = function() {
                    document.getElementById("Drawer_S4_5").src="icons/Drawer_Disable.jpg";
                };
            }  
            

            
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S4_6_status = false;
                document.getElementById("DoorLeft_S4_6").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S4_6_status = false;
                document.getElementById("DoorRight_S4_6").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S4_6_status = true;
                document.getElementById("DoorLeft_S4_6").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S4_6_status = true;
                document.getElementById("DoorRight_S4_6").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S4_6_status == true) {
                document.getElementById("DoorLeft_S4_6").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_6").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S4_6").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_6").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S4_6").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_6").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S4_6").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_6").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S4_6_status == true) {
                document.getElementById("DoorRight_S4_6").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_6").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S4_6").onmouseout = function() {
                    document.getElementById("DoorRight_S4_6").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S4_6").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_6").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S4_6").onmouseout = function() {
                    document.getElementById("DoorRight_S4_6").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S4_6_status = false;
                document.getElementById("DoubleDoor_S4_6").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S4_6_status = true;
                document.getElementById("DoubleDoor_S4_6").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S4_6_status == true) {
                document.getElementById("DoubleDoor_S4_6").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_6").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S4_6").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_6").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S4_6").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_6").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S4_6").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_6").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S4_6_status = true;
                document.getElementById("Drawer_S4_6").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S4_6_status = true;
                document.getElementById("Drawer_S4_6").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S4_6_status == true) {
                document.getElementById("Drawer_S4_6").onmouseover = function() { 
                    document.getElementById("Drawer_S4_6").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S4_6").onmouseout = function() {
                    document.getElementById("Drawer_S4_6").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S4_6").onmouseover = function() { 
                    document.getElementById("Drawer_S4_6").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S4_6").onmouseout = function() {
                    document.getElementById("Drawer_S4_6").src="icons/Drawer_Disable.jpg";
                };
            }  


            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) >  parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) *1.2 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 60 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0])  < 27 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) > 90 ) {
                self.options.LeftDoor_S4_7_status = false;
                document.getElementById("DoorLeft_S4_7").src="icons/DoorLeft_Disable.jpg";

                self.options.RightDoor_S4_7_status = false;
                document.getElementById("DoorRight_S4_7").src="icons/DoorRight_Disable.jpg";
            }
            else{
                self.options.LeftDoor_S4_7_status = true;
                document.getElementById("DoorLeft_S4_7").src="icons/DoorLeft_Close.jpg";
    
                self.options.RightDoor_S4_7_status = true;
                document.getElementById("DoorRight_S4_7").src="icons/DoorRight_Close.jpg";
            }
            if (self.options.LeftDoor_S4_7_status == true) {
                document.getElementById("DoorLeft_S4_7").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_7").src="icons/DoorLeft_Open.jpg";
                };
                document.getElementById("DoorLeft_S4_7").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_7").src="icons/DoorLeft_Close.jpg";
                };
            } else {
                document.getElementById("DoorLeft_S4_7").onmouseover = function() { 
                    document.getElementById("DoorLeft_S4_7").src="icons/DoorLeft_Disable.jpg";
                };
                document.getElementById("DoorLeft_S4_7").onmouseout = function() {
                    document.getElementById("DoorLeft_S4_7").src="icons/DoorLeft_Disable.jpg";
                };
            }
            if (self.options.RightDoor_S4_7_status == true) {
                document.getElementById("DoorRight_S4_7").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_7").src="icons/DoorRight_Open.jpg";
                };
                document.getElementById("DoorRight_S4_7").onmouseout = function() {
                    document.getElementById("DoorRight_S4_7").src="icons/DoorRight_Close.jpg";
                };
            } else {
                document.getElementById("DoorRight_S4_7").onmouseover = function() { 
                    document.getElementById("DoorRight_S4_7").src="icons/DoorRight_Disable.jpg";
                };
                document.getElementById("DoorRight_S4_7").onmouseout = function() {
                    document.getElementById("DoorRight_S4_7").src="icons/DoorRight_Disable.jpg";
                };
            }
            if ( self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) * 2.4 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 40 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0])  < 35 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) > 90) {
                self.options.DoubleDoor_S4_7_status = false;
                document.getElementById("DoubleDoor_S4_7").src="icons/DoubleDoor_Disable.jpg";
            }
            else{
                self.options.DoubleDoor_S4_7_status = true;
                document.getElementById("DoubleDoor_S4_7").src="icons/DoubleDoor_Close.jpg";
            }
            if (self.options.DoubleDoor_S4_7_status == true) {
                document.getElementById("DoubleDoor_S4_7").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_7").src="icons/DoubleDoor_Open.jpg";
                };
                document.getElementById("DoubleDoor_S4_7").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_7").src="icons/DoubleDoor_Close.jpg";
                };
            } else {
                document.getElementById("DoubleDoor_S4_7").onmouseover = function() { 
                    document.getElementById("DoubleDoor_S4_7").src="icons/DoubleDoor_Disable.jpg";
                };
                document.getElementById("DoubleDoor_S4_7").onmouseout = function() {
                    document.getElementById("DoubleDoor_S4_7").src="icons/DoubleDoor_Disable.jpg";
                };
            }
            if (self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) < 26 || self.options.section4Length - 3.6 + 1.8 * ((self.options.amountOfSections-1) / self.options.amountOfSections) > 79 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0])  < 15 || parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) > 45 || document.getElementById('subdomainDepth_Cabinet_Dimensionsz').value < 38 ) {
                self.options.Drawer_S4_7_status = true;
                document.getElementById("Drawer_S4_7").src="icons/Drawer_Disable.jpg";
            }
            else{
                self.options.Drawer_S4_7_status = true;
                document.getElementById("Drawer_S4_7").src="icons/Drawer_Close.jpg";
            }
            if (self.options.Drawer_S4_7_status == true) {
                document.getElementById("Drawer_S4_7").onmouseover = function() { 
                    document.getElementById("Drawer_S4_7").src="icons/Drawer_Open.jpg";
                };
                document.getElementById("Drawer_S4_7").onmouseout = function() {
                    document.getElementById("Drawer_S4_7").src="icons/Drawer_Close.jpg";
                };
            } else {
                document.getElementById("Drawer_S4_7").onmouseover = function() { 
                    document.getElementById("Drawer_S4_7").src="icons/Drawer_Disable.jpg";
                };
                document.getElementById("Drawer_S4_7").onmouseout = function() {
                    document.getElementById("Drawer_S4_7").src="icons/Drawer_Disable.jpg";
                };
            }  



        },
    
    
        calculateOutput: function() {
    
            //place to store all material per M1
            
            //bottom
            let materialBottomPerM2 = 0
            let priceBottom = 0
            this.scene.traverse(function(child) {
                if (child.name.includes('shelf_0_0')) {
                    materialBottomPerM2 += ((child.geometry.parameters.width - 3.6) / 100) * (child.geometry.parameters.depth / 100);
                    priceBottom = materialBottomPerM2 * 150;
                }
            });
            
            //top
            let materialTopPerM2 = 0
            let priceTop = 0
            this.scene.traverse(function(child) {
                if (child.name.includes('shelf_0_1')) {
                    materialTopPerM2 += (child.geometry.parameters.width / 100) * (child.geometry.parameters.depth / 100);
                    priceTop = materialTopPerM2 * 150;
                }
            });
    
            //base pillars 
            let materialSidePerM2 = 0
            let priceSide = 0
            this.scene.traverse(function(child) {
                if (child.name.includes('pillar_')) {
                    materialSidePerM2 += ((child.geometry.parameters.height - 2.3 )/ 100) * (child.geometry.parameters.depth / 100) ;
                }
                priceSide = materialSidePerM2 * 150
            });
    
    
            //vertical dividers
            let materialVerDividersPerM2 = 0
            let priceVerDividers = 0
            if (this.scene.getObjectByName('BackPlate') != undefined) {
                this.scene.traverse(function(child) {
                    if (child.name.includes('pillar') && !child.name.includes('_')) {
                        materialVerDividersPerM2 += ((child.geometry.parameters.height - 0.2 ) / 100) * ((child.geometry.parameters.depth - 2.8) / 100) ;  
                    }
                    priceVerDividers = materialVerDividersPerM2 * 150
                });
             } else {
                this.scene.traverse(function(child) {
                    if (child.name.includes('pillar') && !child.name.includes('_')) {
                        materialVerDividersPerM2 += ((child.geometry.parameters.height - 0.2 ) / 100) * ((child.geometry.parameters.depth - 1) / 100) ;
                    }  
                    priceVerDividers = materialVerDividersPerM2 * 150
    
                });
                
            }
    
            //horizontal dividers
            let materialHorDividersPerM2 = 0
            let priceHorDividers = 0
            if (this.scene.getObjectByName('BackPlate') != undefined) {
                this.scene.traverse(function(child) {
                    if (child.name.includes('horizontalDivider') ) {
                        materialHorDividersPerM2 += ((child.geometry.parameters.width - 3.6) / 100) * ((child.geometry.parameters.depth) / 100);  
                    }
                    priceHorDividers = materialHorDividersPerM2 * 150
                });
             } else {
                this.scene.traverse(function(child) {
                    if (child.name.includes('horizontalDivider') ) {
                        materialHorDividersPerM2 += ((child.geometry.parameters.width - 3.6) / 100) * ((child.geometry.parameters.depth - 1.8) / 100);
                    }  
                    priceHorDividers = materialHorDividersPerM2 * 150
    
                });
                
            }
     
            
            //shelving group
            let materialShelvingPerM2 = 0
            let materialShelvingGlassM2 = 0
            let priceShelving = 0
            this.scene.traverse(function(child) {
                if (child.name.includes('shelvingGroup') ) {
                        for (i = 0; i < child.children.length; i++) {
                            if (child.children[i].material.name === 'glass') {
                                materialShelvingGlassM2 += ((child.children[i].geometry.parameters.width - 3.6) / 100) * ((child.children[i].geometry.parameters.depth) / 100); 
                            } else {
                                materialShelvingPerM2 += ((child.children[i].geometry.parameters.width - 3.6) / 100) * ((child.children[i].geometry.parameters.depth) / 100); 
                            }
                        } 
                }

                priceShelving = (materialShelvingPerM2 * 150) + (materialShelvingGlassM2 * 250)
            });
    
    
            //calculate prices of bottom part
            let legsFinalPrice = 0 //default bottom is slider so  start price is +35
    
            switch (this.options.statusLegs) {
    
                case 0: 
                legsFinalPrice = 45;
                break;
    
                case 1: 
                legsFinalPrice = 60;
                break;
    
                case 2: 
                legsFinalPrice = 180;
                break;
    
                default:break;
    
            }
        
    
    
            //find and sort prices of doors & drawers
    
            //catch all drawers
            let temppriceDrawer = 0
            this.scene.traverse(function(child) {
    
                if (child.name.includes('drawer')) {
    
                    temppriceDrawer += 55; //drawer rails 75eur price base
                    
                    temppriceDrawer += ((child.children[0].geometry.parameters.width - 0.7 ) / 100) * ( (child.children[0].geometry.parameters.height - (0.4 + 1.8 + 0.3) ) / 100) * 150;
    
                }
    
            });
        
            //catch all double doors
            let temppriceDoubleDoor = 0
            this.scene.traverse(function(child) {
                if (child.name.includes('doorType3')) {
                    temppriceDoubleDoor += 32.5; //double door hinges 55eur price base             
                    temppriceDoubleDoor += ((child.geometry.parameters.width - 0.6) / 100) * ((child.geometry.parameters.height - (0.4 + 2 + 0.3) ) / 100) * 150;
    
                }
            });
    
            //catch all standard left + right doors
            let temppriceStandardDoor = 0
            this.scene.traverse(function(child) {
    
                if (child.name.includes('doorType1') ) {
    
                    temppriceStandardDoor += 40; //double door hinges 30eur price base
                
                    temppriceStandardDoor += ((child.geometry.parameters.width - 0.7) / 100) * ( (child.geometry.parameters.height -  - (0.4 + 1.8 + 0.3) ) / 100) * 150;
                
                }
            });
    
    
    
            //backplate price
            let materialBackPlatePerM2 = 0
            let priceBackPlate = 0
            if (this.options.statusLegs === 1) {
                this.scene.traverse(function(child) {
                    if (child.name.includes('BackPlate')) {
                        materialBackPlatePerM2 += ((child.geometry.parameters.width - (1.8 * 2)) / 100) * ( ((child.geometry.parameters.height - (1.8 + 0.6)) + 7) / 100);
                        priceBackPlate = materialBackPlatePerM2 * 150;                               
                    }
                });
             } else {
                this.scene.traverse(function(child) {
                    if (child.name.includes('BackPlate')) {
                        materialBackPlatePerM2 += ((child.geometry.parameters.width - (1.8 * 2)) / 100) * ((child.geometry.parameters.height - (1.8 + 0.6)) / 100);
                        priceBackPlate = materialBackPlatePerM2 * 150;                               
                    }
                });
            }
    
            //catch all grommet
            let temppriceGrommet = 0
            this.scene.traverse(function(child) {
     
                 if (child.name.includes('Cable')) {
     
                    temppriceGrommet += 18; 
  
     
                 }
     
            });
    
            
            //final price
            this.output.price = priceBottom + priceTop + priceSide + priceVerDividers + priceHorDividers + priceShelving + legsFinalPrice + temppriceStandardDoor + temppriceDoubleDoor + temppriceDrawer + priceBackPlate + temppriceGrommet;
    

            document.getElementById("productPrice").innerHTML = 'â¬' + parseInt(this.output.price,10) 


        },


        
    
    
        //engine render loop
        run: function() {
            var self = this;
    
            function render() {
                deltaTime = Math.max(0.001, Math.min(self.clock.getDelta(), 1));
    
                self.controls.update(deltaTime);
    
                window.requestAnimationFrame(render);
    
                self.engine.render(self.scene, self.camera);
                
    
            }
            render();
        },
    
    
    
    
    
        calculateDistanceBetweenShelves: function(shelvesHeight) {
            // check free height
            var freeHeight = shelvesHeight - this.options.shelvesNum * this.options.shelf.thickness;
            return parseInt(freeHeight / (this.options.shelvesNum - 1));
        },
    
        
    
    
    
    
    
    
      
    
    
        //*** create base carcas
        
        createShelving: function() {
            //var updateGui = false;
            this.shelving = new THREE.Group();
            
            // check pillar height, must be enough to fit at least one shelf
            var shelvesHeight = this.options.pillar.height - this.options.distanceFromFloor - this.options.distanceFromTop;
            
            if (shelvesHeight <= this.options.shelf.thickness) {
                // adjust pillar height and shelvesNum
                shelvesHeight = this.options.shelf.thickness;
                this.options.pillar.height = shelvesHeight + this.options.distanceFromFloor + this.options.distanceFromTop;
                this.options.shelvesNum = 1;
                //updateGui = true;
                //this.notifier.notify('Only one shelf can fit, shelving height and number of shelves were been adjusted');
            }
            
            // if there's only one shelf then it already fits due to the previous check
            if (this.options.shelvesNum > 1) {
                var distanceBetweenShelves = this.calculateDistanceBetweenShelves(shelvesHeight);
                if (distanceBetweenShelves < this.distanceBetweenShelvesMin) {
                    // adjust shelvesNum
                    //updateGui = true;
                    distanceBetweenShelves = this.distanceBetweenShelvesMin;
                    shelvesNum = parseInt((distanceBetweenShelves + shelvesHeight) / (distanceBetweenShelves + this.options.shelf.thickness));
                    if (shelvesNum < 1) {
                        shelvesNum = 1;
                    }
                    this.options.shelvesNum = shelvesNum;
                    
                    if (shelvesNum > 1) {
                        distanceBetweenShelves = this.calculateDistanceBetweenShelves(shelvesHeight);
                    }
    
                    //this.notifier.notify('Number of shelves was been adjusted as there is not enough space to fit all of them');
                }
                this.options.distanceBetweenShelves = distanceBetweenShelves;
            }
    
            this.createPillarProto();
    
            this.createShelfProto_Mod();
            
            this.createShelf_Mod(0,0);
            this.createShelf_Mod(0,1);
    
            this.createPillar(0);
            this.createPillar(1);
            /* for (var i = 1; i <= this.options.amountOfSections; i++) {
                this.createPillar(i);
            } */
        
    
            this.shelving.position.x = -this.options.sectionsNum * (this.options.shelf.length + this.options.pillar.thickness) / 2 + 
            (this.options.shelf.length + this.options.pillar.thickness) / 2;
            this.shelving.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            this.scene.add(this.shelving);
    
    
            this.options.distanceBetweenShelvesOnDemand = this.options.pillar.height / 4;
            this.options.distanceBetweenShelvesOnDemand_section2 = this.options.pillar.height / 4;
        },
    
    
    
    
    
        //ShelfMod (Base) 
        createShelfProto_Mod: function() {
            var self = this;
            var geometry = new THREE.BoxGeometry(this.options.shelf.length, this.options.shelf.thickness, this.options.shelf.width);
    
            //shelf material
            var material = new THREE.MeshStandardMaterial({color: this.options.shelf.color, shadowSide: THREE.DoubleSide, roughness:1, metallness: 0, shadowSide: THREE.DoubleSide,});
            var shelfProto = new THREE.Mesh(geometry, material);
            shelfProto.castShadow = true
            shelfProto.receiveShadow = true
            shelfProto.name = 'shelfProto';
    
            if (!this.shelfProto) {
                this.shelfProto = shelfProto;
            } else {
                shelfProto.material = this.shelfProto.material.clone();
                this.shelfProto = shelfProto;
                this.updateShelfProtoMaterial();
            }
        },
        createShelf_Mod: function(sectionNum, shelfNum) {
            var shelf = this.shelfProto.clone();
            shelf.name = 'shelf_' + sectionNum + '_' + shelfNum;
            shelf.castShadow = true
            shelf.receiveShadow = true
            shelf.position.y = shelfNum * (this.options.distanceBetweenShelves + this.options.shelf.thickness) + this.options.distanceFromFloor + this.options.shelf.thickness / 2;
            this.shelving.add(shelf);
            return shelf;
        },
        updateShelfProtoMaterial: function() {
            this.shelfProto.material.needsUpdate = true;
            var texture = this.shelfProto.material.map;
            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
            texture.repeat.x = this.options.shelf.length / this.boardTextureStep * this.boardTextureRepeatXPerStep * 0.5;  
            texture.repeat.y = this.options.shelf.width / this.boardTextureStep * this.boardTextureRepeatYPerStep;
            texture.rotation = 89.5;
        },    
    
        //PillarMod (Base) 
        createPillarProto: function() {
            var self = this;
            var geometry = new THREE.BoxGeometry(this.options.pillar.thickness, this.options.pillar.height, this.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: this.options.pillar.color, shadowSide: THREE.DoubleSide, roughness:1, metallness: 0});
    
            var pillarProto = new THREE.Mesh(geometry, material);
            pillarProto.castShadow = true
            pillarProto.receiveShadow = true
    
            pillarProto.name = 'pillarProto';
            
            pillarProto.position.y = this.options.pillar.height / 2;
            
            if (!this.pillarProto) {
                this.pillarProto = pillarProto; 
            } else {
                pillarProto.material = this.pillarProto.material.clone();
                this.pillarProto = pillarProto;
                this.updatePillarProtoMaterial();
            }
        },
    
        createPillar: function(sectionNum) {
            var pillar = this.pillarProto.clone();
            pillar.name = 'pillar_' + sectionNum;
            pillar.position.x = sectionNum * (this.options.shelf.length + this.options.pillar.thickness) - this.options.shelf.length / 2 - this.options.pillar.thickness / 2;
            this.shelving.add(pillar);
            return pillar;
        },
        
        updatePillarProtoMaterial: function() {
            this.pillarProto.material.needsUpdate = true;
            var texture = this.pillarProto.material.map;
            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
            texture.repeat.x = this.options.shelf.width / this.boardTextureStep * this.boardTextureRepeatXPerStep;
            texture.repeat.y = this.options.pillar.height / this.boardTextureStep * this.boardTextureRepeatYPerStep;  
            texture.rotation = 0;        
        },
    
    
    
    
    
    
    
        
    
    
    
    
    
    

    
    
    
    
        showHintPanel: function(message, duration = 10000) {
            const hintPanel = document.getElementById("HintPanel");
            hintPanel.style.opacity = 1;
            hintPanel.innerHTML = message;
            setTimeout(function() {
                hintPanel.style.opacity = 0;
            }, duration);
        },
    
        
        startVerticals: function() {
    
            switch (document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value) {
            
                case '0':

        
                    if ( this.options.amountOfSections === 1) {

                        if (this.options.URLParamsUsed === 'true') {
                            this.options.URLParamsUsed = false;
                        } else {}

                    } else {
                        
                        if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) <= 80) { 

                            this.options.amountOfSections = 1;
                            this.options.wasChangedSectionsLengthOrNot = 0;
                            this.scene.remove(this.shelving);
                            this.updatePillarProtoMaterial();
                            this.updateShelfProtoMaterial();
                            this.createShelving();
                            this.calculateOutput();
                            
                            if (this.options.URLParamsUsed === 'true') {
                                this.options.section1Length = this.options.shelf.length;
                                this.options.URLParamsUsed = false;
                            } else {
                                this.options.section1Length = this.options.shelf.length
                            }

                            

                            //update ui html dimensions 
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'none');
                            setDisplay(2, 'none');
                            setDisplay(3, 'none');
                            var setDisplay4 = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay4(4, 'none');




                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`2Partition_S2_${i}`).style.display = 'none';
                            }
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`3Partition_S3_${i}`).style.display = 'none';
                            }



                            var pillarPositionS1 = Math.floor(this.options.section1Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }
                            
                            //remove section 3 and 2's pillar and back
                            this.options.pillar1Position = 0;
                            this.options.pillar1ChangedOrNot = false

                            this.scene.remove(this.pillar1);
                            this.options.pillar2Position = 0;
                            this.options.pillar2ChangedOrNot = false

                            this.scene.remove(this.pillar2);
                            this.options.pillar3Position = 0;
                            this.options.pillar3ChangedOrNot = false

                            this.scene.remove(this.pillar3);

                            this.scene.remove(this.section2_WireframeMesh2_1);
                            this.scene.remove(this.section3_WireframeMesh3_1);
                            this.scene.remove(this.section4_WireframeMesh4_1);

                            this.scene.remove(this.RayCastRecieverSection2_1, this.RayCastRecieverSection3_1, this.RayCastRecieverSection4_1);

                            this.removeHorizontalDividers();
                            this.removeHorizontalDividersS2();

                            this.createWireframeBack_section1_1();
                            this.createRayCastRecieverSection1_1();

                            this.updateDoorButtons();
                            this.calculateOutput();

                        }else {
                            this.showHintPanel("At this width, you cannot reduce the number of vertical partitions.");

                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = this.options.amountOfSections -1;
                        }
                    }
                
                break;    
    
                case '1':

                    if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) < 46) {

                        this.showHintPanel("At this width, you cannot reduce the number of vertical partitions.");

                        document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = this.options.amountOfSections-1;
                    } else { 
               
                        if (this.options.URLParamsUsed === 'true') {
                            this.options.pillar1Position = +this.params.get('V1_pX'); 
                            this.options.section1Length = +this.params.get('s1L');
                            this.options.section2Length = +this.params.get('s2L'); 
                            this.options.pillar1ChangedOrNot = true;
                            this.options.URLParamsUsed = false;
                        } else {
                            this.options.pillar1Position = 0;
                            this.options.pillar1ChangedOrNot = false
                            this.options.section1Length = this.options.shelf.length / 2
                            this.options.section2Length = this.options.shelf.length / 2 

                            this.options.sectionHeight_2_1 = this.options.sectionHeight_1_1;
                        }

                        this.options.amountOfSections = 2;
                        this.options.wasChangedSectionsLengthOrNot = 1;


                        //update ui html dimensions 
                        var pillarPositionS1 = Math.floor(this.options.section1Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) + "cm";
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                        }

                        var pillarPositionS2 = Math.floor(this.options.section2Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) + "cm";
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                        }
                    

                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`2Partition_S2_${i}`).style.display = 'none';
                        }
                        for (let i = 1; i <= 7; i++) {
                            document.getElementById(`3Partition_S3_${i}`).style.display = 'none';
                        }


                        var setDisplay = (section, display) => {
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                            }
                        };
                        setDisplay(1, 'flex');
                        setDisplay(2, 'flex');
                        setDisplay(3, 'none');
                        

                        //remove other pillars
                        this.options.pillar2Position = 0;
                        this.options.pillar2ChangedOrNot = false
                        this.scene.remove(this.pillar2);

                        this.options.pillar3Position = 0;
                        this.options.pillar3ChangedOrNot = false
                        this.scene.remove(this.pillar3);

                        //as well as skeletons of sections
                        this.scene.remove(this.section3_WireframeMesh3_1);
                        this.scene.remove(this.section4_WireframeMesh4_1);
                        this.scene.remove(this.RayCastRecieverSection3_1, this.RayCastRecieverSection4_1);
                                            
                        this.removeHorizontalDividers();
                        this.removeHorizontalDividersS2();
                        this.removeHorizontalDividersS3();

                        this.createPillar1();

                        this.createWireframeBack_section1_1();
                        this.createRayCastRecieverSection1_1();

                        this.createWireframeBack_section2_1();
                        this.createRayCastRecieverSection2_1();


                        this.updateDoorButtons();
                        this.calculateOutput();
                    }
                break;
    
                
                case '2':

                    if ( this.options.amountOfSections === 3) {
                    } else {
                        if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) < 68) {

                        this.showHintPanel("Every compartment has a minimum width dimension. Another vertical partition cannot be inserted at this width.");
                        
                        document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = this.options.amountOfSections-1;
                        } else { 
        
                            //restore position of pillar and section length ð
                            if ( this.options.URLParamsUsed  === 'true') {
                                this.options.pillar1Position = +this.params.get('V1_pX'); 
                                this.options.pillar2Position = +this.params.get('V2_pX'); 
                                this.options.pillar3Position = +this.params.get('V3_pX'); 
                                this.options.section1Length = +this.params.get('s1L');
                                this.options.section2Length = +this.params.get('s2L'); 
                                this.options.section3Length = +this.params.get('s3L'); 
                                this.options.pillar1ChangedOrNot = true;
                                this.options.pillar2ChangedOrNot = true;                            
                                this.options.URLParamsUsed = false;                         
                            } else {
                                this.options.pillar1Position = 0;
                                this.options.pillar1ChangedOrNot = false
                                this.options.pillar2Position = 0;
                                this.options.pillar2ChangedOrNot = false

                                this.options.section1Length = this.options.shelf.length / 3
                                this.options.section2Length = this.options.shelf.length / 3 
                                this.options.section3Length = this.options.shelf.length / 3
        
                                this.options.sectionHeight_2_1 = this.options.sectionHeight_1_1;
                            }
        
        
                            this.options.amountOfSections = 3;
                            this.options.wasChangedSectionsLengthOrNot = 1;
                        
        
                            //update ui html dimensions 
                            var pillarPositionS1 = Math.floor(this.options.section1Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor(this.options.section2Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }

                            var pillarPositionS3 = Math.floor(this.options.section3Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                            }
        
        
                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 7; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'flex');
        

                            
                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`2Partition_S2_${i}`).style.display = 'flex';
                            }


                            for (let i = 1; i <= 7; i++) {
                                document.getElementById(`3Partition_S3_${i}`).style.display = 'none';
                            }

        

                            //update ui html dimensions 
        
                            this.removeHorizontalDividers();
                            this.removeHorizontalDividersS2();
                            this.removeHorizontalDividersS3();
                            this.removeHorizontalDividersS4();
        
                            this.options.pillar3Position = 0;
                            this.options.pillar3ChangedOrNot = false
        
                            this.scene.remove(this.pillar3);
        
                            this.scene.remove(this.section4_WireframeMesh4_1);
                            this.scene.remove(this.RayCastRecieverSection4_1);
        
        
                            this.createPillar1();
                            this.createPillar2();
        
                            this.createWireframeBack_section1_1();
                            this.createWireframeBack_section2_1();
                            this.createWireframeBack_section3_1();
        
                            this.createRayCastRecieverSection1_1();
                            this.createRayCastRecieverSection2_1();
                            this.createRayCastRecieverSection3_1();
        
                            this.updateDoorButtons();
                            this.calculateOutput();
        
                        }
                    }
                break;

                case '3':
    
                    if (this.options.amountOfSections === 4) {
                    } else {
                        if ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) < 90) {

                            this.showHintPanel("Every compartment has a minimum width dimension. Another vertical partition cannot be inserted at this width.");

                            document.getElementById('subdomainNumberElementCorpus_Cabinet_Dimensionsz').value = this.options.amountOfSections - 1;
                        } 
                        else {
                            if (this.options.URLParamsUsed === 'true') {
                                this.options.pillar1Position = +this.params.get('V1_pX'); 
                                this.options.pillar2Position = +this.params.get('V2_pX'); 
                                this.options.pillar3Position = +this.params.get('V3_pX'); 
                                this.options.section1Length = +this.params.get('s1L');
                                this.options.section2Length = +this.params.get('s2L'); 
                                this.options.section3Length = +this.params.get('s3L'); 
                                this.options.section4Length = +this.params.get('s4L'); 
                                this.options.pillar1ChangedOrNot = true;
                                this.options.pillar2ChangedOrNot = true;   
                                this.options.pillar3ChangedOrNot = true;
                                this.options.URLParamsUsed = false;                         
                            } else {
                                this.options.pillar1Position = 0;
                                this.options.pillar1ChangedOrNot = false
                                this.options.pillar2Position = 0;
                                this.options.pillar2ChangedOrNot = false
                                this.options.pillar3Position = 0;
                                this.options.pillar3ChangedOrNot = false

                                this.options.section1Length = this.options.shelf.length / 4
                                this.options.section2Length = this.options.shelf.length / 4 
                                this.options.section3Length = this.options.shelf.length / 4
                                this.options.section4Length = this.options.shelf.length / 4
        
                                this.options.sectionHeight_3_1 = this.options.sectionHeight_1_1;
                                this.options.sectionHeight_2_1 = this.options.sectionHeight_1_1;
                            }
        
                            this.options.amountOfSections = 4;
                            this.options.wasChangedSectionsLengthOrNot = 1;
        
        
        
        
                            //update ui html dimensions 
                            //get rounded numbers for ui (parseInt...)
        
                            var pillarPositionS1 = Math.floor( this.options.section1Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) +"cm";
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`pillar1PositionField_S1_${i}`).innerHTML = pillarPositionS1;
                            }

                            var pillarPositionS2 = Math.floor( this.options.section2Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) +"cm";
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`pillar2PositionField_S2_${i}`).innerHTML = pillarPositionS2;
                            }

                            var pillarPositionS3 = Math.floor(this.options.section3Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`pillar3PositionField_S3_${i}`).innerHTML = pillarPositionS3;
                            }

                            var pillarPositionS4 = Math.floor(this.options.section4Length - ((1.8*2 + 1.8 * (this.options.amountOfSections-1) ) / this.options.amountOfSections)) + "cm";
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`pillar4PositionField_S4_${i}`).innerHTML = pillarPositionS4;
                            }

                            var setDisplay = (section, display) => {
                                for (let i = 1; i <= 5; i++) {
                                    document.getElementById(`section${section}HTMLWidth_S${section}_${i}`).style.display = display;
                                }
                            };
                            setDisplay(1, 'flex');
                            setDisplay(2, 'flex');
                            setDisplay(3, 'flex');
                            setDisplay(4, 'flex');
                        
                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`2Partition_S2_${i}`).style.display = 'flex';
                            }

                            for (let i = 1; i <= 5; i++) {
                                document.getElementById(`3Partition_S3_${i}`).style.display = 'flex';
                            }
        

                            this.removeHorizontalDividers();
                            this.removeHorizontalDividersS2();
                            this.removeHorizontalDividersS3();
                            this.removeHorizontalDividersS4();
        
                            this.createPillar1();
                            this.createPillar2();
                            this.createPillar3();
        
                            this.createWireframeBack_section1_1();
                            this.createWireframeBack_section2_1();
                            this.createWireframeBack_section3_1();
                            this.createWireframeBack_section4_1();
        
                            this.createRayCastRecieverSection1_1();
                            this.createRayCastRecieverSection2_1();
                            this.createRayCastRecieverSection3_1();
                            this.createRayCastRecieverSection4_1();
        
                            this.updateDoorButtons();
                            this.calculateOutput();
        
                        }
                    }
                break;
    
            }
    
            if (this.options.statusShowDimensions == 1) {
                this.createDimensions();
            }
    

    
            this.closeLeftMenu();
        },
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
        //vertical dividers (columns) creation & management
    
        createPillar1: function() {
            this.scene.remove(this.pillar1);
            var self = this;
            var geometry = new THREE.BoxGeometry(this.options.pillar.thickness, this.options.pillar.height - this.options.shelf.thickness * 2, this.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: this.options.pillar.color});
            var pillar1 = new THREE.Mesh(geometry, material);
            pillar1.castShadow = true
            pillar1.receiveShadow = true
    
            pillar1.position.y = this.options.pillar.height / 2;
            pillar1.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;      
    
            if (self.options.pillar1ChangedOrNot === false && self.options.amountOfSections === 2 ) {
                pillar1.position.x = 0    
            } else if (self.options.pillar1ChangedOrNot === false && self.options.amountOfSections === 3 ) { 
                pillar1.position.x = - self.options.shelf.length / 6; 
            } else if (self.options.pillar1ChangedOrNot === false && self.options.amountOfSections === 4) {
                pillar1.position.x = -self.options.shelf.length / 4
            } else if (self.options.pillar1ChangedOrNot === true ) {
                pillar1.position.x = self.options.pillar1Position;
            }
          
            pillar1.material.needsUpdate = true;
    
            pillar1.material =  this.pillarProto.material;
            pillar1.name = 'pillar1'
            this.pillar1 = pillar1;
            this.scene.add(pillar1);   
        },
    
    
        createPillar2: function() {
    
            this.scene.remove(this.pillar2);
            var self = this;
            var geometry = new THREE.BoxGeometry(this.options.pillar.thickness, this.options.pillar.height - this.options.shelf.thickness * 2, this.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: this.options.pillar.color});
            var pillar2 = new THREE.Mesh(geometry, material);
            pillar2.castShadow = true
            pillar2.receiveShadow = true
    
            pillar2.position.y = this.options.pillar.height / 2;
            pillar2.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
    
            pillar2.material.needsUpdate = true;
    
            
            switch (self.options.amountOfSections) {
                //no need in case 1 or 2 because it's only about more than 2 columns...
                case 3:
    
                    if (self.options.pillar1ChangedOrNot === false && self.options.pillar2ChangedOrNot === false) { 
                        pillar2.position.x = 0 - self.options.shelf.length / 2 + self.options.section1Length * 2
                    } else {
                        pillar2.position.x = self.options.pillar2Position;
                    }
                break
    
                case 4:
                    if (self.options.pillar1ChangedOrNot === false && self.options.pillar2ChangedOrNot === false) { 
                        pillar2.position.x = 0 - self.options.shelf.length / 2 + self.options.section1Length * 2
                    } else  {
                        pillar2.position.x = self.options.pillar2Position;
                    }
                break;
            }

            self.options.pillar2Position = pillar2.position.x;

            pillar2.material =  this.pillarProto.material;
            pillar2.name = 'pillar2';
    
            this.pillar2 = pillar2;
            this.scene.add(pillar2);   
        },
    
    
        createPillar3: function() {
    
            this.scene.remove(this.pillar3);
            var self = this;
            var geometry = new THREE.BoxGeometry(this.options.pillar.thickness, this.options.pillar.height - this.options.shelf.thickness * 2, this.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: this.options.pillar.color});
            var pillar3 = new THREE.Mesh(geometry, material);
            pillar3.castShadow = true
            pillar3.receiveShadow = true
    
            pillar3.position.y = this.options.pillar.height / 2;
            pillar3.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            
            switch (self.options.amountOfSections) {
                //no need in case 1 to 3 because it's only about more than 3 columns
                 case 4:
                     if (self.options.pillar1ChangedOrNot === false && self.options.pillar2ChangedOrNot === false && self.options.pillar3ChangedOrNot === false) { 
                        pillar3.position.x = 0 - self.options.shelf.length / 2 + self.options.section1Length * 3;
                     } else {
                        pillar3.position.x = self.options.pillar3Position;
                     }
                 break;
            }
    
            self.options.pillar3Position = pillar3.position.x;

            pillar3.material.needsUpdate = true;
            pillar3.material =  this.pillarProto.material;
            pillar3.name = 'pillar3';
            this.pillar3 = pillar3;
            this.scene.add(pillar3);   
        },
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        createPlinthLegs: function() {
    
            var self = this;
    
            this.scene.remove(this.plinthLegsGroup);
    
            this.plinthLegsGroup = new THREE.Group();
    
            var materialPlinth = new THREE.MeshStandardMaterial({color: this.options.pillar.color});
    
            //plinth leg left
            var geometry1 = new THREE.BoxGeometry(this.options.pillar.thickness, 5.8, this.options.shelf.width);
            var plinthLeg1 = new THREE.Mesh(geometry1, materialPlinth);
            plinthLeg1.position.y = this.options.pillar.height / 2;
            plinthLeg1.name = 'plinthLeg1';
            plinthLeg1.castShadow = true
            plinthLeg1.receiveShadow = true
    
            plinthLeg1.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
            plinthLeg1.position.y = -2.8
            plinthLeg1.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2
            
            plinthLeg1.material.needsUpdate = true;
            plinthLeg1.material =  this.pillarProto.material.clone();

  
    
    
            this.plinthLegsGroup.add(plinthLeg1);
    
            //plinth leg right
            var geometry2 = new THREE.BoxGeometry(this.options.pillar.thickness, 5.8, this.options.shelf.width);
            var plinthLeg2 = new THREE.Mesh(geometry2, materialPlinth);
            plinthLeg2.position.y = this.options.pillar.height / 2;
            plinthLeg2.name = 'plinthLeg2';
    
            plinthLeg2.position.x = this.shelving.getObjectByName( "pillar_1", true ).position.x;
            plinthLeg2.position.y = -2.8
            plinthLeg2.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2
            
            plinthLeg2.material.needsUpdate = true;
            plinthLeg2.material = this.pillarProto.material.clone();
    
            this.plinthLegsGroup.add(plinthLeg2);

    
            //plinth leg central part
            var geometry3 = new THREE.BoxGeometry(this.options.shelf.length, 7, 2);
            var plinthLeg3 = new THREE.Mesh(geometry3, materialPlinth);
            plinthLeg3.position.y = this.options.pillar.height / 2;
            plinthLeg3.name = 'plinthLeg3';
    
            //align to the left side
            plinthLeg3.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x + self.options.shelf.length / 2 + 1
            
            plinthLeg3.position.y = -2
    
            plinthLeg3.position.z = this.shelving.position.z + self.options.shelf.width / 2 - 2
    
            plinthLeg3.material.needsUpdate = true;
            plinthLeg3.material =  this.shelfProto.material.clone();
            plinthLeg3.material.map.repeat.y = 1;
            //plinthLeg3.material.map.repeat.x = 1;
    
            this.plinthLegsGroup.add(plinthLeg3);
    
            this.scene.add(this.plinthLegsGroup);
    
        },
    
        updatePlinthProtoMaterial: function() {
            this.plinthLegsGroup.plinthLeg1.material.needsUpdate = true;
            var texture = this.plinthLeg1.material.map;
            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
            texture.repeat.x = 0.01;
            texture.repeat.y = this.options.pillar.height / 500 * 1;         
        },
    
    
        createTopPlane: function() {
            var self = this;
            this.scene.remove(this.topPlane);
    
            var geometry = new THREE.BoxGeometry(this.options.shelf.length+4.1, this.options.shelf.thickness+0.2, this.options.shelf.width+0.4);
    
            var material = new THREE.MeshStandardMaterial({  color: self.options.shelf.color, shadowSide: THREE.DoubleSide, roughness:1, metallness: 0});
            
            var topPlane = new THREE.Mesh(geometry, material);
    
            topPlane.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            topPlane.position.x = - 0;
            topPlane.position.y = this.options.pillar.height - this.options.shelf.thickness/2;
    
    
            //topPlane.rotation.x = -Utils.PI_HALF;
    
            topPlane.name = 'topPlane'
            topPlane.material.needsUpdate = true;
            topPlane.material =  this.shelfProto.material;
    
    
            topPlane.visible = true;
            this.topPlane = topPlane;
            this.scene.add(topPlane);
        },
    
    
    
        removeHorizontalDividers: function() {
    
            var self = this 
    
            if (self.scene.getObjectByName( "horizontalDividerSection1_1", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_1", true ));
            }
    
            if (self.scene.getObjectByName( "horizontalDividerSection1_2", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_2", true ));
            }
    
            if (self.scene.getObjectByName( "horizontalDividerSection1_3", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_3", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_4", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection1_5", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_5", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection1_6", true ));
            }

    
            var currentHeight = this.options.pillar.height
    
            
            if (this.section1_WireframeMesh1_1) {
                this.scene.remove(this.section1_WireframeMesh1_1);
            }
            if (this.RayCastRecieverSection1_1) {
                this.scene.remove(this.RayCastRecieverSection1_1);
            }
    
            if (this.section1_WireframeMesh1_2) {
                this.scene.remove(this.section1_WireframeMesh1_2);
            }
            if (this.RayCastRecieverSection1_2) {
                this.scene.remove(this.RayCastRecieverSection1_2);
            }
    
            if (this.section1_WireframeMesh1_3) {
                this.scene.remove(this.section1_WireframeMesh1_3);
            }
            if (this.RayCastRecieverSection1_3) {
                this.scene.remove(this.RayCastRecieverSection1_3);
            }
    
            if (this.section1_WireframeMesh1_4) {
                this.scene.remove(this.section1_WireframeMesh1_4);
            }
            if (this.RayCastRecieverSection1_4) {
                this.scene.remove(this.RayCastRecieverSection1_4);
            }

            if (this.section1_WireframeMesh1_5) {
                this.scene.remove(this.section1_WireframeMesh1_5);
            }
            if (this.RayCastRecieverSection1_5) {
                this.scene.remove(this.RayCastRecieverSection1_5);
            }

            if (this.section1_WireframeMesh1_6) {
                this.scene.remove(this.section1_WireframeMesh1_6);
            }
            if (this.RayCastRecieverSection1_6) {
                this.scene.remove(this.RayCastRecieverSection1_6);
            }
    
            if (this.section1_WireframeMesh1_7) {
                this.scene.remove(this.section1_WireframeMesh1_7);
            }
            if (this.RayCastRecieverSection1_7) {
                this.scene.remove(this.RayCastRecieverSection1_7);
            }



            self.options.sectionHeight_1_1 = currentHeight
            self.options.s1_AmountOfHorDividers = 0
    
            self.options.s1_doorStatus = 1;
            self.options.s1_2_doorStatus = 1;
            self.options.s1_3_doorStatus = 1;
            self.options.s1_4_doorStatus = 1;
            self.options.s1_5_doorStatus = 1;
            self.options.s1_6_doorStatus = 1;
            self.options.s1_7_doorStatus = 1;

            
    
            if ( self.options.shelvesCounterSection1_1 != 0 ) {
                self.options.shelvesCounterSection1_1 = 0
                self.scene.remove(self.shelvingGroup_section1_1);
    
                for (var i = 1; i <= 6; i++) {
                    document.getElementById(`InternalShelving${i}_S1`).style.display = "none";
                }

                document.getElementById("Drawer_S1").style.pointerEvents = "auto";
                document.getElementById("Drawer_Section1").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect1_1").value = '0'
                document.getElementById("sectionMoveInternalShelving_S1_1").style.display = "none";
                document.getElementById("InternalShelving_S1").checked = false;

                document.getElementById("ShoeShelving_sect1_1").value = '0'
                document.getElementById("sectionAmountShoeShelving_S1_1").style.display = "none";
                document.getElementById("ShoeShelving_S1").checked = false;

            } else {}
    
            if ( self.options.shelvesCounterSection1_2 != 0 ) {
                self.options.shelvesCounterSection1_2 = 0
                self.scene.remove(self.shelvingGroup_section1_2);
    
                for (var i = 1; i <= 5; i++) {
                    document.getElementById(`InternalShelving${i}_S1_2`).style.display = "none";
                }
    
                document.getElementById("Drawer_S1_2").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS1_2").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect1_2").value = '0'
                document.getElementById("sectionMoveInternalShelving_S1_2").style.display = "none";
                document.getElementById("InternalShelving_S1_2").checked = false;

                document.getElementById("ShoeShelving_sect1_2").value = '0'
                document.getElementById("sectionAmountShoeShelving_S1_2").style.display = "none";
                document.getElementById("ShoeShelving_S1_2").checked = false;
                
            } else {}

            if ( self.options.shelvesCounterSection1_3 != 0 ) {
                self.options.shelvesCounterSection1_3 = 0
                self.scene.remove(self.shelvingGroup_section1_3);
    
                for (var i = 1; i <= 4; i++) {
                    document.getElementById(`InternalShelving${i}_S1_3`).style.display = "none";
                }

                document.getElementById("Drawer_S1_3").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS1_3").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect1_3").value = '0'
                document.getElementById("sectionMoveInternalShelving_S1_3").style.display = "none";
                document.getElementById("InternalShelving_S1_3").checked = false;

                document.getElementById("ShoeShelving_sect1_3").value = '0'
                document.getElementById("sectionAmountShoeShelving_S1_3").style.display = "none";
                document.getElementById("ShoeShelving_S1_3").checked = false;

            } else {}

            if ( self.options.shelvesCounterSection1_4 != 0 ) {
                self.options.shelvesCounterSection1_4 = 0
                self.scene.remove(self.shelvingGroup_section1_4);
    
                for (var i = 1; i <= 3; i++) {
                    document.getElementById(`InternalShelving${i}_S1_4`).style.display = "none";
                }

                document.getElementById("Drawer_S1_4").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS1_4").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect1_4").value = '0'
                document.getElementById("sectionMoveInternalShelving_S1_4").style.display = "none";
                document.getElementById("InternalShelving_S1_4").checked = false;

                document.getElementById("ShoeShelving_sect1_4").value = '0'
                document.getElementById("sectionAmountShoeShelving_S1_4").style.display = "none";
                document.getElementById("ShoeShelving_S1_4").checked = false;

            } else {}

            if ( self.options.shelvesCounterSection1_5 != 0 ) {
                self.options.shelvesCounterSection1_5 = 0
                self.scene.remove(self.shelvingGroup_section1_5);
    
                for (var i = 1; i <= 2; i++) {
                    document.getElementById(`InternalShelving${i}_S1_5`).style.display = "none";
                }

                document.getElementById("Drawer_S1_5").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS1_5").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect1_5").value = '0'
                document.getElementById("sectionMoveInternalShelving_S1_5").style.display = "none";
                document.getElementById("InternalShelving_S1_5").checked = false;

                document.getElementById("ShoeShelving_sect1_5").value = '0'
                document.getElementById("sectionAmountShoeShelving_S1_5").style.display = "none";
                document.getElementById("ShoeShelving_S1_5").checked = false;

            } else {}
    
            if ( self.options.shelvesCounterSection1_6!= 0 ) {
                self.options.shelvesCounterSection1_6 = 0
                self.scene.remove(self.shelvingGroup_section1_6);
    
                document.getElementById("InternalShelving1_S1_6").style.display = "none";

                document.getElementById("Drawer_S1_6").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS1_6").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect1_6").value = '0'
                document.getElementById("sectionMoveInternalShelving_S1_6").style.display = "none";
                document.getElementById("InternalShelving_S1_6").checked = false;

                document.getElementById("ShoeShelving_sect1_6").value = '0'
                document.getElementById("sectionAmountShoeShelving_S1_6").style.display = "none";
                document.getElementById("ShoeShelving_S1_6").checked = false;

            } else {}
    
    
            document.getElementById("HorizontalPartition_S1_1").checked = false;   
            document.getElementById("RemoveHorizontalPartition_S1_2").checked = true;
            document.getElementById("RemoveHorizontalPartition_S1_3").checked = true;
            document.getElementById("RemoveHorizontalPartition_S1_4").checked = true;
            document.getElementById("RemoveHorizontalPartition_S1_5").checked = true;
            document.getElementById("RemoveHorizontalPartition_S1_6").checked = true;
            document.getElementById("RemoveHorizontalPartition_S1_7").checked = true;
            
    
            document.getElementById("amountHorizontalPartition_S1_1").style.display = "none";

            
            document.getElementById("Height_HorizontalPartition_S1_1").innerHTML = Math.floor(self.options.sectionHeight_1_1 - 0.6 - (1.8*2)) +"cm";
    
    
            if (self.scene.getObjectByName( "doorSection1_1Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection1_1Group'))
            }
            if (self.scene.getObjectByName( "drawerSection1_1Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection1_1Group'))
            }
    
            if (self.scene.getObjectByName( "doorSection1_2Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection1_2Group'))
            }
            if (self.scene.getObjectByName( "drawerSection1_2Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection1_2Group'))
            }
    
            if (self.scene.getObjectByName( "doorSection1_3Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection1_3Group'))
            }
            if (self.scene.getObjectByName( "drawerSection1_3Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection1_3Group'))
            }
    
            if (self.scene.getObjectByName( "doorSection1_4Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection1_4Group'))
            }
            if (self.scene.getObjectByName( "drawerSection1_4Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection1_4Group'))
            }

            if (self.scene.getObjectByName( "doorSection1_5Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection1_5Group'))
            }
            if (self.scene.getObjectByName( "drawerSection1_5Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection1_5Group'))
            }
            if (self.scene.getObjectByName( "drawerSection1_6Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection1_6Group'))
            }
            if (self.scene.getObjectByName( "drawerSection1_7Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection1_7Group'))
            }
            

            self.options.s1_horizDividStatus = 0
            self.options.s1_2_horizDividStatus = 0
            self.options.s1_3_horizDividStatus = 0
            self.options.s1_4_horizDividStatus = 0
            self.options.s1_5_horizDividStatus = 0
            self.options.s1_6_horizDividStatus = 0
            
            self.options.s1_AmountOfHorDividers = 0;
    
            self.calculateOutput();
            self.updateDoorButtons();
    
        },
    
    
        removeHorizontalDividersS2: function() {
    
            var self = this 
    
            
    
            if (self.scene.getObjectByName( "horizontalDividerSection2_1", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_1", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_2", true ));
            }
    
            if (self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_3", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_4", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection2_5", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_5", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection2_6", true ));
            }

    
            var currentHeight = this.options.pillar.height
    
            if (this.section2_WireframeMesh2_1) {
                this.scene.remove(this.section2_WireframeMesh2_1);
            }
            if (this.RayCastRecieverSection2_1) {
                this.scene.remove(this.RayCastRecieverSection2_1);
            }    
    
            if (this.section2_WireframeMesh2_2) {
                this.scene.remove(this.section2_WireframeMesh2_2);
            }
            if (this.RayCastRecieverSection2_2) {
                this.scene.remove(this.RayCastRecieverSection2_2);
            }
    
            if (this.section2_WireframeMesh2_3) {
                this.scene.remove(this.section2_WireframeMesh2_3);
            }
            if (this.RayCastRecieverSection2_3) {
                this.scene.remove(this.RayCastRecieverSection2_3);
            }
    
            if (this.section2_WireframeMesh2_4) {
                this.scene.remove(this.section2_WireframeMesh2_4);
            }
            if (this.RayCastRecieverSection2_4) {
                this.scene.remove(this.RayCastRecieverSection2_4);
            }

            if (this.section2_WireframeMesh2_5) {
                this.scene.remove(this.section2_WireframeMesh2_5);
            }
            if (this.RayCastRecieverSection2_5) {
                this.scene.remove(this.RayCastRecieverSection2_5);
            }
    
            if (this.section2_WireframeMesh2_6) {
                this.scene.remove(this.section2_WireframeMesh2_6);
            }
            if (this.RayCastRecieverSection2_6) {
                this.scene.remove(this.RayCastRecieverSection2_6);
            }

            if (this.section2_WireframeMesh2_7) {
                this.scene.remove(this.section2_WireframeMesh2_7);
            }
            if (this.RayCastRecieverSection2_7) {
                this.scene.remove(this.RayCastRecieverSection2_7);
            }

            self.options.sectionHeight_2_1 = currentHeight
            self.options.s2_AmountOfHorDividers = 0

            document.getElementById("Height_HorizontalPartition_S2_1").innerHTML = Math.floor(self.options.sectionHeight_2_1 - 0.6 - (1.8*2)) +"cm";

    
            if ( self.options.shelvesCounterSection2_1 != 0 ) {
                self.options.shelvesCounterSection2_1 = 0
                self.scene.remove(self.shelvingGroup_section2_1);
    
                for (var i = 1; i <= 6; i++) {
                    document.getElementById(`InternalShelving${i}_S2_1`).style.display = "none";
                }

                document.getElementById("Drawer_S2").style.pointerEvents = "auto";
                document.getElementById("Drawer_Section2").style.pointerEvents = "auto";
                
                document.getElementById("internalShelving_sect2_1").value = '0'
                document.getElementById("sectionMoveInternalShelving_S2_1").style.display = "none";
                document.getElementById("InternalShelving_S2_1").checked = false;

                document.getElementById("ShoeShelving_sect2_1").value = '0'
                document.getElementById("sectionAmountShoeShelving_S2_1").style.display = "none";
                document.getElementById("ShoeShelving_S2_1").checked = false;

            } else {}
    
            if ( self.options.shelvesCounterSection2_2 != 0 ) {
                self.options.shelvesCounterSection2_2 = 0
                self.scene.remove(self.shelvingGroup_section2_2);
    
                for (var i = 1; i <= 5; i++) {
                    document.getElementById(`InternalShelving${i}_S2_2`).style.display = "none";
                }
    
                document.getElementById("Drawer_S2_2").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS2_2").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect2_2").value = '0'
                document.getElementById("sectionMoveInternalShelving_S2_2").style.display = "none";
                document.getElementById("InternalShelving_S2_2").checked = false;

                document.getElementById("ShoeShelving_sect2_2").value = '0'
                document.getElementById("sectionAmountShoeShelving_S2_2").style.display = "none";
                document.getElementById("ShoeShelving_S2_2").checked = false;
                
            } else {}

            if ( self.options.shelvesCounterSection2_3 != 0 ) {
                self.options.shelvesCounterSection2_3 = 0
                self.scene.remove(self.shelvingGroup_section2_3);
    
                for (var i = 1; i <= 4; i++) {
                    document.getElementById(`InternalShelving${i}_S2_3`).style.display = "none";
                }

                document.getElementById("Drawer_S2_3").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS2_3").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect2_3").value = '0'
                document.getElementById("sectionMoveInternalShelving_S2_3").style.display = "none";
                document.getElementById("InternalShelving_S2_3").checked = false;

                document.getElementById("ShoeShelving_sect2_3").value = '0'
                document.getElementById("sectionAmountShoeShelving_S2_3").style.display = "none";
                document.getElementById("ShoeShelving_S2_3").checked = false;

            } else {}

            if ( self.options.shelvesCounterSection2_4 != 0 ) {
                self.options.shelvesCounterSection2_4 = 0
                self.scene.remove(self.shelvingGroup_section2_4);
    
                for (var i = 1; i <= 3; i++) {
                    document.getElementById(`InternalShelving${i}_S2_4`).style.display = "none";
                }

                document.getElementById("Drawer_S2_4").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS2_4").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect2_4").value = '0'
                document.getElementById("sectionMoveInternalShelving_S2_4").style.display = "none";
                document.getElementById("InternalShelving_S2_4").checked = false;
                
                document.getElementById("ShoeShelving_sect2_4").value = '0'
                document.getElementById("sectionAmountShoeShelving_S2_4").style.display = "none";
                document.getElementById("ShoeShelving_S2_4").checked = false;

            } else {}

            if ( self.options.shelvesCounterSection2_5 != 0 ) {
                self.options.shelvesCounterSection2_5 = 0
                self.scene.remove(self.shelvingGroup_section2_5);
    
                for (var i = 1; i <= 2; i++) {
                    document.getElementById(`InternalShelving${i}_S2_5`).style.display = "none";
                }


                document.getElementById("Drawer_S2_5").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS2_5").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect2_5").value = '0'
                document.getElementById("sectionMoveInternalShelving_S2_5").style.display = "none";
                document.getElementById("InternalShelving_S2_5").checked = false;

                document.getElementById("ShoeShelving_sect2_5").value = '0'
                document.getElementById("sectionAmountShoeShelving_S2_5").style.display = "none";
                document.getElementById("ShoeShelving_S2_5").checked = false;

            } else {}
    
            if ( self.options.shelvesCounterSection2_6!= 0 ) {
                self.options.shelvesCounterSection2_6 = 0
                self.scene.remove(self.shelvingGroup_section2_6);
    
                document.getElementById("InternalShelving1_S2_6").style.display = "none";

                document.getElementById("Drawer_S2_6").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS2_6").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect2_6").value = '0'
                document.getElementById("sectionMoveInternalShelving_S2_6").style.display = "none";
                document.getElementById("InternalShelving_S2_6").checked = false;

                document.getElementById("ShoeShelving_sect2_6").value = '0'
                document.getElementById("sectionAmountShoeShelving_S2_6").style.display = "none";
                document.getElementById("ShoeShelving_S2_6").checked = false;

            } else {}

    
            self.options.s2_doorStatus = 1;
            self.options.s2_2_doorStatus = 1;
            self.options.s2_3_doorStatus = 1;
            self.options.s2_4_doorStatus = 1;
            self.options.s2_5_doorStatus = 1;
            self.options.s2_6_doorStatus = 1;
            self.options.s2_7_doorStatus = 1;
        
    
            document.getElementById("HorizontalPartition_S2_1").checked = false;
            document.getElementById("RemoveHorizontalPartition_S2_2").checked = true;
            document.getElementById("RemoveHorizontalPartition_S2_3").checked = true;
            document.getElementById("RemoveHorizontalPartition_S2_4").checked = true;
            document.getElementById("RemoveHorizontalPartition_S2_5").checked = true;
            document.getElementById("RemoveHorizontalPartition_S2_6").checked = true;
            document.getElementById("RemoveHorizontalPartition_S2_7").checked = true;
            document.getElementById("amountHorizontalPartition_S2_1").style.display = "none";

            
        
            if (self.scene.getObjectByName( "doorSection2_1Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection2_1Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_1Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_1Group'))
            }
            if (self.scene.getObjectByName( "doorSection2_2Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection2_2Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_2Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_2Group'))
            }
            if (self.scene.getObjectByName( "doorSection2_3Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection2_3Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_3Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_3Group'))
            }    
            if (self.scene.getObjectByName( "doorSection2_4Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection2_4Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_4Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_4Group'))
            }
            if (self.scene.getObjectByName( "doorSection2_5Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection2_5Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_5Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_5Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_6Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_6Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_7Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_7Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_8Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_8Group'))
            }
            if (self.scene.getObjectByName( "drawerSection2_9Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection2_9Group'))
            }
    
    
            self.options.s2_horizDividStatus = 0
            self.options.s2_2_horizDividStatus = 0
            self.options.s2_3_horizDividStatus = 0
            self.options.s2_4_horizDividStatus = 0
            self.options.s2_5_horizDividStatus = 0
            self.options.s2_6_horizDividStatus = 0
    
            
            self.calculateOutput();
            self.updateDoorButtons();
    
    
        },
    
        removeHorizontalDividersS3: function() {
    
            var self = this 
        
            if (self.scene.getObjectByName( "horizontalDividerSection3_1", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_1", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_2", true ));
            }
    
            if (self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_3", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_4", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection3_5", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_5", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection3_6", true ));
            }


    
            var currentHeight = this.options.pillar.height
    
            if (this.section3_WireframeMesh3_1) {
                this.scene.remove(this.section3_WireframeMesh3_1);
            }
            if (this.RayCastRecieverSection3_1) {
                this.scene.remove(this.RayCastRecieverSection3_1);
            }    
    
            if (this.section3_WireframeMesh3_2) {
                this.scene.remove(this.section3_WireframeMesh3_2);
            }
            if (this.RayCastRecieverSection3_2) {
                this.scene.remove(this.RayCastRecieverSection3_2);
            }
    
            if (this.section3_WireframeMesh3_3) {
                this.scene.remove(this.section3_WireframeMesh3_3);
            }
            if (this.RayCastRecieverSection3_3) {
                this.scene.remove(this.RayCastRecieverSection3_3);
            }
    
            if (this.section3_WireframeMesh3_4) {
                this.scene.remove(this.section3_WireframeMesh3_4);
            }
            if (this.RayCastRecieverSection3_4) {
                this.scene.remove(this.RayCastRecieverSection3_4);
            }

            if (this.section3_WireframeMesh3_5) {
                this.scene.remove(this.section3_WireframeMesh3_5);
            }
            if (this.RayCastRecieverSection3_5) {
                this.scene.remove(this.RayCastRecieverSection3_5);
            }

            if (this.section3_WireframeMesh3_6) {
                this.scene.remove(this.section3_WireframeMesh3_6);
            }
            if (this.RayCastRecieverSection3_6) {
                this.scene.remove(this.RayCastRecieverSection3_6);
            }

            if (this.section3_WireframeMesh3_7) {
                this.scene.remove(this.section3_WireframeMesh3_7);
            }
            if (this.RayCastRecieverSection3_7) {
                this.scene.remove(this.RayCastRecieverSection3_7);
            }

            self.options.sectionHeight_3_1 = currentHeight
            self.options.s3_AmountOfHorDividers = 0

            document.getElementById("Height_HorizontalPartition_S3_1").innerHTML = Math.floor(self.options.sectionHeight_3_1 - 0.6 - (1.8*2)) +"cm";

            if ( self.options.shelvesCounterSection3_1 != 0 ) {
                self.options.shelvesCounterSection3_1 = 0
                self.scene.remove(self.shelvingGroup_section3_1);
    
                for (var i = 1; i <= 6; i++) {
                    document.getElementById(`InternalShelving${i}_S3_1`).style.display = "none";
                }

                document.getElementById("Drawer_S3_1").style.pointerEvents = "auto";
                document.getElementById("Drawer_Section3_1").style.pointerEvents = "auto";
                
                document.getElementById("internalShelving_sect3_1").value = '0'
                document.getElementById("sectionMoveInternalShelving_S3_1").style.display = "none";
                document.getElementById("InternalShelving_S3_1").checked = false;

                document.getElementById("ShoeShelving_sect3_1").value = '0'
                document.getElementById("sectionAmountShoeShelving_S3_1").style.display = "none";
                document.getElementById("ShoeShelving_S3_1").checked = false;

            } else {}
    
            if ( self.options.shelvesCounterSection3_2 != 0 ) {
                self.options.shelvesCounterSection3_2 = 0
                self.scene.remove(self.shelvingGroup_section3_2);
    
                for (var i = 1; i <= 5; i++) {
                    document.getElementById(`InternalShelving${i}_S3_2`).style.display = "none";
                }
    
                document.getElementById("Drawer_S3_2").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS3_2").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect3_2").value = '0'
                document.getElementById("sectionMoveInternalShelving_S3_2").style.display = "none";
                document.getElementById("InternalShelving_S3_2").checked = false;

                document.getElementById("ShoeShelving_sect3_2").value = '0'
                document.getElementById("sectionAmountShoeShelving_S3_2").style.display = "none";
                document.getElementById("ShoeShelving_S3_2").checked = false;
                
            } else {}

            if ( self.options.shelvesCounterSection3_3 != 0 ) {
                self.options.shelvesCounterSection3_3 = 0
                self.scene.remove(self.shelvingGroup_section3_3);
    
                for (var i = 1; i <= 4; i++) {
                    document.getElementById(`InternalShelving${i}_S3_3`).style.display = "none";
                }

                document.getElementById("Drawer_S3_3").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS3_3").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect3_3").value = '0'
                document.getElementById("sectionMoveInternalShelving_S3_3").style.display = "none";
                document.getElementById("InternalShelving_S3_3").checked = false;

                document.getElementById("ShoeShelving_sect3_3").value = '0'
                document.getElementById("sectionAmountShoeShelving_S3_3").style.display = "none";
                document.getElementById("ShoeShelving_S3_3").checked = false;

            } else {}

            if ( self.options.shelvesCounterSection3_4 != 0 ) {
                self.options.shelvesCounterSection3_4 = 0
                self.scene.remove(self.shelvingGroup_section3_4);
    
                for (var i = 1; i <= 3; i++) {
                    document.getElementById(`InternalShelving${i}_S3_4`).style.display = "none";
                }

                document.getElementById("Drawer_S3_4").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS3_4").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect3_4").value = '0'
                document.getElementById("sectionMoveInternalShelving_S3_4").style.display = "none";
                document.getElementById("InternalShelving_S3_4").checked = false;

                document.getElementById("ShoeShelving_sect3_4").value = '0'
                document.getElementById("sectionAmountShoeShelving_S3_4").style.display = "none";
                document.getElementById("ShoeShelving_S3_4").checked = false;

            } else {}

            if ( self.options.shelvesCounterSection3_5 != 0 ) {
                self.options.shelvesCounterSection3_5 = 0
                self.scene.remove(self.shelvingGroup_section3_5);
    
                for (var i = 1; i <= 2; i++) {
                    document.getElementById(`InternalShelving${i}_S3_5`).style.display = "none";
                }

                document.getElementById("Drawer_S3_5").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS3_5").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect3_5").value = '0'
                document.getElementById("sectionMoveInternalShelving_S3_5").style.display = "none";
                document.getElementById("InternalShelving_S3_5").checked = false;

                document.getElementById("ShoeShelving_sect3_5").value = '0'
                document.getElementById("sectionAmountShoeShelving_S3_5").style.display = "none";
                document.getElementById("ShoeShelving_S3_5").checked = false;


            } else {}
    
            if ( self.options.shelvesCounterSection3_6!= 0 ) {
                self.options.shelvesCounterSection3_6 = 0
                self.scene.remove(self.shelvingGroup_section3_6);

                document.getElementById("Drawer_S3_6").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS3_6").style.pointerEvents = "auto";
    
                document.getElementById("InternalShelving1_S3_6").style.display = "none";

                document.getElementById("internalShelving_sect3_6").value = '0'
                document.getElementById("sectionMoveInternalShelving_S3_6").style.display = "none";
                document.getElementById("InternalShelving_S3_6").checked = false;

                document.getElementById("ShoeShelving_sect3_6").value = '0'
                document.getElementById("sectionAmountShoeShelving_S3_6").style.display = "none";
                document.getElementById("ShoeShelving_S3_6").checked = false;

            } else {}

            self.options.s3_doorStatus = 1;
            self.options.s3_2_doorStatus = 1;
            self.options.s3_3_doorStatus = 1;
            self.options.s3_4_doorStatus = 1;
            self.options.s3_5_doorStatus = 1;
            self.options.s3_6_doorStatus = 1;
            self.options.s3_7_doorStatus = 1;
            self.options.s3_8_doorStatus = 1;
            self.options.s3_9_doorStatus = 1;
    
    
            document.getElementById("HorizontalPartition_S3_1").checked = false;
            document.getElementById("RemoveHorizontalPartition_S3_2").checked = true;
            document.getElementById("RemoveHorizontalPartition_S3_3").checked = true;
            document.getElementById("RemoveHorizontalPartition_S3_4").checked = true;
            document.getElementById("RemoveHorizontalPartition_S3_5").checked = true;
            document.getElementById("RemoveHorizontalPartition_S3_6").checked = true;
            document.getElementById("RemoveHorizontalPartition_S3_7").checked = true;
            
    
            document.getElementById("amountHorizontalPartition_S3_1").style.display = "none";

        
            if (self.scene.getObjectByName( "doorSection3_1Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection3_1Group'))
            }
            if (self.scene.getObjectByName( "drawerSection3_1Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection3_1Group'))
            }
            if (self.scene.getObjectByName( "doorSection3_2Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection3_2Group'))
            }
            if (self.scene.getObjectByName( "drawerSection3_2Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection3_2Group'))
            }
            if (self.scene.getObjectByName( "doorSection3_3Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection3_3Group'))
            }
            if (self.scene.getObjectByName( "drawerSection3_3Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection3_3Group'))
            }    
            if (self.scene.getObjectByName( "doorSection3_4Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection3_4Group'))
            }
            if (self.scene.getObjectByName( "drawerSection3_4Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection3_4Group'))
            }
            if (self.scene.getObjectByName( "doorSection3_5Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection3_5Group'))
            }
            if (self.scene.getObjectByName( "drawerSection3_5Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection3_5Group'))
            }
            if (self.scene.getObjectByName( "drawerSection3_6Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection3_6Group'))
            }
            if (self.scene.getObjectByName( "drawerSection3_7Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection3_7Group'))
            }
            
    
    
            self.options.s3_horizDividStatus = 0
            self.options.s3_2_horizDividStatus = 0
            self.options.s3_3_horizDividStatus = 0
            self.options.s3_4_horizDividStatus = 0
            self.options.s3_5_horizDividStatus = 0
            self.options.s3_6_horizDividStatus = 0
            self.options.s3_7_horizDividStatus = 0
    
            
            self.calculateOutput();
            self.updateDoorButtons();
    
    
        },
    
        removeHorizontalDividersS4: function() {
    
            var self = this 
    
            
    
            if (self.scene.getObjectByName( "horizontalDividerSection4_1", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_1", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection4_2", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_2", true ));
            }
    
            if (self.scene.getObjectByName( "horizontalDividerSection4_3", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_3", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_4", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection4_5", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_5", true ));
            }

            if (self.scene.getObjectByName( "horizontalDividerSection4_6", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName( "horizontalDividerSection4_6", true ));
            }
    
            var currentHeight = this.options.pillar.height
    
            if (this.section4_WireframeMesh4_1) {
                this.scene.remove(this.section4_WireframeMesh4_1);
            }
            if (this.RayCastRecieverSection4_1) {
                this.scene.remove(this.RayCastRecieverSection4_1);
            }    
    
            if (this.section4_WireframeMesh4_2) {
                this.scene.remove(this.section4_WireframeMesh4_2);
            }
            if (this.RayCastRecieverSection4_2) {
                this.scene.remove(this.RayCastRecieverSection4_2);
            }
    
            if (this.section4_WireframeMesh4_3) {
                this.scene.remove(this.section4_WireframeMesh4_3);
            }
            if (this.RayCastRecieverSection4_3) {
                this.scene.remove(this.RayCastRecieverSection4_3);
            }
    
            if (this.section4_WireframeMesh4_4) {
                this.scene.remove(this.section4_WireframeMesh4_4);
            }
            if (this.RayCastRecieverSection4_4) {
                this.scene.remove(this.RayCastRecieverSection4_4);
            }

            if (this.section4_WireframeMesh4_5) {
                this.scene.remove(this.section4_WireframeMesh4_5);
            }
            if (this.RayCastRecieverSection4_5) {
                this.scene.remove(this.RayCastRecieverSection4_5);
            }

            if (this.section4_WireframeMesh4_6) {
                this.scene.remove(this.section4_WireframeMesh4_6);
            }
            if (this.RayCastRecieverSection4_6) {
                this.scene.remove(this.RayCastRecieverSection4_6);
            }

            if (this.section4_WireframeMesh4_7) {
                this.scene.remove(this.section4_WireframeMesh4_7);
            }
            if (this.RayCastRecieverSection4_7) {
                this.scene.remove(this.RayCastRecieverSection4_7);
            }
    
            self.options.sectionHeight_4_1 = currentHeight
            self.options.s4_AmountOfHorDividers = 0

            document.getElementById("Height_HorizontalPartition_S4_1").innerHTML = Math.floor(self.options.sectionHeight_4_1 - 0.6 - (1.8*2)) +"cm";

    
            if ( self.options.shelvesCounterSection4_1 != 0 ) {
                self.options.shelvesCounterSection4_1 = 0
                self.scene.remove(self.shelvingGroup_section4_1);
    
                for (var i = 1; i <= 6; i++) {
                    document.getElementById(`InternalShelving${i}_S4_1`).style.display = "none";
                }
  
                document.getElementById("Drawer_S4_1").style.pointerEvents = "auto";
                document.getElementById("Drawer_Section4_1").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect4_1").value = '0'
                document.getElementById("sectionMoveInternalShelving_S4_1").style.display = "none";
                document.getElementById("InternalShelving_S4_1").checked = false;

                document.getElementById("ShoeShelving_sect4_1").value = '0'
                document.getElementById("sectionAmountShoeShelving_S4_1").style.display = "none";
                document.getElementById("ShoeShelving_S4_1").checked = false;

            } else {}
    
            if ( self.options.shelvesCounterSection4_2 != 0 ) {
                self.options.shelvesCounterSection4_2 = 0
                self.scene.remove(self.shelvingGroup_section4_2);
    
                for (var i = 1; i <= 5; i++) {
                    document.getElementById(`InternalShelving${i}_S4_2`).style.display = "none";
                }
    
                document.getElementById("Drawer_S4_2").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS4_2").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect4_2").value = '0'
                document.getElementById("sectionMoveInternalShelving_S4_2").style.display = "none";
                document.getElementById("InternalShelving_S4_2").checked = false;

                document.getElementById("ShoeShelving_sect4_2").value = '0'
                document.getElementById("sectionAmountShoeShelving_S4_2").style.display = "none";
                document.getElementById("ShoeShelving_S4_2").checked = false;
                
            } else {}

            if ( self.options.shelvesCounterSection4_3 != 0 ) {
                self.options.shelvesCounterSection4_3 = 0
                self.scene.remove(self.shelvingGroup_section4_3);
    
                for (var i = 1; i <= 4; i++) {
                    document.getElementById(`InternalShelving${i}_S4_3`).style.display = "none";
                }

                document.getElementById("Drawer_S4_3").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS4_3").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect4_3").value = '0'
                document.getElementById("sectionMoveInternalShelving_4_3").style.display = "none";
                document.getElementById("InternalShelving_S4_3").checked = false;

                document.getElementById("ShoeShelving_sect4_3").value = '0'
                document.getElementById("sectionAmountShoeShelving_S4_3").style.display = "none";
                document.getElementById("ShoeShelving_S4_3").checked = false;

            } else {}

            if ( self.options.shelvesCounterSection4_4 != 0 ) {
                self.options.shelvesCounterSection4_4 = 0
                self.scene.remove(self.shelvingGroup_section4_4);
    
                for (var i = 1; i <= 3; i++) {
                    document.getElementById(`InternalShelving${i}_S4_4`).style.display = "none";
                }

                document.getElementById("Drawer_S4_4").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS4_4").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect4_4").value = '0'
                document.getElementById("sectionMoveInternalShelving_S4_4").style.display = "none";
                document.getElementById("InternalShelving_S4_4").checked = false;

                document.getElementById("ShoeShelving_sect4_4").value = '0'
                document.getElementById("sectionAmountShoeShelving_S4_4").style.display = "none";
                document.getElementById("ShoeShelving_S4_4").checked = false;

            } else {}

            if ( self.options.shelvesCounterSection4_5 != 0 ) {
                self.options.shelvesCounterSection4_5 = 0
                self.scene.remove(self.shelvingGroup_section4_5);
    
                for (var i = 1; i <= 2; i++) {
                    document.getElementById(`InternalShelving${i}_S4_5`).style.display = "none";
                }

                document.getElementById("Drawer_S4_5").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS4_5").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect4_5").value = '0'
                document.getElementById("sectionMoveInternalShelving_S4_5").style.display = "none";
                document.getElementById("InternalShelving_S4_5").checked = false;

                document.getElementById("ShoeShelving_sect4_5").value = '0'
                document.getElementById("sectionAmountShoeShelving_S4_5").style.display = "none";
                document.getElementById("ShoeShelving_S4_5").checked = false;

            } else {}
    
            if ( self.options.shelvesCounterSection4_6!= 0 ) {
                self.options.shelvesCounterSection4_6 = 0
                self.scene.remove(self.shelvingGroup_section4_6);
    
                document.getElementById("InternalShelving1_S4_6").style.display = "none";

                document.getElementById("Drawer_S4_6").style.pointerEvents = "auto";
                document.getElementById("Drawer_SectionS4_6").style.pointerEvents = "auto";

                document.getElementById("internalShelving_sect4_6").value = '0'
                document.getElementById("sectionMoveInternalShelving_S4_6").style.display = "none";
                document.getElementById("InternalShelving_S4_6").checked = false;

                document.getElementById("ShoeShelving_sect4_6").value = '0'
                document.getElementById("sectionAmountShoeShelving_S4_6").style.display = "none";
                document.getElementById("ShoeShelving_S4_6").checked = false;

            } else {}



            self.options.s4_doorStatus = 1;
            self.options.s4_2_doorStatus = 1;
            self.options.s4_3_doorStatus = 1;
            self.options.s4_4_doorStatus = 1;
            self.options.s4_5_doorStatus = 1;
            self.options.s4_6_doorStatus = 1;
            self.options.s4_7_doorStatus = 1;
            self.options.s4_8_doorStatus = 1;
            self.options.s4_9_doorStatus = 1;
    
    
            document.getElementById("HorizontalPartition_S4_1").checked = false;
            document.getElementById("RemoveHorizontalPartition_S4_2").checked = true;
            document.getElementById("RemoveHorizontalPartition_S4_3").checked = true;
            document.getElementById("RemoveHorizontalPartition_S4_4").checked = true;
            document.getElementById("RemoveHorizontalPartition_S4_5").checked = true;
            document.getElementById("RemoveHorizontalPartition_S4_6").checked = true;
            document.getElementById("RemoveHorizontalPartition_S4_7").checked = true;
    
            document.getElementById("amountHorizontalPartition_S4_1").style.display = "none";

        
            if (self.scene.getObjectByName( "doorSection4_1Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection4_1Group'))
            }
            if (self.scene.getObjectByName( "drawerSection4_1Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection4_1Group'))
            }
            if (self.scene.getObjectByName( "doorSection4_2Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection4_2Group'))
            }
            if (self.scene.getObjectByName( "drawerSection4_2Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection4_2Group'))
            }
            if (self.scene.getObjectByName( "doorSection4_3Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection4_3Group'))
            }
            if (self.scene.getObjectByName( "drawerSection4_3Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection4_3Group'))
            }    
            if (self.scene.getObjectByName( "doorSection4_4Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection4_4Group'))
            }
            if (self.scene.getObjectByName( "drawerSection4_4Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection4_4Group'))
            }
            if (self.scene.getObjectByName( "doorSection4_5Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('doorSection4_5Group'))
            }
            if (self.scene.getObjectByName( "drawerSection4_5Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection4_5Group'))
            }
            if (self.scene.getObjectByName( "drawerSection4_6Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection4_6Group'))
            }
            if (self.scene.getObjectByName( "drawerSection4_7Group", true ) != undefined) {
                self.scene.remove(self.scene.getObjectByName('drawerSection4_7Group'))
            }
  
    
    
            self.options.s4_horizDividStatus = 0
            self.options.s4_2_horizDividStatus = 0
            self.options.s4_3_horizDividStatus = 0
            self.options.s4_4_horizDividStatus = 0
            self.options.s4_5_horizDividStatus = 0
            self.options.s4_6_horizDividStatus = 0
            self.options.s4_7_horizDividStatus = 0
    
            
            self.calculateOutput();
            self.updateDoorButtons();
    
    
        },    

        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        //divider 1 section
        //1_1
        createHorizontalDividerSection1_1: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection1_1);
    
            var currentHeight = self.options.pillar.height
    
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width-0.1);
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            var horizontalDividerSection1_1 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection1_1.geometry.translate( self.options.section1Length / 2, 0, 0 );
    
            horizontalDividerSection1_1.name = 'horizontalDividerSection1_1'
            horizontalDividerSection1_1.material.needsUpdate = true;
    
            horizontalDividerSection1_1.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x+0.5;
            horizontalDividerSection1_1.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2 +0.1;

            if (shelfId == 'savedURL'){
                horizontalDividerSection1_1.position.y = parseFloat(self.params.get('hDS1_1'));
                self.options.sectionHeight_1_1 = +self.params.get('H_S1_1');
                self.options.sectionHeight_1_2 = +self.params.get('H_S1_2');
            } else {
                horizontalDividerSection1_1.position.y = 12
                self.options.sectionHeight_1_1 = 12
                self.options.sectionHeight_1_2 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection1_1);
    
            if (shelfId == 'savedURL'){
                self.createRayCastRecieverSection1_1('savedCorrectionURL');
                self.createWireframeBack_section1_1('savedCorrectionURL');
            
                self.createWireframeBack_section1_2('savedCorrectionURL');
                self.createRayCastRecieverSection1_2('savedCorrectionURL'); 
            } else {
                self.createRayCastRecieverSection1_1();
                self.createWireframeBack_section1_1();
            
                self.createWireframeBack_section1_2();
                self.createRayCastRecieverSection1_2(); 
            }
    
        },

        
        createHorizontalDividerSection1_2: function(shelfId) {
            var self = this 
            self.scene.remove(this.horizontalDividerSection1_2);
    
            var currentHeight = self.options.sectionHeight_1_2
    
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection1_2 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection1_2.geometry.translate( self.options.section1Length / 2, 0, 0 );
    
            horizontalDividerSection1_2.name = 'horizontalDividerSection1_2'
            horizontalDividerSection1_2.material.needsUpdate = true;
    
            horizontalDividerSection1_2.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x+0.5;
            horizontalDividerSection1_2.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection1_2.position.y = parseFloat(+self.params.get('hDS1_2'));
                self.options.sectionHeight_1_3 = +self.params.get('H_S1_3');
                self.options.sectionHeight_1_2 = +self.params.get('H_S1_2');
            } else {
                horizontalDividerSection1_2.position.y = self.scene.getObjectByName('horizontalDividerSection1_1').position.y + 12
                self.options.sectionHeight_1_2 = 13
                self.options.sectionHeight_1_3 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection1_2);
            
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section1_2('savedCorrectionURL');
                self.createRayCastRecieverSection1_2('savedCorrectionURL'); 

                self.createWireframeBack_section1_3('savedCorrectionURL');
                self.createRayCastRecieverSection1_3('savedCorrectionURL');
    
            } else {
                self.createWireframeBack_section1_2();
                self.createRayCastRecieverSection1_2();
                
                self.createWireframeBack_section1_3();
                self.createRayCastRecieverSection1_3(); 
            }
        
        },
    

        createhorizontalDividerSection1_3: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection1_3);
    
            let currentHeight = self.options.sectionHeight_1_3
    
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection1_3 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection1_3.geometry.translate( self.options.section1Length / 2, 0, 0 );
    
            horizontalDividerSection1_3.name = 'horizontalDividerSection1_3'
            horizontalDividerSection1_3.material.needsUpdate = true;
    
            horizontalDividerSection1_3.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x+0.5;
            horizontalDividerSection1_3.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection1_3.position.y = parseFloat(+self.params.get('hDS1_3'));
                self.options.sectionHeight_1_3 = +self.params.get('H_S1_3');
                self.options.sectionHeight_1_4 = +self.params.get('H_S1_4');
            } else {
                horizontalDividerSection1_3.position.y = self.scene.getObjectByName('horizontalDividerSection1_2').position.y + 12;
                self.options.sectionHeight_1_3 = 13
                self.options.sectionHeight_1_4 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection1_3);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section1_3('savedCorrectionURL');
                self.createRayCastRecieverSection1_3('savedCorrectionURL');
            
                self.createWireframeBack_section1_4('savedCorrectionURL');
                self.createRayCastRecieverSection1_4('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section1_3(); 
                self.createRayCastRecieverSection1_3();
    
                self.createWireframeBack_section1_4();
                self.createRayCastRecieverSection1_4();      
            }
            
        },

        
        createhorizontalDividerSection1_4: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection1_4);
    
            let currentHeight = self.options.sectionHeight_1_4
    
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection1_4 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection1_4.geometry.translate( self.options.section1Length / 2, 0, 0 );
    
            horizontalDividerSection1_4.name = 'horizontalDividerSection1_4'
            horizontalDividerSection1_4.material.needsUpdate = true;
    
            horizontalDividerSection1_4.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x+0.5;
            horizontalDividerSection1_4.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection1_4.position.y = parseFloat(+self.params.get('hDS1_4'));
                self.options.sectionHeight_1_4 = +self.params.get('H_S1_4');
                self.options.sectionHeight_1_5 = +self.params.get('H_S1_5');
            } else {
                horizontalDividerSection1_4.position.y = self.scene.getObjectByName('horizontalDividerSection1_3').position.y + 12;
                self.options.sectionHeight_1_4 = 13
                self.options.sectionHeight_1_5 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection1_4);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section1_4('savedCorrectionURL');
                self.createRayCastRecieverSection1_4('savedCorrectionURL');
            
                self.createWireframeBack_section1_5('savedCorrectionURL');
                self.createRayCastRecieverSection1_5('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section1_5(); 
                self.createRayCastRecieverSection1_5();
    
                self.createWireframeBack_section1_4();
                self.createRayCastRecieverSection1_4();      
            }
            
        },
    

        createhorizontalDividerSection1_5: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection1_5);
    
            let currentHeight = self.options.sectionHeight_1_5
    
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection1_5 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection1_5.geometry.translate( self.options.section1Length / 2, 0, 0 );
    
            horizontalDividerSection1_5.name = 'horizontalDividerSection1_5'
            horizontalDividerSection1_5.material.needsUpdate = true;
    
            horizontalDividerSection1_5.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x+0.5;
            horizontalDividerSection1_5.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection1_5.position.y = parseFloat(+self.params.get('hDS1_5'));
                self.options.sectionHeight_1_5 = +self.params.get('H_S1_5');
                self.options.sectionHeight_1_6 = +self.params.get('H_S1_6');
            } else {
                horizontalDividerSection1_5.position.y = self.scene.getObjectByName('horizontalDividerSection1_4').position.y + 12;
                self.options.sectionHeight_1_5 = 13
                self.options.sectionHeight_1_6 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection1_5);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section1_5('savedCorrectionURL');
                self.createRayCastRecieverSection1_5('savedCorrectionURL');
            
                self.createWireframeBack_section1_6('savedCorrectionURL');
                self.createRayCastRecieverSection1_6('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section1_6(); 
                self.createRayCastRecieverSection1_6();
    
                self.createWireframeBack_section1_5();
                self.createRayCastRecieverSection1_5();      
            }
            
        },


        createhorizontalDividerSection1_6: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection1_6);
    
            let currentHeight = self.options.sectionHeight_1_6
    
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection1_6 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection1_6.geometry.translate( self.options.section1Length / 2, 0, 0 );
    
            horizontalDividerSection1_6.name = 'horizontalDividerSection1_6'
            horizontalDividerSection1_6.material.needsUpdate = true;
    
            horizontalDividerSection1_6.position.x = self.shelving.getObjectByName( "pillar_0", true ).position.x+0.5;
            horizontalDividerSection1_6.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection1_6.position.y = parseFloat(+self.params.get('hDS1_6'));
                self.options.sectionHeight_1_6 = +self.params.get('H_S1_6');
                self.options.sectionHeight_1_7 = +self.params.get('H_S1_7');
            } else {
                horizontalDividerSection1_6.position.y = self.scene.getObjectByName('horizontalDividerSection1_5').position.y + 12;
                self.options.sectionHeight_1_6 = 13
                self.options.sectionHeight_1_7 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection1_6);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section1_6('savedCorrectionURL');
                self.createRayCastRecieverSection1_6('savedCorrectionURL');
            
                self.createWireframeBack_section1_7('savedCorrectionURL');
                self.createRayCastRecieverSection1_7('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section1_7(); 
                self.createRayCastRecieverSection1_7();
    
                self.createWireframeBack_section1_6();
                self.createRayCastRecieverSection1_6();      
            }
            
        },


    

        
    
    
        //divider 2 section
        //2_1
        createHorizontalDividerSection2_1: function(shelfId) {
    
            var self = this 
            self.scene.remove(this.horizontalDividerSection2_1);
    
            var currentHeight = self.options.pillar.height
    
            var geometry = new THREE.BoxGeometry(self.options.section2Length - 1, self.options.shelf.thickness, self.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            var horizontalDividerSection2_1 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection2_1.geometry.translate( self.options.section2Length / 2, 0, 0 );
    
            horizontalDividerSection2_1.name = 'horizontalDividerSection2_1'
            horizontalDividerSection2_1.material.needsUpdate = true;
    
            horizontalDividerSection2_1.position.y = currentHeight / 2
            horizontalDividerSection2_1.position.x = this.scene.getObjectByName( "pillar1", true ).position.x+0.5;
            horizontalDividerSection2_1.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2 +0.1;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection2_1.position.y = parseFloat(+self.params.get('hDS2_1'));
                self.options.sectionHeight_2_1 = +self.params.get('H_S2_1');
                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
            } else {
                horizontalDividerSection2_1.position.y = 12
                self.options.sectionHeight_2_1 = 12
                self.options.sectionHeight_2_2 = currentHeight - 12 
            }
    
            self.scene.add(horizontalDividerSection2_1);
    
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section2_1('savedCorrectionURL');
                self.createRayCastRecieverSection2_1('savedCorrectionURL');
            
                self.createWireframeBack_section2_2('savedCorrectionURL');
                self.createRayCastRecieverSection2_2('savedCorrectionURL'); 
            
            } else {
                self.createWireframeBack_section2_1();
                self.createRayCastRecieverSection2_1();
            
                self.createWireframeBack_section2_2();
                self.createRayCastRecieverSection2_2(); 
            }
    
    
        },
        
        //2_2
        createHorizontalDividerSection2_2: function(shelfId) {
            var self = this 
            self.scene.remove(this.horizontalDividerSection2_2);
    
            var currentHeight = self.options.sectionHeight_2_2
    
            var geometry = new THREE.BoxGeometry(self.options.section2Length + self.options.pillar.thickness /2, self.options.shelf.thickness, self.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection2_2 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection2_2.geometry.translate( self.options.section2Length / 2, 0, 0 );
    
            horizontalDividerSection2_2.name = 'horizontalDividerSection2_2'
            horizontalDividerSection2_2.material.needsUpdate = true;
    
            horizontalDividerSection2_2.position.x = this.scene.getObjectByName( "pillar1", true ).position.x+0.5;
            horizontalDividerSection2_2.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection2_2.position.y = parseFloat(+self.params.get('hDS2_2'));
                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
                self.options.sectionHeight_2_2 = +self.params.get('H_S2_2');
            } else {
                horizontalDividerSection2_2.position.y = self.scene.getObjectByName('horizontalDividerSection2_1').position.y + 12
                self.options.sectionHeight_2_2 = 13
                self.options.sectionHeight_2_3 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection2_2);
            
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section2_2('savedCorrectionURL');
                self.createRayCastRecieverSection2_2('savedCorrectionURL'); 

                self.createWireframeBack_section2_3('savedCorrectionURL');
                self.createRayCastRecieverSection2_3('savedCorrectionURL');
    
            } else {
                self.createWireframeBack_section2_2();
                self.createRayCastRecieverSection2_2();
                
                self.createWireframeBack_section2_3();
                self.createRayCastRecieverSection2_3(); 
            }
        
        },
        
        //2_3
        createhorizontalDividerSection2_3: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection2_3);
    
            let currentHeight = self.options.sectionHeight_2_3
    
            var geometry = new THREE.BoxGeometry(self.options.section2Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection2_3 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection2_3.geometry.translate( self.options.section2Length / 2, 0, 0 );
    
            horizontalDividerSection2_3.name = 'horizontalDividerSection2_3'
            horizontalDividerSection2_3.material.needsUpdate = true;
    
            horizontalDividerSection2_3.position.x = this.scene.getObjectByName( "pillar1", true ).position.x+0.5;
            horizontalDividerSection2_3.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection2_3.position.y = parseFloat(+self.params.get('hDS2_3'));
                self.options.sectionHeight_2_3 = +self.params.get('H_S2_3');
                self.options.sectionHeight_2_4 = +self.params.get('H_S2_4');
            } else {
                horizontalDividerSection2_3.position.y = self.scene.getObjectByName('horizontalDividerSection2_2').position.y + 12
                self.options.sectionHeight_2_3 = 13
                self.options.sectionHeight_2_4 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection2_3);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section2_3('savedCorrectionURL');
                self.createRayCastRecieverSection2_3('savedCorrectionURL');
            
                self.createWireframeBack_section2_4('savedCorrectionURL');
                self.createRayCastRecieverSection2_4('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section2_3(); 
                self.createRayCastRecieverSection2_3();
    
                self.createWireframeBack_section2_4();
                self.createRayCastRecieverSection2_4();      
            }
            
        },
    
    
        //2_4 cuts 2_3
        createhorizontalDividerSection2_4: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection2_4);
    
            let currentHeight = self.options.sectionHeight_2_4
    
            var geometry = new THREE.BoxGeometry(self.options.section2Length - 1, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection2_4 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection2_4.geometry.translate( self.options.section2Length / 2, 0, 0 );
    
            horizontalDividerSection2_4.name = 'horizontalDividerSection2_4'
            horizontalDividerSection2_4.material.needsUpdate = true;
    
            horizontalDividerSection2_4.position.x = this.scene.getObjectByName( "pillar1", true ).position.x+0.5;
            horizontalDividerSection2_4.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection2_4.position.y = parseFloat(+self.params.get('hDS2_4'));
                self.options.sectionHeight_2_4 = +self.params.get('H_S2_4');
                self.options.sectionHeight_2_5 = +self.params.get('H_S2_5');
            } else {
                horizontalDividerSection2_4.position.y = self.scene.getObjectByName('horizontalDividerSection2_3').position.y + 12
                self.options.sectionHeight_2_4 = 13
                self.options.sectionHeight_2_5 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection2_4);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section2_4('savedCorrectionURL');
                self.createRayCastRecieverSection2_4('savedCorrectionURL');
            
                self.createWireframeBack_section2_5('savedCorrectionURL');
                self.createRayCastRecieverSection2_5('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section2_5(); 
                self.createRayCastRecieverSection2_5();
    
                self.createWireframeBack_section2_4();
                self.createRayCastRecieverSection2_4();      
            }
          
        },


        createhorizontalDividerSection2_5: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection2_5);
    
            let currentHeight = self.options.sectionHeight_2_5
    
            var geometry = new THREE.BoxGeometry(self.options.section2Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection2_5 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection2_5.geometry.translate( self.options.section2Length / 2, 0, 0 );
    
            horizontalDividerSection2_5.name = 'horizontalDividerSection2_5'
            horizontalDividerSection2_5.material.needsUpdate = true;
    
            horizontalDividerSection2_5.position.x = this.scene.getObjectByName( "pillar1", true ).position.x+0.5;
            horizontalDividerSection2_5.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection2_5.position.y = parseFloat(+self.params.get('hDS2_5'));
                self.options.sectionHeight_2_5 = +self.params.get('H_S2_5');
                self.options.sectionHeight_2_6 = +self.params.get('H_S2_6');
            } else {
                horizontalDividerSection2_5.position.y = self.scene.getObjectByName('horizontalDividerSection2_4').position.y + 12;
                self.options.sectionHeight_2_5 = 13
                self.options.sectionHeight_2_6 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection2_5);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section2_5('savedCorrectionURL');
                self.createRayCastRecieverSection2_5('savedCorrectionURL');
            
                self.createWireframeBack_section2_6('savedCorrectionURL');
                self.createRayCastRecieverSection2_6('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section2_6(); 
                self.createRayCastRecieverSection2_6();
    
                self.createWireframeBack_section2_5();
                self.createRayCastRecieverSection2_5();      
            }
            
        },


        createhorizontalDividerSection2_6: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection2_6);
    
            let currentHeight = self.options.sectionHeight_2_6
    
            var geometry = new THREE.BoxGeometry(self.options.section2Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection2_6 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection2_6.geometry.translate( self.options.section2Length / 2, 0, 0 );
    
            horizontalDividerSection2_6.name = 'horizontalDividerSection2_6'
            horizontalDividerSection2_6.material.needsUpdate = true;
    
            horizontalDividerSection2_6.position.x = this.scene.getObjectByName( "pillar1", true ).position.x+0.5;
            horizontalDividerSection2_6.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection2_6.position.y = parseFloat(+self.params.get('hDS2_6'));
                self.options.sectionHeight_2_6 = +self.params.get('H_S2_6');
                self.options.sectionHeight_2_7 = +self.params.get('H_S2_7');
            } else {
                horizontalDividerSection2_6.position.y = self.scene.getObjectByName('horizontalDividerSection2_5').position.y + 12;
                self.options.sectionHeight_2_6 = 13
                self.options.sectionHeight_2_7 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection2_6);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section2_6('savedCorrectionURL');
                self.createRayCastRecieverSection2_6('savedCorrectionURL');
            
                self.createWireframeBack_section2_7('savedCorrectionURL');
                self.createRayCastRecieverSection2_7('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section2_7(); 
                self.createRayCastRecieverSection2_7();
    
                self.createWireframeBack_section2_6();
                self.createRayCastRecieverSection2_6();      
            }
            
        },


        createhorizontalDividerSection2_7: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection2_7);
    
            let currentHeight = self.options.sectionHeight_2_7;
    
            var geometry = new THREE.BoxGeometry(self.options.section2Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection2_7 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection2_7.geometry.translate( self.options.section2Length / 2, 0, 0 );
    
            horizontalDividerSection2_7.name = 'horizontalDividerSection2_7'
            horizontalDividerSection2_7.material.needsUpdate = true;
    
            horizontalDividerSection2_7.position.x = this.scene.getObjectByName( "pillar1", true ).position.x+0.5;
            horizontalDividerSection2_7.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection2_7.position.y = parseFloat(+self.params.get('hDS2_7'));
                self.options.sectionHeight_2_7 = +self.params.get('H_S2_7');
                self.options.sectionHeight_2_8 = +self.params.get('H_S2_8');
            } else {
                horizontalDividerSection2_7.position.y = self.scene.getObjectByName('horizontalDividerSection2_6').position.y + 12;
                self.options.sectionHeight_2_7 = 13
                self.options.sectionHeight_2_8 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection2_7);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section2_7('savedCorrectionURL');
                self.createRayCastRecieverSection2_7('savedCorrectionURL');
            
                self.createWireframeBack_section2_8('savedCorrectionURL');
                self.createRayCastRecieverSection2_8('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section2_8(); 
                self.createRayCastRecieverSection2_8();
    
                self.createWireframeBack_section2_7();
                self.createRayCastRecieverSection2_7();      
            }
            
        },


        createhorizontalDividerSection2_8: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection2_8);
    
            let currentHeight = self.options.sectionHeight_2_8;
    
            var geometry = new THREE.BoxGeometry(self.options.section2Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection2_8 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection2_8.geometry.translate( self.options.section2Length / 2, 0, 0 );
    
            horizontalDividerSection2_8.name = 'horizontalDividerSection2_8'
            horizontalDividerSection2_8.material.needsUpdate = true;
    
            horizontalDividerSection2_8.position.x = this.scene.getObjectByName( "pillar1", true ).position.x+0.5;
            horizontalDividerSection2_8.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection2_8.position.y = parseFloat(+self.params.get('hDS2_8'));
                self.options.sectionHeight_2_8 = +self.params.get('H_S2_8');
                self.options.sectionHeight_2_9 = +self.params.get('H_S2_9');
            } else {
                horizontalDividerSection2_8.position.y = self.scene.getObjectByName('horizontalDividerSection2_7').position.y + 12;
                self.options.sectionHeight_2_8 = 13
                self.options.sectionHeight_2_9 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection2_8);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section2_8('savedCorrectionURL');
                self.createRayCastRecieverSection2_8('savedCorrectionURL');
            
                self.createWireframeBack_section2_9('savedCorrectionURL');
                self.createRayCastRecieverSection2_9('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section2_9(); 
                self.createRayCastRecieverSection2_9();
    
                self.createWireframeBack_section2_8();
                self.createRayCastRecieverSection2_8();      
            }
            
        },
    
    
 
        //divider 3 section
        //3_1
        createHorizontalDividerSection3_1: function(shelfId) {
    
            var self = this 
            self.scene.remove(this.horizontalDividerSection3_1);
    
            var currentHeight = self.options.pillar.height
    
            var geometry = new THREE.BoxGeometry(self.options.section3Length - 1, self.options.shelf.thickness, self.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            var horizontalDividerSection3_1 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection3_1.geometry.translate( self.options.section3Length / 2, 0, 0 );
    
            horizontalDividerSection3_1.name = 'horizontalDividerSection3_1'
            horizontalDividerSection3_1.material.needsUpdate = true;
    
            horizontalDividerSection3_1.position.y = currentHeight / 2
            horizontalDividerSection3_1.position.x = this.scene.getObjectByName( "pillar2", true ).position.x+0.5;
            horizontalDividerSection3_1.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2 +0.1;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection3_1.position.y = parseFloat(+self.params.get('hDS3_1'));
                self.options.sectionHeight_3_1 = +self.params.get('H_S3_1');
                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
            } else {
                horizontalDividerSection3_1.position.y = 12
                self.options.sectionHeight_3_1 = 12
                self.options.sectionHeight_3_2 = currentHeight - 12 
            }
    
            self.scene.add(horizontalDividerSection3_1);
    
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section3_1('savedCorrectionURL');
                self.createRayCastRecieverSection3_1('savedCorrectionURL');
            
                self.createWireframeBack_section3_2('savedCorrectionURL');
                self.createRayCastRecieverSection3_2('savedCorrectionURL'); 
            
            } else {
                self.createWireframeBack_section3_1();
                self.createRayCastRecieverSection3_1();
            
                self.createWireframeBack_section3_2();
                self.createRayCastRecieverSection3_2(); 
            }
    
    
        },
        
        //3_2
        createHorizontalDividerSection3_2: function(shelfId) {
            var self = this 
            self.scene.remove(this.horizontalDividerSection3_2);
    
            var currentHeight = self.options.sectionHeight_3_2
    
            var geometry = new THREE.BoxGeometry(self.options.section3Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection3_2 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection3_2.geometry.translate( self.options.section3Length / 2, 0, 0 );
    
            horizontalDividerSection3_2.name = 'horizontalDividerSection3_2'
            horizontalDividerSection3_2.material.needsUpdate = true;
    
            horizontalDividerSection3_2.position.x = this.scene.getObjectByName( "pillar2", true ).position.x+0.5;
            horizontalDividerSection3_2.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection3_2.position.y = parseFloat(+self.params.get('hDS3_2'));
                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
                self.options.sectionHeight_3_2 = +self.params.get('H_S3_2');
            } else {
                horizontalDividerSection3_2.position.y = self.scene.getObjectByName('horizontalDividerSection3_1').position.y + 12
                self.options.sectionHeight_3_2 = 13
                self.options.sectionHeight_3_3 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection3_2);
            
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section3_2('savedCorrectionURL');
                self.createRayCastRecieverSection3_2('savedCorrectionURL'); 

                self.createWireframeBack_section3_3('savedCorrectionURL');
                self.createRayCastRecieverSection3_3('savedCorrectionURL');
    
            } else {
                self.createWireframeBack_section3_2();
                self.createRayCastRecieverSection3_2();
                
                self.createWireframeBack_section3_3();
                self.createRayCastRecieverSection3_3(); 
            }
        
        },
        
        //3_3
        createhorizontalDividerSection3_3: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection3_3);
    
            let currentHeight = self.options.sectionHeight_3_3
    
            var geometry = new THREE.BoxGeometry(self.options.section3Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection3_3 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection3_3.geometry.translate( self.options.section3Length / 2, 0, 0 );
    
            horizontalDividerSection3_3.name = 'horizontalDividerSection3_3'
            horizontalDividerSection3_3.material.needsUpdate = true;
    
            horizontalDividerSection3_3.position.x = this.scene.getObjectByName( "pillar2", true ).position.x+0.5;
            horizontalDividerSection3_3.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection3_3.position.y = parseFloat(+self.params.get('hDS3_3'));
                self.options.sectionHeight_3_3 = +self.params.get('H_S3_3');
                self.options.sectionHeight_3_4 = +self.params.get('H_S3_4');
            } else {
                horizontalDividerSection3_3.position.y = self.scene.getObjectByName('horizontalDividerSection3_2').position.y + 12
                self.options.sectionHeight_3_3 = 13
                self.options.sectionHeight_3_4 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection3_3);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section3_3('savedCorrectionURL');
                self.createRayCastRecieverSection3_3('savedCorrectionURL');
            
                self.createWireframeBack_section3_4('savedCorrectionURL');
                self.createRayCastRecieverSection3_4('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section3_3(); 
                self.createRayCastRecieverSection3_3();
    
                self.createWireframeBack_section3_4();
                self.createRayCastRecieverSection3_4();      
            }
            
        },
    
    
        //3_4 cuts 3_3
        createhorizontalDividerSection3_4: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection3_4);
    
            let currentHeight = self.options.sectionHeight_3_4
    
            var geometry = new THREE.BoxGeometry(self.options.section3Length - 1, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection3_4 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection3_4.geometry.translate( self.options.section3Length / 2, 0, 0 );
    
            horizontalDividerSection3_4.name = 'horizontalDividerSection3_4'
            horizontalDividerSection3_4.material.needsUpdate = true;
    
            horizontalDividerSection3_4.position.x = this.scene.getObjectByName( "pillar2", true ).position.x+0.5;
            horizontalDividerSection3_4.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection3_4.position.y = parseFloat(+self.params.get('hDS3_4'));
                self.options.sectionHeight_3_4 = +self.params.get('H_S3_4');
                self.options.sectionHeight_3_5 = +self.params.get('H_S3_5');
            } else {
                horizontalDividerSection3_4.position.y = self.scene.getObjectByName('horizontalDividerSection3_3').position.y + 12
                self.options.sectionHeight_3_4 = 13
                self.options.sectionHeight_3_5 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection3_4);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section3_4('savedCorrectionURL');
                self.createRayCastRecieverSection3_4('savedCorrectionURL');
            
                self.createWireframeBack_section3_5('savedCorrectionURL');
                self.createRayCastRecieverSection3_5('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section3_5(); 
                self.createRayCastRecieverSection3_5();
    
                self.createWireframeBack_section3_4();
                self.createRayCastRecieverSection3_4();      
            }
          
        },
    

        createhorizontalDividerSection3_5: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection3_5);
    
            let currentHeight = self.options.sectionHeight_3_5
    
            var geometry = new THREE.BoxGeometry(self.options.section3Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection3_5 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection3_5.geometry.translate( self.options.section3Length / 2, 0, 0 );
    
            horizontalDividerSection3_5.name = 'horizontalDividerSection3_5'
            horizontalDividerSection3_5.material.needsUpdate = true;
    
            horizontalDividerSection3_5.position.x = this.scene.getObjectByName( "pillar2", true ).position.x+0.5;
            horizontalDividerSection3_5.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection3_5.position.y = parseFloat(+self.params.get('hDS3_5'));
                self.options.sectionHeight_3_5 = +self.params.get('H_S3_5');
                self.options.sectionHeight_3_6 = +self.params.get('H_S3_6');
            } else {
                horizontalDividerSection3_5.position.y = self.scene.getObjectByName('horizontalDividerSection3_4').position.y + 12;
                self.options.sectionHeight_3_5 = 13
                self.options.sectionHeight_3_6 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection3_5);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section3_5('savedCorrectionURL');
                self.createRayCastRecieverSection3_5('savedCorrectionURL');
            
                self.createWireframeBack_section3_6('savedCorrectionURL');
                self.createRayCastRecieverSection3_6('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section3_6(); 
                self.createRayCastRecieverSection3_6();
    
                self.createWireframeBack_section3_5();
                self.createRayCastRecieverSection3_5();      
            }
            
        },


        createhorizontalDividerSection3_6: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection3_6);
    
            let currentHeight = self.options.sectionHeight_3_6
    
            var geometry = new THREE.BoxGeometry(self.options.section3Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection3_6 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection3_6.geometry.translate( self.options.section3Length / 2, 0, 0 );
    
            horizontalDividerSection3_6.name = 'horizontalDividerSection3_6'
            horizontalDividerSection3_6.material.needsUpdate = true;
    
            horizontalDividerSection3_6.position.x = this.scene.getObjectByName( "pillar2", true ).position.x+0.5;
            horizontalDividerSection3_6.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection3_6.position.y = parseFloat(+self.params.get('hDS3_6'));
                self.options.sectionHeight_3_6 = +self.params.get('H_S3_6');
                self.options.sectionHeight_3_7 = +self.params.get('H_S3_7');
            } else {
                horizontalDividerSection3_6.position.y = self.scene.getObjectByName('horizontalDividerSection3_5').position.y + 12;
                self.options.sectionHeight_3_6 = 13
                self.options.sectionHeight_3_7 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection3_6);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section3_6('savedCorrectionURL');
                self.createRayCastRecieverSection3_6('savedCorrectionURL');
            
                self.createWireframeBack_section3_7('savedCorrectionURL');
                self.createRayCastRecieverSection3_7('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section3_7(); 
                self.createRayCastRecieverSection3_7();
    
                self.createWireframeBack_section3_6();
                self.createRayCastRecieverSection3_6();      
            }
            
        },

    
    
    
    
        //divider 4 section
        //4_1
        createHorizontalDividerSection4_1: function(shelfId) {
    
            var self = this 
            self.scene.remove(this.horizontalDividerSection4_1);
    
            var currentHeight = self.options.pillar.height
    
            var geometry = new THREE.BoxGeometry(self.options.section4Length - 1, self.options.shelf.thickness, self.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            var horizontalDividerSection4_1 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection4_1.geometry.translate( self.options.section4Length / 2, 0, 0 );
    
            horizontalDividerSection4_1.name = 'horizontalDividerSection4_1'
            horizontalDividerSection4_1.material.needsUpdate = true;
    
            horizontalDividerSection4_1.position.y = currentHeight / 2
            horizontalDividerSection4_1.position.x = this.scene.getObjectByName( "pillar3", true ).position.x+0.5;
            horizontalDividerSection4_1.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2 +0.1;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection4_1.position.y = parseFloat(+self.params.get('hDS4_1'));
                self.options.sectionHeight_4_1 = +self.params.get('H_S4_1');
                self.options.sectionHeight_4_2 = +self.params.get('H_S4_2');
            } else {
                horizontalDividerSection4_1.position.y = 12
                self.options.sectionHeight_4_1 = 12
                self.options.sectionHeight_4_2 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection4_1);
    
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section4_1('savedCorrectionURL');
                self.createRayCastRecieverSection4_1('savedCorrectionURL');
            
                self.createWireframeBack_section4_2('savedCorrectionURL');
                self.createRayCastRecieverSection4_2('savedCorrectionURL'); 
            
            } else {
                self.createWireframeBack_section4_1();
                self.createRayCastRecieverSection4_1();
            
                self.createWireframeBack_section4_2();
                self.createRayCastRecieverSection4_2(); 
            }
    
    
        },
        
        //4_2
        createHorizontalDividerSection4_2: function(shelfId) {
            var self = this 
            self.scene.remove(this.horizontalDividerSection4_2);
    
            var currentHeight = self.options.sectionHeight_4_2
    
            var geometry = new THREE.BoxGeometry(self.options.section4Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection4_2 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection4_2.geometry.translate( self.options.section4Length / 2, 0, 0 );
    
            horizontalDividerSection4_2.name = 'horizontalDividerSection4_2'
            horizontalDividerSection4_2.material.needsUpdate = true;
    
            horizontalDividerSection4_2.position.x = this.scene.getObjectByName( "pillar3", true ).position.x+0.5;
            horizontalDividerSection4_2.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection4_2.position.y = parseFloat(+self.params.get('hDS4_2'));
                self.options.sectionHeight_4_3 = +self.params.get('H_S4_3');
                self.options.sectionHeight_4_2 = +self.params.get('H_S4_2');
            } else {
                horizontalDividerSection4_2.position.y = self.scene.getObjectByName('horizontalDividerSection4_1').position.y + 12
                self.options.sectionHeight_4_2 = 13
                self.options.sectionHeight_4_3 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection4_2);
            
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section4_2('savedCorrectionURL');
                self.createRayCastRecieverSection4_2('savedCorrectionURL'); 

                self.createWireframeBack_section4_3('savedCorrectionURL');
                self.createRayCastRecieverSection4_3('savedCorrectionURL');
    
            } else {
                self.createWireframeBack_section4_2();
                self.createRayCastRecieverSection4_2();
                
                self.createWireframeBack_section4_3();
                self.createRayCastRecieverSection4_3(); 
            }
        
        },
        
        //4_3
        createhorizontalDividerSection4_3: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection4_3);
    
            let currentHeight = self.options.sectionHeight_4_3
    
            var geometry = new THREE.BoxGeometry(self.options.section4Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection4_3 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection4_3.geometry.translate( self.options.section4Length / 2, 0, 0 );
    
            horizontalDividerSection4_3.name = 'horizontalDividerSection4_3'
            horizontalDividerSection4_3.material.needsUpdate = true;
    
            horizontalDividerSection4_3.position.x = this.scene.getObjectByName( "pillar3", true ).position.x+0.5;
            horizontalDividerSection4_3.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection4_3.position.y = parseFloat(+self.params.get('hDS4_3'));
                self.options.sectionHeight_4_3 = +self.params.get('H_S4_3');
                self.options.sectionHeight_4_4 = +self.params.get('H_S4_4');
            } else {
                horizontalDividerSection4_3.position.y = self.scene.getObjectByName('horizontalDividerSection4_2').position.y + 12
                self.options.sectionHeight_4_3 = 13
                self.options.sectionHeight_4_4 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection4_3);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section4_3('savedCorrectionURL');
                self.createRayCastRecieverSection4_3('savedCorrectionURL');
            
                self.createWireframeBack_section4_4('savedCorrectionURL');
                self.createRayCastRecieverSection4_4('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section4_3(); 
                self.createRayCastRecieverSection4_3();
    
                self.createWireframeBack_section4_4();
                self.createRayCastRecieverSection4_4();      
            }
            
        },
    
    
        //4_4 cuts 4_3
        createhorizontalDividerSection4_4: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection4_4);
    
            let currentHeight = self.options.sectionHeight_4_4
    
            var geometry = new THREE.BoxGeometry(self.options.section4Length - 1, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection4_4 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection4_4.geometry.translate( self.options.section4Length / 2, 0, 0 );
    
            horizontalDividerSection4_4.name = 'horizontalDividerSection4_4'
            horizontalDividerSection4_4.material.needsUpdate = true;
    
            horizontalDividerSection4_4.position.x = this.scene.getObjectByName( "pillar3", true ).position.x+0.5;
            horizontalDividerSection4_4.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection4_4.position.y = parseFloat(+self.params.get('hDS4_4'));
                self.options.sectionHeight_4_4 = +self.params.get('H_S4_4');
                self.options.sectionHeight_4_5 = +self.params.get('H_S4_5');
            } else {
                horizontalDividerSection4_4.position.y = self.scene.getObjectByName('horizontalDividerSection4_3').position.y + 12.5;
                self.options.sectionHeight_4_4 = 12.5 + 1
                self.options.sectionHeight_4_5 = currentHeight - 12.5
            }
    
            self.scene.add(horizontalDividerSection4_4);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section4_4('savedCorrectionURL');
                self.createRayCastRecieverSection4_4('savedCorrectionURL');
            
                self.createWireframeBack_section4_5('savedCorrectionURL');
                self.createRayCastRecieverSection4_5('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section4_5(); 
                self.createRayCastRecieverSection4_5();
    
                self.createWireframeBack_section4_4();
                self.createRayCastRecieverSection4_4();      
            }
          
        },

        //4_5 cuts 4_4
        createhorizontalDividerSection4_5: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection4_5);
    
            let currentHeight = self.options.sectionHeight_4_5
    
            var geometry = new THREE.BoxGeometry(self.options.section4Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection4_5 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection4_5.geometry.translate( self.options.section4Length / 2, 0, 0 );
    
            horizontalDividerSection4_5.name = 'horizontalDividerSection4_5'
            horizontalDividerSection4_5.material.needsUpdate = true;
    
            horizontalDividerSection4_5.position.x = this.scene.getObjectByName( "pillar3", true ).position.x+0.5;
            horizontalDividerSection4_5.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection4_5.position.y = parseFloat(+self.params.get('hDS4_5'));
                self.options.sectionHeight_4_5 = +self.params.get('H_S4_5');
                self.options.sectionHeight_4_6 = +self.params.get('H_S4_6');
            } else {
                horizontalDividerSection4_5.position.y = self.scene.getObjectByName('horizontalDividerSection4_4').position.y + 12;
                self.options.sectionHeight_4_5 = 13
                self.options.sectionHeight_4_6 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection4_5);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section4_5('savedCorrectionURL');
                self.createRayCastRecieverSection4_5('savedCorrectionURL');
            
                self.createWireframeBack_section4_6('savedCorrectionURL');
                self.createRayCastRecieverSection4_6('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section4_6(); 
                self.createRayCastRecieverSection4_6();
    
                self.createWireframeBack_section4_5();
                self.createRayCastRecieverSection4_5();      
            }
            
        },

        //4_6 cuts 4_5
        createhorizontalDividerSection4_6: function(shelfId) {
    
            var self = this 
    
            self.scene.remove(this.horizontalDividerSection4_6);
    
            let currentHeight = self.options.sectionHeight_4_6
    
            var geometry = new THREE.BoxGeometry(self.options.section4Length + self.options.pillar.thickness/2, self.options.shelf.thickness, self.options.shelf.width);
            
            var material = new THREE.MeshStandardMaterial({color: self.options.shelf.color});
            
            var horizontalDividerSection4_6 = new THREE.Mesh(geometry, material);
            
            horizontalDividerSection4_6.geometry.translate( self.options.section4Length / 2, 0, 0 );
    
            horizontalDividerSection4_6.name = 'horizontalDividerSection4_6'
            horizontalDividerSection4_6.material.needsUpdate = true;
    
            horizontalDividerSection4_6.position.x = this.scene.getObjectByName( "pillar3", true ).position.x+0.5;
            horizontalDividerSection4_6.position.z = -self.options.room.width / 2 + self.options.shelf.width / 2;
    
    
            if (shelfId == 'savedURL'){
                horizontalDividerSection4_6.position.y = parseFloat(+self.params.get('hDS4_6'));
                self.options.sectionHeight_4_6 = +self.params.get('H_S4_6');
                self.options.sectionHeight_4_7 = +self.params.get('H_S4_7');
            } else {
                horizontalDividerSection4_6.position.y = self.scene.getObjectByName('horizontalDividerSection4_5').position.y + 12;
                self.options.sectionHeight_4_6 = 13
                self.options.sectionHeight_4_7 = currentHeight - 12
            }
    
            self.scene.add(horizontalDividerSection4_6);
        
            if (shelfId == 'savedURL'){
                self.createWireframeBack_section4_6('savedCorrectionURL');
                self.createRayCastRecieverSection4_6('savedCorrectionURL');
            
                self.createWireframeBack_section4_7('savedCorrectionURL');
                self.createRayCastRecieverSection4_7('savedCorrectionURL'); 
    
            } else {
                self.createWireframeBack_section4_7(); 
                self.createRayCastRecieverSection4_7();
    
                self.createWireframeBack_section4_6();
                self.createRayCastRecieverSection4_6();      
            }
            
        },
        
    
    
    
        //for texture and materials of the horizontal generated shelves
        updateShelfProtoMaterialOnDemand: function() {
            this.shelfProtoOnDemand.material.needsUpdate = true;
            var texture = this.shelfProtoOnDemand.material.map;
            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
            texture.repeat.x = this.options.shelf.length / this.boardTextureStep * this.boardTextureRepeatXPerStep;  
            texture.repeat.y = this.options.shelf.width / this.boardTextureStep * this.boardTextureRepeatYPerStep;
        },    
    
        //!!horizontal... internal shelving
        createShelfToGroup: function(posShelf, shelfId, section, sectionLength ) {
            var self = this;

            //length of section - 2 (minus 2 cm thikness )
            var geometry = new THREE.BoxGeometry(sectionLength +1, this.options.shelf.thickness, this.options.shelf.width -6); //"recessed by 3cm from carcas"
            var material = new THREE.MeshStandardMaterial({color: this.options.shelf.color, transparent: true, opacity: 1});
            var shelfToGroupProto = new THREE.Mesh(geometry, material);
            shelfToGroupProto.castShadow = true
            shelfToGroupProto.receiveShadow = true
            shelfToGroupProto.name = 'internalShelf'+'_'+section+'_shelf'+shelfId;
            shelfToGroupProto.geometry.translate( sectionLength / 2, 0, -this.options.shelf.width + 3 );
            shelfToGroupProto.position.z = this.options.shelf.width /2 
            shelfToGroupProto.material.needsUpdate = true;
            shelfToGroupProto.position.y = posShelf
            this.shelfToGroupProto = shelfToGroupProto;
            return shelfToGroupProto;
        },

        createShelfShoeToGroup: function(posShelf, shelfId, section, sectionLength ) {

            var self = this;
            
            var geometry = new THREE.BoxGeometry(sectionLength +1, this.options.shelf.thickness, 33.2); 
            var material = new THREE.MeshStandardMaterial({color: this.options.shelf.color, transparent: true, opacity: 1});
            var shelfToGroupProto = new THREE.Mesh(geometry, material);
            shelfToGroupProto.castShadow = true
            shelfToGroupProto.receiveShadow = true
            shelfToGroupProto.name = 'internalShelf'+'_'+section+'_shelf'+shelfId;
            shelfToGroupProto.geometry.translate( sectionLength / 2, 0, 33.2/2  );
            shelfToGroupProto.position.z = -self.options.shelf.width / 2
            shelfToGroupProto.rotation.x = THREE.MathUtils.degToRad(14);
            shelfToGroupProto.position.y = posShelf;
            shelfToGroupProto.material.needsUpdate = true;

            this.shelfToGroupProto = shelfToGroupProto;
            return shelfToGroupProto;

        },

        createShelfShoeToGroup2: function(posShelf, shelfId, section, sectionLength ) {

            var self = this;
            
            var geometry = new THREE.BoxGeometry(sectionLength +1, this.options.shelf.thickness, 3); 
            var material = new THREE.MeshStandardMaterial({color: this.options.shelf.color, transparent: true, opacity: 1});
            var shelfToGroupProto = new THREE.Mesh(geometry, material);
            shelfToGroupProto.castShadow = true
            shelfToGroupProto.receiveShadow = true
            shelfToGroupProto.name = 'internalShelfShoe'+'_'+section+'_shelf'+shelfId;
            shelfToGroupProto.geometry.translate( sectionLength / 2, -self.options.shelf.width / 2, 0  );
            shelfToGroupProto.position.z = 33.2
            shelfToGroupProto.rotation.x = THREE.MathUtils.degToRad(105);
            shelfToGroupProto.position.y = posShelf - 13;
            shelfToGroupProto.material.needsUpdate = true;

            this.shelfToGroupProto = shelfToGroupProto;
            return shelfToGroupProto;

        },
    
    
        // doors and handles generator/management
    
        createDoorProto: function(sectionHeight, sectionLength, nameId, MatNum, textureRotation) {
            var self = this;
            var geometry = new THREE.BoxGeometry(sectionLength, sectionHeight - this.options.shelf.thickness * 2, 2); 
        
            var material = new THREE.MeshPhysicalMaterial({color: this.options.shelf.color, roughness:1, metalness: 0.1});
            material.map = self.textures[self.options.doors.texture].map.clone(); 
            material.map.wrapS = material.map.wrapT = THREE.RepeatWrapping;
            material.map.repeat.x = sectionLength / (self.boardTextureStep * self.boardTextureRepeatXPerStep /1) ;
            material.map.repeat.y =  sectionHeight / (self.boardTextureStep * self.boardTextureRepeatYPerStep /1);
    
            var textureRotation = sectionLength > (sectionHeight - this.options.shelf.thickness * 2) ? THREE.MathUtils.degToRad(90) : 0;
            material.map.rotation = textureRotation;
            material.needsUpdate = true;
        
            var doorProto = new THREE.Mesh(geometry, material);
            doorProto.name = nameId
            doorProto.geometry.translate( sectionLength / 2, 0, 0 );
        
            this.doorProto = doorProto;
            return doorProto;
        },
    
        //HANDLES
        loadAndPlaceHandle: function(nameId, positionTop, positionRight, positionInDepth, groupToAdd, visibleState) {
    
            var self = this;
            this.handle = 0;
    
            for (var name in this.handles) {
    
                var params = this.handles[name];
                var mtlLoader = new THREE.MTLLoader(this.loader);
                mtlLoader.setPath(this.assetsPath + params.path);
                mtlLoader.load(name + '.mtl', function(name, params) {
                    return function(materials) {
                        var objLoader = new THREE.OBJLoader(self.loader);
                        objLoader.setMaterials(materials);
                        objLoader.setPath(self.assetsPath + params.path);
                        objLoader.load(name + '.obj', function(object) {
    
                            object.traverse(function(child) {
                                if (child instanceof THREE.Mesh) {
                                    child.material = new THREE.MeshStandardMaterial({color: 0x555555, metalness: 0.75, roughness: 0.4, transparent: true, opacity: 1});
                                }
                            });
                            
                            //management of loaded model here 
                            object.visible = visibleState;

                            object.name = nameId
                            object.position.y = positionTop
                            object.position.x = positionRight
                            object.position.z = 1.5 //-self.options.room.width / 2 + self.options.shelf.width / 2 + 40;
    
                            groupToAdd.add(object); 
                        });
                    }
                } (name, params));
            }
        },
    
        loadAndPlaceGrommet: function(nameId, positionTop, positionRight, positionDepth, rotationX, groupToAdd) {
    
            var self = this;
            this.grommet = 0;
    
            for (var name in this.grommets) {
    
                var params = this.grommets[name];
                var mtlLoader = new THREE.MTLLoader(this.loader);
                mtlLoader.setPath(this.assetsPath + params.path);
                mtlLoader.load(name + '.mtl', function(name, params) {
                    return function(materials) {
                        var objLoader = new THREE.OBJLoader(self.loader);
                        objLoader.setMaterials(materials);
                        objLoader.setPath(self.assetsPath + params.path);
                        objLoader.load(name + '.obj', function(object) {
    
                            object.traverse(function(child) {
                                if (child instanceof THREE.Mesh) {
                                    child.material = new THREE.MeshPhysicalMaterial({color: 0x777777, metalness: 0.75, roughness: 0.4, /* envMap: textureCube, */});
                                }
                            });
                            
                            //management of loaded model here 
                            object.visible = true;
                            object.name = nameId
                            object.position.y = positionTop
                            object.position.x = positionRight
                            object.position.z = positionDepth
                            object.rotation.x = rotationX
    
                            groupToAdd.add(object); 
                        });
                    }
                } (name, params));
            }
        },
    

    
    
        //ð§Raycast transparent red objects pointer 'click/hover' recievers
        // 1_1
        createRayCastRecieverSection1_1: function(savedCorrection) {
    
            var self = this;
            this.scene.remove(this.RayCastRecieverSection1_1);
    
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, self.options.sectionHeight_1_1 - self.options.shelf.thickness, self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
            var RayCastRecieverSection1_1 = new THREE.Mesh(geometry, material);
    
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection1_1.geometry.translate( this.options.section1Length / 2, 0, 0 );
                RayCastRecieverSection1_1.position.y = parseFloat(self.params.get('RCS1_1_pY'));
            }   else {
                RayCastRecieverSection1_1.geometry.translate( this.options.section1Length / 2, 0, 0 );
                RayCastRecieverSection1_1.position.y = this.shelving.getObjectByName( "shelf_0_0", true ).position.y + this.options.sectionHeight_1_1 / 2   - this.options.shelf.thickness /2
            }      
            
            RayCastRecieverSection1_1.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x +0.5;
    
            RayCastRecieverSection1_1.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
    
            RayCastRecieverSection1_1.name = "RayCastRecieverSection1_1"
            RayCastRecieverSection1_1.renderOrder = 999
    
            RayCastRecieverSection1_1.visible = true;
            this.RayCastRecieverSection1_1 = RayCastRecieverSection1_1;
    
            if ( self.options.intersectsChooseStatus === 11) {
                self.RayCastRecieverSection1_1.material.opacity = 0.2
                self.section1_WireframeMesh1_1.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection1_1.material.opacity = 0
                self.section1_WireframeMesh1_1.material.opacity = 0
            } 
    
            this.scene.add(RayCastRecieverSection1_1);
    
        },
    
        createWireframeBack_section1_1: function(savedCorrection) {
    
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_1);
    
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_1 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
            var section1_WireframeMesh1_1 = new THREE.Mesh(geometry, material);
    
            section1_WireframeMesh1_1.geometry.translate( self.options.section1Length / 2 +0.5, 0, 0 );
            
            if (savedCorrection == 'savedCorrectionURL') {
                section1_WireframeMesh1_1.position.y = parseFloat(self.params.get('WRS1_1_pY'));
            }  else {
                section1_WireframeMesh1_1.position.y = this.shelving.getObjectByName( "shelf_0_0", true ).position.y + this.options.sectionHeight_1_1 / 2   - this.options.shelf.thickness /2      
            }  
    
            section1_WireframeMesh1_1.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
            section1_WireframeMesh1_1.position.z = -999
    
            section1_WireframeMesh1_1.name = "section1_WireframeMesh1_1"
            
            section1_WireframeMesh1_1.visible = true;
            
            this.section1_WireframeMesh1_1 = section1_WireframeMesh1_1;
    
            this.scene.add(section1_WireframeMesh1_1);
        },
    
        // 1_2 cut 1_1
        createRayCastRecieverSection1_2: function(savedCorrection) {
    
            var self = this;
            this.scene.remove(this.RayCastRecieverSection1_2);
    
            var geometry = new THREE.BoxGeometry(this.options.section1Length + this.options.pillar.thickness/2, this.options.sectionHeight_1_2 - this.options.shelf.thickness, this.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
            var RayCastRecieverSection1_2 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection1_2.geometry.translate( this.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + this.options.sectionHeight_1_2 / 2 - this.options.shelf.thickness/2, 0 )
    

            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s1_AmountOfHorDividers === 1) {
                    RayCastRecieverSection1_2.position.y = parseFloat(self.params.get('RCS1_2_pY')) + this.options.shelf.thickness/2; 
                } else{
                    RayCastRecieverSection1_2.position.y = parseFloat(self.params.get('RCS1_2_pY')) - this.options.shelf.thickness/2;   
                }
            } else {
            } 
            
            RayCastRecieverSection1_2.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            RayCastRecieverSection1_2.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
    
            RayCastRecieverSection1_2.name = "RayCastRecieverSection1_2"
    
            RayCastRecieverSection1_2.renderOrder = 999
    
            RayCastRecieverSection1_2.visible = true;
    
            this.RayCastRecieverSection1_2 = RayCastRecieverSection1_2;
    
            if ( self.options.intersectsChooseStatus === 12) {
                self.RayCastRecieverSection1_2.material.opacity = 0.2
                self.section1_WireframeMesh1_2.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection1_2.material.opacity = 0
                self.section1_WireframeMesh1_2.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection1_2);
        },
    
        createWireframeBack_section1_2: function(savedCorrection) {
    
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_2);
    
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_2 - this.options.shelf.thickness);       
            
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section1_WireframeMesh1_2 = new THREE.Mesh(geometry, material);
            
            section1_WireframeMesh1_2.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + this.options.sectionHeight_1_2 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section1_WireframeMesh1_2.position.y = parseFloat(self.params.get('WRS1_2_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section1_WireframeMesh1_2.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            section1_WireframeMesh1_2.position.z = -999
    
            section1_WireframeMesh1_2.name = "section1_WireframeMesh1_2"
            
            section1_WireframeMesh1_2.visible = true;
            this.section1_WireframeMesh1_2 = section1_WireframeMesh1_2;
    
            this.scene.add(section1_WireframeMesh1_2);
        },

        // 1_3 cut 1_2
        createWireframeBack_section1_3: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_3);
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_3 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section1_WireframeMesh1_3 = new THREE.Mesh(geometry, material);
    
            section1_WireframeMesh1_3.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + this.options.sectionHeight_1_3 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s1_AmountOfHorDividers === 4) {
                    section1_WireframeMesh1_3.position.y = parseFloat(self.params.get('WRS1_3_pY')) - 4;
                } else{
                    section1_WireframeMesh1_3.position.y = parseFloat(self.params.get('WRS1_3_pY')) + this.options.shelf.thickness/2;
                }
            } else {
            }  
    
            section1_WireframeMesh1_3.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
            section1_WireframeMesh1_3.position.z = -999
            section1_WireframeMesh1_3.name = "section1_WireframeMesh1_3"
    
            section1_WireframeMesh1_3.visible = true;
            this.section1_WireframeMesh1_3 = section1_WireframeMesh1_3;
    
            this.scene.add(section1_WireframeMesh1_3);
        },
    
        createRayCastRecieverSection1_3: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection1_3);
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_3 - this.options.shelf.thickness, self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
    
            var RayCastRecieverSection1_3 = new THREE.Mesh(geometry, material);
    
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s1_AmountOfHorDividers === 4) {
                    RayCastRecieverSection1_3.position.y = parseFloat(self.params.get('RCS1_3_pY')) - 4;

                } else{
                    RayCastRecieverSection1_3.position.y = parseFloat(self.params.get('RCS1_3_pY')) + this.options.shelf.thickness/2;
                }
            } else {
            }  
    
            RayCastRecieverSection1_3.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + this.options.sectionHeight_1_3 / 2 - this.options.shelf.thickness/2, 0 )
    
    
            RayCastRecieverSection1_3.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            RayCastRecieverSection1_3.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
    
            RayCastRecieverSection1_3.name = "RayCastRecieverSection1_3"
            RayCastRecieverSection1_3.renderOrder = 999
            RayCastRecieverSection1_3.visible = true;
    
            this.RayCastRecieverSection1_3 = RayCastRecieverSection1_3;
    
            if ( self.options.intersectsChooseStatus === 13) {
                self.RayCastRecieverSection1_3.material.opacity = 0.2
                self.section1_WireframeMesh1_3.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection1_3.material.opacity = 0
                self.section1_WireframeMesh1_3.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection1_3);
    
        },
    
        // 1_4 cut 1_3   
        createWireframeBack_section1_4: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_4);
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_4 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section1_WireframeMesh1_4 = new THREE.Mesh(geometry, material);
    
            section1_WireframeMesh1_4.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + this.options.sectionHeight_1_4 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section1_WireframeMesh1_4.position.y = parseFloat(self.params.get('WRS1_4_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section1_WireframeMesh1_4.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            section1_WireframeMesh1_4.position.z = -999
    
            section1_WireframeMesh1_4.name = "section1_WireframeMesh1_4"
            
            section1_WireframeMesh1_4.visible = true;
            this.section1_WireframeMesh1_4 = section1_WireframeMesh1_4;
    
            this.scene.add(section1_WireframeMesh1_4);
    
        },
    
        createRayCastRecieverSection1_4: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection1_4);
            var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_4 - this.options.shelf.thickness, self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection1_4 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection1_4.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + this.options.sectionHeight_1_4 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection1_4.position.y = parseFloat(self.params.get('RCS1_4_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection1_4.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            RayCastRecieverSection1_4.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
    
            RayCastRecieverSection1_4.name = "RayCastRecieverSection1_4"
            RayCastRecieverSection1_4.renderOrder = 999
            RayCastRecieverSection1_4.visible = true;
            this.RayCastRecieverSection1_4 = RayCastRecieverSection1_4;
    
            if ( self.options.intersectsChooseStatus === 14) {
                self.RayCastRecieverSection1_4.material.opacity = 0.2
                self.section1_WireframeMesh1_4.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection1_4.material.opacity = 0.0
                self.section1_WireframeMesh1_4.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection1_4);
        },


        // 1_5 cut 1_4   
        createWireframeBack_section1_5: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_5);
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_5 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section1_WireframeMesh1_5 = new THREE.Mesh(geometry, material);
    
            section1_WireframeMesh1_5.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + this.options.sectionHeight_1_5 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section1_WireframeMesh1_5.position.y = parseFloat(self.params.get('WRS1_5_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section1_WireframeMesh1_5.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            section1_WireframeMesh1_5.position.z = -999
    
            section1_WireframeMesh1_5.name = "section1_WireframeMesh1_5"
            
            section1_WireframeMesh1_5.visible = true;
            this.section1_WireframeMesh1_5 = section1_WireframeMesh1_5;
    
            this.scene.add(section1_WireframeMesh1_5);
    
        },
    
        createRayCastRecieverSection1_5: function(savedCorrection) {
                var self = this;
                this.scene.remove(this.RayCastRecieverSection1_5);
                var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_5 - this.options.shelf.thickness, self.options.shelf.width-1);
        
                var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
        
                var RayCastRecieverSection1_5 = new THREE.Mesh(geometry, material);
        
                RayCastRecieverSection1_5.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + this.options.sectionHeight_1_5 / 2 - this.options.shelf.thickness/2, 0 )
        
                if (savedCorrection == 'savedCorrectionURL'){
                    RayCastRecieverSection1_5.position.y = parseFloat(self.params.get('RCS1_5_pY')) + this.options.shelf.thickness/2;
                } else {
                } 
        
                RayCastRecieverSection1_5.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
        
                RayCastRecieverSection1_5.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
        
                RayCastRecieverSection1_5.name = "RayCastRecieverSection1_5"
                RayCastRecieverSection1_5.renderOrder = 999
                RayCastRecieverSection1_5.visible = true;
                this.RayCastRecieverSection1_5 = RayCastRecieverSection1_5;
        
                if ( self.options.intersectsChooseStatus === 15) {
                    self.RayCastRecieverSection1_5.material.opacity = 0.2
                    self.section1_WireframeMesh1_5.material.opacity = 0.2
                } else {
                    self.RayCastRecieverSection1_5.material.opacity = 0.0
                    self.section1_WireframeMesh1_5.material.opacity = 0.0
                }
        
                this.scene.add(RayCastRecieverSection1_5);
        },


        // 1_6 cut 1_5   
        createWireframeBack_section1_6: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_6);
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_6 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section1_WireframeMesh1_6 = new THREE.Mesh(geometry, material);
    
            section1_WireframeMesh1_6.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + this.options.sectionHeight_1_6 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section1_WireframeMesh1_6.position.y = parseFloat(self.params.get('WRS1_6_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section1_WireframeMesh1_6.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            section1_WireframeMesh1_6.position.z = -999
    
            section1_WireframeMesh1_6.name = "section1_WireframeMesh1_6"
            
            section1_WireframeMesh1_6.visible = true;
            this.section1_WireframeMesh1_6 = section1_WireframeMesh1_6;
    
            this.scene.add(section1_WireframeMesh1_6);
    
        },
    
        createRayCastRecieverSection1_6: function(savedCorrection) {
                var self = this;
                this.scene.remove(this.RayCastRecieverSection1_6);
                var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_6 - this.options.shelf.thickness, self.options.shelf.width-1);
        
                var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
        
                var RayCastRecieverSection1_6 = new THREE.Mesh(geometry, material);
        
                RayCastRecieverSection1_6.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + this.options.sectionHeight_1_6 / 2 - this.options.shelf.thickness/2, 0 )
        
                if (savedCorrection == 'savedCorrectionURL'){
                    RayCastRecieverSection1_6.position.y = parseFloat(self.params.get('RCS1_6_pY')) + this.options.shelf.thickness/2;
                } else {
                } 
        
                RayCastRecieverSection1_6.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
        
                RayCastRecieverSection1_6.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
        
                RayCastRecieverSection1_6.name = "RayCastRecieverSection1_6"
                RayCastRecieverSection1_6.renderOrder = 999
                RayCastRecieverSection1_6.visible = true;
                this.RayCastRecieverSection1_6 = RayCastRecieverSection1_6;
        
                if ( self.options.intersectsChooseStatus === 16) {
                    self.RayCastRecieverSection1_6.material.opacity = 0.2
                    self.section1_WireframeMesh1_6.material.opacity = 0.2
                } else {
                    self.RayCastRecieverSection1_6.material.opacity = 0.0
                    self.section1_WireframeMesh1_6.material.opacity = 0.0
                }
        
                this.scene.add(RayCastRecieverSection1_6);
        },


        // 1_7 cut 1_6   
        createWireframeBack_section1_7: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_7);
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_7 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section1_WireframeMesh1_7 = new THREE.Mesh(geometry, material);
    
            section1_WireframeMesh1_7.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y + this.options.sectionHeight_1_7 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section1_WireframeMesh1_7.position.y = parseFloat(self.params.get('WRS1_7_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section1_WireframeMesh1_7.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            section1_WireframeMesh1_7.position.z = -999
    
            section1_WireframeMesh1_7.name = "section1_WireframeMesh1_7"
            
            section1_WireframeMesh1_7.visible = true;
            this.section1_WireframeMesh1_7 = section1_WireframeMesh1_7;
    
            this.scene.add(section1_WireframeMesh1_7);
    
        },
    
        createRayCastRecieverSection1_7: function(savedCorrection) {
                var self = this;
                this.scene.remove(this.RayCastRecieverSection1_7);
                var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_7 - this.options.shelf.thickness, self.options.shelf.width-1);
        
                var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
        
                var RayCastRecieverSection1_7 = new THREE.Mesh(geometry, material);
        
                RayCastRecieverSection1_7.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y + this.options.sectionHeight_1_7 / 2 - this.options.shelf.thickness/2, 0 )
        
                if (savedCorrection == 'savedCorrectionURL'){
                    RayCastRecieverSection1_7.position.y = parseFloat(self.params.get('RCS1_7_pY')) + this.options.shelf.thickness/2;
                } else {
                } 
        
                RayCastRecieverSection1_7.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
        
                RayCastRecieverSection1_7.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
        
                RayCastRecieverSection1_7.name = "RayCastRecieverSection1_7"
                RayCastRecieverSection1_7.renderOrder = 999
                RayCastRecieverSection1_7.visible = true;
                this.RayCastRecieverSection1_7 = RayCastRecieverSection1_7;
        
                if ( self.options.intersectsChooseStatus === 17) {
                    self.RayCastRecieverSection1_7.material.opacity = 0.2
                    self.section1_WireframeMesh1_7.material.opacity = 0.2
                } else {
                    self.RayCastRecieverSection1_7.material.opacity = 0.0
                    self.section1_WireframeMesh1_7.material.opacity = 0.0
                }
        
                this.scene.add(RayCastRecieverSection1_7);
        },


        // 1_8 cut 1_7   
        createWireframeBack_section1_8: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_8);
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_8 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section1_WireframeMesh1_8 = new THREE.Mesh(geometry, material);
    
            section1_WireframeMesh1_8.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_7", true ).position.y + this.options.sectionHeight_1_8 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section1_WireframeMesh1_8.position.y = parseFloat(self.params.get('WRS1_8_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section1_WireframeMesh1_8.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            section1_WireframeMesh1_8.position.z = -999
    
            section1_WireframeMesh1_8.name = "section1_WireframeMesh1_8"
            
            section1_WireframeMesh1_8.visible = true;
            this.section1_WireframeMesh1_8 = section1_WireframeMesh1_8;
    
            this.scene.add(section1_WireframeMesh1_8);
    
        },
    
        createRayCastRecieverSection1_8: function(savedCorrection) {
                var self = this;
                this.scene.remove(this.RayCastRecieverSection1_8);
                var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_8 - this.options.shelf.thickness, self.options.shelf.width-1);
        
                var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
        
                var RayCastRecieverSection1_8 = new THREE.Mesh(geometry, material);
        
                RayCastRecieverSection1_8.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_7", true ).position.y + this.options.sectionHeight_1_8 / 2 - this.options.shelf.thickness/2, 0 )
        
                if (savedCorrection == 'savedCorrectionURL'){
                    RayCastRecieverSection1_8.position.y = parseFloat(self.params.get('RCS1_8_pY')) + this.options.shelf.thickness/2;
                } else {
                } 
        
                RayCastRecieverSection1_8.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
        
                RayCastRecieverSection1_8.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
        
                RayCastRecieverSection1_8.name = "RayCastRecieverSection1_8"
                RayCastRecieverSection1_8.renderOrder = 999
                RayCastRecieverSection1_8.visible = true;
                this.RayCastRecieverSection1_8 = RayCastRecieverSection1_8;
        
                if ( self.options.intersectsChooseStatus === 18) {
                    self.RayCastRecieverSection1_8.material.opacity = 0.2
                    self.section1_WireframeMesh1_8.material.opacity = 0.2
                } else {
                    self.RayCastRecieverSection1_8.material.opacity = 0.0
                    self.section1_WireframeMesh1_8.material.opacity = 0.0
                }
        
                this.scene.add(RayCastRecieverSection1_8);
        },


        // 1_9 cut 1_8   
        createWireframeBack_section1_9: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section1_WireframeMesh1_9);
            var geometry = new THREE.PlaneGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_9 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section1_WireframeMesh1_9 = new THREE.Mesh(geometry, material);
    
            section1_WireframeMesh1_9.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_8", true ).position.y + this.options.sectionHeight_1_9 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section1_WireframeMesh1_9.position.y = parseFloat(self.params.get('WRS1_9_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section1_WireframeMesh1_9.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
    
            section1_WireframeMesh1_9.position.z = -999
    
            section1_WireframeMesh1_9.name = "section1_WireframeMesh1_9"
            
            section1_WireframeMesh1_9.visible = true;
            this.section1_WireframeMesh1_9 = section1_WireframeMesh1_9;
    
            this.scene.add(section1_WireframeMesh1_9);
    
        },
    
        createRayCastRecieverSection1_9: function(savedCorrection) {
                var self = this;
                this.scene.remove(this.RayCastRecieverSection1_9);
                var geometry = new THREE.BoxGeometry(self.options.section1Length + self.options.pillar.thickness/2, this.options.sectionHeight_1_9 - this.options.shelf.thickness, self.options.shelf.width-1);
        
                var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
        
                var RayCastRecieverSection1_9 = new THREE.Mesh(geometry, material);
        
                RayCastRecieverSection1_9.geometry.translate( self.options.section1Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection1_8", true ).position.y + this.options.sectionHeight_1_9 / 2 - this.options.shelf.thickness/2, 0 )
        
                if (savedCorrection == 'savedCorrectionURL'){
                    RayCastRecieverSection1_9.position.y = parseFloat(self.params.get('RCS1_9_pY')) + this.options.shelf.thickness/2;
                } else {
                } 
        
                RayCastRecieverSection1_9.position.x = this.shelving.getObjectByName( "pillar_0", true ).position.x;
        
                RayCastRecieverSection1_9.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
        
                RayCastRecieverSection1_9.name = "RayCastRecieverSection1_9"
                RayCastRecieverSection1_9.renderOrder = 999
                RayCastRecieverSection1_9.visible = true;
                this.RayCastRecieverSection1_9 = RayCastRecieverSection1_9;
        
                if ( self.options.intersectsChooseStatus === 19) {
                    self.RayCastRecieverSection1_9.material.opacity = 0.2
                    self.section1_WireframeMesh1_9.material.opacity = 0.2
                } else {
                    self.RayCastRecieverSection1_9.material.opacity = 0.0
                    self.section1_WireframeMesh1_9.material.opacity = 0.0
                }
        
                this.scene.add(RayCastRecieverSection1_9);
        },

    
    
    
    
        // 2_1
        createRayCastRecieverSection2_1: function(savedCorrection) {
            
            var self = this;
            this.scene.remove(this.RayCastRecieverSection2_1);
    
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_1 - this.options.shelf.thickness, self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_1 - this.options.shelf.thickness, self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
            var RayCastRecieverSection2_1 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 2 ) {
                RayCastRecieverSection2_1.geometry.translate( self.options.section2Length / 2 +0.5, 0, 0 );
            } else{
                RayCastRecieverSection2_1.geometry.translate( self.options.section2Length / 2, 0, 0 );
            }
    
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection2_1.position.y = parseFloat(self.params.get('RCS2_1_pY'));
            } else {
                RayCastRecieverSection2_1.position.y = this.shelving.getObjectByName( "shelf_0_0", true ).position.y + this.options.sectionHeight_2_1 / 2   - this.options.shelf.thickness /2
            } 
    
            RayCastRecieverSection2_1.position.x = this.scene.getObjectByName( "pillar1", true ).position.x ;
    
            RayCastRecieverSection2_1.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
    
            RayCastRecieverSection2_1.name = "RayCastRecieverSection2_1"
            RayCastRecieverSection2_1.renderOrder = 999
    
            RayCastRecieverSection2_1.visible = true;
            this.RayCastRecieverSection2_1 = RayCastRecieverSection2_1;
    
            if ( self.options.intersectsChooseStatus === 21) {
                self.RayCastRecieverSection2_1.material.opacity = 0.2
                self.section2_WireframeMesh2_1.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection2_1.material.opacity = 0
                self.section2_WireframeMesh2_1.material.opacity = 0
            } 
    
            this.scene.add(RayCastRecieverSection2_1);
    
        },
    
        createWireframeBack_section2_1: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_1);
    
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_1 - this.options.shelf.thickness);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_1 - this.options.shelf.thickness);
            } 
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
            var section2_WireframeMesh2_1 = new THREE.Mesh(geometry, material);
                    
            if (this.options.amountOfSections === 2 ) {
                section2_WireframeMesh2_1.geometry.translate( self.options.section2Length / 2 +0.5, 0, 0 );
            } else{
                section2_WireframeMesh2_1.geometry.translate( self.options.section2Length / 2, 0, 0 );
            } 
    
            if (savedCorrection == 'savedCorrectionURL') {
                section2_WireframeMesh2_1.position.y = parseFloat(self.params.get('WRS2_1_pY'));
            } else {
                section2_WireframeMesh2_1.position.y = this.shelving.getObjectByName( "shelf_0_0", true ).position.y + this.options.sectionHeight_2_1 / 2   - this.options.shelf.thickness /2
            } 
    
            section2_WireframeMesh2_1.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
            
            section2_WireframeMesh2_1.position.z = -999
            section2_WireframeMesh2_1.name = "section2_WireframeMesh2_1"
            
            section2_WireframeMesh2_1.visible = true;
            this.section2_WireframeMesh2_1 = section2_WireframeMesh2_1;
    
            this.scene.add(section2_WireframeMesh2_1);
        },
    
        // 2_2
        createRayCastRecieverSection2_2: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection2_2);
    
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_2 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_2 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
            var RayCastRecieverSection2_2 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 2 ) {
                RayCastRecieverSection2_2.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + this.options.sectionHeight_2_2 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                RayCastRecieverSection2_2.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + this.options.sectionHeight_2_2 / 2 - this.options.shelf.thickness/2, 0 )
            } 
    
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s2_AmountOfHorDividers == 1) {
                    RayCastRecieverSection2_2.position.y = parseFloat(self.params.get('RCS2_2_pY')) + this.options.shelf.thickness/2; 
                } else{
                    RayCastRecieverSection2_2.position.y = parseFloat(self.params.get('RCS2_2_pY')) - this.options.shelf.thickness/2;   
                }
            } else {
            } 
    
            RayCastRecieverSection2_2.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            RayCastRecieverSection2_2.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
    
            RayCastRecieverSection2_2.name = "RayCastRecieverSection2_2"
    
            RayCastRecieverSection2_2.renderOrder = 999
    
            RayCastRecieverSection2_2.visible = true;
    
            this.RayCastRecieverSection2_2 = RayCastRecieverSection2_2;
    
            if ( self.options.intersectsChooseStatus === 22) {
                self.RayCastRecieverSection2_2.material.opacity = 0.2
                self.section2_WireframeMesh2_2.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection2_2.material.opacity = 0
                self.section2_WireframeMesh2_2.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection2_2);
        },
    
        createWireframeBack_section2_2: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_2);
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_2 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_2 - this.options.shelf.thickness );
            } 
    
            var section2_WireframeMesh2_2 = new THREE.Mesh(geometry, material);
            
            if (this.options.amountOfSections === 2 ) {
                section2_WireframeMesh2_2.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + this.options.sectionHeight_2_2 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                section2_WireframeMesh2_2.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + this.options.sectionHeight_2_2 / 2 - this.options.shelf.thickness/2, 0 )
            }
            
            if (savedCorrection == 'savedCorrectionURL'){
                section2_WireframeMesh2_2.position.y = parseFloat(self.params.get('WRS2_2_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section2_WireframeMesh2_2.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            section2_WireframeMesh2_2.position.z = -999
    
            section2_WireframeMesh2_2.name = "section2_WireframeMesh2_2"
            
            section2_WireframeMesh2_2.visible = true;
            this.section2_WireframeMesh2_2 = section2_WireframeMesh2_2;
    
            this.scene.add(section2_WireframeMesh2_2);
        },
    
        //2_3 cuts 2_2
        createWireframeBack_section2_3: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_3);
    
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_3 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_3 - this.options.shelf.thickness );
            } 
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section2_WireframeMesh2_3 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 2 ) {
                section2_WireframeMesh2_3.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + this.options.sectionHeight_2_3 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                section2_WireframeMesh2_3.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + this.options.sectionHeight_2_3 / 2 - this.options.shelf.thickness/2, 0 )
            }
            
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s2_AmountOfHorDividers === 4) {
                    section2_WireframeMesh2_3.position.y = parseFloat(self.params.get('WRS2_3_pY')) -4;
                } else{
                    section2_WireframeMesh2_3.position.y = parseFloat(self.params.get('WRS2_3_pY')) + this.options.shelf.thickness/2;
                }
            } else {
            } 
    
            section2_WireframeMesh2_3.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
            section2_WireframeMesh2_3.position.z = -999
            section2_WireframeMesh2_3.name = "section2_WireframeMesh2_3"
    
            section2_WireframeMesh2_3.visible = true;
            this.section2_WireframeMesh2_3 = section2_WireframeMesh2_3;
    
            this.scene.add(section2_WireframeMesh2_3);
        },
    
        createRayCastRecieverSection2_3: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection2_3);
    
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_3 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_3 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
    
            var RayCastRecieverSection2_3 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 2 ) {
                RayCastRecieverSection2_3.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + this.options.sectionHeight_2_3 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                RayCastRecieverSection2_3.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + this.options.sectionHeight_2_3 / 2 - this.options.shelf.thickness/2, 0 )
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s2_AmountOfHorDividers === 4) {
                    RayCastRecieverSection2_3.position.y = parseFloat(self.params.get('RCS2_3_pY')) - 4;
                } else{
                    RayCastRecieverSection2_3.position.y = parseFloat(self.params.get('RCS2_3_pY')) + this.options.shelf.thickness/2;
                }
            } else {
            } 
    
            RayCastRecieverSection2_3.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
            RayCastRecieverSection2_3.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection2_3.name = "RayCastRecieverSection2_3"
            RayCastRecieverSection2_3.renderOrder = 999
            RayCastRecieverSection2_3.visible = true;
    
            this.RayCastRecieverSection2_3 = RayCastRecieverSection2_3;
    
            if ( self.options.intersectsChooseStatus === 23) {
                self.RayCastRecieverSection2_3.material.opacity = 0.2
                self.section2_WireframeMesh2_3.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection2_3.material.opacity = 0
                self.section2_WireframeMesh2_3.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection2_3);
    
        },
    
    
        //2_4 cuts 2_3
        createWireframeBack_section2_4: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_4);
    
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_4 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_4 - this.options.shelf.thickness );
            } 
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section2_WireframeMesh2_4 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 2 ) {
                section2_WireframeMesh2_4.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + this.options.sectionHeight_2_4 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                section2_WireframeMesh2_4.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + this.options.sectionHeight_2_4 / 2 - this.options.shelf.thickness/2, 0 )
            }
            
            if (savedCorrection == 'savedCorrectionURL'){
                section2_WireframeMesh2_4.position.y = parseFloat(self.params.get('WRS2_4_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section2_WireframeMesh2_4.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            section2_WireframeMesh2_4.position.z = -999
    
            section2_WireframeMesh2_4.name = "section2_WireframeMesh2_4"
            
            section2_WireframeMesh2_4.visible = true;
            this.section2_WireframeMesh2_4 = section2_WireframeMesh2_4;
    
            this.scene.add(section2_WireframeMesh2_4);
    
        },
    
        createRayCastRecieverSection2_4: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection2_4);
    
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_4 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_4 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection2_4 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 2 ) {
                RayCastRecieverSection2_4.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + this.options.sectionHeight_2_4 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                RayCastRecieverSection2_4.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + this.options.sectionHeight_2_4 / 2 - this.options.shelf.thickness/2, 0 )
            } 
    
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection2_4.position.y = parseFloat(self.params.get('RCS2_4_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection2_4.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            RayCastRecieverSection2_4.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection2_4.name = "RayCastRecieverSection2_4"
            RayCastRecieverSection2_4.renderOrder = 999
            RayCastRecieverSection2_4.visible = true;
            this.RayCastRecieverSection2_4 = RayCastRecieverSection2_4;
    
            if ( self.options.intersectsChooseStatus === 24) {
                self.RayCastRecieverSection2_4.material.opacity = 0.2
                self.section2_WireframeMesh2_4.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection2_4.material.opacity = 0.0
                self.section2_WireframeMesh2_4.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection2_4);
        },
    

        // 2_5 cut 2_4   
        createWireframeBack_section2_5: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_5);
            var geometry = new THREE.PlaneGeometry(self.options.section2Length + self.options.pillar.thickness/2, this.options.sectionHeight_2_5 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section2_WireframeMesh2_5 = new THREE.Mesh(geometry, material);
    
            section2_WireframeMesh2_5.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + this.options.sectionHeight_2_5 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section2_WireframeMesh2_5.position.y = parseFloat(self.params.get('WRS2_5_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section2_WireframeMesh2_5.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            section2_WireframeMesh2_5.position.z = -999
    
            section2_WireframeMesh2_5.name = "section2_WireframeMesh2_5"
            
            section2_WireframeMesh2_5.visible = true;
            this.section2_WireframeMesh2_5 = section2_WireframeMesh2_5;
    
            this.scene.add(section2_WireframeMesh2_5);
    
        },
    
        createRayCastRecieverSection2_5: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection2_5);

            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_5 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_5 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection2_5 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 2 ) {
                RayCastRecieverSection2_5.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + this.options.sectionHeight_2_5 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                RayCastRecieverSection2_5.geometry.translate( self.options.section2Length / 2 , this.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + this.options.sectionHeight_2_5 / 2 - this.options.shelf.thickness/2, 0 )
            } 

            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection2_5.position.y = parseFloat(self.params.get('RCS2_5_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection2_5.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            RayCastRecieverSection2_5.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
    
            RayCastRecieverSection2_5.name = "RayCastRecieverSection2_5"
            RayCastRecieverSection2_5.renderOrder = 999
            RayCastRecieverSection2_5.visible = true;
            this.RayCastRecieverSection2_5 = RayCastRecieverSection2_5;
    
            if ( self.options.intersectsChooseStatus === 25) {
                self.RayCastRecieverSection2_5.material.opacity = 0.2
                self.section2_WireframeMesh2_5.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection2_5.material.opacity = 0.0
                self.section2_WireframeMesh2_5.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection2_5);
        },    


        // 2_6 cut 2_5   
        createWireframeBack_section2_6: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_6);
            var geometry = new THREE.PlaneGeometry(self.options.section2Length + self.options.pillar.thickness/2, this.options.sectionHeight_2_6 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section2_WireframeMesh2_6 = new THREE.Mesh(geometry, material);
    
            section2_WireframeMesh2_6.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + this.options.sectionHeight_2_6 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section2_WireframeMesh2_6.position.y = parseFloat(self.params.get('WRS2_6_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section2_WireframeMesh2_6.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            section2_WireframeMesh2_6.position.z = -999
    
            section2_WireframeMesh2_6.name = "section2_WireframeMesh2_6"
            
            section2_WireframeMesh2_6.visible = true;
            this.section2_WireframeMesh2_6 = section2_WireframeMesh2_6;
    
            this.scene.add(section2_WireframeMesh2_6);
    
        },
    
        createRayCastRecieverSection2_6: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection2_6);
            
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_6 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_6 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection2_6 = new THREE.Mesh(geometry, material);
    

            if (this.options.amountOfSections === 2 ) {
                RayCastRecieverSection2_6.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + this.options.sectionHeight_2_6 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                RayCastRecieverSection2_6.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + this.options.sectionHeight_2_6 / 2 - this.options.shelf.thickness/2, 0 )
            } 
    
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection2_6.position.y = parseFloat(self.params.get('RCS2_6_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection2_6.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            RayCastRecieverSection2_6.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
    
            RayCastRecieverSection2_6.name = "RayCastRecieverSection2_6"
            RayCastRecieverSection2_6.renderOrder = 999
            RayCastRecieverSection2_6.visible = true;
            this.RayCastRecieverSection2_6 = RayCastRecieverSection2_6;
    
            if ( self.options.intersectsChooseStatus === 26) {
                self.RayCastRecieverSection2_6.material.opacity = 0.2
                self.section2_WireframeMesh2_6.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection2_6.material.opacity = 0.0
                self.section2_WireframeMesh2_6.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection2_6);
        },


        // 2_7 cut 2_6   
        createWireframeBack_section2_7: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_7);
            
            var geometry = new THREE.PlaneGeometry(self.options.section2Length + self.options.pillar.thickness/2, this.options.sectionHeight_2_7 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section2_WireframeMesh2_7 = new THREE.Mesh(geometry, material);
    
            section2_WireframeMesh2_7.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + this.options.sectionHeight_2_7 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section2_WireframeMesh2_7.position.y = parseFloat(self.params.get('WRS2_7_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section2_WireframeMesh2_7.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            section2_WireframeMesh2_7.position.z = -999
    
            section2_WireframeMesh2_7.name = "section2_WireframeMesh2_7"
            
            section2_WireframeMesh2_7.visible = true;
            this.section2_WireframeMesh2_7 = section2_WireframeMesh2_7;
    
            this.scene.add(section2_WireframeMesh2_7);
    
        },
    
        createRayCastRecieverSection2_7: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection2_7);
            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_7 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_7 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection2_7 = new THREE.Mesh(geometry, material);
    
            
            if (this.options.amountOfSections === 2 ) {
                RayCastRecieverSection2_7.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + this.options.sectionHeight_2_7 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                RayCastRecieverSection2_7.geometry.translate( self.options.section2Length / 2 , this.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + this.options.sectionHeight_2_7 / 2 - this.options.shelf.thickness/2, 0 )
            } 
    
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection2_7.position.y = parseFloat(self.params.get('RCS2_7_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection2_7.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            RayCastRecieverSection2_7.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
    
            RayCastRecieverSection2_7.name = "RayCastRecieverSection2_7"
            RayCastRecieverSection2_7.renderOrder = 999
            RayCastRecieverSection2_7.visible = true;
            this.RayCastRecieverSection2_7 = RayCastRecieverSection2_7;
    
            if ( self.options.intersectsChooseStatus === 27) {
                self.RayCastRecieverSection2_7.material.opacity = 0.2
                self.section2_WireframeMesh2_7.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection2_7.material.opacity = 0.0
                self.section2_WireframeMesh2_7.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection2_7);
        },


        // 2_8 cut 2_7   
        createWireframeBack_section2_8: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_8);
            var geometry = new THREE.PlaneGeometry(self.options.section2Length + self.options.pillar.thickness/2, this.options.sectionHeight_2_8 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section2_WireframeMesh2_8 = new THREE.Mesh(geometry, material);
    
            section2_WireframeMesh2_8.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_7", true ).position.y + this.options.sectionHeight_2_8 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section2_WireframeMesh2_8.position.y = parseFloat(self.params.get('WRS2_8_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section2_WireframeMesh2_8.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            section2_WireframeMesh2_8.position.z = -999
    
            section2_WireframeMesh2_8.name = "section2_WireframeMesh2_8"
            
            section2_WireframeMesh2_8.visible = true;
            this.section2_WireframeMesh2_8 = section2_WireframeMesh2_8;
    
            this.scene.add(section2_WireframeMesh2_8);
    
        },
    
        createRayCastRecieverSection2_8: function(savedCorrection) {
                var self = this;
                this.scene.remove(this.RayCastRecieverSection2_8);
                if (this.options.amountOfSections === 2 ) {
                    var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_8 - this.options.shelf.thickness , self.options.shelf.width-1);
                } else{
                    var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_8 - this.options.shelf.thickness , self.options.shelf.width-1);
                } 
        
                var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
        
                var RayCastRecieverSection2_8 = new THREE.Mesh(geometry, material);
        
        
                if (this.options.amountOfSections === 2 ) {
                    RayCastRecieverSection2_8.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_7", true ).position.y + this.options.sectionHeight_2_8 / 2 - this.options.shelf.thickness/2, 0 )
                } else{
                    RayCastRecieverSection2_8.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_7", true ).position.y + this.options.sectionHeight_2_8 / 2 - this.options.shelf.thickness/2, 0 )
                } 

                if (savedCorrection == 'savedCorrectionURL'){
                    RayCastRecieverSection2_8.position.y = parseFloat(self.params.get('RCS2_8_pY')) + this.options.shelf.thickness/2;
                } else {
                } 
        
                RayCastRecieverSection2_8.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
        
                RayCastRecieverSection2_8.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
        
                RayCastRecieverSection2_8.name = "RayCastRecieverSection2_8"
                RayCastRecieverSection2_8.renderOrder = 999
                RayCastRecieverSection2_8.visible = true;
                this.RayCastRecieverSection2_8 = RayCastRecieverSection2_8;
        
                if ( self.options.intersectsChooseStatus === 28) {
                    self.RayCastRecieverSection2_8.material.opacity = 0.2
                    self.section2_WireframeMesh2_8.material.opacity = 0.2
                } else {
                    self.RayCastRecieverSection2_8.material.opacity = 0.0
                    self.section2_WireframeMesh2_8.material.opacity = 0.0
                }
        
                this.scene.add(RayCastRecieverSection2_8);
        },


        // 2_9 cut 2_8   
        createWireframeBack_section2_9: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section2_WireframeMesh2_9);
            
            var geometry = new THREE.PlaneGeometry(self.options.section2Length + self.options.pillar.thickness/2, this.options.sectionHeight_2_9 - this.options.shelf.thickness);
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section2_WireframeMesh2_9 = new THREE.Mesh(geometry, material);
    
            section2_WireframeMesh2_9.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_8", true ).position.y + this.options.sectionHeight_2_9 / 2 - this.options.shelf.thickness/2, 0 )
    
            if (savedCorrection == 'savedCorrectionURL'){
                section2_WireframeMesh2_9.position.y = parseFloat(self.params.get('WRS2_9_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section2_WireframeMesh2_9.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            section2_WireframeMesh2_9.position.z = -999
    
            section2_WireframeMesh2_9.name = "section2_WireframeMesh2_9"
            
            section2_WireframeMesh2_9.visible = true;
            this.section2_WireframeMesh2_9 = section2_WireframeMesh2_9;
    
            this.scene.add(section2_WireframeMesh2_9);
    
        },
    
        createRayCastRecieverSection2_9: function(savedCorrection) {

            var self = this;
            this.scene.remove(this.RayCastRecieverSection2_9);

            if (this.options.amountOfSections === 2 ) {
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness/2, this.options.sectionHeight_2_9 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section2Length - this.options.pillar.thickness, this.options.sectionHeight_2_9 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection2_9 = new THREE.Mesh(geometry, material);

            if (this.options.amountOfSections === 2 ) {
                RayCastRecieverSection2_9.geometry.translate( self.options.section2Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection2_8", true ).position.y + this.options.sectionHeight_2_9 / 2 - this.options.shelf.thickness/2, 0 )
            } else{
                RayCastRecieverSection2_9.geometry.translate( self.options.section2Length / 2, this.scene.getObjectByName( "horizontalDividerSection2_8", true ).position.y + this.options.sectionHeight_2_9 / 2 - this.options.shelf.thickness/2, 0 )
            } 
    
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection2_9.position.y = parseFloat(self.params.get('RCS2_9_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection2_9.position.x = this.scene.getObjectByName( "pillar1", true ).position.x;
    
            RayCastRecieverSection2_9.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2; 
    
            RayCastRecieverSection2_9.name = "RayCastRecieverSection2_9"
            RayCastRecieverSection2_9.renderOrder = 999
            RayCastRecieverSection2_9.visible = true;
            this.RayCastRecieverSection2_9 = RayCastRecieverSection2_9;
    
            if ( self.options.intersectsChooseStatus === 29) {
                self.RayCastRecieverSection2_9.material.opacity = 0.2
                self.section2_WireframeMesh2_9.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection2_9.material.opacity = 0.0
                self.section2_WireframeMesh2_9.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection2_9);

        },



    
    
        createRayCastRecieverSection3_1: function(savedCorrection) {
            
            var self = this;
            this.scene.remove(this.RayCastRecieverSection3_1);
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_1 - this.options.shelf.thickness, self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_1 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
            var RayCastRecieverSection3_1 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                RayCastRecieverSection3_1.geometry.translate( self.options.section3Length / 2, 0, 0 );
            } else{
                RayCastRecieverSection3_1.geometry.translate( self.options.section3Length / 2 +0.5, 0, 0 );
            } 
    
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection3_1.position.y = parseFloat(self.params.get('RCS3_1_pY'));
            } else {
                RayCastRecieverSection3_1.position.y = this.shelving.getObjectByName( "shelf_0_0", true ).position.y + this.options.sectionHeight_3_1 / 2   - this.options.shelf.thickness /2
            }  
    
            RayCastRecieverSection3_1.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
            RayCastRecieverSection3_1.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection3_1.name = "RayCastRecieverSection3_1"
            RayCastRecieverSection3_1.renderOrder = 999
    
            RayCastRecieverSection3_1.visible = true;
            this.RayCastRecieverSection3_1 = RayCastRecieverSection3_1;
    
            if ( self.options.intersectsChooseStatus === 31) {
                self.RayCastRecieverSection3_1.material.opacity = 0.2
                self.section3_WireframeMesh3_1.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection3_1.material.opacity = 0
                self.section3_WireframeMesh3_1.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection3_1);
        },
    
        createWireframeBack_section3_1: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section3_WireframeMesh3_1);
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_1 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_1 - this.options.shelf.thickness );
            } 
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
            var section3_WireframeMesh3_1 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                section3_WireframeMesh3_1.geometry.translate( self.options.section3Length / 2, 0, 0 );
            } else{
                section3_WireframeMesh3_1.geometry.translate( self.options.section3Length / 2 +0.5, 0, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL') {
                section3_WireframeMesh3_1.position.y = parseFloat(self.params.get('WRS3_1_pY'));
            } else {
                section3_WireframeMesh3_1.position.y = this.shelving.getObjectByName( "shelf_0_0", true ).position.y + this.options.sectionHeight_3_1 / 2   - this.options.shelf.thickness /2
            }          
    
            section3_WireframeMesh3_1.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
            section3_WireframeMesh3_1.position.z = -999 
    
            section3_WireframeMesh3_1.visible = true;
            section3_WireframeMesh3_1.name = "section3_WireframeMesh3_1"
            this.section3_WireframeMesh3_1 = section3_WireframeMesh3_1;
    
            this.scene.add(section3_WireframeMesh3_1);
        },
    
        // 3_2
        createRayCastRecieverSection3_2: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection3_2);
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_2 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_2 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
            var RayCastRecieverSection3_2 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                RayCastRecieverSection3_2.geometry.translate( self.options.section3Length / 2, this.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + this.options.sectionHeight_3_2 / 2 - this.options.shelf.thickness/2, 0 );
            } else{
                RayCastRecieverSection3_2.geometry.translate( self.options.section3Length / 2 + 0.5, this.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + this.options.sectionHeight_3_2 / 2 - this.options.shelf.thickness/2, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s3_AmountOfHorDividers === 1) {
                    RayCastRecieverSection3_2.position.y = parseFloat(self.params.get('RCS3_2_pY')) + this.options.shelf.thickness/2; 
                } else{
                    RayCastRecieverSection3_2.position.y = parseFloat(self.params.get('RCS3_2_pY')) - this.options.shelf.thickness/2;   
                }
            } else {
            }         
            
            RayCastRecieverSection3_2.position.x = this.scene.getObjectByName( "pillar2", true ).position.x ;
    
            RayCastRecieverSection3_2.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
    
            RayCastRecieverSection3_2.name = "RayCastRecieverSection3_2"
    
            RayCastRecieverSection3_2.renderOrder = 999
    
            RayCastRecieverSection3_2.visible = true;
    
            this.RayCastRecieverSection3_2 = RayCastRecieverSection3_2;
    
            if ( self.options.intersectsChooseStatus === 32) {
                self.RayCastRecieverSection3_2.material.opacity = 0.2
                self.section3_WireframeMesh3_2.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection3_2.material.opacity = 0
                self.section3_WireframeMesh3_2.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection3_2);
        },
    
        createWireframeBack_section3_2: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section3_WireframeMesh3_2);
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_2 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_2 - this.options.shelf.thickness );
            } 
    
            var section3_WireframeMesh3_2 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                section3_WireframeMesh3_2.geometry.translate( self.options.section3Length / 2 - 0.5, this.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + this.options.sectionHeight_3_2 / 2 - this.options.shelf.thickness/2, 0 );
            } else{
                section3_WireframeMesh3_2.geometry.translate( self.options.section3Length / 2 , this.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + this.options.sectionHeight_3_2 / 2 - this.options.shelf.thickness/2, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                section3_WireframeMesh3_2.position.y = parseFloat(self.params.get('WRS3_2_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section3_WireframeMesh3_2.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            section3_WireframeMesh3_2.position.z = -999
    
            section3_WireframeMesh3_2.name = "section3_WireframeMesh3_2"
            
            section3_WireframeMesh3_2.visible = true;
            this.section3_WireframeMesh3_2 = section3_WireframeMesh3_2;
    
            this.scene.add(section3_WireframeMesh3_2);
        },
    
        //3_3 cuts 3_2
        createWireframeBack_section3_3: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section3_WireframeMesh3_3);
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_3 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_3 - this.options.shelf.thickness );
            } 
    
            var section3_WireframeMesh3_3 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                section3_WireframeMesh3_3.geometry.translate( self.options.section3Length / 2 - 0.5, this.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + this.options.sectionHeight_3_3 / 2 - this.options.shelf.thickness/2, 0 );
            } else{
                section3_WireframeMesh3_3.geometry.translate( self.options.section3Length / 2 , this.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + this.options.sectionHeight_3_3 / 2 - this.options.shelf.thickness/2, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s3_AmountOfHorDividers === 4) {
                    section3_WireframeMesh3_3.position.y = parseFloat(self.params.get('WRS3_3_pY')) - 4;
                } else{
                    section3_WireframeMesh3_3.position.y = parseFloat(self.params.get('WRS3_3_pY')) + this.options.shelf.thickness/2;
                }
            } else {
            } 
    
            section3_WireframeMesh3_3.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
            section3_WireframeMesh3_3.position.z = -999; 
            section3_WireframeMesh3_3.name = "section3_WireframeMesh3_3"
    
            section3_WireframeMesh3_3.visible = true;
            this.section3_WireframeMesh3_3 = section3_WireframeMesh3_3;
    
            this.scene.add(section3_WireframeMesh3_3);
        },
    
        createRayCastRecieverSection3_3: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection3_3);
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_3 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_3 - this.options.shelf.thickness , self.options.shelf.width-1);
            } 
    
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
    
            var RayCastRecieverSection3_3 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                RayCastRecieverSection3_3.geometry.translate( self.options.section3Length / 2 , this.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + this.options.sectionHeight_3_3 / 2 - this.options.shelf.thickness/2, 0 );
            } else{
                RayCastRecieverSection3_3.geometry.translate( self.options.section3Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + this.options.sectionHeight_3_3 / 2 - this.options.shelf.thickness/2, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s3_AmountOfHorDividers === 4) {
                    RayCastRecieverSection3_3.position.y = parseFloat(self.params.get('RCS3_3_pY')) - 4;
                } else{
                    RayCastRecieverSection3_3.position.y = parseFloat(self.params.get('RCS3_3_pY')) + this.options.shelf.thickness/2;
                }
            } else {
            } 
    
            RayCastRecieverSection3_3.position.x = this.scene.getObjectByName( "pillar2", true ).position.x ;
            RayCastRecieverSection3_3.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection3_3.name = "RayCastRecieverSection3_3"
            RayCastRecieverSection3_3.renderOrder = 999
            RayCastRecieverSection3_3.visible = true;
    
            this.RayCastRecieverSection3_3 = RayCastRecieverSection3_3;
    
            if ( self.options.intersectsChooseStatus === 33) {
                self.RayCastRecieverSection3_3.material.opacity = 0.2
                self.section3_WireframeMesh3_3.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection3_3.material.opacity = 0
                self.section3_WireframeMesh3_3.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection3_3);
    
        },
    
    
        //3_4 cuts 3_3
        createWireframeBack_section3_4: function(savedCorrection) {
    
            var self = this;
            this.scene.remove(this.section3_WireframeMesh3_4);
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_4 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_4 - this.options.shelf.thickness );
            } 
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section3_WireframeMesh3_4 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                section3_WireframeMesh3_4.geometry.translate( self.options.section3Length / 2 - 0.5, this.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + this.options.sectionHeight_3_4 / 2 - this.options.shelf.thickness/2, 0 );
            } else{
                section3_WireframeMesh3_4.geometry.translate( self.options.section3Length / 2 , this.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + this.options.sectionHeight_3_4 / 2 - this.options.shelf.thickness/2, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                section3_WireframeMesh3_4.position.y = parseFloat(self.params.get('WRS3_4_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section3_WireframeMesh3_4.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            section3_WireframeMesh3_4.position.z = -999
    
            section3_WireframeMesh3_4.name = "section3_WireframeMesh3_4"
            
            section3_WireframeMesh3_4.visible = true;
            this.section3_WireframeMesh3_4 = section3_WireframeMesh3_4;
    
            this.scene.add(section3_WireframeMesh3_4);
    
        },
    
        createRayCastRecieverSection3_4: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection3_4);
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_4 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_4 - this.options.shelf.thickness , self.options.shelf.width-1);
            }
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
    
            var RayCastRecieverSection3_4 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                RayCastRecieverSection3_4.geometry.translate( self.options.section3Length / 2 , this.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + this.options.sectionHeight_3_4 / 2 - this.options.shelf.thickness/2, 0 );
            } else{
                RayCastRecieverSection3_4.geometry.translate( self.options.section3Length / 2 + 0.5, this.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + this.options.sectionHeight_3_4 / 2 - this.options.shelf.thickness/2, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection3_4.position.y = parseFloat(self.params.get('RCS3_4_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection3_4.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            RayCastRecieverSection3_4.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection3_4.name = "RayCastRecieverSection3_4"
            RayCastRecieverSection3_4.renderOrder = 999
            RayCastRecieverSection3_4.visible = true;
            this.RayCastRecieverSection3_4 = RayCastRecieverSection3_4;
    
            if ( self.options.intersectsChooseStatus === 34) {
                self.RayCastRecieverSection3_4.material.opacity = 0.2
                self.section3_WireframeMesh3_4.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection3_4.material.opacity = 0
                self.section3_WireframeMesh3_4.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection3_4);
        },
    
    
        //3_5 cuts 3_4
        createWireframeBack_section3_5: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section3_WireframeMesh3_5);
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_5 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_5 - this.options.shelf.thickness );
            } 
    
            var section3_WireframeMesh3_5 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                section3_WireframeMesh3_5.geometry.translate( self.options.section3Length / 2 - 0.5, this.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + this.options.sectionHeight_3_5 / 2 - this.options.shelf.thickness/2, 0 );
            } else{
                section3_WireframeMesh3_5.geometry.translate( self.options.section3Length / 2 , this.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + this.options.sectionHeight_3_5 / 2 - this.options.shelf.thickness/2, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                section3_WireframeMesh3_5.position.y = parseFloat(self.params.get('WRS3_5_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section3_WireframeMesh3_5.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            section3_WireframeMesh3_5.position.z = -999
    
            section3_WireframeMesh3_5.name = "section3_WireframeMesh3_5"
            
            section3_WireframeMesh3_5.visible = true;
            this.section3_WireframeMesh3_5 = section3_WireframeMesh3_5;
    
            this.scene.add(section3_WireframeMesh3_5);
    
        },
    
        createRayCastRecieverSection3_5: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection3_5);
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_5 - this.options.shelf.thickness , self.options.shelf.width-1);
            } else{
                var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_5 - this.options.shelf.thickness , self.options.shelf.width-1);
            }
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection3_5 = new THREE.Mesh(geometry, material);
    
            if (this.options.amountOfSections === 4 ) {
                RayCastRecieverSection3_5.geometry.translate( self.options.section3Length / 2, this.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + this.options.sectionHeight_3_5 / 2 - this.options.shelf.thickness/2, 0 );
            } else{
                RayCastRecieverSection3_5.geometry.translate( self.options.section3Length / 2 + 0.5, this.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + this.options.sectionHeight_3_5 / 2 - this.options.shelf.thickness/2, 0 );
            } 
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection3_5.position.y = parseFloat(self.params.get('RCS3_5_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection3_5.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            RayCastRecieverSection3_5.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection3_5.name = "RayCastRecieverSection3_5"
            RayCastRecieverSection3_5.renderOrder = 999
            RayCastRecieverSection3_5.visible = true;
            this.RayCastRecieverSection3_5 = RayCastRecieverSection3_5;
    
            if ( self.options.intersectsChooseStatus === 35) {
                self.RayCastRecieverSection3_5.material.opacity = 0.2
                self.section3_WireframeMesh3_5.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection3_5.material.opacity = 0.0
                self.section3_WireframeMesh3_5.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection3_5);
        },

        //3_6 cuts 3_5
        createWireframeBack_section3_6: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section3_WireframeMesh3_6);
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_6 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness, this.options.sectionHeight_3_6 - this.options.shelf.thickness );
            } 
    
            var section3_WireframeMesh3_6 = new THREE.Mesh(geometry, material);
    
            section3_WireframeMesh3_6.geometry.translate( self.options.section3Length / 2 , this.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + this.options.sectionHeight_3_6 / 2 - this.options.shelf.thickness/2, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                section3_WireframeMesh3_6.position.y = parseFloat(self.params.get('WRS3_6_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section3_WireframeMesh3_6.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            section3_WireframeMesh3_6.position.z = -999
    
            section3_WireframeMesh3_6.name = "section3_WireframeMesh3_6"
            
            section3_WireframeMesh3_6.visible = true;
            this.section3_WireframeMesh3_6 = section3_WireframeMesh3_6;
    
            this.scene.add(section3_WireframeMesh3_6);
    
        },
    
        createRayCastRecieverSection3_6: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection3_6);
    
            var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_6 - this.options.shelf.thickness , self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection3_6 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection3_6.geometry.translate( self.options.section3Length / 2 + 0.5, this.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + this.options.sectionHeight_3_6 / 2 - this.options.shelf.thickness/2, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection3_6.position.y = parseFloat(self.params.get('RCS3_6_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection3_6.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            RayCastRecieverSection3_6.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection3_6.name = "RayCastRecieverSection3_6"
            RayCastRecieverSection3_6.renderOrder = 999
            RayCastRecieverSection3_6.visible = true;
            this.RayCastRecieverSection3_6 = RayCastRecieverSection3_6;
    
            if ( self.options.intersectsChooseStatus === 36) {
                self.RayCastRecieverSection3_6.material.opacity = 0.2
                self.section3_WireframeMesh3_6.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection3_6.material.opacity = 0.0
                self.section3_WireframeMesh3_6.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection3_6);
        },

        //3_7 cuts 3_6
        createWireframeBack_section3_7: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section3_WireframeMesh3_7);
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var geometry = new THREE.PlaneGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_7 - this.options.shelf.thickness ); 
    
            var section3_WireframeMesh3_7 = new THREE.Mesh(geometry, material);
    
            section3_WireframeMesh3_7.geometry.translate( self.options.section3Length / 2 , this.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + this.options.sectionHeight_3_7 / 2 - this.options.shelf.thickness/2, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                section3_WireframeMesh3_7.position.y = parseFloat(self.params.get('WRS3_7_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section3_WireframeMesh3_7.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            section3_WireframeMesh3_7.position.z = -999
    
            section3_WireframeMesh3_7.name = "section3_WireframeMesh3_7"
            
            section3_WireframeMesh3_7.visible = true;
            this.section3_WireframeMesh3_7 = section3_WireframeMesh3_7;
    
            this.scene.add(section3_WireframeMesh3_7);
    
        },
    
        createRayCastRecieverSection3_7: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection3_7);
    
            var geometry = new THREE.BoxGeometry(this.options.section3Length - this.options.pillar.thickness/2, this.options.sectionHeight_3_7 - this.options.shelf.thickness , self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection3_7 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection3_7.geometry.translate( self.options.section3Length / 2 + 0.5, this.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + this.options.sectionHeight_3_7 / 2 - this.options.shelf.thickness/2, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection3_7.position.y = parseFloat(self.params.get('RCS3_7_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection3_7.position.x = this.scene.getObjectByName( "pillar2", true ).position.x;
    
            RayCastRecieverSection3_7.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection3_7.name = "RayCastRecieverSection3_7"
            RayCastRecieverSection3_7.renderOrder = 999
            RayCastRecieverSection3_7.visible = true;
            this.RayCastRecieverSection3_7 = RayCastRecieverSection3_7;
    
            if ( self.options.intersectsChooseStatus === 37) {
                self.RayCastRecieverSection3_7.material.opacity = 0.2
                self.section3_WireframeMesh3_7.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection3_7.material.opacity = 0.0
                self.section3_WireframeMesh3_7.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection3_7);
        },


    
    
    
    
    
    
        createRayCastRecieverSection4_1: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection4_1);
    
            var geometry = new THREE.BoxGeometry(this.options.section4Length-1, this.options.sectionHeight_4_1 - this.options.shelf.thickness , self.options.shelf.width-1);
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
            var RayCastRecieverSection4_1 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection4_1.geometry.translate( self.options.section4Length / 2 +0.5, 0, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection4_1.position.y = parseFloat(self.params.get('RCS4_1_pY'));
            } else {
                RayCastRecieverSection4_1.position.y = this.shelving.getObjectByName( "shelf_0_0", true ).position.y + this.options.sectionHeight_4_1 / 2   - this.options.shelf.thickness /2
            } 
    
            RayCastRecieverSection4_1.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
            RayCastRecieverSection4_1.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection4_1.name = "RayCastRecieverSection4_1"
            RayCastRecieverSection4_1.renderOrder = 999
    
            RayCastRecieverSection4_1.visible = true;
            this.RayCastRecieverSection4_1 = RayCastRecieverSection4_1;
    
            if ( self.options.intersectsChooseStatus === 41) {
                self.RayCastRecieverSection4_1.material.opacity = 0.2
                self.section4_WireframeMesh4_1.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection4_1.material.opacity = 0
                self.section4_WireframeMesh4_1.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection4_1);
        },
    
        createWireframeBack_section4_1: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section4_WireframeMesh4_1);
    
            var geometry = new THREE.PlaneGeometry(this.options.section4Length-1, this.options.sectionHeight_4_1 - this.options.shelf.thickness );
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
            var section4_WireframeMesh4_1 = new THREE.Mesh(geometry, material);
    
            section4_WireframeMesh4_1.geometry.translate(self.options.section4Length / 2 +0.5, 0, 0 );
            
            if (savedCorrection == 'savedCorrectionURL') {
                section4_WireframeMesh4_1.position.y = parseFloat(self.params.get('WRS4_1_pY'));
            } else {
                section4_WireframeMesh4_1.position.y = this.shelving.getObjectByName( "shelf_0_0", true ).position.y + this.options.sectionHeight_4_1 / 2   - this.options.shelf.thickness /2
            }        
    
            section4_WireframeMesh4_1.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
            section4_WireframeMesh4_1.position.z = -999 
    
            section4_WireframeMesh4_1.visible = true;
            section4_WireframeMesh4_1.name = "section4_WireframeMesh4_1"
            this.section4_WireframeMesh4_1 = section4_WireframeMesh4_1;
    
            this.scene.add(section4_WireframeMesh4_1);
        },
    
        // 4_2
        createRayCastRecieverSection4_2: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection4_2);
    
            var geometry = new THREE.BoxGeometry(this.options.section4Length-1, this.options.sectionHeight_4_2 - this.options.shelf.thickness , self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
            var RayCastRecieverSection4_2 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection4_2.geometry.translate( self.options.section4Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + this.options.sectionHeight_4_2 / 2 - this.options.shelf.thickness/2, 0 )
            
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s4_AmountOfHorDividers === 1) {
                    RayCastRecieverSection4_2.position.y = parseFloat(self.params.get('RCS4_2_pY')) + this.options.shelf.thickness/2; 
                } else{
                    RayCastRecieverSection4_2.position.y = parseFloat(self.params.get('RCS4_2_pY')) - this.options.shelf.thickness/2;   
                }
            } else {
            }        
            
            RayCastRecieverSection4_2.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            RayCastRecieverSection4_2.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
    
            RayCastRecieverSection4_2.name = "RayCastRecieverSection4_2"
    
            RayCastRecieverSection4_2.renderOrder = 999
    
            RayCastRecieverSection4_2.visible = true;
    
            this.RayCastRecieverSection4_2 = RayCastRecieverSection4_2;
    
            if ( self.options.intersectsChooseStatus === 42) {
                self.RayCastRecieverSection4_2.material.opacity = 0.2
                self.section4_WireframeMesh4_2.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection4_2.material.opacity = 0
                self.section4_WireframeMesh4_2.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection4_2);
        },
    
        createWireframeBack_section4_2: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section4_WireframeMesh4_2);
    
            var geometry = new THREE.PlaneGeometry(this.options.section4Length-1, this.options.sectionHeight_4_2 - this.options.shelf.thickness );
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section4_WireframeMesh4_2 = new THREE.Mesh(geometry, material);
            
            section4_WireframeMesh4_2.geometry.translate( self.options.section4Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + this.options.sectionHeight_4_2 / 2 - this.options.shelf.thickness/2, 0 )
            
            if (savedCorrection == 'savedCorrectionURL'){
                section4_WireframeMesh4_2.position.y = parseFloat(self.params.get('WRS4_2_pY')) + this.options.shelf.thickness/2;
            } else {
            }
    
            section4_WireframeMesh4_2.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            section4_WireframeMesh4_2.position.z = -999
    
            section4_WireframeMesh4_2.name = "section4_WireframeMesh4_2"
            
            section4_WireframeMesh4_2.visible = true;
            this.section4_WireframeMesh4_2 = section4_WireframeMesh4_2;
    
            this.scene.add(section4_WireframeMesh4_2);
        },
    
        //4_3 cuts 4_2
        createWireframeBack_section4_3: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section4_WireframeMesh4_3);
    
            var geometry = new THREE.PlaneGeometry(this.options.section4Length-1, this.options.sectionHeight_4_3 - this.options.shelf.thickness );
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section4_WireframeMesh4_3 = new THREE.Mesh(geometry, material);
    
            section4_WireframeMesh4_3.geometry.translate( self.options.section4Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + this.options.sectionHeight_4_3 / 2 - this.options.shelf.thickness/2, 0 )
            
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s4_AmountOfHorDividers == 4) {
                    section4_WireframeMesh4_3.position.y = parseFloat(self.params.get('WRS4_3_pY')) - 4;
                } else{
                    section4_WireframeMesh4_3.position.y = parseFloat(self.params.get('WRS4_3_pY')) + this.options.shelf.thickness/2;
                }
            } else {
            }
    
            section4_WireframeMesh4_3.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
            section4_WireframeMesh4_3.position.z = -999
            section4_WireframeMesh4_3.name = "section4_WireframeMesh4_3"
    
            section4_WireframeMesh4_3.visible = true;
            this.section4_WireframeMesh4_3 = section4_WireframeMesh4_3;
    
            this.scene.add(section4_WireframeMesh4_3);
        },
    
        createRayCastRecieverSection4_3: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection4_3);
    
            var geometry = new THREE.BoxGeometry(this.options.section4Length-1, this.options.sectionHeight_4_3 - this.options.shelf.thickness , self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
    
            var RayCastRecieverSection4_3 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection4_3.geometry.translate( self.options.section4Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + this.options.sectionHeight_4_3 / 2 - this.options.shelf.thickness/2, 0 )
            
            if (savedCorrection == 'savedCorrectionURL'){
                if (this.options.s1_AmountOfHorDividers === 4) {
                    RayCastRecieverSection4_3.position.y = parseFloat(self.params.get('RCS4_3_pY')) - 4;

                } else{
                    RayCastRecieverSection4_3.position.y = parseFloat(self.params.get('RCS4_3_pY')) + this.options.shelf.thickness/2;
                }
            } else {
            }
    
            RayCastRecieverSection4_3.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
            RayCastRecieverSection4_3.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection4_3.name = "RayCastRecieverSection4_3"
            RayCastRecieverSection4_3.renderOrder = 999
            RayCastRecieverSection4_3.visible = true;
    
            this.RayCastRecieverSection4_3 = RayCastRecieverSection4_3;
    
            if ( self.options.intersectsChooseStatus === 43) {
                self.RayCastRecieverSection4_3.material.opacity = 0.2
                self.section4_WireframeMesh4_3.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection4_3.material.opacity = 0
                self.section4_WireframeMesh4_3.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection4_3);
    
        },
    
    
        //4_4 cuts 4_3
        createWireframeBack_section4_4: function(savedCorrection) {
    
            var self = this;
            this.scene.remove(this.section4_WireframeMesh4_4);
    
            var geometry = new THREE.PlaneGeometry(this.options.section4Length-1, this.options.sectionHeight_4_4 - this.options.shelf.thickness );
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section4_WireframeMesh4_4 = new THREE.Mesh(geometry, material);
    
            section4_WireframeMesh4_4.geometry.translate( self.options.section4Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + this.options.sectionHeight_4_4 / 2 - this.options.shelf.thickness/2, 0 )
            
            if (savedCorrection == 'savedCorrectionURL'){
                section4_WireframeMesh4_4.position.y = parseFloat(self.params.get('WRS4_4_pY')) + this.options.shelf.thickness/2;
            } else {
            }
    
            section4_WireframeMesh4_4.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            section4_WireframeMesh4_4.position.z = -999
    
            section4_WireframeMesh4_4.name = "section4_WireframeMesh4_4"
            
            section4_WireframeMesh4_4.visible = true;
            this.section4_WireframeMesh4_4 = section4_WireframeMesh4_4;
    
            this.scene.add(section4_WireframeMesh4_4);
    
        },
    
        createRayCastRecieverSection4_4: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection4_4);
    
            var geometry = new THREE.BoxGeometry(this.options.section4Length-1, this.options.sectionHeight_4_4 - this.options.shelf.thickness , self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0});
    
            var RayCastRecieverSection4_4 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection4_4.geometry.translate( self.options.section4Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + this.options.sectionHeight_4_4 / 2 - this.options.shelf.thickness/2, 0 )
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection4_4.position.y = parseFloat(self.params.get('RCS4_4_pY')) + this.options.shelf.thickness/2;
            } else {
            }
    
            RayCastRecieverSection4_4.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            RayCastRecieverSection4_4.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection4_4.name = "RayCastRecieverSection4_4"
            RayCastRecieverSection4_4.renderOrder = 999
            RayCastRecieverSection4_4.visible = true;
            this.RayCastRecieverSection4_4 = RayCastRecieverSection4_4;
    
            if ( self.options.intersectsChooseStatus === 44) {
                self.RayCastRecieverSection4_4.material.opacity = 0.2
                self.section4_WireframeMesh4_4.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection4_4.material.opacity = 0
                self.section4_WireframeMesh4_4.material.opacity = 0
            }
    
            this.scene.add(RayCastRecieverSection4_4);
        },
    
    
        //4_5 cuts 4_4
        createWireframeBack_section4_5: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section4_WireframeMesh4_5);
    
            var geometry = new THREE.PlaneGeometry(this.options.section4Length-1, this.options.sectionHeight_4_5 - this.options.shelf.thickness );
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var section4_WireframeMesh4_5 = new THREE.Mesh(geometry, material);
    
            section4_WireframeMesh4_5.geometry.translate( self.options.section4Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + this.options.sectionHeight_4_5 / 2 - this.options.shelf.thickness/2, 0 )
            
            if (savedCorrection == 'savedCorrectionURL'){
                section4_WireframeMesh4_5.position.y = parseFloat(self.params.get('WRS4_5_pY')) + this.options.shelf.thickness/2;
            } else {
            }
    
            section4_WireframeMesh4_5.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            section4_WireframeMesh4_5.position.z = -999
    
            section4_WireframeMesh4_5.name = "section4_WireframeMesh4_5"
            
            section4_WireframeMesh4_5.visible = true;
            this.section4_WireframeMesh4_5 = section4_WireframeMesh4_5;
    
            this.scene.add(section4_WireframeMesh4_5);
    
        },
    
        createRayCastRecieverSection4_5: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection4_5);
    
            var geometry = new THREE.BoxGeometry(this.options.section4Length-1, this.options.sectionHeight_4_5 - this.options.shelf.thickness , self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection4_5 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection4_5.geometry.translate( self.options.section4Length / 2 +0.5, this.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + this.options.sectionHeight_4_5 / 2 - this.options.shelf.thickness/2, 0 )
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection4_5.position.y = parseFloat(self.params.get('RCS4_5_pY')) + this.options.shelf.thickness/2;
            } else {
            }
    
            RayCastRecieverSection4_5.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            RayCastRecieverSection4_5.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection4_5.name = "RayCastRecieverSection4_5"
            RayCastRecieverSection4_5.renderOrder = 999
            RayCastRecieverSection4_5.visible = true;
            this.RayCastRecieverSection4_5 = RayCastRecieverSection4_5;
    
            if ( self.options.intersectsChooseStatus === 45) {
                self.RayCastRecieverSection4_5.material.opacity = 0.2
                self.section4_WireframeMesh4_5.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection4_5.material.opacity = 0.0
                self.section4_WireframeMesh4_5.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection4_5);
        },


        //4_6 cuts 4_5
        createWireframeBack_section4_6: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section4_WireframeMesh4_6);
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            if (this.options.amountOfSections === 3 ) {
                var geometry = new THREE.PlaneGeometry(this.options.section4Length - this.options.pillar.thickness/2, this.options.sectionHeight_4_6 - this.options.shelf.thickness );
            } else{
                var geometry = new THREE.PlaneGeometry(this.options.section4Length - this.options.pillar.thickness, this.options.sectionHeight_4_6 - this.options.shelf.thickness );
            } 
    
            var section4_WireframeMesh4_6 = new THREE.Mesh(geometry, material);
    
            section4_WireframeMesh4_6.geometry.translate( self.options.section4Length / 2 , this.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + this.options.sectionHeight_4_6 / 2 - this.options.shelf.thickness/2, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                section4_WireframeMesh4_6.position.y = parseFloat(self.params.get('WRS4_6_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section4_WireframeMesh4_6.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            section4_WireframeMesh4_6.position.z = -999
    
            section4_WireframeMesh4_6.name = "section4_WireframeMesh4_6"
            
            section4_WireframeMesh4_6.visible = true;
            this.section4_WireframeMesh4_6 = section4_WireframeMesh4_6;
    
            this.scene.add(section4_WireframeMesh4_6);
    
        },
    
        createRayCastRecieverSection4_6: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection4_6);
    
            var geometry = new THREE.BoxGeometry(this.options.section4Length - this.options.pillar.thickness/2, this.options.sectionHeight_4_6 - this.options.shelf.thickness , self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection4_6 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection4_6.geometry.translate( self.options.section4Length / 2 + 0.5, this.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + this.options.sectionHeight_4_6 / 2 - this.options.shelf.thickness/2, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection4_6.position.y = parseFloat(self.params.get('RCS4_6_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection4_6.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            RayCastRecieverSection4_6.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection4_6.name = "RayCastRecieverSection4_6"
            RayCastRecieverSection4_6.renderOrder = 999
            RayCastRecieverSection4_6.visible = true;
            this.RayCastRecieverSection4_6 = RayCastRecieverSection4_6;
    
            if ( self.options.intersectsChooseStatus === 36) {
                self.RayCastRecieverSection4_6.material.opacity = 0.2
                self.section4_WireframeMesh4_6.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection4_6.material.opacity = 0.0
                self.section4_WireframeMesh4_6.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection4_6);
        },

        //4_7 cuts 4_6
        createWireframeBack_section4_7: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.section4_WireframeMesh4_7);
    
            var material = new THREE.MeshStandardMaterial({color:0x57adff, transparent: true, opacity: 0});
    
            var geometry = new THREE.PlaneGeometry(this.options.section4Length - this.options.pillar.thickness/2, this.options.sectionHeight_4_7 - this.options.shelf.thickness ); 
    
            var section4_WireframeMesh4_7 = new THREE.Mesh(geometry, material);
    
            section4_WireframeMesh4_7.geometry.translate( self.options.section4Length / 2 , this.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y + this.options.sectionHeight_4_7 / 2 - this.options.shelf.thickness/2, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                section4_WireframeMesh4_7.position.y = parseFloat(self.params.get('WRS4_7_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            section4_WireframeMesh4_7.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            section4_WireframeMesh4_7.position.z = -999
    
            section4_WireframeMesh4_7.name = "section4_WireframeMesh4_7"
            
            section4_WireframeMesh4_7.visible = true;
            this.section4_WireframeMesh4_7 = section4_WireframeMesh4_7;
    
            this.scene.add(section4_WireframeMesh4_7);
    
        },
    
        createRayCastRecieverSection4_7: function(savedCorrection) {
            var self = this;
            this.scene.remove(this.RayCastRecieverSection4_7);
    
            var geometry = new THREE.BoxGeometry(this.options.section4Length - this.options.pillar.thickness/2, this.options.sectionHeight_4_7 - this.options.shelf.thickness , self.options.shelf.width-1);
    
            var material = new THREE.MeshStandardMaterial({color: 0x3492eb, transparent: true, opacity: 0.5});
    
            var RayCastRecieverSection4_7 = new THREE.Mesh(geometry, material);
    
            RayCastRecieverSection4_7.geometry.translate( self.options.section4Length / 2 + 0.5, this.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y + this.options.sectionHeight_4_7 / 2 - this.options.shelf.thickness/2, 0 );
            
            if (savedCorrection == 'savedCorrectionURL'){
                RayCastRecieverSection4_7.position.y = parseFloat(self.params.get('RCS4_7_pY')) + this.options.shelf.thickness/2;
            } else {
            } 
    
            RayCastRecieverSection4_7.position.x = this.scene.getObjectByName( "pillar3", true ).position.x;
    
            RayCastRecieverSection4_7.position.z = -this.options.room.width / 2 + this.options.shelf.width / 2;
            RayCastRecieverSection4_7.name = "RayCastRecieverSection4_7"
            RayCastRecieverSection4_7.renderOrder = 999
            RayCastRecieverSection4_7.visible = true;
            this.RayCastRecieverSection4_7 = RayCastRecieverSection4_7;
    
            if ( self.options.intersectsChooseStatus === 37) {
                self.RayCastRecieverSection4_7.material.opacity = 0.2
                self.section4_WireframeMesh4_7.material.opacity = 0.2
            } else {
                self.RayCastRecieverSection4_7.material.opacity = 0.0
                self.section4_WireframeMesh4_7.material.opacity = 0.0
            }
    
            this.scene.add(RayCastRecieverSection4_7);
        },
    
        
  
    
           
        createBackPlate: function() {        
        
            var self = this;

            this.scene.remove(this.scene.getObjectByName('BackPlate'));
            this.scene.remove(this.BackPlate);
    
    
            var geometry = new THREE.PlaneGeometry(this.options.shelf.length * this.options.sectionsNum + this.options.shelf.thickness * this.options.sectionsNum,  this.options.pillar.height);
    
            var material =  new THREE.MeshStandardMaterial({color: this.options.shelf.color});
    
            var BackPlate = new THREE.Mesh(geometry, material);
    
            BackPlate.geometry.translate( -this.shelving.position.x, 0, 0 );
            BackPlate.position.y = this.shelving.getObjectByName( "pillar_0", true ).position.y; 
            if (document.getElementById("typeBack").checked == false ) {
                BackPlate.position.z = -998;
            } else {
                BackPlate.position.z = -995;
            }

            BackPlate.position.x = this.shelving.position.x ; 
    
            BackPlate.visible = true;
            BackPlate.castShadow = true;
            BackPlate.receiveShadow = true;
    

            BackPlate.material.map = this.textures[this.options.shelf.texture].map;
            BackPlate.material.needsUpdate = true;
            BackPlate.material =  this.shelfProto.material;
    
            BackPlate.name = "BackPlate";
    
            this.BackPlate = BackPlate;

            this.scene.add(BackPlate);
    
            this.calculateOutput();
    

            return BackPlate;
        },
    
    
    

    
    
    
    
    
    
    
    
    
    
        createFloor: function() {
            var self = this;
            var geometry = new THREE.PlaneGeometry(this.roomSizeMin, this.roomSizeMin);
            var material = new THREE.MeshBasicMaterial({color: 0xFFFFFF, transparent: false, /* emissive : 0xDFDEDA */});
            var floor = new THREE.Mesh(geometry, material);
            floor.position.y = -1 //1.8def
            floor.position.x = 78.63
            floor.position.z = -120
    
            floor.castShadow = true
            floor.receiveShadow = true
    
            floor.material.side = THREE.DoubleSide;
    
            floor.scale.x = this.options.room.length / this.roomSizeMin * 3;
            floor.scale.y = this.options.room.width / this.roomSizeMin * 3;
            floor.rotation.x = -Utils.PI_HALF;
            
            this.textureLoader.load(this.assetsPath + this.options.wall.texture, function(texture) {
    
                floor.material.needsUpdate = true;
                texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
                texture.repeat.x = 1;
                texture.offset.y = 1.32;
                texture.rotation = THREE.MathUtils.degToRad(180); 
                texture.repeat.y = 5;
    
                texture.magFilter = THREE.LinearMipmapLinearFilter
    
                floor.material.map = texture;
                
            });
            
            floor.name = 'floor';
            floor.visible = true;
            this.floor = floor;
            this.scene.add(floor);
        },
    
    
        //dat.gui
    
        initGui: function() {
            var self = this;
            var gui = new dat.GUI();
            gui.domElement.hidden = false;
            gui.domElement.Zindex = 999;
    
            folder = gui.addFolder('Light');
    
    
            controller = folder.add(this.light.target.position, 'x', -5000, 5000).name('x').onChange(this.light.target.updateMatrixWorld());
            controller = folder.add(this.light.target.position, 'y', -5000, 5000).name('y').onChange(this.light.target.updateMatrixWorld());
            controller = folder.add(this.light.target.position, 'z', -5000, 5000).name('z').onChange(this.light.target.updateMatrixWorld()); 
    
            controller = folder.add(this.light2.target.position, 'x', -5000, 5000).name('x2').onChange(this.light2.target.updateMatrixWorld());
            controller = folder.add(this.light2.target.position, 'y', -5000, 5000).name('y2 ').onChange(this.light2.target.updateMatrixWorld());
            controller = folder.add(this.light2.target.position, 'z', -5000, 5000).name('z2').onChange(this.light2.target.updateMatrixWorld()); 
    
            controller = folder.add(this.light3.target.position, 'x', -5000, 5000).name('x2').onChange(this.light3.target.updateMatrixWorld());
            controller = folder.add(this.light3.target.position, 'y', -5000, 5000).name('y2 ').onChange(this.light3.target.updateMatrixWorld());
            controller = folder.add(this.light3.target.position, 'z', -5000, 5000).name('z2').onChange(this.light3.target.updateMatrixWorld());  
    
    
            controller = folder.add(this.light.shadow, 'bias', -100, 100).name('bias')
    
            controller = folder.add(this.light.shadow, 'bias', -100, 100).name('bias')
    
            controller = folder.add(this.light.shadow, 'bias', -100, 100).name('bias');
            controller = folder.add(this.light.shadow.camera, 'near', -100, 100).name('near');
            controller = folder.add(this.light.shadow.camera, 'far', -100, 100).name('far');
            controller = folder.add(this.light.shadow, 'radius', -100, 100).name('rad');
    
    
    
     
            gui.add(this.light.target.position, 'x', -10, 10).onChange(this.light.target.updateMatrixWorld());
            gui.add(this.light.target.position, 'z', -10, 10);
            gui.add(this.light.target.position, 'y', 0, 10);  

            controller = folder.add(this.light.target.position, 'y', -10000, 10000).name('y position', this.spotLightHelper.update());
    
    
            //gui.addColor(new ColorGUIHelper(light, 'color'), 'value').name('color');
            gui.add(this.light, 'intensity', 0, 2, 0.01);
            gui.add(this.light, 'distance', 0, 40).onChange(this.updateLight);
            gui.add(this.light, 'penumbra', 0, 1, 0.01); 
    
    
            controller = folder.add(this.light.position, 'y', -10000, 10000).name('y position');
            controller = folder.add(this.light.position, 'z', -10000, 10000).name('z position');
             
            controller = folder.add(this.light.target.position, 'x', -10000, 10000).name('x target');
            controller = folder.add(this.light.target.position, 'y', -10000, 10000).name('y target');
            controller = folder.add(this.light.target.position, 'z', -10000, 10000).name('z target'); 
    
            folder.open();
    
        },
    
    
        createDimensions: function() {
            
            var self = this;

            if (self.debounceTimeout) {
                clearTimeout(self.debounceTimeout);
            }
            self.debounceTimeout = setTimeout(function() {
                self.actualCreateDimensions();
            }, 100); 
        },

        actualCreateDimensions: function() {
            var self = this;

            self.scene.remove(self.scene.getObjectByName('dimensionsFontGroup'));

            var dimensionsFontGroup = new THREE.Group();
            dimensionsFontGroup.name = 'dimensionsFontGroup';
    
            var createDimensionsWithFont = function (font) {    
    
                //depth
                var dsec1_1 = new THREE.TextGeometry(self.options.shelf.width
                +" ", {
                    font: font,
                    size: 2,
                    height: 0.1,
                    curveSegments: 12,
                    bevelThickness: 0,
                    bevelSize: 2,
                    bevelEnabled: false,
                    }
                )
                //depth dimensions left side 
                var dsec1_1Mesh = new THREE.Mesh(dsec1_1, self.fontColor);
                dsec1_1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x - 2,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y - self.options.sectionHeight_1_1/2 +1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width - self.options.shelf.width -2 
                    
                )
                dsec1_1Mesh.rotation.y = -1.57
                //depth dimensions rightside 
                var dsec1_2Mesh = new THREE.Mesh(dsec1_1, self.fontColor);
                dsec1_2Mesh.position.set(
                    -self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 2,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y - self.options.sectionHeight_1_1 /2 + 1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width - self.options.shelf.width -2  
                    
                )
                dsec1_2Mesh.rotation.y = 1.57
                dimensionsFontGroup.add(dsec1_1Mesh,dsec1_2Mesh); 
        
                //main w
                var wMain = new THREE.TextGeometry(  ( parseInt(document.getElementById("subdomainWidthCabinet_Dimensions").value, 10) ) +" ", {
                    font: font,
                    size: 2,
                    height: 0.1,
                    curveSegments: 12,
                    bevelThickness: 0,
                    bevelSize: 2,
                    bevelEnabled: false,
                    }
                )
                var wMain_Mesh = new THREE.Mesh(wMain, self.fontColor);
                wMain_Mesh.position.set(   
                    self.scene.getObjectByName( "shelf_0_1", true ).position.x / 2 -1.8,
                    self.options.pillar.height + 3,
                    self.shelving.position.z + self.options.shelf.width / 2
                )
                dimensionsFontGroup.add(wMain_Mesh);
    
    
                //main h
                var hMain = new THREE.TextGeometry(  ( parseInt(document.getElementById("subdomainHeightCabinet_Dimensions").value, 10) ) +" ", {
                    font: font,
                    size: 2,
                    height: 0.1,
                    curveSegments: 12,
                    bevelThickness: 0,
                    bevelSize: 2,
                    bevelEnabled: false,
                    }
                )
                var hMain_Mesh = new THREE.Mesh(hMain, self.fontColor);
                hMain_Mesh.position.set(   
                    self.scene.getObjectByName( "pillar_0", true ).position.x -6,
                    self.scene.getObjectByName( "pillar_0", true ).position.y ,
                    self.shelving.position.z + self.options.shelf.width / 2
                )
                dimensionsFontGroup.add(hMain_Mesh);
    
                //sec1
                //w
               
                var wsec1_1 = new THREE.TextGeometry(  ( parseFloat(document.getElementById('pillar1PositionField_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) ) +" ", {
                    font: font,
                    size: 2,
                    height: 0.1,
                    curveSegments: 12,
                    bevelThickness: 0,
                    bevelSize: 2,
                    bevelEnabled: false,
                    }
                )
                var wsec1_1Mesh = new THREE.Mesh(wsec1_1, self.fontColor);
                wsec1_1Mesh.position.set(
                    
                self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + self.options.section1Length / 2 -1.8,
                self.options.pillar.height - 6,
                self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 
                )
                
                //height
                var hsec1_1 = new THREE.TextGeometry(/*for individual horizontal section use - self.options.sectionHeight_1_1 */ (parseFloat(document.getElementById('Height_HorizontalPartition_S1_1').textContent.match(/\d+(\.\d+)?/)[0]) ) +" ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                if ( self.scene.getObjectByName( "horizontalDividerSection1_1", true ) != undefined ) {
                    var hsec1_2 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S1_2').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                    if ( self.options.shelvesCounterSection1_2 === 1 ) {
                        var hsec1_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_2 === 2 ) {
                        var hsec1_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_2 === 3 ) {
                        var hsec1_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_2 === 4 ) {
                        var hsec1_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_2 === 5 ) {
                        var hsec1_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_2_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf1_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                }
                if ( self.options.shelvesCounterSection1_1 === 1 ) {
                    var hsec1_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                }
                if ( self.options.shelvesCounterSection1_1 === 2 ) {
                    var hsec1_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                }
                if ( self.options.shelvesCounterSection1_1 === 3 ) {
                    var hsec1_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                }
                if ( self.options.shelvesCounterSection1_1 === 4 ) {
                    var hsec1_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                }
                if ( self.options.shelvesCounterSection1_1 === 5 ) {
                    var hsec1_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                }
                if ( self.options.shelvesCounterSection1_1 === 6 ) {
                    var hsec1_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    var hsec1_1_shelf6 = new THREE.TextGeometry( (self.options.heigh6Shelf1_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                }

                if ( self.scene.getObjectByName( "horizontalDividerSection1_2", true ) != undefined) {
                    var hsec1_3 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S1_3').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
    
                    if ( self.options.shelvesCounterSection1_3 === 1 ) {
                        var hsec1_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_3 === 2 ) {
                        var hsec1_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_3 === 3 ) {
                        var hsec1_3_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_3 === 4 ) {
                        var hsec1_3_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
    
                }

                if ( self.scene.getObjectByName( "horizontalDividerSection1_3", true ) != undefined) {
                    var hsec1_4 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S1_4').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
    
                    if ( self.options.shelvesCounterSection1_4 === 1 ) {
                        var hsec1_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_4 === 2 ) {
                        var hsec1_4_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_4 === 3 ) {
                        var hsec1_4_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_4_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                }

                if ( self.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined) {
                    var hsec1_5 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S1_5').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    
                    if ( self.options.shelvesCounterSection1_5 === 1 ) {
                        var hsec1_5_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_5_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection1_5 === 2 ) {
                        var hsec1_5_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf1_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_5_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_5_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                }

                if ( self.scene.getObjectByName( "horizontalDividerSection1_5", true ) != undefined) {
                    var hsec1_6 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S1_6').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );   
                    
                    if ( self.options.shelvesCounterSection1_6 === 1 ) {
                        var hsec1_6_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf1_6 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec1_6_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf1_6 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                }

                if ( self.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined) {
                    var hsec1_7 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S1_7').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );    
                }

                    
                var hsec1_1Mesh = new THREE.Mesh(hsec1_1, self.fontColor);
                hsec1_1Mesh.position.set(
                self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.y,
                self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                )
                dimensionsFontGroup.add(wsec1_1Mesh,hsec1_1Mesh); 
                if ( self.options.shelvesCounterSection1_1 === 1) {
                    dimensionsFontGroup.remove(hsec1_1Mesh); 
                    dimensionsFontGroup.remove(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh);

                    var hsec1_1_shelf1Mesh = new THREE.Mesh(hsec1_1_shelf1, self.fontColor);
                    hsec1_1_shelf1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y + ( (self.options.sectionHeight_1_1 - self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf0Mesh = new THREE.Mesh(hsec1_1_shelf0, self.fontColor);
                    hsec1_1_shelf0Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    dimensionsFontGroup.add(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh);
                }
                if ( self.options.shelvesCounterSection1_1 === 2) {
                    dimensionsFontGroup.remove(hsec1_1Mesh); 
                    dimensionsFontGroup.remove(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh);
                    var hsec1_1_shelf1Mesh = new THREE.Mesh(hsec1_1_shelf1, self.fontColor);
                    hsec1_1_shelf1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y + ( (self.options.sectionHeight_1_1 - self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y) / 2) -1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf0Mesh = new THREE.Mesh(hsec1_1_shelf0, self.fontColor);
                    hsec1_1_shelf0Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y / 2) - 1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf2Mesh = new THREE.Mesh(hsec1_1_shelf2, self.fontColor);
                    hsec1_1_shelf2Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y) / 2) - 1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    dimensionsFontGroup.add(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh);
                }
                if ( self.options.shelvesCounterSection1_1 === 3) {
                    dimensionsFontGroup.remove(hsec1_1Mesh); 
                    dimensionsFontGroup.remove(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh);
                    var hsec1_1_shelf1Mesh = new THREE.Mesh(hsec1_1_shelf1, self.fontColor);
                    hsec1_1_shelf1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y + ( (self.options.sectionHeight_1_1 - self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y) / 2) -1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf0Mesh = new THREE.Mesh(hsec1_1_shelf0, self.fontColor);
                    hsec1_1_shelf0Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf2Mesh = new THREE.Mesh(hsec1_1_shelf2, self.fontColor);
                    hsec1_1_shelf2Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )

                    var hsec1_1_shelf3Mesh = new THREE.Mesh(hsec1_1_shelf3, self.fontColor);
                    hsec1_1_shelf3Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    dimensionsFontGroup.add(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh);
                }
                if ( self.options.shelvesCounterSection1_1 === 4) {
                    dimensionsFontGroup.remove(hsec1_1Mesh); 
                    dimensionsFontGroup.remove(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh,hsec1_1_shelf4Mesh);
                    var hsec1_1_shelf1Mesh = new THREE.Mesh(hsec1_1_shelf1, self.fontColor);
                    hsec1_1_shelf1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y + ( (self.options.sectionHeight_1_1 - self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y) / 2) -1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf0Mesh = new THREE.Mesh(hsec1_1_shelf0, self.fontColor);
                    hsec1_1_shelf0Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf2Mesh = new THREE.Mesh(hsec1_1_shelf2, self.fontColor);
                    hsec1_1_shelf2Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )

                    var hsec1_1_shelf3Mesh = new THREE.Mesh(hsec1_1_shelf3, self.fontColor);
                    hsec1_1_shelf3Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width/ 2 + 2
                    )

                    var hsec1_1_shelf4Mesh = new THREE.Mesh(hsec1_1_shelf4, self.fontColor);
                    hsec1_1_shelf4Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    dimensionsFontGroup.add(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh, hsec1_1_shelf4Mesh);
                }
                if ( self.options.shelvesCounterSection1_1 === 5) {
                    dimensionsFontGroup.remove(hsec1_1Mesh); 
                    dimensionsFontGroup.remove(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh, hsec1_1_shelf4Mesh, hsec1_1_shelf5Mesh);
                    var hsec1_1_shelf1Mesh = new THREE.Mesh(hsec1_1_shelf1, self.fontColor);
                    hsec1_1_shelf1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y + ( (self.options.sectionHeight_1_1 - self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y) / 2) -1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf0Mesh = new THREE.Mesh(hsec1_1_shelf0, self.fontColor);
                    hsec1_1_shelf0Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf5", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf2Mesh = new THREE.Mesh(hsec1_1_shelf2, self.fontColor);
                    hsec1_1_shelf2Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )

                    var hsec1_1_shelf3Mesh = new THREE.Mesh(hsec1_1_shelf3, self.fontColor);
                    hsec1_1_shelf3Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width/ 2 + 2
                    )

                    var hsec1_1_shelf4Mesh = new THREE.Mesh(hsec1_1_shelf4, self.fontColor);
                    hsec1_1_shelf4Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )

                    var hsec1_1_shelf5Mesh = new THREE.Mesh(hsec1_1_shelf5, self.fontColor);
                    hsec1_1_shelf5Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf5", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf5", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    dimensionsFontGroup.add(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh, hsec1_1_shelf4Mesh, hsec1_1_shelf5Mesh);
                }
                if ( self.options.shelvesCounterSection1_1 === 6) {
                    dimensionsFontGroup.remove(hsec1_1Mesh); 
                    dimensionsFontGroup.remove(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh, hsec1_1_shelf4Mesh, hsec1_1_shelf5Mesh, hsec1_1_shelf6Mesh);
                    var hsec1_1_shelf1Mesh = new THREE.Mesh(hsec1_1_shelf1, self.fontColor);
                    hsec1_1_shelf1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y + ( (self.options.sectionHeight_1_1 - self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y) / 2) -1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf0Mesh = new THREE.Mesh(hsec1_1_shelf0, self.fontColor);
                    hsec1_1_shelf0Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf6", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    var hsec1_1_shelf2Mesh = new THREE.Mesh(hsec1_1_shelf2, self.fontColor);
                    hsec1_1_shelf2Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )

                    var hsec1_1_shelf3Mesh = new THREE.Mesh(hsec1_1_shelf3, self.fontColor);
                    hsec1_1_shelf3Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width/ 2 + 2
                    )

                    var hsec1_1_shelf4Mesh = new THREE.Mesh(hsec1_1_shelf4, self.fontColor);
                    hsec1_1_shelf4Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )

                    var hsec1_1_shelf5Mesh = new THREE.Mesh(hsec1_1_shelf5, self.fontColor);
                    hsec1_1_shelf5Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf5", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf5", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )

                    var hsec1_1_shelf6Mesh = new THREE.Mesh(hsec1_1_shelf6, self.fontColor);
                    hsec1_1_shelf6Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.x + 3,
                    self.scene.getObjectByName( "internalShelf_1_1_shelf6", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_1_1_shelf5", true ).position.y - self.scene.getObjectByName( "internalShelf_1_1_shelf6", true ).position.y) / 2),
                    self.scene.getObjectByName( "RayCastRecieverSection1_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
    
                    dimensionsFontGroup.add(hsec1_1_shelf1Mesh, hsec1_1_shelf0Mesh, hsec1_1_shelf2Mesh, hsec1_1_shelf3Mesh, hsec1_1_shelf4Mesh, hsec1_1_shelf5Mesh,hsec1_1_shelf6Mesh);
                }
                if ( self.scene.getObjectByName( "horizontalDividerSection1_1", true ) != undefined) {
                    var hsec1_2Mesh = new THREE.Mesh(hsec1_2, self.fontColor);
                    hsec1_2Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                    self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.options.sectionHeight_1_2 /2 - 1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(hsec1_2Mesh);
                    if ( self.options.shelvesCounterSection1_2 === 1) {
                        dimensionsFontGroup.remove(hsec1_2Mesh); 
                        dimensionsFontGroup.remove(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh);
                        var hsec1_2_shelf1Mesh = new THREE.Mesh(hsec1_2_shelf1, self.fontColor);
                        hsec1_2_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y + ( (self.options.sectionHeight_1_2 - self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y) / 2) - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf0Mesh = new THREE.Mesh(hsec1_2_shelf0, self.fontColor);
                        hsec1_2_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + (self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_2 === 2) {
                        dimensionsFontGroup.remove(hsec1_2Mesh); 
                        dimensionsFontGroup.remove(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh);
                        var hsec1_2_shelf1Mesh = new THREE.Mesh(hsec1_2_shelf1, self.fontColor);
                        hsec1_2_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y + ( (self.options.sectionHeight_1_2 - self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y) / 2 - 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf0Mesh = new THREE.Mesh(hsec1_2_shelf0, self.fontColor);
                        hsec1_2_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y / 2) - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf2Mesh = new THREE.Mesh(hsec1_2_shelf2, self.fontColor);
                        hsec1_2_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y) / 2 - 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_2 === 3) {
                        dimensionsFontGroup.remove(hsec1_2Mesh); 
                        dimensionsFontGroup.remove(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh, hsec1_2_shelf3Mesh);
                        var hsec1_2_shelf1Mesh = new THREE.Mesh(hsec1_2_shelf1, self.fontColor);
                        hsec1_2_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y + ( (self.options.sectionHeight_1_2 - self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf0Mesh = new THREE.Mesh(hsec1_2_shelf0, self.fontColor);
                        hsec1_2_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf2Mesh = new THREE.Mesh(hsec1_2_shelf2, self.fontColor);
                        hsec1_2_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec1_2_shelf3Mesh = new THREE.Mesh(hsec1_2_shelf3, self.fontColor);
                        hsec1_2_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh, hsec1_2_shelf3Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_2 === 4) {
                        dimensionsFontGroup.remove(hsec1_2Mesh); 
                        dimensionsFontGroup.remove(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh, hsec1_2_shelf3Mesh, hsec1_2_shelf4Mesh);
                        var hsec1_2_shelf1Mesh = new THREE.Mesh(hsec1_2_shelf1, self.fontColor);
                        hsec1_2_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y + ( (self.options.sectionHeight_1_2 - self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf0Mesh = new THREE.Mesh(hsec1_2_shelf0, self.fontColor);
                        hsec1_2_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_2_shelf4", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf2Mesh = new THREE.Mesh(hsec1_2_shelf2, self.fontColor);
                        hsec1_2_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec1_2_shelf3Mesh = new THREE.Mesh(hsec1_2_shelf3, self.fontColor);
                        hsec1_2_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec1_2_shelf4Mesh = new THREE.Mesh(hsec1_2_shelf4, self.fontColor);
                        hsec1_2_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf4", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh, hsec1_2_shelf3Mesh, hsec1_2_shelf4Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_2 === 5) {
                        dimensionsFontGroup.remove(hsec1_2Mesh); 
                        dimensionsFontGroup.remove(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh, hsec1_2_shelf3Mesh, hsec1_2_shelf4Mesh, hsec1_2_shelf5Mesh);
                        var hsec1_2_shelf1Mesh = new THREE.Mesh(hsec1_2_shelf1, self.fontColor);
                        hsec1_2_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y + ( (self.options.sectionHeight_1_2 - self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf0Mesh = new THREE.Mesh(hsec1_2_shelf0, self.fontColor);
                        hsec1_2_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_2_shelf5", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_2_shelf2Mesh = new THREE.Mesh(hsec1_2_shelf2, self.fontColor);
                        hsec1_2_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec1_2_shelf3Mesh = new THREE.Mesh(hsec1_2_shelf3, self.fontColor);
                        hsec1_2_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec1_2_shelf4Mesh = new THREE.Mesh(hsec1_2_shelf4, self.fontColor);
                        hsec1_2_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf4", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec1_2_shelf5Mesh = new THREE.Mesh(hsec1_2_shelf5, self.fontColor);
                        hsec1_2_shelf5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_1", true ).position.y + self.scene.getObjectByName( "internalShelf_1_2_shelf5", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_2_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_1_2_shelf5", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_2_shelf1Mesh, hsec1_2_shelf0Mesh, hsec1_2_shelf2Mesh, hsec1_2_shelf3Mesh, hsec1_2_shelf4Mesh, hsec1_2_shelf5Mesh);
                    }
                }
                if ( self.scene.getObjectByName( "horizontalDividerSection1_2", true ) != undefined) {
                    var hsec1_3Mesh = new THREE.Mesh(hsec1_3, self.fontColor);
                    hsec1_3Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                    self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.options.sectionHeight_1_3 /2 - 2,
                    self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(hsec1_3Mesh);
    
                    if ( self.options.shelvesCounterSection1_3 === 1) {
                        dimensionsFontGroup.remove(hsec1_3Mesh); 
                        dimensionsFontGroup.remove(hsec1_3_shelf1Mesh, hsec1_3_shelf0Mesh);
                        var hsec1_3_shelf1Mesh = new THREE.Mesh(hsec1_3_shelf1, self.fontColor);
                        hsec1_3_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y + ( (self.options.sectionHeight_1_3 - self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_3_shelf0Mesh = new THREE.Mesh(hsec1_3_shelf0, self.fontColor);
                        hsec1_3_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_3_shelf1Mesh, hsec1_3_shelf0Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_3 === 2) {
                        dimensionsFontGroup.remove(hsec1_3Mesh); 
                        dimensionsFontGroup.remove(hsec1_3_shelf1Mesh, hsec1_3_shelf0Mesh, hsec1_3_shelf2Mesh);
                        var hsec1_3_shelf1Mesh = new THREE.Mesh(hsec1_3_shelf1, self.fontColor);
                        hsec1_3_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y + ( (self.options.sectionHeight_1_3 - self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y) / 2 - 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf0Mesh = new THREE.Mesh(hsec1_3_shelf0, self.fontColor);
                        hsec1_3_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf2Mesh = new THREE.Mesh(hsec1_3_shelf2, self.fontColor);
                        hsec1_3_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_3_shelf1Mesh, hsec1_3_shelf0Mesh, hsec1_3_shelf2Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_3 === 3) {
                        dimensionsFontGroup.remove(hsec1_3Mesh); 
                        dimensionsFontGroup.remove(hsec1_3_shelf1Mesh, hsec1_3_shelf0Mesh, hsec1_3_shelf2Mesh, hsec1_3_shelf3Mesh);
                        var hsec1_3_shelf1Mesh = new THREE.Mesh(hsec1_3_shelf1, self.fontColor);
                        hsec1_3_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y + ( (self.options.sectionHeight_1_3 - self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y) / 2 - 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf0Mesh = new THREE.Mesh(hsec1_3_shelf0, self.fontColor);
                        hsec1_3_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_3_shelf3", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf2Mesh = new THREE.Mesh(hsec1_3_shelf2, self.fontColor);
                        hsec1_3_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf3Mesh = new THREE.Mesh(hsec1_3_shelf3, self.fontColor);
                        hsec1_3_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_3_shelf3", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_3_shelf1Mesh, hsec1_3_shelf0Mesh, hsec1_3_shelf2Mesh, hsec1_3_shelf3Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_3 === 4) {
                        dimensionsFontGroup.remove(hsec1_3Mesh); 
                        dimensionsFontGroup.remove(hsec1_3_shelf1Mesh, hsec1_3_shelf0Mesh, hsec1_3_shelf2Mesh, hsec1_3_shelf3Mesh, hsec1_3_shelf4Mesh);
                        var hsec1_3_shelf1Mesh = new THREE.Mesh(hsec1_3_shelf1, self.fontColor);
                        hsec1_3_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y + ( (self.options.sectionHeight_1_3 - self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y) / 2 - 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf0Mesh = new THREE.Mesh(hsec1_3_shelf0, self.fontColor);
                        hsec1_3_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_3_shelf4", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf2Mesh = new THREE.Mesh(hsec1_3_shelf2, self.fontColor);
                        hsec1_3_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf3Mesh = new THREE.Mesh(hsec1_3_shelf3, self.fontColor);
                        hsec1_3_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_3_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_3_shelf3", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_3_shelf4Mesh = new THREE.Mesh(hsec1_3_shelf4, self.fontColor);
                        hsec1_3_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_2", true ).position.y + self.scene.getObjectByName( "internalShelf_1_3_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_3_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_1_3_shelf4", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_3_shelf1Mesh, hsec1_3_shelf0Mesh, hsec1_3_shelf2Mesh, hsec1_3_shelf3Mesh, hsec1_3_shelf4Mesh);
                    }
                }
                if ( self.scene.getObjectByName( "horizontalDividerSection1_3", true ) != undefined) {
                    var hsec1_4Mesh = new THREE.Mesh(hsec1_4, self.fontColor);
                    hsec1_4Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                    self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.options.sectionHeight_1_4 /2 - 1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(hsec1_4Mesh);

                    if ( self.options.shelvesCounterSection1_4 === 1) {
                        dimensionsFontGroup.remove(hsec1_4Mesh); 
                        dimensionsFontGroup.remove(hsec1_4_shelf1Mesh, hsec1_4_shelf0Mesh);
                        var hsec1_4_shelf1Mesh = new THREE.Mesh(hsec1_4_shelf1, self.fontColor);
                        hsec1_4_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y + ( (self.options.sectionHeight_1_4 - self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_4_shelf0Mesh = new THREE.Mesh(hsec1_4_shelf0, self.fontColor);
                        hsec1_4_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_4_shelf1Mesh, hsec1_4_shelf0Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_4 === 2) {
                        dimensionsFontGroup.remove(hsec1_4Mesh); 
                        dimensionsFontGroup.remove(hsec1_4_shelf1Mesh, hsec1_4_shelf0Mesh, hsec1_4_shelf2Mesh);
                        var hsec1_4_shelf1Mesh = new THREE.Mesh(hsec1_4_shelf1, self.fontColor);
                        hsec1_4_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y + ( (self.options.sectionHeight_1_4 - self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y) / 2 - 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_4_shelf0Mesh = new THREE.Mesh(hsec1_4_shelf0, self.fontColor);
                        hsec1_4_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_4_shelf2", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_4_shelf2Mesh = new THREE.Mesh(hsec1_4_shelf2, self.fontColor);
                        hsec1_4_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.scene.getObjectByName( "internalShelf_1_4_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_4_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_4_shelf1Mesh, hsec1_4_shelf0Mesh, hsec1_4_shelf2Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_4 === 3) {
                        dimensionsFontGroup.remove(hsec1_4Mesh); 
                        dimensionsFontGroup.remove(hsec1_4_shelf1Mesh, hsec1_4_shelf0Mesh, hsec1_4_shelf2Mesh, hsec1_4_shelf3Mesh);
                        var hsec1_4_shelf1Mesh = new THREE.Mesh(hsec1_4_shelf1, self.fontColor);
                        hsec1_4_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y + ( (self.options.sectionHeight_1_4 - self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y) / 2 - 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_4_shelf0Mesh = new THREE.Mesh(hsec1_4_shelf0, self.fontColor);
                        hsec1_4_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_4_shelf3", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_4_shelf2Mesh = new THREE.Mesh(hsec1_4_shelf2, self.fontColor);
                        hsec1_4_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.scene.getObjectByName( "internalShelf_1_4_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_4_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_4_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_4_shelf3Mesh = new THREE.Mesh(hsec1_4_shelf3, self.fontColor);
                        hsec1_4_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_3", true ).position.y + self.scene.getObjectByName( "internalShelf_1_4_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_4_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_1_4_shelf3", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_4_shelf1Mesh, hsec1_4_shelf0Mesh, hsec1_4_shelf2Mesh, hsec1_4_shelf3Mesh);
                    }
                }
                if ( self.scene.getObjectByName( "horizontalDividerSection1_4", true ) != undefined) {
                    var hsec1_5Mesh = new THREE.Mesh(hsec1_5, self.fontColor);
                    hsec1_5Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.x + 3,
                    self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.options.sectionHeight_1_5 /2 - 1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(hsec1_5Mesh);

                    if ( self.options.shelvesCounterSection1_5 === 1) {
                        dimensionsFontGroup.remove(hsec1_5Mesh); 
                        dimensionsFontGroup.remove(hsec1_5_shelf1Mesh, hsec1_5_shelf0Mesh);
                        var hsec1_5_shelf1Mesh = new THREE.Mesh(hsec1_5_shelf1, self.fontColor);
                        hsec1_5_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.scene.getObjectByName( "internalShelf_1_5_shelf1", true ).position.y + ( (self.options.sectionHeight_1_5 - self.scene.getObjectByName( "internalShelf_1_5_shelf1", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_5_shelf0Mesh = new THREE.Mesh(hsec1_5_shelf0, self.fontColor);
                        hsec1_5_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_5_shelf1", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_5_shelf1Mesh, hsec1_5_shelf0Mesh);
                    }
                    if ( self.options.shelvesCounterSection1_5 === 2) {
                        dimensionsFontGroup.remove(hsec1_5Mesh); 
                        dimensionsFontGroup.remove(hsec1_5_shelf1Mesh, hsec1_5_shelf0Mesh, hsec1_5_shelf2Mesh);
                        var hsec1_5_shelf1Mesh = new THREE.Mesh(hsec1_5_shelf1, self.fontColor);
                        hsec1_5_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.scene.getObjectByName( "internalShelf_1_5_shelf1", true ).position.y + ( (self.options.sectionHeight_1_5 - self.scene.getObjectByName( "internalShelf_1_5_shelf1", true ).position.y) / 2 - 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_5_shelf0Mesh = new THREE.Mesh(hsec1_5_shelf0, self.fontColor);
                        hsec1_5_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_5_shelf2", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec1_5_shelf2Mesh = new THREE.Mesh(hsec1_5_shelf2, self.fontColor);
                        hsec1_5_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_4", true ).position.y + self.scene.getObjectByName( "internalShelf_1_5_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_1_5_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_1_5_shelf2", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_5", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_5_shelf1Mesh, hsec1_5_shelf0Mesh, hsec1_5_shelf2Mesh);
                    }
                }
                if ( self.scene.getObjectByName( "horizontalDividerSection1_5", true ) != undefined) {
                    var hsec1_6Mesh = new THREE.Mesh(hsec1_6, self.fontColor);
                    hsec1_6Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_6", true ).position.x + 3,
                    self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + self.options.sectionHeight_1_6 /2 - 1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_6", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(hsec1_6Mesh);

                    if ( self.options.shelvesCounterSection1_6 === 1) {
                        dimensionsFontGroup.remove(hsec1_6Mesh); 
                        dimensionsFontGroup.remove(hsec1_6_shelf1Mesh, hsec1_6_shelf0Mesh);
                        var hsec1_6_shelf1Mesh = new THREE.Mesh(hsec1_6_shelf1, self.fontColor);
                        hsec1_6_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_6", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + self.scene.getObjectByName( "internalShelf_1_6_shelf1", true ).position.y + ( (self.options.sectionHeight_1_6 - self.scene.getObjectByName( "internalShelf_1_6_shelf1", true ).position.y) / 2 -2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_6", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        var hsec1_6_shelf0Mesh = new THREE.Mesh(hsec1_6_shelf0, self.fontColor);
                        hsec1_6_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection1_6", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection1_5", true ).position.y + ( self.scene.getObjectByName( "internalShelf_1_6_shelf1", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection1_6", true ).position.z + self.options.shelf.width / 2 + 2
                        )
    
                        dimensionsFontGroup.add(hsec1_6_shelf1Mesh, hsec1_6_shelf0Mesh);
                    }
                }
                if ( self.scene.getObjectByName( "horizontalDividerSection1_6", true ) != undefined) {
                    var hsec1_7Mesh = new THREE.Mesh(hsec1_7, self.fontColor);
                    hsec1_7Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection1_7", true ).position.x + 3,
                    self.scene.getObjectByName( "horizontalDividerSection1_6", true ).position.y + self.options.sectionHeight_1_7 /2 - 1,
                    self.scene.getObjectByName( "RayCastRecieverSection1_7", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(hsec1_7Mesh);
                }
                



            
    
                
    
               
                //sect2
                if (self.scene.getObjectByName('RayCastRecieverSection2_1') != undefined) {

                    //w
                    var wsec2_1 = new THREE.TextGeometry(  ( parseFloat(document.getElementById('pillar2PositionField_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) ) +" ", {
                        font: font,
                        size: 2,
                        height: 0.1,
                        curveSegments: 12,
                        bevelThickness: 0,
                        bevelSize: 2,
                        bevelEnabled: false,
                        }
                    )
                    var wsec2_1Mesh = new THREE.Mesh(wsec2_1, self.fontColor);
                    wsec2_1Mesh.position.set(
                        
                    self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + self.options.section2Length / 2 -1.8,
                    self.options.pillar.height - 6,
                    self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 
                    )
                    
                    //height
                    var hsec2_1 = new THREE.TextGeometry(/*for individual horizontal section use - self.options.sectionHeight_2_1 */ (parseFloat(document.getElementById('Height_HorizontalPartition_S2_1').textContent.match(/\d+(\.\d+)?/)[0]) ) +" ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                    if ( self.scene.getObjectByName( "horizontalDividerSection2_1", true ) != undefined ) {
                        var hsec2_2 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S2_2').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                        if ( self.options.shelvesCounterSection2_2 === 1 ) {
                            var hsec2_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_2 === 2 ) {
                            var hsec2_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_2 === 3 ) {
                            var hsec2_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_2 === 4 ) {
                            var hsec2_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_2 === 5 ) {
                            var hsec2_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_2_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf2_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }
                    if ( self.options.shelvesCounterSection2_1 === 1 ) {
                        var hsec2_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection2_1 === 2 ) {
                        var hsec2_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection2_1 === 3 ) {
                        var hsec2_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection2_1 === 4 ) {
                        var hsec2_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                    }
                    if ( self.options.shelvesCounterSection2_1 === 5 ) {
                        var hsec2_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection2_1 === 6 ) {
                        var hsec2_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec2_1_shelf6 = new THREE.TextGeometry( (self.options.heigh6Shelf2_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined) {
                        var hsec2_3 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S2_3').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
        
                        if ( self.options.shelvesCounterSection2_3 === 1 ) {
                            var hsec2_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_3 === 2 ) {
                            var hsec2_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_3 === 3 ) {
                            var hsec2_3_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_3 === 4 ) {
                            var hsec2_3_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
        
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined) {
                        var hsec2_4 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S2_4').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
        
                        if ( self.options.shelvesCounterSection2_4 === 1 ) {
                            var hsec2_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_4 === 2 ) {
                            var hsec2_4_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_4 === 3 ) {
                            var hsec2_4_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_4_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined) {
                        var hsec2_5 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S2_5').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } ); 
                        
                        if ( self.options.shelvesCounterSection2_5 === 1 ) {
                            var hsec2_5_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_5_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection2_5 === 2 ) {
                            var hsec2_5_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf2_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_5_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_5_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection2_5", true ) != undefined) {
                        var hsec2_6 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S2_6').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );  
                        
                        if ( self.options.shelvesCounterSection2_6 === 1 ) {
                            var hsec2_6_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf2_6 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec2_6_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf2_6 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined) {
                        var hsec2_7 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S2_7').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );    
                    }

                        
                    var hsec2_1Mesh = new THREE.Mesh(hsec2_1, self.fontColor);
                    hsec2_1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                    self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.y,
                    self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(wsec2_1Mesh,hsec2_1Mesh); 
                    if ( self.options.shelvesCounterSection2_1 === 1) {
                        dimensionsFontGroup.remove(hsec2_1Mesh); 
                        dimensionsFontGroup.remove(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh);

                        var hsec2_1_shelf1Mesh = new THREE.Mesh(hsec2_1_shelf1, self.fontColor);
                        hsec2_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y + ( (self.options.sectionHeight_2_1 - self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf0Mesh = new THREE.Mesh(hsec2_1_shelf0, self.fontColor);
                        hsec2_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh);
                    }
                    if ( self.options.shelvesCounterSection2_1 === 2) {
                        dimensionsFontGroup.remove(hsec2_1Mesh); 
                        dimensionsFontGroup.remove(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh);
                        var hsec2_1_shelf1Mesh = new THREE.Mesh(hsec2_1_shelf1, self.fontColor);
                        hsec2_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y + ( (self.options.sectionHeight_2_1 - self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf0Mesh = new THREE.Mesh(hsec2_1_shelf0, self.fontColor);
                        hsec2_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y / 2) - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf2Mesh = new THREE.Mesh(hsec2_1_shelf2, self.fontColor);
                        hsec2_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y ) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh);
                    }
                    if ( self.options.shelvesCounterSection2_1 === 3) {
                        dimensionsFontGroup.remove(hsec2_1Mesh); 
                        dimensionsFontGroup.remove(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh);
                        var hsec2_1_shelf1Mesh = new THREE.Mesh(hsec2_1_shelf1, self.fontColor);
                        hsec2_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y + ( (self.options.sectionHeight_2_1 - self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf0Mesh = new THREE.Mesh(hsec2_1_shelf0, self.fontColor);
                        hsec2_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf2Mesh = new THREE.Mesh(hsec2_1_shelf2, self.fontColor);
                        hsec2_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec2_1_shelf3Mesh = new THREE.Mesh(hsec2_1_shelf3, self.fontColor);
                        hsec2_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh);
                    }
                    if ( self.options.shelvesCounterSection2_1 === 4) {
                        dimensionsFontGroup.remove(hsec2_1Mesh); 
                        dimensionsFontGroup.remove(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh, hsec2_1_shelf4Mesh);
                        var hsec2_1_shelf1Mesh = new THREE.Mesh(hsec2_1_shelf1, self.fontColor);
                        hsec2_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y + ( (self.options.sectionHeight_2_1 - self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf0Mesh = new THREE.Mesh(hsec2_1_shelf0, self.fontColor);
                        hsec2_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf2Mesh = new THREE.Mesh(hsec2_1_shelf2, self.fontColor);
                        hsec2_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec2_1_shelf3Mesh = new THREE.Mesh(hsec2_1_shelf3, self.fontColor);
                        hsec2_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )

                        var hsec2_1_shelf4Mesh = new THREE.Mesh(hsec2_1_shelf4, self.fontColor);
                        hsec2_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh, hsec2_1_shelf4Mesh);
                    }
                    if ( self.options.shelvesCounterSection2_1 === 5) {
                        dimensionsFontGroup.remove(hsec2_1Mesh); 
                        dimensionsFontGroup.remove(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh, hsec2_1_shelf4Mesh, hsec2_1_shelf5Mesh);
                        var hsec2_1_shelf1Mesh = new THREE.Mesh(hsec2_1_shelf1, self.fontColor);
                        hsec2_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y + ( (self.options.sectionHeight_2_1 - self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf0Mesh = new THREE.Mesh(hsec2_1_shelf0, self.fontColor);
                        hsec2_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec2_1_shelf2Mesh = new THREE.Mesh(hsec2_1_shelf2, self.fontColor);
                        hsec2_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec2_1_shelf3Mesh = new THREE.Mesh(hsec2_1_shelf3, self.fontColor);
                        hsec2_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )

                        var hsec2_1_shelf4Mesh = new THREE.Mesh(hsec2_1_shelf4, self.fontColor);
                        hsec2_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec2_1_shelf5Mesh = new THREE.Mesh(hsec2_1_shelf5, self.fontColor);
                        hsec2_1_shelf5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf5", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh, hsec2_1_shelf4Mesh, hsec2_1_shelf5Mesh);
                    }
                    if ( self.options.shelvesCounterSection2_1 === 6) {
                        dimensionsFontGroup.remove(hsec2_1Mesh); 
                        dimensionsFontGroup.remove(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh, hsec2_1_shelf4Mesh, hsec2_1_shelf5Mesh, hsec2_1_shelf6Mesh);
                        var hsec2_1_shelf1Mesh = new THREE.Mesh(hsec2_1_shelf1, self.fontColor);
                        hsec2_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y + ( (self.options.sectionHeight_2_1 - self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec2_1_shelf0Mesh = new THREE.Mesh(hsec2_1_shelf0, self.fontColor);
                        hsec2_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf6", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec2_1_shelf2Mesh = new THREE.Mesh(hsec2_1_shelf2, self.fontColor);
                        hsec2_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec2_1_shelf3Mesh = new THREE.Mesh(hsec2_1_shelf3, self.fontColor);
                        hsec2_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )
                        var hsec2_1_shelf4Mesh = new THREE.Mesh(hsec2_1_shelf4, self.fontColor);
                        hsec2_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec2_1_shelf5Mesh = new THREE.Mesh(hsec2_1_shelf5, self.fontColor);
                        hsec2_1_shelf5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf5", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec2_1_shelf6Mesh = new THREE.Mesh(hsec2_1_shelf6, self.fontColor);
                        hsec2_1_shelf6Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_2_1_shelf6", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_2_1_shelf5", true ).position.y - self.scene.getObjectByName( "internalShelf_2_1_shelf6", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection2_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec2_1_shelf1Mesh, hsec2_1_shelf0Mesh, hsec2_1_shelf2Mesh, hsec2_1_shelf3Mesh, hsec2_1_shelf4Mesh, hsec2_1_shelf5Mesh, hsec2_1_shelf6Mesh);
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection2_1", true ) != undefined) {
                        var hsec2_2Mesh = new THREE.Mesh(hsec2_2, self.fontColor);
                        hsec2_2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.options.sectionHeight_2_2 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec2_2Mesh);
                        if ( self.options.shelvesCounterSection2_2 === 1) {
                            dimensionsFontGroup.remove(hsec2_2Mesh); 
                            dimensionsFontGroup.remove(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh);
                            var hsec2_2_shelf1Mesh = new THREE.Mesh(hsec2_2_shelf1, self.fontColor);
                            hsec2_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y + ( (self.options.sectionHeight_2_2 - self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y) / 2) - 1,
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf0Mesh = new THREE.Mesh(hsec2_2_shelf0, self.fontColor);
                            hsec2_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + (self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_2 === 2) {
                            dimensionsFontGroup.remove(hsec2_2Mesh); 
                            dimensionsFontGroup.remove(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh);
                            var hsec2_2_shelf1Mesh = new THREE.Mesh(hsec2_2_shelf1, self.fontColor);
                            hsec2_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y + ( (self.options.sectionHeight_2_2 - self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf0Mesh = new THREE.Mesh(hsec2_2_shelf0, self.fontColor);
                            hsec2_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y / 2) -1,
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf2Mesh = new THREE.Mesh(hsec2_2_shelf2, self.fontColor);
                            hsec2_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_2 === 3) {
                            dimensionsFontGroup.remove(hsec2_2Mesh); 
                            dimensionsFontGroup.remove(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh, hsec2_2_shelf3Mesh);
                            var hsec2_2_shelf1Mesh = new THREE.Mesh(hsec2_2_shelf1, self.fontColor);
                            hsec2_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y + ( (self.options.sectionHeight_2_2 - self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf0Mesh = new THREE.Mesh(hsec2_2_shelf0, self.fontColor);
                            hsec2_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf2Mesh = new THREE.Mesh(hsec2_2_shelf2, self.fontColor);
                            hsec2_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec2_2_shelf3Mesh = new THREE.Mesh(hsec2_2_shelf3, self.fontColor);
                            hsec2_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh, hsec2_2_shelf3Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_2 === 4) {
                            dimensionsFontGroup.remove(hsec2_2Mesh); 
                            dimensionsFontGroup.remove(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh, hsec2_2_shelf3Mesh, hsec2_2_shelf4Mesh);
                            var hsec2_2_shelf1Mesh = new THREE.Mesh(hsec2_2_shelf1, self.fontColor);
                            hsec2_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y + ( (self.options.sectionHeight_2_2 - self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf0Mesh = new THREE.Mesh(hsec2_2_shelf0, self.fontColor);
                            hsec2_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_2_shelf4", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf2Mesh = new THREE.Mesh(hsec2_2_shelf2, self.fontColor);
                            hsec2_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec2_2_shelf3Mesh = new THREE.Mesh(hsec2_2_shelf3, self.fontColor);
                            hsec2_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec2_2_shelf4Mesh = new THREE.Mesh(hsec2_2_shelf4, self.fontColor);
                            hsec2_2_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh, hsec2_2_shelf3Mesh, hsec2_2_shelf4Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_2 === 5) {
                            dimensionsFontGroup.remove(hsec2_2Mesh); 
                            dimensionsFontGroup.remove(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh, hsec2_2_shelf3Mesh, hsec2_2_shelf4Mesh, hsec2_2_shelf5Mesh);
                            var hsec2_2_shelf1Mesh = new THREE.Mesh(hsec2_2_shelf1, self.fontColor);
                            hsec2_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y + ( (self.options.sectionHeight_2_2 - self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf0Mesh = new THREE.Mesh(hsec2_2_shelf0, self.fontColor);
                            hsec2_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_2_shelf5", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf2Mesh = new THREE.Mesh(hsec2_2_shelf2, self.fontColor);
                            hsec2_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec2_2_shelf3Mesh = new THREE.Mesh(hsec2_2_shelf3, self.fontColor);
                            hsec2_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec2_2_shelf4Mesh = new THREE.Mesh(hsec2_2_shelf4, self.fontColor);
                            hsec2_2_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_2_shelf5Mesh = new THREE.Mesh(hsec2_2_shelf5, self.fontColor);
                            hsec2_2_shelf5Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_1", true ).position.y + self.scene.getObjectByName( "internalShelf_2_2_shelf5", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_2_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_2_2_shelf5", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            dimensionsFontGroup.add(hsec2_2_shelf1Mesh, hsec2_2_shelf0Mesh, hsec2_2_shelf2Mesh, hsec2_2_shelf3Mesh, hsec2_2_shelf4Mesh, hsec2_2_shelf5Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection2_2", true ) != undefined) {
                        var hsec2_3Mesh = new THREE.Mesh(hsec2_3, self.fontColor);
                        hsec2_3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.options.sectionHeight_2_3 /2 - 2,
                        self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec2_3Mesh);
        
                        if ( self.options.shelvesCounterSection2_3 === 1) {
                            dimensionsFontGroup.remove(hsec2_3Mesh); 
                            dimensionsFontGroup.remove(hsec2_3_shelf1Mesh, hsec2_3_shelf0Mesh);
                            var hsec2_3_shelf1Mesh = new THREE.Mesh(hsec2_3_shelf1, self.fontColor);
                            hsec2_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y + ( (self.options.sectionHeight_2_3 - self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y) / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_3_shelf0Mesh = new THREE.Mesh(hsec2_3_shelf0, self.fontColor);
                            hsec2_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_3_shelf1Mesh, hsec2_3_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_3 === 2) {
                            dimensionsFontGroup.remove(hsec2_3Mesh); 
                            dimensionsFontGroup.remove(hsec2_3_shelf1Mesh, hsec2_3_shelf0Mesh, hsec2_3_shelf2Mesh);
                            var hsec2_3_shelf1Mesh = new THREE.Mesh(hsec2_3_shelf1, self.fontColor);
                            hsec2_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y + ( (self.options.sectionHeight_2_3 - self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf0Mesh = new THREE.Mesh(hsec2_3_shelf0, self.fontColor);
                            hsec2_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf2Mesh = new THREE.Mesh(hsec2_3_shelf2, self.fontColor);
                            hsec2_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_3_shelf1Mesh, hsec2_3_shelf0Mesh, hsec2_3_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_3 === 3) {
                            dimensionsFontGroup.remove(hsec2_3Mesh); 
                            dimensionsFontGroup.remove(hsec2_3_shelf1Mesh, hsec2_3_shelf0Mesh, hsec2_3_shelf2Mesh, hsec2_3_shelf3Mesh);
                            var hsec2_3_shelf1Mesh = new THREE.Mesh(hsec2_3_shelf1, self.fontColor);
                            hsec2_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y + ( (self.options.sectionHeight_2_3 - self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf0Mesh = new THREE.Mesh(hsec2_3_shelf0, self.fontColor);
                            hsec2_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_3_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf2Mesh = new THREE.Mesh(hsec2_3_shelf2, self.fontColor);
                            hsec2_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf3Mesh = new THREE.Mesh(hsec2_3_shelf3, self.fontColor);
                            hsec2_3_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_3_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_3_shelf1Mesh, hsec2_3_shelf0Mesh, hsec2_3_shelf2Mesh, hsec2_3_shelf3Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_3 === 4) {
                            dimensionsFontGroup.remove(hsec2_3Mesh); 
                            dimensionsFontGroup.remove(hsec2_3_shelf1Mesh, hsec2_3_shelf0Mesh, hsec2_3_shelf2Mesh, hsec2_3_shelf3Mesh, hsec2_3_shelf4Mesh);
                            var hsec2_3_shelf1Mesh = new THREE.Mesh(hsec2_3_shelf1, self.fontColor);
                            hsec2_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y + ( (self.options.sectionHeight_2_3 - self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf0Mesh = new THREE.Mesh(hsec2_3_shelf0, self.fontColor);
                            hsec2_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_3_shelf4", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf2Mesh = new THREE.Mesh(hsec2_3_shelf2, self.fontColor);
                            hsec2_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf3Mesh = new THREE.Mesh(hsec2_3_shelf3, self.fontColor);
                            hsec2_3_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_3_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_3_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_3_shelf4Mesh = new THREE.Mesh(hsec2_3_shelf3, self.fontColor);
                            hsec2_3_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_2", true ).position.y + self.scene.getObjectByName( "internalShelf_2_3_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_3_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_2_3_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_3_shelf1Mesh, hsec2_3_shelf0Mesh, hsec2_3_shelf2Mesh, hsec2_3_shelf3Mesh, hsec2_3_shelf4Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection2_3", true ) != undefined) {
                        var hsec2_4Mesh = new THREE.Mesh(hsec2_4, self.fontColor);
                        hsec2_4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.options.sectionHeight_2_4 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec2_4Mesh);

                        if ( self.options.shelvesCounterSection2_4 === 1) {
                            dimensionsFontGroup.remove(hsec2_4Mesh); 
                            dimensionsFontGroup.remove(hsec2_4_shelf1Mesh, hsec2_4_shelf0Mesh);
                            var hsec2_4_shelf1Mesh = new THREE.Mesh(hsec2_4_shelf1, self.fontColor);
                            hsec2_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y + ( (self.options.sectionHeight_2_4 - self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_4_shelf0Mesh = new THREE.Mesh(hsec2_4_shelf0, self.fontColor);
                            hsec2_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_4_shelf1Mesh, hsec2_4_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_4 === 2) {
                            dimensionsFontGroup.remove(hsec2_4Mesh); 
                            dimensionsFontGroup.remove(hsec2_4_shelf1Mesh, hsec2_4_shelf0Mesh, hsec2_4_shelf2Mesh);
                            var hsec2_4_shelf1Mesh = new THREE.Mesh(hsec2_4_shelf1, self.fontColor);
                            hsec2_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y + ( (self.options.sectionHeight_2_4 - self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_4_shelf0Mesh = new THREE.Mesh(hsec2_4_shelf0, self.fontColor);
                            hsec2_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_4_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_4_shelf2Mesh = new THREE.Mesh(hsec2_4_shelf2, self.fontColor);
                            hsec2_4_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.scene.getObjectByName( "internalShelf_2_4_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_4_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_4_shelf1Mesh, hsec2_4_shelf0Mesh, hsec2_4_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_4 === 3) {
                            dimensionsFontGroup.remove(hsec2_4Mesh); 
                            dimensionsFontGroup.remove(hsec2_4_shelf1Mesh, hsec2_4_shelf0Mesh, hsec2_4_shelf2Mesh, hsec2_4_shelf3Mesh);
                            var hsec2_4_shelf1Mesh = new THREE.Mesh(hsec2_4_shelf1, self.fontColor);
                            hsec2_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y + ( (self.options.sectionHeight_2_4 - self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_4_shelf0Mesh = new THREE.Mesh(hsec2_4_shelf0, self.fontColor);
                            hsec2_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_4_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_4_shelf2Mesh = new THREE.Mesh(hsec2_4_shelf2, self.fontColor);
                            hsec2_4_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.scene.getObjectByName( "internalShelf_2_4_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_4_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_4_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_4_shelf3Mesh = new THREE.Mesh(hsec2_4_shelf3, self.fontColor);
                            hsec2_4_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_3", true ).position.y + self.scene.getObjectByName( "internalShelf_2_4_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_4_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_2_4_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_4_shelf1Mesh, hsec2_4_shelf0Mesh, hsec2_4_shelf2Mesh, hsec2_4_shelf3Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection2_4", true ) != undefined) {
                        var hsec2_5Mesh = new THREE.Mesh(hsec2_5, self.fontColor);
                        hsec2_5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.options.sectionHeight_2_5 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec2_5Mesh);

                        if ( self.options.shelvesCounterSection2_5 === 1) {
                            dimensionsFontGroup.remove(hsec2_5Mesh); 
                            dimensionsFontGroup.remove(hsec2_5_shelf1Mesh, hsec2_5_shelf0Mesh);
                            var hsec2_5_shelf1Mesh = new THREE.Mesh(hsec2_5_shelf1, self.fontColor);
                            hsec2_5_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.scene.getObjectByName( "internalShelf_2_5_shelf1", true ).position.y + ( (self.options.sectionHeight_2_5 - self.scene.getObjectByName( "internalShelf_2_5_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_5_shelf0Mesh = new THREE.Mesh(hsec2_5_shelf0, self.fontColor);
                            hsec2_5_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_5_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_5_shelf1Mesh, hsec2_5_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection2_5 === 2) {
                            dimensionsFontGroup.remove(hsec2_5Mesh); 
                            dimensionsFontGroup.remove(hsec2_5_shelf1Mesh, hsec2_5_shelf0Mesh, hsec2_5_shelf2Mesh);
                            var hsec2_5_shelf1Mesh = new THREE.Mesh(hsec2_5_shelf1, self.fontColor);
                            hsec2_5_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.scene.getObjectByName( "internalShelf_2_5_shelf1", true ).position.y + ( (self.options.sectionHeight_2_5 - self.scene.getObjectByName( "internalShelf_2_5_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_5_shelf0Mesh = new THREE.Mesh(hsec2_5_shelf0, self.fontColor);
                            hsec2_5_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_5_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec2_5_shelf2Mesh = new THREE.Mesh(hsec2_5_shelf2, self.fontColor);
                            hsec2_5_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_4", true ).position.y + self.scene.getObjectByName( "internalShelf_2_5_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_2_5_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_2_5_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_5_shelf1Mesh, hsec2_5_shelf0Mesh, hsec2_5_shelf2Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection2_5", true ) != undefined) {
                        var hsec2_6Mesh = new THREE.Mesh(hsec2_6, self.fontColor);
                        hsec2_6Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_6", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.options.sectionHeight_2_6 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_6", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec2_6Mesh);

                        if ( self.options.shelvesCounterSection2_6 === 1) {
                            dimensionsFontGroup.remove(hsec2_6Mesh); 
                            dimensionsFontGroup.remove(hsec2_6_shelf1Mesh, hsec2_6_shelf0Mesh);
                            var hsec2_6_shelf1Mesh = new THREE.Mesh(hsec2_6_shelf1, self.fontColor);
                            hsec2_6_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_6", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + self.scene.getObjectByName( "internalShelf_2_6_shelf1", true ).position.y + ( (self.options.sectionHeight_2_6 - self.scene.getObjectByName( "internalShelf_2_6_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_6", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec2_6_shelf0Mesh = new THREE.Mesh(hsec2_6_shelf0, self.fontColor);
                            hsec2_6_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection2_6", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection2_5", true ).position.y + ( self.scene.getObjectByName( "internalShelf_2_6_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection2_6", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec2_6_shelf1Mesh, hsec2_6_shelf0Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection2_6", true ) != undefined) {
                        var hsec2_7Mesh = new THREE.Mesh(hsec2_7, self.fontColor);
                        hsec2_7Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection2_7", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection2_6", true ).position.y + self.options.sectionHeight_2_7 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection2_7", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec2_7Mesh);
                    }
                    

                } 

                //sect3
                if (self.scene.getObjectByName('RayCastRecieverSection3_1') != undefined) {

                    //w
                    var wsec3_1 = new THREE.TextGeometry(  ( parseFloat(document.getElementById('pillar3PositionField_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) ) +" ", {
                        font: font,
                        size: 2,
                        height: 0.1,
                        curveSegments: 12,
                        bevelThickness: 0,
                        bevelSize: 2,
                        bevelEnabled: false,
                        }
                    )
                    var wsec3_1Mesh = new THREE.Mesh(wsec3_1, self.fontColor);
                    wsec3_1Mesh.position.set(
                        
                    self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + self.options.section3Length / 2 -1.8,
                    self.options.pillar.height - 6,
                    self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 
                    )
                    
                    //height
                    var hsec3_1 = new THREE.TextGeometry(/*for individual horizontal section use - self.options.sectionHeight_3_1 */ (parseFloat(document.getElementById('Height_HorizontalPartition_S3_1').textContent.match(/\d+(\.\d+)?/)[0]) ) +" ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                    if ( self.scene.getObjectByName( "horizontalDividerSection3_1", true ) != undefined ) {
                        var hsec3_2 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S3_2').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                        if ( self.options.shelvesCounterSection3_2 === 1 ) {
                            var hsec3_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_2 === 2 ) {
                            var hsec3_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_2 === 3 ) {
                            var hsec3_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_2 === 4 ) {
                            var hsec3_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_2 === 5 ) {
                            var hsec3_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_2_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf3_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }
                    if ( self.options.shelvesCounterSection3_1 === 1 ) {
                        var hsec3_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection3_1 === 2 ) {
                        var hsec3_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection3_1 === 3 ) {
                        var hsec3_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection3_1 === 4 ) {
                        var hsec3_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection3_1 === 5 ) {
                        var hsec3_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection3_1 === 6 ) {
                        var hsec3_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec3_1_shelf6 = new THREE.TextGeometry( (self.options.heigh6Shelf3_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined) {
                        var hsec3_3 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S3_3').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
        
                        if ( self.options.shelvesCounterSection3_3 === 1 ) {
                            var hsec3_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_3 === 2 ) {
                            var hsec3_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_3 === 3 ) {
                            var hsec3_3_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_3 === 4 ) {
                            var hsec3_3_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
        
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined) {
                        var hsec3_4 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S3_4').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
        
                        if ( self.options.shelvesCounterSection3_4 === 1 ) {
                            var hsec3_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_4 === 2 ) {
                            var hsec3_4_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_4 === 3 ) {
                            var hsec3_4_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_4_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined) {
                        var hsec3_5 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S3_5').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );  
                        
                        if ( self.options.shelvesCounterSection3_5 === 1 ) {
                            var hsec3_5_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_5_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection3_5 === 2 ) {
                            var hsec3_5_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf3_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_5_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_5_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection3_5", true ) != undefined) {
                        var hsec3_6 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S3_6').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );  
                        
                        if ( self.options.shelvesCounterSection3_6 === 1 ) {
                            var hsec3_6_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf3_6 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec3_6_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf3_6 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }
                        
                    if ( self.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined) {
                        var hsec3_7 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S3_7').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );    
                    }
                        

                    var hsec3_1Mesh = new THREE.Mesh(hsec3_1, self.fontColor);
                    hsec3_1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                    self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.y,
                    self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(wsec3_1Mesh,hsec3_1Mesh); 
                    if ( self.options.shelvesCounterSection3_1 === 1) {
                        dimensionsFontGroup.remove(hsec3_1Mesh); 
                        dimensionsFontGroup.remove(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh);

                        var hsec3_1_shelf1Mesh = new THREE.Mesh(hsec3_1_shelf1, self.fontColor);
                        hsec3_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y + ( (self.options.sectionHeight_3_1 - self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf0Mesh = new THREE.Mesh(hsec3_1_shelf0, self.fontColor);
                        hsec3_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh);
                    }
                    if ( self.options.shelvesCounterSection3_1 === 2) {
                        dimensionsFontGroup.remove(hsec3_1Mesh); 
                        dimensionsFontGroup.remove(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh);
                        var hsec3_1_shelf1Mesh = new THREE.Mesh(hsec3_1_shelf1, self.fontColor);
                        hsec3_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y + ( (self.options.sectionHeight_3_1 - self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf0Mesh = new THREE.Mesh(hsec3_1_shelf0, self.fontColor);
                        hsec3_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf2Mesh = new THREE.Mesh(hsec3_1_shelf2, self.fontColor);
                        hsec3_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh);
                    }
                    if ( self.options.shelvesCounterSection3_1 === 3) {
                        dimensionsFontGroup.remove(hsec3_1Mesh); 
                        dimensionsFontGroup.remove(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh);
                        var hsec3_1_shelf1Mesh = new THREE.Mesh(hsec3_1_shelf1, self.fontColor);
                        hsec3_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y + ( (self.options.sectionHeight_3_1 - self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf0Mesh = new THREE.Mesh(hsec3_1_shelf0, self.fontColor);
                        hsec3_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf2Mesh = new THREE.Mesh(hsec3_1_shelf2, self.fontColor);
                        hsec3_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec3_1_shelf3Mesh = new THREE.Mesh(hsec3_1_shelf3, self.fontColor);
                        hsec3_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh);
                    }
                    if ( self.options.shelvesCounterSection3_1 === 4) {
                        dimensionsFontGroup.remove(hsec3_1Mesh); 
                        dimensionsFontGroup.remove(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh, hsec3_1_shelf4Mesh);
                        var hsec3_1_shelf1Mesh = new THREE.Mesh(hsec3_1_shelf1, self.fontColor);
                        hsec3_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y + ( (self.options.sectionHeight_3_1 - self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf0Mesh = new THREE.Mesh(hsec3_1_shelf0, self.fontColor);
                        hsec3_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf2Mesh = new THREE.Mesh(hsec3_1_shelf2, self.fontColor);
                        hsec3_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec3_1_shelf3Mesh = new THREE.Mesh(hsec3_1_shelf3, self.fontColor);
                        hsec3_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )

                        var hsec3_1_shelf4Mesh = new THREE.Mesh(hsec3_1_shelf4, self.fontColor);
                        hsec3_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh, hsec3_1_shelf4Mesh);
                    }
                    if ( self.options.shelvesCounterSection3_1 === 5) {
                        dimensionsFontGroup.remove(hsec3_1Mesh); 
                        dimensionsFontGroup.remove(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh, hsec3_1_shelf4Mesh, hsec3_1_shelf5Mesh);
                        var hsec3_1_shelf1Mesh = new THREE.Mesh(hsec3_1_shelf1, self.fontColor);
                        hsec3_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y + ( (self.options.sectionHeight_3_1 - self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf0Mesh = new THREE.Mesh(hsec3_1_shelf0, self.fontColor);
                        hsec3_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec3_1_shelf2Mesh = new THREE.Mesh(hsec3_1_shelf2, self.fontColor);
                        hsec3_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec3_1_shelf3Mesh = new THREE.Mesh(hsec3_1_shelf3, self.fontColor);
                        hsec3_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )
                        var hsec3_1_shelf4Mesh = new THREE.Mesh(hsec3_1_shelf4, self.fontColor);
                        hsec3_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec3_1_shelf5Mesh = new THREE.Mesh(hsec3_1_shelf5, self.fontColor);
                        hsec3_1_shelf5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf5", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh, hsec3_1_shelf4Mesh, hsec3_1_shelf5Mesh);
                    }
                    if ( self.options.shelvesCounterSection3_1 === 6) {
                        dimensionsFontGroup.remove(hsec3_1Mesh); 
                        dimensionsFontGroup.remove(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh, hsec3_1_shelf4Mesh, hsec3_1_shelf5Mesh,hsec3_1_shelf6Mesh);
                        var hsec3_1_shelf1Mesh = new THREE.Mesh(hsec3_1_shelf1, self.fontColor);
                        hsec3_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y + ( (self.options.sectionHeight_3_1 - self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec3_1_shelf0Mesh = new THREE.Mesh(hsec3_1_shelf0, self.fontColor);
                        hsec3_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf6", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec3_1_shelf2Mesh = new THREE.Mesh(hsec3_1_shelf2, self.fontColor);
                        hsec3_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec3_1_shelf3Mesh = new THREE.Mesh(hsec3_1_shelf3, self.fontColor);
                        hsec3_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )
                        var hsec3_1_shelf4Mesh = new THREE.Mesh(hsec3_1_shelf4, self.fontColor);
                        hsec3_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec3_1_shelf5Mesh = new THREE.Mesh(hsec3_1_shelf5, self.fontColor);
                        hsec3_1_shelf5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf5", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec3_1_shelf6Mesh = new THREE.Mesh(hsec3_1_shelf6, self.fontColor);
                        hsec3_1_shelf6Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_3_1_shelf6", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_3_1_shelf5", true ).position.y - self.scene.getObjectByName( "internalShelf_3_1_shelf6", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection3_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec3_1_shelf1Mesh, hsec3_1_shelf0Mesh, hsec3_1_shelf2Mesh, hsec3_1_shelf3Mesh, hsec3_1_shelf4Mesh, hsec3_1_shelf5Mesh, hsec3_1_shelf6Mesh);
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection3_1", true ) != undefined) {
                        var hsec3_2Mesh = new THREE.Mesh(hsec3_2, self.fontColor);
                        hsec3_2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.options.sectionHeight_3_2 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec3_2Mesh);
                        if ( self.options.shelvesCounterSection3_2 === 1) {
                            dimensionsFontGroup.remove(hsec3_2Mesh); 
                            dimensionsFontGroup.remove(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh);
                            var hsec3_2_shelf1Mesh = new THREE.Mesh(hsec3_2_shelf1, self.fontColor);
                            hsec3_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y + ( (self.options.sectionHeight_3_2 - self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y) / 2) - 1,
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf0Mesh = new THREE.Mesh(hsec3_2_shelf0, self.fontColor);
                            hsec3_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + (self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_2 === 2) {
                            dimensionsFontGroup.remove(hsec3_2Mesh); 
                            dimensionsFontGroup.remove(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh);
                            var hsec3_2_shelf1Mesh = new THREE.Mesh(hsec3_2_shelf1, self.fontColor);
                            hsec3_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y + ( (self.options.sectionHeight_3_2 - self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf0Mesh = new THREE.Mesh(hsec3_2_shelf0, self.fontColor);
                            hsec3_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf2Mesh = new THREE.Mesh(hsec3_2_shelf2, self.fontColor);
                            hsec3_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_2 === 3) {
                            dimensionsFontGroup.remove(hsec3_2Mesh); 
                            dimensionsFontGroup.remove(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh, hsec3_2_shelf3Mesh);
                            var hsec3_2_shelf1Mesh = new THREE.Mesh(hsec3_2_shelf1, self.fontColor);
                            hsec3_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y + ( (self.options.sectionHeight_3_2 - self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf0Mesh = new THREE.Mesh(hsec3_2_shelf0, self.fontColor);
                            hsec3_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf2Mesh = new THREE.Mesh(hsec3_2_shelf2, self.fontColor);
                            hsec3_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec3_2_shelf3Mesh = new THREE.Mesh(hsec3_2_shelf3, self.fontColor);
                            hsec3_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh, hsec3_2_shelf3Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_2 === 4) {
                            dimensionsFontGroup.remove(hsec3_2Mesh); 
                            dimensionsFontGroup.remove(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh, hsec3_2_shelf3Mesh, hsec3_2_shelf4Mesh);
                            var hsec3_2_shelf1Mesh = new THREE.Mesh(hsec3_2_shelf1, self.fontColor);
                            hsec3_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y + ( (self.options.sectionHeight_3_2 - self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf0Mesh = new THREE.Mesh(hsec3_2_shelf0, self.fontColor);
                            hsec3_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_2_shelf4", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf2Mesh = new THREE.Mesh(hsec3_2_shelf2, self.fontColor);
                            hsec3_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_2_shelf3Mesh = new THREE.Mesh(hsec3_2_shelf3, self.fontColor);
                            hsec3_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_2_shelf4Mesh = new THREE.Mesh(hsec3_2_shelf4, self.fontColor);
                            hsec3_2_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh, hsec3_2_shelf3Mesh, hsec3_2_shelf4Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_2 === 5) {
                            dimensionsFontGroup.remove(hsec3_2Mesh); 
                            dimensionsFontGroup.remove(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh, hsec3_2_shelf3Mesh, hsec3_2_shelf4Mesh, hsec3_2_shelf5Mesh);
                            var hsec3_2_shelf1Mesh = new THREE.Mesh(hsec3_2_shelf1, self.fontColor);
                            hsec3_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y + ( (self.options.sectionHeight_3_2 - self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf0Mesh = new THREE.Mesh(hsec3_2_shelf0, self.fontColor);
                            hsec3_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_2_shelf4", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_2_shelf2Mesh = new THREE.Mesh(hsec3_2_shelf2, self.fontColor);
                            hsec3_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_2_shelf3Mesh = new THREE.Mesh(hsec3_2_shelf3, self.fontColor);
                            hsec3_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_2_shelf4Mesh = new THREE.Mesh(hsec3_2_shelf4, self.fontColor);
                            hsec3_2_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_2_shelf5Mesh = new THREE.Mesh(hsec3_2_shelf5, self.fontColor);
                            hsec3_2_shelf5Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_1", true ).position.y + self.scene.getObjectByName( "internalShelf_3_2_shelf5", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_2_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_3_2_shelf5", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_2_shelf1Mesh, hsec3_2_shelf0Mesh, hsec3_2_shelf2Mesh, hsec3_2_shelf3Mesh, hsec3_2_shelf4Mesh, hsec3_2_shelf5Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection3_2", true ) != undefined) {
                        var hsec3_3Mesh = new THREE.Mesh(hsec3_3, self.fontColor);
                        hsec3_3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.options.sectionHeight_3_3 /2 - 2,
                        self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec3_3Mesh);
        
                        if ( self.options.shelvesCounterSection3_3 === 1) {
                            dimensionsFontGroup.remove(hsec3_3Mesh); 
                            dimensionsFontGroup.remove(hsec3_3_shelf1Mesh, hsec3_3_shelf0Mesh);
                            var hsec3_3_shelf1Mesh = new THREE.Mesh(hsec3_3_shelf1, self.fontColor);
                            hsec3_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y + ( (self.options.sectionHeight_3_3 - self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y) / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_3_shelf0Mesh = new THREE.Mesh(hsec3_3_shelf0, self.fontColor);
                            hsec3_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_3_shelf1Mesh, hsec3_3_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_3 === 2) {
                            dimensionsFontGroup.remove(hsec3_3Mesh); 
                            dimensionsFontGroup.remove(hsec3_3_shelf1Mesh, hsec3_3_shelf0Mesh, hsec3_3_shelf2Mesh);
                            var hsec3_3_shelf1Mesh = new THREE.Mesh(hsec3_3_shelf1, self.fontColor);
                            hsec3_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y + ( (self.options.sectionHeight_3_3 - self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_3_shelf0Mesh = new THREE.Mesh(hsec3_3_shelf0, self.fontColor);
                            hsec3_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_3_shelf2Mesh = new THREE.Mesh(hsec3_3_shelf2, self.fontColor);
                            hsec3_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_3_shelf1Mesh, hsec3_3_shelf0Mesh, hsec3_3_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_3 === 3) {
                            dimensionsFontGroup.remove(hsec3_3Mesh); 
                            dimensionsFontGroup.remove(hsec3_3_shelf1Mesh, hsec3_3_shelf0Mesh, hsec3_3_shelf2Mesh, hsec3_3_shelf3Mesh);
                            var hsec3_3_shelf1Mesh = new THREE.Mesh(hsec3_3_shelf1, self.fontColor);
                            hsec3_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y + ( (self.options.sectionHeight_3_3 - self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_3_shelf0Mesh = new THREE.Mesh(hsec3_3_shelf0, self.fontColor);
                            hsec3_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_3_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_3_shelf2Mesh = new THREE.Mesh(hsec3_3_shelf2, self.fontColor);
                            hsec3_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec3_3_shelf3Mesh = new THREE.Mesh(hsec3_3_shelf3, self.fontColor);
                            hsec3_3_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_3_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_3_shelf1Mesh, hsec3_3_shelf0Mesh, hsec3_3_shelf2Mesh, hsec3_3_shelf3Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_3 === 4) {
                            dimensionsFontGroup.remove(hsec3_3Mesh); 
                            dimensionsFontGroup.remove(hsec3_3_shelf1Mesh, hsec3_3_shelf0Mesh, hsec3_3_shelf2Mesh, hsec3_3_shelf3Mesh, hsec3_3_shelf4Mesh);
                            var hsec3_3_shelf1Mesh = new THREE.Mesh(hsec3_3_shelf1, self.fontColor);
                            hsec3_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y + ( (self.options.sectionHeight_3_3 - self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_3_shelf0Mesh = new THREE.Mesh(hsec3_3_shelf0, self.fontColor);
                            hsec3_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_3_shelf4", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_3_shelf2Mesh = new THREE.Mesh(hsec3_3_shelf2, self.fontColor);
                            hsec3_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_3_shelf3Mesh = new THREE.Mesh(hsec3_3_shelf3, self.fontColor);
                            hsec3_3_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_3_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_3_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_3_shelf4Mesh = new THREE.Mesh(hsec3_3_shelf4, self.fontColor);
                            hsec3_3_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_2", true ).position.y + self.scene.getObjectByName( "internalShelf_3_3_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_3_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_3_3_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_3_shelf1Mesh, hsec3_3_shelf0Mesh, hsec3_3_shelf2Mesh, hsec3_3_shelf3Mesh, hsec3_3_shelf4Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection3_3", true ) != undefined) {
                        var hsec3_4Mesh = new THREE.Mesh(hsec3_4, self.fontColor);
                        hsec3_4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.options.sectionHeight_3_4 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec3_4Mesh);

                        if ( self.options.shelvesCounterSection3_4 === 1) {
                            dimensionsFontGroup.remove(hsec3_4Mesh); 
                            dimensionsFontGroup.remove(hsec3_4_shelf1Mesh, hsec3_4_shelf0Mesh);
                            var hsec3_4_shelf1Mesh = new THREE.Mesh(hsec3_4_shelf1, self.fontColor);
                            hsec3_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y + ( (self.options.sectionHeight_3_4 - self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_4_shelf0Mesh = new THREE.Mesh(hsec3_4_shelf0, self.fontColor);
                            hsec3_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_4_shelf1Mesh, hsec3_4_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_4 === 2) {
                            dimensionsFontGroup.remove(hsec3_4Mesh); 
                            dimensionsFontGroup.remove(hsec3_4_shelf1Mesh, hsec3_4_shelf0Mesh, hsec3_4_shelf2Mesh);
                            var hsec3_4_shelf1Mesh = new THREE.Mesh(hsec3_4_shelf1, self.fontColor);
                            hsec3_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y + ( (self.options.sectionHeight_3_4 - self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_4_shelf0Mesh = new THREE.Mesh(hsec3_4_shelf0, self.fontColor);
                            hsec3_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_4_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_4_shelf2Mesh = new THREE.Mesh(hsec3_4_shelf2, self.fontColor);
                            hsec3_4_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.scene.getObjectByName( "internalShelf_3_4_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_4_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_4_shelf1Mesh, hsec3_4_shelf0Mesh, hsec3_4_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_4 === 3) {
                            dimensionsFontGroup.remove(hsec3_4Mesh); 
                            dimensionsFontGroup.remove(hsec3_4_shelf1Mesh, hsec3_4_shelf0Mesh, hsec3_4_shelf2Mesh, hsec3_4_shelf3Mesh);
                            var hsec3_4_shelf1Mesh = new THREE.Mesh(hsec3_4_shelf1, self.fontColor);
                            hsec3_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y + ( (self.options.sectionHeight_3_4 - self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_4_shelf0Mesh = new THREE.Mesh(hsec3_4_shelf0, self.fontColor);
                            hsec3_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_4_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_4_shelf2Mesh = new THREE.Mesh(hsec3_4_shelf2, self.fontColor);
                            hsec3_4_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.scene.getObjectByName( "internalShelf_3_4_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_4_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_4_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec3_4_shelf3Mesh = new THREE.Mesh(hsec3_4_shelf3, self.fontColor);
                            hsec3_4_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_3", true ).position.y + self.scene.getObjectByName( "internalShelf_3_4_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_4_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_3_4_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_4_shelf1Mesh, hsec3_4_shelf0Mesh, hsec3_4_shelf2Mesh, hsec3_4_shelf3Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection3_4", true ) != undefined) {
                        var hsec3_5Mesh = new THREE.Mesh(hsec3_5, self.fontColor);
                        hsec3_5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.options.sectionHeight_3_5 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec3_5Mesh);

                        if ( self.options.shelvesCounterSection3_5 === 1) {
                            dimensionsFontGroup.remove(hsec3_5Mesh); 
                            dimensionsFontGroup.remove(hsec3_5_shelf1Mesh, hsec3_5_shelf0Mesh);
                            var hsec3_5_shelf1Mesh = new THREE.Mesh(hsec3_5_shelf1, self.fontColor);
                            hsec3_5_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.scene.getObjectByName( "internalShelf_3_5_shelf1", true ).position.y + ( (self.options.sectionHeight_3_5 - self.scene.getObjectByName( "internalShelf_3_5_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_5_shelf0Mesh = new THREE.Mesh(hsec3_5_shelf0, self.fontColor);
                            hsec3_5_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_5_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_5_shelf1Mesh, hsec3_5_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection3_5 === 2) {
                            dimensionsFontGroup.remove(hsec3_5Mesh); 
                            dimensionsFontGroup.remove(hsec3_5_shelf1Mesh, hsec3_5_shelf0Mesh, hsec3_5_shelf2Mesh);
                            var hsec3_5_shelf1Mesh = new THREE.Mesh(hsec3_5_shelf1, self.fontColor);
                            hsec3_5_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.scene.getObjectByName( "internalShelf_3_5_shelf1", true ).position.y + ( (self.options.sectionHeight_3_5 - self.scene.getObjectByName( "internalShelf_3_5_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_5_shelf0Mesh = new THREE.Mesh(hsec3_5_shelf0, self.fontColor);
                            hsec3_5_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_5_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec3_5_shelf2Mesh = new THREE.Mesh(hsec3_5_shelf2, self.fontColor);
                            hsec3_5_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_4", true ).position.y + self.scene.getObjectByName( "internalShelf_3_5_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_3_5_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_3_5_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_5_shelf1Mesh, hsec3_5_shelf0Mesh, hsec3_5_shelf2Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection3_5", true ) != undefined) {
                        var hsec3_6Mesh = new THREE.Mesh(hsec3_6, self.fontColor);
                        hsec3_6Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_6", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.options.sectionHeight_3_6 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_6", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec3_6Mesh);

                        if ( self.options.shelvesCounterSection3_6 === 1) {
                            dimensionsFontGroup.remove(hsec3_6Mesh); 
                            dimensionsFontGroup.remove(hsec3_6_shelf1Mesh, hsec3_6_shelf0Mesh);
                            var hsec3_6_shelf1Mesh = new THREE.Mesh(hsec3_6_shelf1, self.fontColor);
                            hsec3_6_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_6", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + self.scene.getObjectByName( "internalShelf_3_6_shelf1", true ).position.y + ( (self.options.sectionHeight_3_6 - self.scene.getObjectByName( "internalShelf_3_6_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_6", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec3_6_shelf0Mesh = new THREE.Mesh(hsec3_6_shelf0, self.fontColor);
                            hsec3_6_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection3_6", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection3_5", true ).position.y + ( self.scene.getObjectByName( "internalShelf_3_6_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection3_6", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec3_6_shelf1Mesh, hsec3_6_shelf0Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection3_6", true ) != undefined) {
                        var hsec3_7Mesh = new THREE.Mesh(hsec3_7, self.fontColor);
                        hsec3_7Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection3_7", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection3_6", true ).position.y + self.options.sectionHeight_3_7 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection3_7", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec3_7Mesh);
                    }

                } 

 
                //sect4
                if (self.scene.getObjectByName('RayCastRecieverSection4_1') != undefined) {

                    //w
                    var wsec4_1 = new THREE.TextGeometry(  ( parseFloat(document.getElementById('pillar4PositionField_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) ) +" ", {
                        font: font,
                        size: 2,
                        height: 0.1,
                        curveSegments: 12,
                        bevelThickness: 0,
                        bevelSize: 2,
                        bevelEnabled: false,
                        }
                    )
                    var wsec4_1Mesh = new THREE.Mesh(wsec4_1, self.fontColor);
                    wsec4_1Mesh.position.set(
                        
                    self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + self.options.section4Length / 2 -1.8,
                    self.options.pillar.height - 6,
                    self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 
                    )
                    
                    //height
                    var hsec4_1 = new THREE.TextGeometry(/*for individual horizontal section use - self.options.sectionHeight_4_1 */ (parseFloat(document.getElementById('Height_HorizontalPartition_S4_1').textContent.match(/\d+(\.\d+)?/)[0]) ) +" ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                    if ( self.scene.getObjectByName( "horizontalDividerSection4_1", true ) != undefined ) {
                        var hsec4_2 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S4_2').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                        if ( self.options.shelvesCounterSection4_2 === 1 ) {
                            var hsec4_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_2 === 2 ) {
                            var hsec4_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_2 === 3 ) {
                            var hsec4_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_2 === 4 ) {
                            var hsec4_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_2 === 5 ) {
                            var hsec4_2_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_2_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf4_2 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        
                    }
                    if ( self.options.shelvesCounterSection4_1 === 1 ) {
                        var hsec4_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection4_1 === 2 ) {
                        var hsec4_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection4_1 === 3 ) {
                        var hsec4_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }
                    if ( self.options.shelvesCounterSection4_1 === 4 ) {
                        var hsec4_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                    }
                    if ( self.options.shelvesCounterSection4_1 === 5 ) {
                        var hsec4_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );

                    }
                    if ( self.options.shelvesCounterSection4_1 === 6 ) {
                        var hsec4_1_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf5 = new THREE.TextGeometry( (self.options.heigh5Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        var hsec4_1_shelf6 = new THREE.TextGeometry( (self.options.heigh6Shelf4_1 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection4_2", true ) != undefined) {
                        var hsec4_3 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S4_3').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
        
                        if ( self.options.shelvesCounterSection4_3 === 1 ) {
                            var hsec4_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_3 === 2 ) {
                            var hsec4_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_3 === 3 ) {
                            var hsec4_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_3 === 4 ) {
                            var hsec4_3_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_3_shelf4 = new THREE.TextGeometry( (self.options.heigh4Shelf4_3 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
    
                        }
                        
        
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection4_3", true ) != undefined) {
                        var hsec4_4 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S4_4').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
        
                        if ( self.options.shelvesCounterSection4_4 === 1 ) {
                            var hsec4_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_4 === 2 ) {
                            var hsec4_4_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_4 === 3 ) {
                            var hsec4_4_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_4_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_4_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_4_shelf3 = new THREE.TextGeometry( (self.options.heigh3Shelf4_4 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined) {
                        var hsec4_5 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S4_5').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );   
                        
                        if ( self.options.shelvesCounterSection4_5 === 1 ) {
                            var hsec4_5_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_5_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                        if ( self.options.shelvesCounterSection4_5 === 2 ) {
                            var hsec4_5_shelf2 = new THREE.TextGeometry( (self.options.heigh2Shelf4_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_5_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_5_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_5 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }

                    }

                    if ( self.scene.getObjectByName( "horizontalDividerSection4_5", true ) != undefined) {
                        var hsec4_6 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S4_6').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );  
                        
                        if ( self.options.shelvesCounterSection4_6 === 1 ) {
                            var hsec4_6_shelf1 = new THREE.TextGeometry( (self.options.heigh1Shelf4_6 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                            var hsec4_6_shelf0 = new THREE.TextGeometry( (self.options.heigh0Shelf4_6 ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );
                        }
                    }
                        
                    if ( self.scene.getObjectByName( "horizontalDividerSection4_6", true ) != undefined) {
                        var hsec4_7 = new THREE.TextGeometry( (parseFloat(document.getElementById('Height_HorizontalPartition_S4_7').textContent.match(/\d+(\.\d+)?/)[0]) ) + " ", { font: font, size: 2, height: 0.1, curveSegments: 12, bevelThickness: 0, bevelSize: 2, bevelEnabled: false, } );    
                    }
                        
                    var hsec4_1Mesh = new THREE.Mesh(hsec4_1, self.fontColor);
                    hsec4_1Mesh.position.set(
                    self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                    self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.y,
                    self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                    )
                    dimensionsFontGroup.add(wsec4_1Mesh,hsec4_1Mesh); 
                    if ( self.options.shelvesCounterSection4_1 === 1) {
                        dimensionsFontGroup.remove(hsec4_1Mesh); 
                        dimensionsFontGroup.remove(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh);

                        var hsec4_1_shelf1Mesh = new THREE.Mesh(hsec4_1_shelf1, self.fontColor);
                        hsec4_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y + ( (self.options.sectionHeight_4_1 - self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf0Mesh = new THREE.Mesh(hsec4_1_shelf0, self.fontColor);
                        hsec4_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh);
                    }
                    if ( self.options.shelvesCounterSection4_1 === 2) {
                        dimensionsFontGroup.remove(hsec4_1Mesh); 
                        dimensionsFontGroup.remove(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh);
                        var hsec4_1_shelf1Mesh = new THREE.Mesh(hsec4_1_shelf1, self.fontColor);
                        hsec4_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y + ( (self.options.sectionHeight_4_1 - self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf0Mesh = new THREE.Mesh(hsec4_1_shelf0, self.fontColor);
                        hsec4_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf2Mesh = new THREE.Mesh(hsec4_1_shelf2, self.fontColor);
                        hsec4_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh);
                    }
                    if ( self.options.shelvesCounterSection4_1 === 3) {
                        dimensionsFontGroup.remove(hsec4_1Mesh); 
                        dimensionsFontGroup.remove(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh);
                        var hsec4_1_shelf1Mesh = new THREE.Mesh(hsec4_1_shelf1, self.fontColor);
                        hsec4_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y + ( (self.options.sectionHeight_4_1 - self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf0Mesh = new THREE.Mesh(hsec4_1_shelf0, self.fontColor);
                        hsec4_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf2Mesh = new THREE.Mesh(hsec4_1_shelf2, self.fontColor);
                        hsec4_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec4_1_shelf3Mesh = new THREE.Mesh(hsec4_1_shelf3, self.fontColor);
                        hsec4_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh);
                    }
                    if ( self.options.shelvesCounterSection4_1 === 4) {
                        dimensionsFontGroup.remove(hsec4_1Mesh); 
                        dimensionsFontGroup.remove(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh);
                        var hsec4_1_shelf1Mesh = new THREE.Mesh(hsec4_1_shelf1, self.fontColor);
                        hsec4_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y + ( (self.options.sectionHeight_4_1 - self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf0Mesh = new THREE.Mesh(hsec4_1_shelf0, self.fontColor);
                        hsec4_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf2Mesh = new THREE.Mesh(hsec4_1_shelf2, self.fontColor);
                        hsec4_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )

                        var hsec4_1_shelf3Mesh = new THREE.Mesh(hsec4_1_shelf3, self.fontColor);
                        hsec4_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )

                        var hsec4_1_shelf4Mesh = new THREE.Mesh(hsec4_1_shelf4, self.fontColor);
                        hsec4_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh, hsec4_1_shelf4Mesh);
                    }
                    if ( self.options.shelvesCounterSection4_1 === 5) {
                        dimensionsFontGroup.remove(hsec4_1Mesh); 
                        dimensionsFontGroup.remove(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh, hsec4_1_shelf4Mesh, hsec4_1_shelf5Mesh);
                        var hsec4_1_shelf1Mesh = new THREE.Mesh(hsec4_1_shelf1, self.fontColor);
                        hsec4_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y + ( (self.options.sectionHeight_4_1 - self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf0Mesh = new THREE.Mesh(hsec4_1_shelf0, self.fontColor);
                        hsec4_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec4_1_shelf2Mesh = new THREE.Mesh(hsec4_1_shelf2, self.fontColor);
                        hsec4_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec4_1_shelf3Mesh = new THREE.Mesh(hsec4_1_shelf3, self.fontColor);
                        hsec4_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )
                        var hsec4_1_shelf4Mesh = new THREE.Mesh(hsec4_1_shelf4, self.fontColor);
                        hsec4_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec4_1_shelf5Mesh = new THREE.Mesh(hsec4_1_shelf5, self.fontColor);
                        hsec4_1_shelf5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf5", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh, hsec4_1_shelf4Mesh, hsec4_1_shelf5Mesh);
                    }
                    if ( self.options.shelvesCounterSection4_1 === 6) {
                        dimensionsFontGroup.remove(hsec4_1Mesh); 
                        dimensionsFontGroup.remove(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh, hsec4_1_shelf4Mesh, hsec4_1_shelf5Mesh,hsec4_1_shelf6Mesh);
                        var hsec4_1_shelf1Mesh = new THREE.Mesh(hsec4_1_shelf1, self.fontColor);
                        hsec4_1_shelf1Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y + ( (self.options.sectionHeight_4_1 - self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y) / 2) -1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        var hsec4_1_shelf0Mesh = new THREE.Mesh(hsec4_1_shelf0, self.fontColor);
                        hsec4_1_shelf0Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "shelf_0_0", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf6", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec4_1_shelf2Mesh = new THREE.Mesh(hsec4_1_shelf2, self.fontColor);
                        hsec4_1_shelf2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec4_1_shelf3Mesh = new THREE.Mesh(hsec4_1_shelf3, self.fontColor);
                        hsec4_1_shelf3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width/ 2 + 2
                        )
                        var hsec4_1_shelf4Mesh = new THREE.Mesh(hsec4_1_shelf4, self.fontColor);
                        hsec4_1_shelf4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec4_1_shelf5Mesh = new THREE.Mesh(hsec4_1_shelf5, self.fontColor);
                        hsec4_1_shelf5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf5", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf5", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        var hsec4_1_shelf6Mesh = new THREE.Mesh(hsec4_1_shelf6, self.fontColor);
                        hsec4_1_shelf6Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.x + 3,
                        self.scene.getObjectByName( "internalShelf_4_1_shelf6", true ).position.y + ( ( self.scene.getObjectByName( "internalShelf_4_1_shelf5", true ).position.y - self.scene.getObjectByName( "internalShelf_4_1_shelf6", true ).position.y) / 2),
                        self.scene.getObjectByName( "RayCastRecieverSection4_1", true ).position.z + self.options.shelf.width / 2 + 2
                        )
        
                        dimensionsFontGroup.add(hsec4_1_shelf1Mesh, hsec4_1_shelf0Mesh, hsec4_1_shelf2Mesh, hsec4_1_shelf3Mesh, hsec4_1_shelf4Mesh, hsec4_1_shelf5Mesh, hsec4_1_shelf6Mesh);
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection4_1", true ) != undefined) {
                        var hsec4_2Mesh = new THREE.Mesh(hsec4_2, self.fontColor);
                        hsec4_2Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.options.sectionHeight_4_2 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec4_2Mesh);
                        if ( self.options.shelvesCounterSection4_2 === 1) {
                            dimensionsFontGroup.remove(hsec4_2Mesh); 
                            dimensionsFontGroup.remove(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh);
                            var hsec4_2_shelf1Mesh = new THREE.Mesh(hsec4_2_shelf1, self.fontColor);
                            hsec4_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y + ( (self.options.sectionHeight_4_2 - self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y) / 2) - 1,
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf0Mesh = new THREE.Mesh(hsec4_2_shelf0, self.fontColor);
                            hsec4_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + (self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_2 === 2) {
                            dimensionsFontGroup.remove(hsec4_2Mesh); 
                            dimensionsFontGroup.remove(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh);
                            var hsec4_2_shelf1Mesh = new THREE.Mesh(hsec4_2_shelf1, self.fontColor);
                            hsec4_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y + ( (self.options.sectionHeight_4_2 - self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf0Mesh = new THREE.Mesh(hsec4_2_shelf0, self.fontColor);
                            hsec4_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf2Mesh = new THREE.Mesh(hsec4_2_shelf2, self.fontColor);
                            hsec4_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_2 === 3) {
                            dimensionsFontGroup.remove(hsec4_2Mesh); 
                            dimensionsFontGroup.remove(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh, hsec4_2_shelf3Mesh);
                            var hsec4_2_shelf1Mesh = new THREE.Mesh(hsec4_2_shelf1, self.fontColor);
                            hsec4_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y + ( (self.options.sectionHeight_4_2 - self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf0Mesh = new THREE.Mesh(hsec4_2_shelf0, self.fontColor);
                            hsec4_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf2Mesh = new THREE.Mesh(hsec4_2_shelf2, self.fontColor);
                            hsec4_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec4_2_shelf3Mesh = new THREE.Mesh(hsec4_2_shelf3, self.fontColor);
                            hsec4_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh, hsec4_2_shelf3Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_2 === 4) {
                            dimensionsFontGroup.remove(hsec4_2Mesh); 
                            dimensionsFontGroup.remove(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh, hsec4_2_shelf3Mesh, hsec4_2_shelf4Mesh);
                            var hsec4_2_shelf1Mesh = new THREE.Mesh(hsec4_2_shelf1, self.fontColor);
                            hsec4_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y + ( (self.options.sectionHeight_4_2 - self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf0Mesh = new THREE.Mesh(hsec4_2_shelf0, self.fontColor);
                            hsec4_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_2_shelf4", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf2Mesh = new THREE.Mesh(hsec4_2_shelf2, self.fontColor);
                            hsec4_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_2_shelf3Mesh = new THREE.Mesh(hsec4_2_shelf3, self.fontColor);
                            hsec4_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_2_shelf4Mesh = new THREE.Mesh(hsec4_2_shelf4, self.fontColor);
                            hsec4_2_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh, hsec4_2_shelf3Mesh, hsec4_2_shelf4Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_2 === 5) {
                            dimensionsFontGroup.remove(hsec4_2Mesh); 
                            dimensionsFontGroup.remove(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh, hsec4_2_shelf3Mesh, hsec4_2_shelf4Mesh, hsec4_2_shelf5Mesh);
                            var hsec4_2_shelf1Mesh = new THREE.Mesh(hsec4_2_shelf1, self.fontColor);
                            hsec4_2_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y + ( (self.options.sectionHeight_4_2 - self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf0Mesh = new THREE.Mesh(hsec4_2_shelf0, self.fontColor);
                            hsec4_2_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_2_shelf4", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_2_shelf2Mesh = new THREE.Mesh(hsec4_2_shelf2, self.fontColor);
                            hsec4_2_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_2_shelf3Mesh = new THREE.Mesh(hsec4_2_shelf3, self.fontColor);
                            hsec4_2_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_2_shelf4Mesh = new THREE.Mesh(hsec4_2_shelf4, self.fontColor);
                            hsec4_2_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_2_shelf5Mesh = new THREE.Mesh(hsec4_2_shelf5, self.fontColor);
                            hsec4_2_shelf5Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_1", true ).position.y + self.scene.getObjectByName( "internalShelf_4_2_shelf5", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_2_shelf4", true ).position.y - self.scene.getObjectByName( "internalShelf_4_2_shelf5", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_2", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_2_shelf1Mesh, hsec4_2_shelf0Mesh, hsec4_2_shelf2Mesh, hsec4_2_shelf3Mesh, hsec4_2_shelf4Mesh, hsec4_2_shelf5Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection4_2", true ) != undefined) {
                        var hsec4_3Mesh = new THREE.Mesh(hsec4_3, self.fontColor);
                        hsec4_3Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.options.sectionHeight_4_3 /2 - 2,
                        self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec4_3Mesh);
        
                        if ( self.options.shelvesCounterSection4_3 === 1) {
                            dimensionsFontGroup.remove(hsec4_3Mesh); 
                            dimensionsFontGroup.remove(hsec4_3_shelf1Mesh, hsec4_3_shelf0Mesh);
                            var hsec4_3_shelf1Mesh = new THREE.Mesh(hsec4_3_shelf1, self.fontColor);
                            hsec4_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y + ( (self.options.sectionHeight_4_3 - self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y) / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_3_shelf0Mesh = new THREE.Mesh(hsec4_3_shelf0, self.fontColor);
                            hsec4_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_3_shelf1Mesh, hsec4_3_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_3 === 2) {
                            dimensionsFontGroup.remove(hsec4_3Mesh); 
                            dimensionsFontGroup.remove(hsec4_3_shelf1Mesh, hsec4_3_shelf0Mesh, hsec4_3_shelf2Mesh);
                            var hsec4_3_shelf1Mesh = new THREE.Mesh(hsec4_3_shelf1, self.fontColor);
                            hsec4_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y + ( (self.options.sectionHeight_4_3 - self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_3_shelf0Mesh = new THREE.Mesh(hsec4_3_shelf0, self.fontColor);
                            hsec4_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_3_shelf2Mesh = new THREE.Mesh(hsec4_3_shelf2, self.fontColor);
                            hsec4_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_3_shelf1Mesh, hsec4_3_shelf0Mesh, hsec4_3_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_3 === 3) {
                            dimensionsFontGroup.remove(hsec4_3Mesh); 
                            dimensionsFontGroup.remove(hsec4_3_shelf1Mesh, hsec4_3_shelf0Mesh, hsec4_3_shelf2Mesh, hsec4_3_shelf3Mesh);
                            var hsec4_3_shelf1Mesh = new THREE.Mesh(hsec4_3_shelf1, self.fontColor);
                            hsec4_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y + ( (self.options.sectionHeight_4_3 - self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_3_shelf0Mesh = new THREE.Mesh(hsec4_3_shelf0, self.fontColor);
                            hsec4_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_3_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_3_shelf2Mesh = new THREE.Mesh(hsec4_3_shelf2, self.fontColor);
                            hsec4_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec4_3_shelf3Mesh = new THREE.Mesh(hsec4_3_shelf3, self.fontColor);
                            hsec4_3_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_3_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_3_shelf1Mesh, hsec4_3_shelf0Mesh, hsec4_3_shelf2Mesh, hsec4_3_shelf3Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_3 === 4) {
                            dimensionsFontGroup.remove(hsec4_3Mesh); 
                            dimensionsFontGroup.remove(hsec4_3_shelf1Mesh, hsec4_3_shelf0Mesh, hsec4_3_shelf2Mesh, hsec4_3_shelf3Mesh, hsec4_3_shelf4Mesh);
                            var hsec4_3_shelf1Mesh = new THREE.Mesh(hsec4_3_shelf1, self.fontColor);
                            hsec4_3_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y + ( (self.options.sectionHeight_4_3 - self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_3_shelf0Mesh = new THREE.Mesh(hsec4_3_shelf0, self.fontColor);
                            hsec4_3_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_3_shelf4", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_3_shelf2Mesh = new THREE.Mesh(hsec4_3_shelf2, self.fontColor);
                            hsec4_3_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_3_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_3_shelf3Mesh = new THREE.Mesh(hsec4_3_shelf3, self.fontColor);
                            hsec4_3_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_3_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_3_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_3_shelf4Mesh = new THREE.Mesh(hsec4_3_shelf4, self.fontColor);
                            hsec4_3_shelf4Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_2", true ).position.y + self.scene.getObjectByName( "internalShelf_4_3_shelf4", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_3_shelf3", true ).position.y - self.scene.getObjectByName( "internalShelf_4_3_shelf4", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_3", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_3_shelf1Mesh, hsec4_3_shelf0Mesh, hsec4_3_shelf2Mesh, hsec4_3_shelf3Mesh, hsec4_3_shelf4Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection4_3", true ) != undefined) {
                        var hsec4_4Mesh = new THREE.Mesh(hsec4_4, self.fontColor);
                        hsec4_4Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.options.sectionHeight_4_4 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec4_4Mesh);

                        if ( self.options.shelvesCounterSection4_4 === 1) {
                            dimensionsFontGroup.remove(hsec4_4Mesh); 
                            dimensionsFontGroup.remove(hsec4_4_shelf1Mesh, hsec4_4_shelf0Mesh);
                            var hsec4_4_shelf1Mesh = new THREE.Mesh(hsec4_4_shelf1, self.fontColor);
                            hsec4_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y + ( (self.options.sectionHeight_4_4 - self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_4_shelf0Mesh = new THREE.Mesh(hsec4_4_shelf0, self.fontColor);
                            hsec4_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_4_shelf1Mesh, hsec4_4_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_4 === 2) {
                            dimensionsFontGroup.remove(hsec4_4Mesh); 
                            dimensionsFontGroup.remove(hsec4_4_shelf1Mesh, hsec4_4_shelf0Mesh, hsec4_4_shelf2Mesh);
                            var hsec4_4_shelf1Mesh = new THREE.Mesh(hsec4_4_shelf1, self.fontColor);
                            hsec4_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y + ( (self.options.sectionHeight_4_4 - self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_4_shelf0Mesh = new THREE.Mesh(hsec4_4_shelf0, self.fontColor);
                            hsec4_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_4_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_4_shelf2Mesh = new THREE.Mesh(hsec4_4_shelf2, self.fontColor);
                            hsec4_4_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.scene.getObjectByName( "internalShelf_4_4_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_4_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_4_shelf1Mesh, hsec4_4_shelf0Mesh, hsec4_4_shelf2Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_4 === 3) {
                            dimensionsFontGroup.remove(hsec4_4Mesh); 
                            dimensionsFontGroup.remove(hsec4_4_shelf1Mesh, hsec4_4_shelf0Mesh, hsec4_4_shelf2Mesh, hsec4_4_shelf3Mesh);
                            var hsec4_4_shelf1Mesh = new THREE.Mesh(hsec4_4_shelf1, self.fontColor);
                            hsec4_4_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y + ( (self.options.sectionHeight_4_4 - self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_4_shelf0Mesh = new THREE.Mesh(hsec4_4_shelf0, self.fontColor);
                            hsec4_4_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_4_shelf3", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_4_shelf2Mesh = new THREE.Mesh(hsec4_4_shelf2, self.fontColor);
                            hsec4_4_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.scene.getObjectByName( "internalShelf_4_4_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_4_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_4_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )

                            var hsec4_4_shelf3Mesh = new THREE.Mesh(hsec4_4_shelf3, self.fontColor);
                            hsec4_4_shelf3Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_3", true ).position.y + self.scene.getObjectByName( "internalShelf_4_4_shelf3", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_4_shelf2", true ).position.y - self.scene.getObjectByName( "internalShelf_4_4_shelf3", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_4", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_4_shelf1Mesh, hsec4_4_shelf0Mesh, hsec4_4_shelf2Mesh, hsec4_4_shelf3Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection4_4", true ) != undefined) {
                        var hsec4_5Mesh = new THREE.Mesh(hsec4_5, self.fontColor);
                        hsec4_5Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + self.options.sectionHeight_4_5 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec4_5Mesh);

                        if ( self.options.shelvesCounterSection4_5 === 1) {
                            dimensionsFontGroup.remove(hsec4_5Mesh); 
                            dimensionsFontGroup.remove(hsec4_5_shelf1Mesh, hsec4_5_shelf0Mesh);
                            var hsec4_5_shelf1Mesh = new THREE.Mesh(hsec4_5_shelf1, self.fontColor);
                            hsec4_5_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + self.scene.getObjectByName( "internalShelf_4_5_shelf1", true ).position.y + ( (self.options.sectionHeight_4_5 - self.scene.getObjectByName( "internalShelf_4_5_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_5_shelf0Mesh = new THREE.Mesh(hsec4_5_shelf0, self.fontColor);
                            hsec4_5_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_5_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_5_shelf1Mesh, hsec4_5_shelf0Mesh);
                        }
                        if ( self.options.shelvesCounterSection4_5 === 2) {
                            dimensionsFontGroup.remove(hsec4_5Mesh); 
                            dimensionsFontGroup.remove(hsec4_5_shelf1Mesh, hsec4_5_shelf0Mesh, hsec4_5_shelf2Mesh);
                            var hsec4_5_shelf1Mesh = new THREE.Mesh(hsec4_5_shelf1, self.fontColor);
                            hsec4_5_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + self.scene.getObjectByName( "internalShelf_4_5_shelf1", true ).position.y + ( (self.options.sectionHeight_4_5 - self.scene.getObjectByName( "internalShelf_4_5_shelf1", true ).position.y) / 2 - 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_5_shelf0Mesh = new THREE.Mesh(hsec4_5_shelf0, self.fontColor);
                            hsec4_5_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_5_shelf2", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
                            var hsec4_5_shelf2Mesh = new THREE.Mesh(hsec4_5_shelf2, self.fontColor);
                            hsec4_5_shelf2Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_4", true ).position.y + self.scene.getObjectByName( "internalShelf_4_5_shelf2", true ).position.y + ( (self.scene.getObjectByName( "internalShelf_4_5_shelf1", true ).position.y - self.scene.getObjectByName( "internalShelf_4_5_shelf2", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_5", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_5_shelf1Mesh, hsec4_5_shelf0Mesh, hsec4_5_shelf2Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection4_5", true ) != undefined) {
                        var hsec4_6Mesh = new THREE.Mesh(hsec4_6, self.fontColor);
                        hsec4_6Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_6", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + self.options.sectionHeight_4_6 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_6", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec4_6Mesh);

                        if ( self.options.shelvesCounterSection4_6 === 1) {
                            dimensionsFontGroup.remove(hsec4_6Mesh); 
                            dimensionsFontGroup.remove(hsec4_6_shelf1Mesh, hsec4_6_shelf0Mesh);
                            var hsec4_6_shelf1Mesh = new THREE.Mesh(hsec4_6_shelf1, self.fontColor);
                            hsec4_6_shelf1Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_6", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + self.scene.getObjectByName( "internalShelf_4_6_shelf1", true ).position.y + ( (self.options.sectionHeight_4_6 - self.scene.getObjectByName( "internalShelf_4_6_shelf1", true ).position.y) / 2 -2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_6", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            var hsec4_6_shelf0Mesh = new THREE.Mesh(hsec4_6_shelf0, self.fontColor);
                            hsec4_6_shelf0Mesh.position.set(
                            self.scene.getObjectByName( "RayCastRecieverSection4_6", true ).position.x + 3,
                            self.scene.getObjectByName( "horizontalDividerSection4_5", true ).position.y + ( self.scene.getObjectByName( "internalShelf_4_6_shelf1", true ).position.y / 2),
                            self.scene.getObjectByName( "RayCastRecieverSection4_6", true ).position.z + self.options.shelf.width / 2 + 2
                            )
        
                            dimensionsFontGroup.add(hsec4_6_shelf1Mesh, hsec4_6_shelf0Mesh);
                        }
                    }
                    if ( self.scene.getObjectByName( "horizontalDividerSection4_6", true ) != undefined) {
                        var hsec4_7Mesh = new THREE.Mesh(hsec4_7, self.fontColor);
                        hsec4_7Mesh.position.set(
                        self.scene.getObjectByName( "RayCastRecieverSection4_7", true ).position.x + 3,
                        self.scene.getObjectByName( "horizontalDividerSection4_6", true ).position.y + self.options.sectionHeight_4_7 /2 - 1,
                        self.scene.getObjectByName( "RayCastRecieverSection4_7", true ).position.z + self.options.shelf.width / 2 + 2
                        )
                        dimensionsFontGroup.add(hsec4_7Mesh);
                    }
                    

                } 

    
            self.scene.add(dimensionsFontGroup);
    
            };

            if (!self.cachedFont) {
                self.fontLoader.load('fonts/helvetiker_regular.typeface.json', function (font) {
                    self.cachedFont = font;
                    createDimensionsWithFont(font);
                });
            } else {
                createDimensionsWithFont(self.cachedFont);
            }
            
        }, 
    
    
    //end of App prototype 
    }
    
    
    
    window.addEventListener('DOMContentLoaded', function() {
        ignoreNextTrigger = false;
        window.app = new App('appCanvas');
    
    });

    })();
    